var __ = Object.defineProperty, b_ = (e, i, n) => i in e ? __(e, i, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[i] = n, ra = (e, i, n) => (b_(e, typeof i != "symbol" ? i + "" : i, n), n);
function T_(e, i) {
  for (var n = 0; n < i.length; n++) {
    const t = i[n];
    if (typeof t != "string" && !Array.isArray(t)) {
      for (const r in t)
        if (r !== "default" && !(r in e)) {
          const s = Object.getOwnPropertyDescriptor(t, r);
          s && Object.defineProperty(e, r, s.get ? s : {
            enumerable: !0,
            get: () => t[r]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
var is = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function E_(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
function Wc(e) {
  var i = e.default;
  if (typeof i == "function") {
    var n = function() {
      return i.apply(this, arguments);
    };
    n.prototype = i.prototype;
  } else
    n = {};
  return Object.defineProperty(n, "__esModule", { value: !0 }), Object.keys(e).forEach(function(t) {
    var r = Object.getOwnPropertyDescriptor(e, t);
    Object.defineProperty(n, t, r.get ? r : {
      enumerable: !0,
      get: function() {
        return e[t];
      }
    });
  }), n;
}
var Ws;
typeof window < "u" ? Ws = window : typeof is < "u" ? Ws = is : typeof self < "u" ? Ws = self : Ws = {};
var q = Ws;
const S_ = {}, w_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: S_
}, Symbol.toStringTag, { value: "Module" })), k_ = /* @__PURE__ */ Wc(w_);
var Sh = typeof is < "u" ? is : typeof window < "u" ? window : {}, C_ = k_, Gs;
typeof document < "u" ? Gs = document : (Gs = Sh["__GLOBAL_DOCUMENT_CACHE@4"], Gs || (Gs = Sh["__GLOBAL_DOCUMENT_CACHE@4"] = C_));
var me = Gs;
function Mi() {
  return Mi = Object.assign ? Object.assign.bind() : function(e) {
    for (var i = 1; i < arguments.length; i++) {
      var n = arguments[i];
      for (var t in n)
        Object.prototype.hasOwnProperty.call(n, t) && (e[t] = n[t]);
    }
    return e;
  }, Mi.apply(this, arguments);
}
const A_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Mi
}, Symbol.toStringTag, { value: "Module" }));
var sc = { exports: {} };
(function(e, i) {
  function n(u) {
    if (u && typeof u == "object") {
      var l = u.which || u.keyCode || u.charCode;
      l && (u = l);
    }
    if (typeof u == "number")
      return a[u];
    var d = String(u), p = t[d.toLowerCase()];
    if (p)
      return p;
    var p = r[d.toLowerCase()];
    if (p)
      return p;
    if (d.length === 1)
      return d.charCodeAt(0);
  }
  n.isEventKey = function(u, l) {
    if (u && typeof u == "object") {
      var d = u.which || u.keyCode || u.charCode;
      if (d == null)
        return !1;
      if (typeof l == "string") {
        var p = t[l.toLowerCase()];
        if (p)
          return p === d;
        var p = r[l.toLowerCase()];
        if (p)
          return p === d;
      } else if (typeof l == "number")
        return l === d;
      return !1;
    }
  }, i = e.exports = n;
  var t = i.code = i.codes = {
    backspace: 8,
    tab: 9,
    enter: 13,
    shift: 16,
    ctrl: 17,
    alt: 18,
    "pause/break": 19,
    "caps lock": 20,
    esc: 27,
    space: 32,
    "page up": 33,
    "page down": 34,
    end: 35,
    home: 36,
    left: 37,
    up: 38,
    right: 39,
    down: 40,
    insert: 45,
    delete: 46,
    command: 91,
    "left command": 91,
    "right command": 93,
    "numpad *": 106,
    "numpad +": 107,
    "numpad -": 109,
    "numpad .": 110,
    "numpad /": 111,
    "num lock": 144,
    "scroll lock": 145,
    "my computer": 182,
    "my calculator": 183,
    ";": 186,
    "=": 187,
    ",": 188,
    "-": 189,
    ".": 190,
    "/": 191,
    "`": 192,
    "[": 219,
    "\\": 220,
    "]": 221,
    "'": 222
  }, r = i.aliases = {
    windows: 91,
    "⇧": 16,
    "⌥": 18,
    "⌃": 17,
    "⌘": 91,
    ctl: 17,
    control: 17,
    option: 18,
    pause: 19,
    break: 19,
    caps: 20,
    return: 13,
    escape: 27,
    spc: 32,
    spacebar: 32,
    pgup: 33,
    pgdn: 34,
    ins: 45,
    del: 46,
    cmd: 91
  };
  /*!
   * Programatically add the following
   */
  for (s = 97; s < 123; s++)
    t[String.fromCharCode(s)] = s - 32;
  for (var s = 48; s < 58; s++)
    t[s - 48] = s;
  for (s = 1; s < 13; s++)
    t["f" + s] = s + 111;
  for (s = 0; s < 10; s++)
    t["numpad " + s] = s + 96;
  var a = i.names = i.title = {};
  for (s in t)
    a[t[s]] = s;
  for (var o in r)
    t[o] = r[o];
})(sc, sc.exports);
const ze = sc.exports;
function Ge(e) {
  if (e === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function ns(e, i) {
  return ns = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(n, t) {
    return n.__proto__ = t, n;
  }, ns(e, i);
}
function ye(e, i) {
  e.prototype = Object.create(i.prototype), e.prototype.constructor = e, ns(e, i);
}
var I_ = D_;
function D_(e, i) {
  var n, t = null;
  try {
    n = JSON.parse(e, i);
  } catch (r) {
    t = r;
  }
  return [t, n];
}
var Qo = { exports: {} };
const x_ = /* @__PURE__ */ Wc(A_);
var P_ = O_, L_ = Object.prototype.toString;
function O_(e) {
  if (!e)
    return !1;
  var i = L_.call(e);
  return i === "[object Function]" || typeof e == "function" && i !== "[object RegExp]" || typeof window < "u" && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt);
}
var N_ = q, R_ = function(e, i) {
  return i === void 0 && (i = !1), function(n, t, r) {
    if (n) {
      e(n);
      return;
    }
    if (t.statusCode >= 400 && t.statusCode <= 599) {
      var s = r;
      if (i)
        if (N_.TextDecoder) {
          var a = M_(t.headers && t.headers["content-type"]);
          try {
            s = new TextDecoder(a).decode(r);
          } catch {
          }
        } else
          s = String.fromCharCode.apply(null, new Uint8Array(r));
      e({
        cause: s
      });
      return;
    }
    e(null, r);
  };
};
function M_(e) {
  return e === void 0 && (e = ""), e.toLowerCase().split(";").reduce(function(i, n) {
    var t = n.split("="), r = t[0], s = t[1];
    return r.trim() === "charset" ? s.trim() : i;
  }, "utf-8");
}
var B_ = R_, gm = q, U_ = x_, F_ = P_;
an.httpHandler = B_;
/**
 * @license
 * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>
 * Copyright (c) 2014 David Björklund
 * Available under the MIT license
 * <https://github.com/kesla/parse-headers/blob/master/LICENCE>
 */
var j_ = function(e) {
  var i = {};
  return e && e.trim().split(`
`).forEach(function(n) {
    var t = n.indexOf(":"), r = n.slice(0, t).trim().toLowerCase(), s = n.slice(t + 1).trim();
    typeof i[r] > "u" ? i[r] = s : Array.isArray(i[r]) ? i[r].push(s) : i[r] = [i[r], s];
  }), i;
};
Qo.exports = an;
Qo.exports.default = an;
an.XMLHttpRequest = gm.XMLHttpRequest || W_;
an.XDomainRequest = "withCredentials" in new an.XMLHttpRequest() ? an.XMLHttpRequest : gm.XDomainRequest;
q_(["get", "put", "post", "patch", "head", "delete"], function(e) {
  an[e === "delete" ? "del" : e] = function(i, n, t) {
    return n = vm(i, n, t), n.method = e.toUpperCase(), ym(n);
  };
});
function q_(e, i) {
  for (var n = 0; n < e.length; n++)
    i(e[n]);
}
function V_(e) {
  for (var i in e)
    if (e.hasOwnProperty(i))
      return !1;
  return !0;
}
function vm(e, i, n) {
  var t = e;
  return F_(i) ? (n = i, typeof e == "string" && (t = {
    uri: e
  })) : t = U_({}, i, {
    uri: e
  }), t.callback = n, t;
}
function an(e, i, n) {
  return i = vm(e, i, n), ym(i);
}
function ym(e) {
  if (typeof e.callback > "u")
    throw new Error("callback argument missing");
  var i = !1, n = function(B, M, A) {
    i || (i = !0, e.callback(B, M, A));
  };
  function t() {
    o.readyState === 4 && setTimeout(a, 0);
  }
  function r() {
    var B = void 0;
    if (o.response ? B = o.response : B = o.responseText || H_(o), T)
      try {
        B = JSON.parse(B);
      } catch {
      }
    return B;
  }
  function s(B) {
    return clearTimeout(b), B instanceof Error || (B = new Error("" + (B || "Unknown XMLHttpRequest Error"))), B.statusCode = 0, n(B, I);
  }
  function a() {
    if (!l) {
      var B;
      clearTimeout(b), e.useXDR && o.status === void 0 ? B = 200 : B = o.status === 1223 ? 204 : o.status;
      var M = I, A = null;
      return B !== 0 ? (M = {
        body: r(),
        statusCode: B,
        method: p,
        headers: {},
        url: d,
        rawRequest: o
      }, o.getAllResponseHeaders && (M.headers = j_(o.getAllResponseHeaders()))) : A = new Error("Internal XMLHttpRequest Error"), n(A, M, M.body);
    }
  }
  var o = e.xhr || null;
  o || (e.cors || e.useXDR ? o = new an.XDomainRequest() : o = new an.XMLHttpRequest());
  var u, l, d = o.url = e.uri || e.url, p = o.method = e.method || "GET", h = e.body || e.data, m = o.headers = e.headers || {}, y = !!e.sync, T = !1, b, I = {
    body: void 0,
    headers: {},
    statusCode: 0,
    method: p,
    url: d,
    rawRequest: o
  };
  if ("json" in e && e.json !== !1 && (T = !0, m.accept || m.Accept || (m.Accept = "application/json"), p !== "GET" && p !== "HEAD" && (m["content-type"] || m["Content-Type"] || (m["Content-Type"] = "application/json"), h = JSON.stringify(e.json === !0 ? h : e.json))), o.onreadystatechange = t, o.onload = a, o.onerror = s, o.onprogress = function() {
  }, o.onabort = function() {
    l = !0;
  }, o.ontimeout = s, o.open(p, d, !y, e.username, e.password), y || (o.withCredentials = !!e.withCredentials), !y && e.timeout > 0 && (b = setTimeout(function() {
    if (!l) {
      l = !0, o.abort("timeout");
      var B = new Error("XMLHttpRequest timeout");
      B.code = "ETIMEDOUT", s(B);
    }
  }, e.timeout)), o.setRequestHeader)
    for (u in m)
      m.hasOwnProperty(u) && o.setRequestHeader(u, m[u]);
  else if (e.headers && !V_(e.headers))
    throw new Error("Headers cannot be set on an XDomainRequest object");
  return "responseType" in e && (o.responseType = e.responseType), "beforeSend" in e && typeof e.beforeSend == "function" && e.beforeSend(o), o.send(h || null), o;
}
function H_(e) {
  try {
    if (e.responseType === "document")
      return e.responseXML;
    var i = e.responseXML && e.responseXML.documentElement.nodeName === "parsererror";
    if (e.responseType === "" && !i)
      return e.responseXML;
  } catch {
  }
  return null;
}
function W_() {
}
var ac = { exports: {} }, wh = me, Gc = Object.create || function() {
  function e() {
  }
  return function(i) {
    if (arguments.length !== 1)
      throw new Error("Object.create shim only accepts one parameter.");
    return e.prototype = i, new e();
  };
}();
function Ai(e, i) {
  this.name = "ParsingError", this.code = e.code, this.message = i || e.message;
}
Ai.prototype = Gc(Error.prototype);
Ai.prototype.constructor = Ai;
Ai.Errors = {
  BadSignature: {
    code: 0,
    message: "Malformed WebVTT signature."
  },
  BadTimeStamp: {
    code: 1,
    message: "Malformed time stamp."
  }
};
function Kc(e) {
  function i(t, r, s, a) {
    return (t | 0) * 3600 + (r | 0) * 60 + (s | 0) + (a | 0) / 1e3;
  }
  var n = e.match(/^(\d+):(\d{1,2})(:\d{1,2})?\.(\d{3})/);
  return n ? n[3] ? i(n[1], n[2], n[3].replace(":", ""), n[4]) : n[1] > 59 ? i(n[1], n[2], 0, n[4]) : i(0, n[1], n[2], n[4]) : null;
}
function $s() {
  this.values = Gc(null);
}
$s.prototype = {
  set: function(e, i) {
    !this.get(e) && i !== "" && (this.values[e] = i);
  },
  get: function(e, i, n) {
    return n ? this.has(e) ? this.values[e] : i[n] : this.has(e) ? this.values[e] : i;
  },
  has: function(e) {
    return e in this.values;
  },
  alt: function(e, i, n) {
    for (var t = 0; t < n.length; ++t)
      if (i === n[t]) {
        this.set(e, i);
        break;
      }
  },
  integer: function(e, i) {
    /^-?\d+$/.test(i) && this.set(e, parseInt(i, 10));
  },
  percent: function(e, i) {
    return i.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (i = parseFloat(i), i >= 0 && i <= 100) ? (this.set(e, i), !0) : !1;
  }
};
function Ks(e, i, n, t) {
  var r = t ? e.split(t) : [e];
  for (var s in r)
    if (typeof r[s] == "string") {
      var a = r[s].split(n);
      if (a.length === 2) {
        var o = a[0].trim(), u = a[1].trim();
        i(o, u);
      }
    }
}
function G_(e, i, n) {
  var t = e;
  function r() {
    var o = Kc(e);
    if (o === null)
      throw new Ai(
        Ai.Errors.BadTimeStamp,
        "Malformed timestamp: " + t
      );
    return e = e.replace(/^[^\sa-zA-Z-]+/, ""), o;
  }
  function s(o, u) {
    var l = new $s();
    Ks(o, function(d, p) {
      switch (d) {
        case "region":
          for (var h = n.length - 1; h >= 0; h--)
            if (n[h].id === p) {
              l.set(d, n[h].region);
              break;
            }
          break;
        case "vertical":
          l.alt(d, p, ["rl", "lr"]);
          break;
        case "line":
          var m = p.split(","), y = m[0];
          l.integer(d, y), l.percent(d, y) && l.set("snapToLines", !1), l.alt(d, y, ["auto"]), m.length === 2 && l.alt("lineAlign", m[1], ["start", "center", "end"]);
          break;
        case "position":
          m = p.split(","), l.percent(d, m[0]), m.length === 2 && l.alt("positionAlign", m[1], ["start", "center", "end"]);
          break;
        case "size":
          l.percent(d, p);
          break;
        case "align":
          l.alt(d, p, ["start", "center", "end", "left", "right"]);
          break;
      }
    }, /:/, /\s/), u.region = l.get("region", null), u.vertical = l.get("vertical", "");
    try {
      u.line = l.get("line", "auto");
    } catch {
    }
    u.lineAlign = l.get("lineAlign", "start"), u.snapToLines = l.get("snapToLines", !0), u.size = l.get("size", 100);
    try {
      u.align = l.get("align", "center");
    } catch {
      u.align = l.get("align", "middle");
    }
    try {
      u.position = l.get("position", "auto");
    } catch {
      u.position = l.get("position", {
        start: 0,
        left: 0,
        center: 50,
        middle: 50,
        end: 100,
        right: 100
      }, u.align);
    }
    u.positionAlign = l.get("positionAlign", {
      start: "start",
      left: "start",
      center: "center",
      middle: "center",
      end: "end",
      right: "end"
    }, u.align);
  }
  function a() {
    e = e.replace(/^\s+/, "");
  }
  if (a(), i.startTime = r(), a(), e.substr(0, 3) !== "-->")
    throw new Ai(
      Ai.Errors.BadTimeStamp,
      "Malformed time stamp (time stamps must be separated by '-->'): " + t
    );
  e = e.substr(3), a(), i.endTime = r(), a(), s(e, i);
}
var Hu = wh.createElement && wh.createElement("textarea"), K_ = {
  c: "span",
  i: "i",
  b: "b",
  u: "u",
  ruby: "ruby",
  rt: "rt",
  v: "span",
  lang: "span"
}, kh = {
  white: "rgba(255,255,255,1)",
  lime: "rgba(0,255,0,1)",
  cyan: "rgba(0,255,255,1)",
  red: "rgba(255,0,0,1)",
  yellow: "rgba(255,255,0,1)",
  magenta: "rgba(255,0,255,1)",
  blue: "rgba(0,0,255,1)",
  black: "rgba(0,0,0,1)"
}, z_ = {
  v: "title",
  lang: "lang"
}, Ch = {
  rt: "ruby"
};
function _m(e, i) {
  function n() {
    if (!i)
      return null;
    function y(b) {
      return i = i.substr(b.length), b;
    }
    var T = i.match(/^([^<]*)(<[^>]*>?)?/);
    return y(T[1] ? T[1] : T[2]);
  }
  function t(y) {
    return Hu.innerHTML = y, y = Hu.textContent, Hu.textContent = "", y;
  }
  function r(y, T) {
    return !Ch[T.localName] || Ch[T.localName] === y.localName;
  }
  function s(y, T) {
    var b = K_[y];
    if (!b)
      return null;
    var I = e.document.createElement(b), B = z_[y];
    return B && T && (I[B] = T.trim()), I;
  }
  for (var a = e.document.createElement("div"), o = a, u, l = []; (u = n()) !== null; ) {
    if (u[0] === "<") {
      if (u[1] === "/") {
        l.length && l[l.length - 1] === u.substr(2).replace(">", "") && (l.pop(), o = o.parentNode);
        continue;
      }
      var d = Kc(u.substr(1, u.length - 2)), p;
      if (d) {
        p = e.document.createProcessingInstruction("timestamp", d), o.appendChild(p);
        continue;
      }
      var h = u.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
      if (!h || (p = s(h[1], h[3]), !p) || !r(o, p))
        continue;
      if (h[2]) {
        var m = h[2].split(".");
        m.forEach(function(y) {
          var T = /^bg_/.test(y), b = T ? y.slice(3) : y;
          if (kh.hasOwnProperty(b)) {
            var I = T ? "background-color" : "color", B = kh[b];
            p.style[I] = B;
          }
        }), p.className = m.join(" ");
      }
      l.push(h[1]), o.appendChild(p), o = p;
      continue;
    }
    o.appendChild(e.document.createTextNode(t(u)));
  }
  return a;
}
var Ah = [
  [1470, 1470],
  [1472, 1472],
  [1475, 1475],
  [1478, 1478],
  [1488, 1514],
  [1520, 1524],
  [1544, 1544],
  [1547, 1547],
  [1549, 1549],
  [1563, 1563],
  [1566, 1610],
  [1645, 1647],
  [1649, 1749],
  [1765, 1766],
  [1774, 1775],
  [1786, 1805],
  [1807, 1808],
  [1810, 1839],
  [1869, 1957],
  [1969, 1969],
  [1984, 2026],
  [2036, 2037],
  [2042, 2042],
  [2048, 2069],
  [2074, 2074],
  [2084, 2084],
  [2088, 2088],
  [2096, 2110],
  [2112, 2136],
  [2142, 2142],
  [2208, 2208],
  [2210, 2220],
  [8207, 8207],
  [64285, 64285],
  [64287, 64296],
  [64298, 64310],
  [64312, 64316],
  [64318, 64318],
  [64320, 64321],
  [64323, 64324],
  [64326, 64449],
  [64467, 64829],
  [64848, 64911],
  [64914, 64967],
  [65008, 65020],
  [65136, 65140],
  [65142, 65276],
  [67584, 67589],
  [67592, 67592],
  [67594, 67637],
  [67639, 67640],
  [67644, 67644],
  [67647, 67669],
  [67671, 67679],
  [67840, 67867],
  [67872, 67897],
  [67903, 67903],
  [67968, 68023],
  [68030, 68031],
  [68096, 68096],
  [68112, 68115],
  [68117, 68119],
  [68121, 68147],
  [68160, 68167],
  [68176, 68184],
  [68192, 68223],
  [68352, 68405],
  [68416, 68437],
  [68440, 68466],
  [68472, 68479],
  [68608, 68680],
  [126464, 126467],
  [126469, 126495],
  [126497, 126498],
  [126500, 126500],
  [126503, 126503],
  [126505, 126514],
  [126516, 126519],
  [126521, 126521],
  [126523, 126523],
  [126530, 126530],
  [126535, 126535],
  [126537, 126537],
  [126539, 126539],
  [126541, 126543],
  [126545, 126546],
  [126548, 126548],
  [126551, 126551],
  [126553, 126553],
  [126555, 126555],
  [126557, 126557],
  [126559, 126559],
  [126561, 126562],
  [126564, 126564],
  [126567, 126570],
  [126572, 126578],
  [126580, 126583],
  [126585, 126588],
  [126590, 126590],
  [126592, 126601],
  [126603, 126619],
  [126625, 126627],
  [126629, 126633],
  [126635, 126651],
  [1114109, 1114109]
];
function X_(e) {
  for (var i = 0; i < Ah.length; i++) {
    var n = Ah[i];
    if (e >= n[0] && e <= n[1])
      return !0;
  }
  return !1;
}
function Q_(e) {
  var i = [], n = "", t;
  if (!e || !e.childNodes)
    return "ltr";
  function r(o, u) {
    for (var l = u.childNodes.length - 1; l >= 0; l--)
      o.push(u.childNodes[l]);
  }
  function s(o) {
    if (!o || !o.length)
      return null;
    var u = o.pop(), l = u.textContent || u.innerText;
    if (l) {
      var d = l.match(/^.*(\n|\r)/);
      return d ? (o.length = 0, d[0]) : l;
    }
    if (u.tagName === "ruby")
      return s(o);
    if (u.childNodes)
      return r(o, u), s(o);
  }
  for (r(i, e); n = s(i); )
    for (var a = 0; a < n.length; a++)
      if (t = n.charCodeAt(a), X_(t))
        return "rtl";
  return "ltr";
}
function J_(e) {
  if (typeof e.line == "number" && (e.snapToLines || e.line >= 0 && e.line <= 100))
    return e.line;
  if (!e.track || !e.track.textTrackList || !e.track.textTrackList.mediaElement)
    return -1;
  for (var i = e.track, n = i.textTrackList, t = 0, r = 0; r < n.length && n[r] !== i; r++)
    n[r].mode === "showing" && t++;
  return ++t * -1;
}
function Jo() {
}
Jo.prototype.applyStyles = function(e, i) {
  i = i || this.div;
  for (var n in e)
    e.hasOwnProperty(n) && (i.style[n] = e[n]);
};
Jo.prototype.formatStyle = function(e, i) {
  return e === 0 ? 0 : e + i;
};
function Eo(e, i, n) {
  Jo.call(this), this.cue = i, this.cueDiv = _m(e, i.text);
  var t = {
    color: "rgba(255, 255, 255, 1)",
    backgroundColor: "rgba(0, 0, 0, 0.8)",
    position: "relative",
    left: 0,
    right: 0,
    top: 0,
    bottom: 0,
    display: "inline",
    writingMode: i.vertical === "" ? "horizontal-tb" : i.vertical === "lr" ? "vertical-lr" : "vertical-rl",
    unicodeBidi: "plaintext"
  };
  this.applyStyles(t, this.cueDiv), this.div = e.document.createElement("div"), t = {
    direction: Q_(this.cueDiv),
    writingMode: i.vertical === "" ? "horizontal-tb" : i.vertical === "lr" ? "vertical-lr" : "vertical-rl",
    unicodeBidi: "plaintext",
    textAlign: i.align === "middle" ? "center" : i.align,
    font: n.font,
    whiteSpace: "pre-line",
    position: "absolute"
  }, this.applyStyles(t), this.div.appendChild(this.cueDiv);
  var r = 0;
  switch (i.positionAlign) {
    case "start":
      r = i.position;
      break;
    case "center":
      r = i.position - i.size / 2;
      break;
    case "end":
      r = i.position - i.size;
      break;
  }
  i.vertical === "" ? this.applyStyles({
    left: this.formatStyle(r, "%"),
    width: this.formatStyle(i.size, "%")
  }) : this.applyStyles({
    top: this.formatStyle(r, "%"),
    height: this.formatStyle(i.size, "%")
  }), this.move = function(s) {
    this.applyStyles({
      top: this.formatStyle(s.top, "px"),
      bottom: this.formatStyle(s.bottom, "px"),
      left: this.formatStyle(s.left, "px"),
      right: this.formatStyle(s.right, "px"),
      height: this.formatStyle(s.height, "px"),
      width: this.formatStyle(s.width, "px")
    });
  };
}
Eo.prototype = Gc(Jo.prototype);
Eo.prototype.constructor = Eo;
function ci(e) {
  var i, n, t, r;
  if (e.div) {
    n = e.div.offsetHeight, t = e.div.offsetWidth, r = e.div.offsetTop;
    var s = (s = e.div.childNodes) && (s = s[0]) && s.getClientRects && s.getClientRects();
    e = e.div.getBoundingClientRect(), i = s ? Math.max(s[0] && s[0].height || 0, e.height / s.length) : 0;
  }
  this.left = e.left, this.right = e.right, this.top = e.top || r, this.height = e.height || n, this.bottom = e.bottom || r + (e.height || n), this.width = e.width || t, this.lineHeight = i !== void 0 ? i : e.lineHeight;
}
ci.prototype.move = function(e, i) {
  switch (i = i !== void 0 ? i : this.lineHeight, e) {
    case "+x":
      this.left += i, this.right += i;
      break;
    case "-x":
      this.left -= i, this.right -= i;
      break;
    case "+y":
      this.top += i, this.bottom += i;
      break;
    case "-y":
      this.top -= i, this.bottom -= i;
      break;
  }
};
ci.prototype.overlaps = function(e) {
  return this.left < e.right && this.right > e.left && this.top < e.bottom && this.bottom > e.top;
};
ci.prototype.overlapsAny = function(e) {
  for (var i = 0; i < e.length; i++)
    if (this.overlaps(e[i]))
      return !0;
  return !1;
};
ci.prototype.within = function(e) {
  return this.top >= e.top && this.bottom <= e.bottom && this.left >= e.left && this.right <= e.right;
};
ci.prototype.overlapsOppositeAxis = function(e, i) {
  switch (i) {
    case "+x":
      return this.left < e.left;
    case "-x":
      return this.right > e.right;
    case "+y":
      return this.top < e.top;
    case "-y":
      return this.bottom > e.bottom;
  }
};
ci.prototype.intersectPercentage = function(e) {
  var i = Math.max(0, Math.min(this.right, e.right) - Math.max(this.left, e.left)), n = Math.max(0, Math.min(this.bottom, e.bottom) - Math.max(this.top, e.top)), t = i * n;
  return t / (this.height * this.width);
};
ci.prototype.toCSSCompatValues = function(e) {
  return {
    top: this.top - e.top,
    bottom: e.bottom - this.bottom,
    left: this.left - e.left,
    right: e.right - this.right,
    height: this.height,
    width: this.width
  };
};
ci.getSimpleBoxPosition = function(e) {
  var i = e.div ? e.div.offsetHeight : e.tagName ? e.offsetHeight : 0, n = e.div ? e.div.offsetWidth : e.tagName ? e.offsetWidth : 0, t = e.div ? e.div.offsetTop : e.tagName ? e.offsetTop : 0;
  e = e.div ? e.div.getBoundingClientRect() : e.tagName ? e.getBoundingClientRect() : e;
  var r = {
    left: e.left,
    right: e.right,
    top: e.top || t,
    height: e.height || i,
    bottom: e.bottom || t + (e.height || i),
    width: e.width || n
  };
  return r;
};
function Y_(e, i, n, t) {
  function r(b, I) {
    for (var B, M = new ci(b), A = 1, x = 0; x < I.length; x++) {
      for (; b.overlapsOppositeAxis(n, I[x]) || b.within(n) && b.overlapsAny(t); )
        b.move(I[x]);
      if (b.within(n))
        return b;
      var P = b.intersectPercentage(n);
      A > P && (B = new ci(b), A = P), b = new ci(M);
    }
    return B || M;
  }
  var s = new ci(i), a = i.cue, o = J_(a), u = [];
  if (a.snapToLines) {
    var l;
    switch (a.vertical) {
      case "":
        u = ["+y", "-y"], l = "height";
        break;
      case "rl":
        u = ["+x", "-x"], l = "width";
        break;
      case "lr":
        u = ["-x", "+x"], l = "width";
        break;
    }
    var d = s.lineHeight, p = d * Math.round(o), h = n[l] + d, m = u[0];
    Math.abs(p) > h && (p = p < 0 ? -1 : 1, p *= Math.ceil(h / d) * d), o < 0 && (p += a.vertical === "" ? n.height : n.width, u = u.reverse()), s.move(m, p);
  } else {
    var y = s.lineHeight / n.height * 100;
    switch (a.lineAlign) {
      case "center":
        o -= y / 2;
        break;
      case "end":
        o -= y;
        break;
    }
    switch (a.vertical) {
      case "":
        i.applyStyles({
          top: i.formatStyle(o, "%")
        });
        break;
      case "rl":
        i.applyStyles({
          left: i.formatStyle(o, "%")
        });
        break;
      case "lr":
        i.applyStyles({
          right: i.formatStyle(o, "%")
        });
        break;
    }
    u = ["+y", "-x", "+x", "-y"], s = new ci(i);
  }
  var T = r(s, u);
  i.move(T.toCSSCompatValues(n));
}
function gs() {
}
gs.StringDecoder = function() {
  return {
    decode: function(e) {
      if (!e)
        return "";
      if (typeof e != "string")
        throw new Error("Error - expected string data.");
      return decodeURIComponent(encodeURIComponent(e));
    }
  };
};
gs.convertCueToDOMTree = function(e, i) {
  return !e || !i ? null : _m(e, i);
};
var $_ = 0.05, Z_ = "sans-serif", eb = "1.5%";
gs.processCues = function(e, i, n) {
  if (!e || !i || !n)
    return null;
  for (; n.firstChild; )
    n.removeChild(n.firstChild);
  var t = e.document.createElement("div");
  t.style.position = "absolute", t.style.left = "0", t.style.right = "0", t.style.top = "0", t.style.bottom = "0", t.style.margin = eb, n.appendChild(t);
  function r(d) {
    for (var p = 0; p < d.length; p++)
      if (d[p].hasBeenReset || !d[p].displayState)
        return !0;
    return !1;
  }
  if (!r(i)) {
    for (var s = 0; s < i.length; s++)
      t.appendChild(i[s].displayState);
    return;
  }
  var a = [], o = ci.getSimpleBoxPosition(t), u = Math.round(o.height * $_ * 100) / 100, l = {
    font: u + "px " + Z_
  };
  (function() {
    for (var d, p, h = 0; h < i.length; h++)
      p = i[h], d = new Eo(e, p, l), t.appendChild(d.div), Y_(e, d, o, a), p.displayState = d.div, a.push(ci.getSimpleBoxPosition(d));
  })();
};
gs.Parser = function(e, i, n) {
  n || (n = i, i = {}), i || (i = {}), this.window = e, this.vttjs = i, this.state = "INITIAL", this.buffer = "", this.decoder = n || new TextDecoder("utf8"), this.regionList = [];
};
gs.Parser.prototype = {
  reportOrThrowError: function(e) {
    if (e instanceof Ai)
      this.onparsingerror && this.onparsingerror(e);
    else
      throw e;
  },
  parse: function(e) {
    var i = this;
    e && (i.buffer += i.decoder.decode(e, { stream: !0 }));
    function n() {
      for (var d = i.buffer, p = 0; p < d.length && d[p] !== "\r" && d[p] !== `
`; )
        ++p;
      var h = d.substr(0, p);
      return d[p] === "\r" && ++p, d[p] === `
` && ++p, i.buffer = d.substr(p), h;
    }
    function t(d) {
      var p = new $s();
      if (Ks(d, function(m, y) {
        switch (m) {
          case "id":
            p.set(m, y);
            break;
          case "width":
            p.percent(m, y);
            break;
          case "lines":
            p.integer(m, y);
            break;
          case "regionanchor":
          case "viewportanchor":
            var T = y.split(",");
            if (T.length !== 2)
              break;
            var b = new $s();
            if (b.percent("x", T[0]), b.percent("y", T[1]), !b.has("x") || !b.has("y"))
              break;
            p.set(m + "X", b.get("x")), p.set(m + "Y", b.get("y"));
            break;
          case "scroll":
            p.alt(m, y, ["up"]);
            break;
        }
      }, /=/, /\s/), p.has("id")) {
        var h = new (i.vttjs.VTTRegion || i.window.VTTRegion)();
        h.width = p.get("width", 100), h.lines = p.get("lines", 3), h.regionAnchorX = p.get("regionanchorX", 0), h.regionAnchorY = p.get("regionanchorY", 100), h.viewportAnchorX = p.get("viewportanchorX", 0), h.viewportAnchorY = p.get("viewportanchorY", 100), h.scroll = p.get("scroll", ""), i.onregion && i.onregion(h), i.regionList.push({
          id: p.get("id"),
          region: h
        });
      }
    }
    function r(d) {
      var p = new $s();
      Ks(d, function(h, m) {
        switch (h) {
          case "MPEGT":
            p.integer(h + "S", m);
            break;
          case "LOCA":
            p.set(h + "L", Kc(m));
            break;
        }
      }, /[^\d]:/, /,/), i.ontimestampmap && i.ontimestampmap({
        MPEGTS: p.get("MPEGTS"),
        LOCAL: p.get("LOCAL")
      });
    }
    function s(d) {
      d.match(/X-TIMESTAMP-MAP/) ? Ks(d, function(p, h) {
        switch (p) {
          case "X-TIMESTAMP-MAP":
            r(h);
            break;
        }
      }, /=/) : Ks(d, function(p, h) {
        switch (p) {
          case "Region":
            t(h);
            break;
        }
      }, /:/);
    }
    try {
      var a;
      if (i.state === "INITIAL") {
        if (!/\r\n|\n/.test(i.buffer))
          return this;
        a = n();
        var o = a.match(/^WEBVTT([ \t].*)?$/);
        if (!o || !o[0])
          throw new Ai(Ai.Errors.BadSignature);
        i.state = "HEADER";
      }
      for (var u = !1; i.buffer; ) {
        if (!/\r\n|\n/.test(i.buffer))
          return this;
        switch (u ? u = !1 : a = n(), i.state) {
          case "HEADER":
            /:/.test(a) ? s(a) : a || (i.state = "ID");
            continue;
          case "NOTE":
            a || (i.state = "ID");
            continue;
          case "ID":
            if (/^NOTE($|[ \t])/.test(a)) {
              i.state = "NOTE";
              break;
            }
            if (!a)
              continue;
            i.cue = new (i.vttjs.VTTCue || i.window.VTTCue)(0, 0, "");
            try {
              i.cue.align = "center";
            } catch {
              i.cue.align = "middle";
            }
            if (i.state = "CUE", a.indexOf("-->") === -1) {
              i.cue.id = a;
              continue;
            }
          case "CUE":
            try {
              G_(a, i.cue, i.regionList);
            } catch (d) {
              i.reportOrThrowError(d), i.cue = null, i.state = "BADCUE";
              continue;
            }
            i.state = "CUETEXT";
            continue;
          case "CUETEXT":
            var l = a.indexOf("-->") !== -1;
            if (!a || l && (u = !0)) {
              i.oncue && i.oncue(i.cue), i.cue = null, i.state = "ID";
              continue;
            }
            i.cue.text && (i.cue.text += `
`), i.cue.text += a.replace(/\u2028/g, `
`).replace(/u2029/g, `
`);
            continue;
          case "BADCUE":
            a || (i.state = "ID");
            continue;
        }
      }
    } catch (d) {
      i.reportOrThrowError(d), i.state === "CUETEXT" && i.cue && i.oncue && i.oncue(i.cue), i.cue = null, i.state = i.state === "INITIAL" ? "BADWEBVTT" : "BADCUE";
    }
    return this;
  },
  flush: function() {
    var e = this;
    try {
      if (e.buffer += e.decoder.decode(), (e.cue || e.state === "HEADER") && (e.buffer += `

`, e.parse()), e.state === "INITIAL")
        throw new Ai(Ai.Errors.BadSignature);
    } catch (i) {
      e.reportOrThrowError(i);
    }
    return e.onflush && e.onflush(), this;
  }
};
var tb = gs, ib = "auto", nb = {
  "": 1,
  lr: 1,
  rl: 1
}, rb = {
  start: 1,
  center: 1,
  end: 1,
  left: 1,
  right: 1,
  auto: 1,
  "line-left": 1,
  "line-right": 1
};
function sb(e) {
  if (typeof e != "string")
    return !1;
  var i = nb[e.toLowerCase()];
  return i ? e.toLowerCase() : !1;
}
function Wu(e) {
  if (typeof e != "string")
    return !1;
  var i = rb[e.toLowerCase()];
  return i ? e.toLowerCase() : !1;
}
function bm(e, i, n) {
  this.hasBeenReset = !1;
  var t = "", r = !1, s = e, a = i, o = n, u = null, l = "", d = !0, p = "auto", h = "start", m = "auto", y = "auto", T = 100, b = "center";
  Object.defineProperties(this, {
    id: {
      enumerable: !0,
      get: function() {
        return t;
      },
      set: function(I) {
        t = "" + I;
      }
    },
    pauseOnExit: {
      enumerable: !0,
      get: function() {
        return r;
      },
      set: function(I) {
        r = !!I;
      }
    },
    startTime: {
      enumerable: !0,
      get: function() {
        return s;
      },
      set: function(I) {
        if (typeof I != "number")
          throw new TypeError("Start time must be set to a number.");
        s = I, this.hasBeenReset = !0;
      }
    },
    endTime: {
      enumerable: !0,
      get: function() {
        return a;
      },
      set: function(I) {
        if (typeof I != "number")
          throw new TypeError("End time must be set to a number.");
        a = I, this.hasBeenReset = !0;
      }
    },
    text: {
      enumerable: !0,
      get: function() {
        return o;
      },
      set: function(I) {
        o = "" + I, this.hasBeenReset = !0;
      }
    },
    region: {
      enumerable: !0,
      get: function() {
        return u;
      },
      set: function(I) {
        u = I, this.hasBeenReset = !0;
      }
    },
    vertical: {
      enumerable: !0,
      get: function() {
        return l;
      },
      set: function(I) {
        var B = sb(I);
        if (B === !1)
          throw new SyntaxError("Vertical: an invalid or illegal direction string was specified.");
        l = B, this.hasBeenReset = !0;
      }
    },
    snapToLines: {
      enumerable: !0,
      get: function() {
        return d;
      },
      set: function(I) {
        d = !!I, this.hasBeenReset = !0;
      }
    },
    line: {
      enumerable: !0,
      get: function() {
        return p;
      },
      set: function(I) {
        if (typeof I != "number" && I !== ib)
          throw new SyntaxError("Line: an invalid number or illegal string was specified.");
        p = I, this.hasBeenReset = !0;
      }
    },
    lineAlign: {
      enumerable: !0,
      get: function() {
        return h;
      },
      set: function(I) {
        var B = Wu(I);
        B ? (h = B, this.hasBeenReset = !0) : console.warn("lineAlign: an invalid or illegal string was specified.");
      }
    },
    position: {
      enumerable: !0,
      get: function() {
        return m;
      },
      set: function(I) {
        if (I < 0 || I > 100)
          throw new Error("Position must be between 0 and 100.");
        m = I, this.hasBeenReset = !0;
      }
    },
    positionAlign: {
      enumerable: !0,
      get: function() {
        return y;
      },
      set: function(I) {
        var B = Wu(I);
        B ? (y = B, this.hasBeenReset = !0) : console.warn("positionAlign: an invalid or illegal string was specified.");
      }
    },
    size: {
      enumerable: !0,
      get: function() {
        return T;
      },
      set: function(I) {
        if (I < 0 || I > 100)
          throw new Error("Size must be between 0 and 100.");
        T = I, this.hasBeenReset = !0;
      }
    },
    align: {
      enumerable: !0,
      get: function() {
        return b;
      },
      set: function(I) {
        var B = Wu(I);
        if (!B)
          throw new SyntaxError("align: an invalid or illegal alignment string was specified.");
        b = B, this.hasBeenReset = !0;
      }
    }
  }), this.displayState = void 0;
}
bm.prototype.getCueAsHTML = function() {
  return WebVTT.convertCueToDOMTree(window, this.text);
};
var ab = bm, ob = {
  "": !0,
  up: !0
};
function ub(e) {
  if (typeof e != "string")
    return !1;
  var i = ob[e.toLowerCase()];
  return i ? e.toLowerCase() : !1;
}
function Ms(e) {
  return typeof e == "number" && e >= 0 && e <= 100;
}
function lb() {
  var e = 100, i = 3, n = 0, t = 100, r = 0, s = 100, a = "";
  Object.defineProperties(this, {
    width: {
      enumerable: !0,
      get: function() {
        return e;
      },
      set: function(o) {
        if (!Ms(o))
          throw new Error("Width must be between 0 and 100.");
        e = o;
      }
    },
    lines: {
      enumerable: !0,
      get: function() {
        return i;
      },
      set: function(o) {
        if (typeof o != "number")
          throw new TypeError("Lines must be set to a number.");
        i = o;
      }
    },
    regionAnchorY: {
      enumerable: !0,
      get: function() {
        return t;
      },
      set: function(o) {
        if (!Ms(o))
          throw new Error("RegionAnchorX must be between 0 and 100.");
        t = o;
      }
    },
    regionAnchorX: {
      enumerable: !0,
      get: function() {
        return n;
      },
      set: function(o) {
        if (!Ms(o))
          throw new Error("RegionAnchorY must be between 0 and 100.");
        n = o;
      }
    },
    viewportAnchorY: {
      enumerable: !0,
      get: function() {
        return s;
      },
      set: function(o) {
        if (!Ms(o))
          throw new Error("ViewportAnchorY must be between 0 and 100.");
        s = o;
      }
    },
    viewportAnchorX: {
      enumerable: !0,
      get: function() {
        return r;
      },
      set: function(o) {
        if (!Ms(o))
          throw new Error("ViewportAnchorX must be between 0 and 100.");
        r = o;
      }
    },
    scroll: {
      enumerable: !0,
      get: function() {
        return a;
      },
      set: function(o) {
        var u = ub(o);
        u === !1 ? console.warn("Scroll: an invalid or illegal string was specified.") : a = u;
      }
    }
  });
}
var cb = lb, En = q, yr = ac.exports = {
  WebVTT: tb,
  VTTCue: ab,
  VTTRegion: cb
};
En.vttjs = yr;
En.WebVTT = yr.WebVTT;
var db = yr.VTTCue, hb = yr.VTTRegion, pb = En.VTTCue, fb = En.VTTRegion;
yr.shim = function() {
  En.VTTCue = db, En.VTTRegion = hb;
};
yr.restore = function() {
  En.VTTCue = pb, En.VTTRegion = fb;
};
En.VTTCue || yr.shim();
function mb() {
  if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch {
    return !1;
  }
}
function Zs(e, i, n) {
  return mb() ? Zs = Reflect.construct.bind() : Zs = function(t, r, s) {
    var a = [null];
    a.push.apply(a, r);
    var o = Function.bind.apply(t, a), u = new o();
    return s && ns(u, s.prototype), u;
  }, Zs.apply(null, arguments);
}
function gb(e, i) {
  if (typeof i != "function" && i !== null)
    throw new TypeError("Super expression must either be null or a function");
  e.prototype = Object.create(i && i.prototype, {
    constructor: {
      value: e,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(e, "prototype", {
    writable: !1
  }), i && ns(e, i);
}
var Tm = { exports: {} };
(function(e, i) {
  (function(n) {
    var t = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/, r = /^(?=([^\/?#]*))\1([^]*)$/, s = /(?:\/|^)\.(?=\/)/g, a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g, o = {
      buildAbsoluteURL: function(u, l, d) {
        if (d = d || {}, u = u.trim(), l = l.trim(), !l) {
          if (!d.alwaysNormalize)
            return u;
          var p = o.parseURL(u);
          if (!p)
            throw new Error("Error trying to parse base URL.");
          return p.path = o.normalizePath(
            p.path
          ), o.buildURLFromParts(p);
        }
        var h = o.parseURL(l);
        if (!h)
          throw new Error("Error trying to parse relative URL.");
        if (h.scheme)
          return d.alwaysNormalize ? (h.path = o.normalizePath(h.path), o.buildURLFromParts(h)) : l;
        var m = o.parseURL(u);
        if (!m)
          throw new Error("Error trying to parse base URL.");
        if (!m.netLoc && m.path && m.path[0] !== "/") {
          var y = r.exec(m.path);
          m.netLoc = y[1], m.path = y[2];
        }
        m.netLoc && !m.path && (m.path = "/");
        var T = {
          scheme: m.scheme,
          netLoc: h.netLoc,
          path: null,
          params: h.params,
          query: h.query,
          fragment: h.fragment
        };
        if (!h.netLoc && (T.netLoc = m.netLoc, h.path[0] !== "/"))
          if (!h.path)
            T.path = m.path, h.params || (T.params = m.params, h.query || (T.query = m.query));
          else {
            var b = m.path, I = b.substring(0, b.lastIndexOf("/") + 1) + h.path;
            T.path = o.normalizePath(I);
          }
        return T.path === null && (T.path = d.alwaysNormalize ? o.normalizePath(h.path) : h.path), o.buildURLFromParts(T);
      },
      parseURL: function(u) {
        var l = t.exec(u);
        return l ? {
          scheme: l[1] || "",
          netLoc: l[2] || "",
          path: l[3] || "",
          params: l[4] || "",
          query: l[5] || "",
          fragment: l[6] || ""
        } : null;
      },
      normalizePath: function(u) {
        for (u = u.split("").reverse().join("").replace(s, ""); u.length !== (u = u.replace(a, "")).length; )
          ;
        return u.split("").reverse().join("");
      },
      buildURLFromParts: function(u) {
        return u.scheme + u.netLoc + u.path + u.params + u.query + u.fragment;
      }
    };
    e.exports = o;
  })();
})(Tm);
const Ih = Tm.exports;
var Dh = "http://example.com", Yo = function(e, i) {
  if (/^[a-z]+:/i.test(i))
    return i;
  /^data:/.test(e) && (e = q.location && q.location.href || "");
  var n = typeof q.URL == "function", t = /^\/\//.test(e), r = !q.location && !/\/\//i.test(e);
  if (n ? e = new q.URL(e, q.location || Dh) : /\/\//i.test(e) || (e = Ih.buildAbsoluteURL(q.location && q.location.href || "", e)), n) {
    var s = new URL(i, e);
    return r ? s.href.slice(Dh.length) : t ? s.href.slice(s.protocol.length) : s.href;
  }
  return Ih.buildAbsoluteURL(e, i);
}, zc = /* @__PURE__ */ function() {
  function e() {
    this.listeners = {};
  }
  var i = e.prototype;
  return i.on = function(n, t) {
    this.listeners[n] || (this.listeners[n] = []), this.listeners[n].push(t);
  }, i.off = function(n, t) {
    if (!this.listeners[n])
      return !1;
    var r = this.listeners[n].indexOf(t);
    return this.listeners[n] = this.listeners[n].slice(0), this.listeners[n].splice(r, 1), r > -1;
  }, i.trigger = function(n) {
    var t = this.listeners[n];
    if (t)
      if (arguments.length === 2)
        for (var r = t.length, s = 0; s < r; ++s)
          t[s].call(this, arguments[1]);
      else
        for (var a = Array.prototype.slice.call(arguments, 1), o = t.length, u = 0; u < o; ++u)
          t[u].apply(this, a);
  }, i.dispose = function() {
    this.listeners = {};
  }, i.pipe = function(n) {
    this.on("data", function(t) {
      n.push(t);
    });
  }, e;
}(), vb = function(e) {
  return q.atob ? q.atob(e) : Buffer.from(e, "base64").toString("binary");
};
function Em(e) {
  for (var i = vb(e), n = new Uint8Array(i.length), t = 0; t < i.length; t++)
    n[t] = i.charCodeAt(t);
  return n;
}
/*! @name m3u8-parser @version 4.8.0 @license Apache-2.0 */
var yb = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    var t;
    return t = e.call(this) || this, t.buffer = "", t;
  }
  var n = i.prototype;
  return n.push = function(t) {
    var r;
    for (this.buffer += t, r = this.buffer.indexOf(`
`); r > -1; r = this.buffer.indexOf(`
`))
      this.trigger("data", this.buffer.substring(0, r)), this.buffer = this.buffer.substring(r + 1);
  }, i;
}(zc), _b = String.fromCharCode(9), Gu = function(e) {
  var i = /([0-9.]*)?@?([0-9.]*)?/.exec(e || ""), n = {};
  return i[1] && (n.length = parseInt(i[1], 10)), i[2] && (n.offset = parseInt(i[2], 10)), n;
}, bb = function() {
  var e = "[^=]*", i = '"[^"]*"|[^,]*', n = "(?:" + e + ")=(?:" + i + ")";
  return new RegExp("(?:^|,)(" + n + ")");
}, ji = function(e) {
  for (var i = e.split(bb()), n = {}, t = i.length, r; t--; )
    i[t] !== "" && (r = /([^=]*)=(.*)/.exec(i[t]).slice(1), r[0] = r[0].replace(/^\s+|\s+$/g, ""), r[1] = r[1].replace(/^\s+|\s+$/g, ""), r[1] = r[1].replace(/^['"](.*)['"]$/g, "$1"), n[r[0]] = r[1]);
  return n;
}, Tb = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    var t;
    return t = e.call(this) || this, t.customParsers = [], t.tagMappers = [], t;
  }
  var n = i.prototype;
  return n.push = function(t) {
    var r = this, s, a;
    if (t = t.trim(), t.length !== 0) {
      if (t[0] !== "#") {
        this.trigger("data", {
          type: "uri",
          uri: t
        });
        return;
      }
      var o = this.tagMappers.reduce(function(u, l) {
        var d = l(t);
        return d === t ? u : u.concat([d]);
      }, [t]);
      o.forEach(function(u) {
        for (var l = 0; l < r.customParsers.length; l++)
          if (r.customParsers[l].call(r, u))
            return;
        if (u.indexOf("#EXT") !== 0) {
          r.trigger("data", {
            type: "comment",
            text: u.slice(1)
          });
          return;
        }
        if (u = u.replace("\r", ""), s = /^#EXTM3U/.exec(u), s) {
          r.trigger("data", {
            type: "tag",
            tagType: "m3u"
          });
          return;
        }
        if (s = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "inf"
          }, s[1] && (a.duration = parseFloat(s[1])), s[2] && (a.title = s[2]), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "targetduration"
          }, s[1] && (a.duration = parseInt(s[1], 10)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "version"
          }, s[1] && (a.version = parseInt(s[1], 10)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "media-sequence"
          }, s[1] && (a.number = parseInt(s[1], 10)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "discontinuity-sequence"
          }, s[1] && (a.number = parseInt(s[1], 10)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "playlist-type"
          }, s[1] && (a.playlistType = s[1]), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-BYTERANGE:?(.*)?$/.exec(u), s) {
          a = Mi(Gu(s[1]), {
            type: "tag",
            tagType: "byterange"
          }), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "allow-cache"
          }, s[1] && (a.allowed = !/NO/.test(s[1])), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-MAP:?(.*)$/.exec(u), s) {
          if (a = {
            type: "tag",
            tagType: "map"
          }, s[1]) {
            var d = ji(s[1]);
            d.URI && (a.uri = d.URI), d.BYTERANGE && (a.byterange = Gu(d.BYTERANGE));
          }
          r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-STREAM-INF:?(.*)$/.exec(u), s) {
          if (a = {
            type: "tag",
            tagType: "stream-inf"
          }, s[1]) {
            if (a.attributes = ji(s[1]), a.attributes.RESOLUTION) {
              var p = a.attributes.RESOLUTION.split("x"), h = {};
              p[0] && (h.width = parseInt(p[0], 10)), p[1] && (h.height = parseInt(p[1], 10)), a.attributes.RESOLUTION = h;
            }
            a.attributes.BANDWIDTH && (a.attributes.BANDWIDTH = parseInt(a.attributes.BANDWIDTH, 10)), a.attributes["FRAME-RATE"] && (a.attributes["FRAME-RATE"] = parseFloat(a.attributes["FRAME-RATE"])), a.attributes["PROGRAM-ID"] && (a.attributes["PROGRAM-ID"] = parseInt(a.attributes["PROGRAM-ID"], 10));
          }
          r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-MEDIA:?(.*)$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "media"
          }, s[1] && (a.attributes = ji(s[1])), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-ENDLIST/.exec(u), s) {
          r.trigger("data", {
            type: "tag",
            tagType: "endlist"
          });
          return;
        }
        if (s = /^#EXT-X-DISCONTINUITY/.exec(u), s) {
          r.trigger("data", {
            type: "tag",
            tagType: "discontinuity"
          });
          return;
        }
        if (s = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "program-date-time"
          }, s[1] && (a.dateTimeString = s[1], a.dateTimeObject = new Date(s[1])), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-KEY:?(.*)$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "key"
          }, s[1] && (a.attributes = ji(s[1]), a.attributes.IV && (a.attributes.IV.substring(0, 2).toLowerCase() === "0x" && (a.attributes.IV = a.attributes.IV.substring(2)), a.attributes.IV = a.attributes.IV.match(/.{8}/g), a.attributes.IV[0] = parseInt(a.attributes.IV[0], 16), a.attributes.IV[1] = parseInt(a.attributes.IV[1], 16), a.attributes.IV[2] = parseInt(a.attributes.IV[2], 16), a.attributes.IV[3] = parseInt(a.attributes.IV[3], 16), a.attributes.IV = new Uint32Array(a.attributes.IV))), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-START:?(.*)$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "start"
          }, s[1] && (a.attributes = ji(s[1]), a.attributes["TIME-OFFSET"] = parseFloat(a.attributes["TIME-OFFSET"]), a.attributes.PRECISE = /YES/.test(a.attributes.PRECISE)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "cue-out-cont"
          }, s[1] ? a.data = s[1] : a.data = "", r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "cue-out"
          }, s[1] ? a.data = s[1] : a.data = "", r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-CUE-IN:?(.*)?$/.exec(u), s) {
          a = {
            type: "tag",
            tagType: "cue-in"
          }, s[1] ? a.data = s[1] : a.data = "", r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-SKIP:(.*)$/.exec(u), s && s[1]) {
          a = {
            type: "tag",
            tagType: "skip"
          }, a.attributes = ji(s[1]), a.attributes.hasOwnProperty("SKIPPED-SEGMENTS") && (a.attributes["SKIPPED-SEGMENTS"] = parseInt(a.attributes["SKIPPED-SEGMENTS"], 10)), a.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES") && (a.attributes["RECENTLY-REMOVED-DATERANGES"] = a.attributes["RECENTLY-REMOVED-DATERANGES"].split(_b)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-PART:(.*)$/.exec(u), s && s[1]) {
          a = {
            type: "tag",
            tagType: "part"
          }, a.attributes = ji(s[1]), ["DURATION"].forEach(function(m) {
            a.attributes.hasOwnProperty(m) && (a.attributes[m] = parseFloat(a.attributes[m]));
          }), ["INDEPENDENT", "GAP"].forEach(function(m) {
            a.attributes.hasOwnProperty(m) && (a.attributes[m] = /YES/.test(a.attributes[m]));
          }), a.attributes.hasOwnProperty("BYTERANGE") && (a.attributes.byterange = Gu(a.attributes.BYTERANGE)), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(u), s && s[1]) {
          a = {
            type: "tag",
            tagType: "server-control"
          }, a.attributes = ji(s[1]), ["CAN-SKIP-UNTIL", "PART-HOLD-BACK", "HOLD-BACK"].forEach(function(m) {
            a.attributes.hasOwnProperty(m) && (a.attributes[m] = parseFloat(a.attributes[m]));
          }), ["CAN-SKIP-DATERANGES", "CAN-BLOCK-RELOAD"].forEach(function(m) {
            a.attributes.hasOwnProperty(m) && (a.attributes[m] = /YES/.test(a.attributes[m]));
          }), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-PART-INF:(.*)$/.exec(u), s && s[1]) {
          a = {
            type: "tag",
            tagType: "part-inf"
          }, a.attributes = ji(s[1]), ["PART-TARGET"].forEach(function(m) {
            a.attributes.hasOwnProperty(m) && (a.attributes[m] = parseFloat(a.attributes[m]));
          }), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(u), s && s[1]) {
          a = {
            type: "tag",
            tagType: "preload-hint"
          }, a.attributes = ji(s[1]), ["BYTERANGE-START", "BYTERANGE-LENGTH"].forEach(function(m) {
            if (a.attributes.hasOwnProperty(m)) {
              a.attributes[m] = parseInt(a.attributes[m], 10);
              var y = m === "BYTERANGE-LENGTH" ? "length" : "offset";
              a.attributes.byterange = a.attributes.byterange || {}, a.attributes.byterange[y] = a.attributes[m], delete a.attributes[m];
            }
          }), r.trigger("data", a);
          return;
        }
        if (s = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(u), s && s[1]) {
          a = {
            type: "tag",
            tagType: "rendition-report"
          }, a.attributes = ji(s[1]), ["LAST-MSN", "LAST-PART"].forEach(function(m) {
            a.attributes.hasOwnProperty(m) && (a.attributes[m] = parseInt(a.attributes[m], 10));
          }), r.trigger("data", a);
          return;
        }
        r.trigger("data", {
          type: "tag",
          data: u.slice(4)
        });
      });
    }
  }, n.addParser = function(t) {
    var r = this, s = t.expression, a = t.customType, o = t.dataParser, u = t.segment;
    typeof o != "function" && (o = function(l) {
      return l;
    }), this.customParsers.push(function(l) {
      var d = s.exec(l);
      if (d)
        return r.trigger("data", {
          type: "custom",
          data: o(l),
          customType: a,
          segment: u
        }), !0;
    });
  }, n.addTagMapper = function(t) {
    var r = t.expression, s = t.map, a = function(o) {
      return r.test(o) ? s(o) : o;
    };
    this.tagMappers.push(a);
  }, i;
}(zc), Eb = function(e) {
  return e.toLowerCase().replace(/-(\w)/g, function(i) {
    return i[1].toUpperCase();
  });
}, Mr = function(e) {
  var i = {};
  return Object.keys(e).forEach(function(n) {
    i[Eb(n)] = e[n];
  }), i;
}, Ku = function(e) {
  var i = e.serverControl, n = e.targetDuration, t = e.partTargetDuration;
  if (i) {
    var r = "#EXT-X-SERVER-CONTROL", s = "holdBack", a = "partHoldBack", o = n && n * 3, u = t && t * 2;
    n && !i.hasOwnProperty(s) && (i[s] = o, this.trigger("info", {
      message: r + " defaulting HOLD-BACK to targetDuration * 3 (" + o + ")."
    })), o && i[s] < o && (this.trigger("warn", {
      message: r + " clamping HOLD-BACK (" + i[s] + ") to targetDuration * 3 (" + o + ")"
    }), i[s] = o), t && !i.hasOwnProperty(a) && (i[a] = t * 3, this.trigger("info", {
      message: r + " defaulting PART-HOLD-BACK to partTargetDuration * 3 (" + i[a] + ")."
    })), t && i[a] < u && (this.trigger("warn", {
      message: r + " clamping PART-HOLD-BACK (" + i[a] + ") to partTargetDuration * 2 (" + u + ")."
    }), i[a] = u);
  }
}, Sb = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    var t;
    t = e.call(this) || this, t.lineStream = new yb(), t.parseStream = new Tb(), t.lineStream.pipe(t.parseStream);
    var r = Ge(t), s = [], a = {}, o, u, l = !1, d = function() {
    }, p = {
      AUDIO: {},
      VIDEO: {},
      "CLOSED-CAPTIONS": {},
      SUBTITLES: {}
    }, h = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed", m = 0;
    t.manifest = {
      allowCache: !0,
      discontinuityStarts: [],
      segments: []
    };
    var y = 0, T = 0;
    return t.on("end", function() {
      a.uri || !a.parts && !a.preloadHints || (!a.map && o && (a.map = o), !a.key && u && (a.key = u), !a.timeline && typeof m == "number" && (a.timeline = m), t.manifest.preloadSegment = a);
    }), t.parseStream.on("data", function(b) {
      var I, B;
      ({
        tag: function() {
          ({
            version: function() {
              b.version && (this.manifest.version = b.version);
            },
            "allow-cache": function() {
              this.manifest.allowCache = b.allowed, "allowed" in b || (this.trigger("info", {
                message: "defaulting allowCache to YES"
              }), this.manifest.allowCache = !0);
            },
            byterange: function() {
              var M = {};
              "length" in b && (a.byterange = M, M.length = b.length, "offset" in b || (b.offset = y)), "offset" in b && (a.byterange = M, M.offset = b.offset), y = M.offset + M.length;
            },
            endlist: function() {
              this.manifest.endList = !0;
            },
            inf: function() {
              "mediaSequence" in this.manifest || (this.manifest.mediaSequence = 0, this.trigger("info", {
                message: "defaulting media sequence to zero"
              })), "discontinuitySequence" in this.manifest || (this.manifest.discontinuitySequence = 0, this.trigger("info", {
                message: "defaulting discontinuity sequence to zero"
              })), b.duration > 0 && (a.duration = b.duration), b.duration === 0 && (a.duration = 0.01, this.trigger("info", {
                message: "updating zero segment duration to a small value"
              })), this.manifest.segments = s;
            },
            key: function() {
              if (!b.attributes) {
                this.trigger("warn", {
                  message: "ignoring key declaration without attribute list"
                });
                return;
              }
              if (b.attributes.METHOD === "NONE") {
                u = null;
                return;
              }
              if (!b.attributes.URI) {
                this.trigger("warn", {
                  message: "ignoring key declaration without URI"
                });
                return;
              }
              if (b.attributes.KEYFORMAT === "com.apple.streamingkeydelivery") {
                this.manifest.contentProtection = this.manifest.contentProtection || {}, this.manifest.contentProtection["com.apple.fps.1_0"] = {
                  attributes: b.attributes
                };
                return;
              }
              if (b.attributes.KEYFORMAT === "com.microsoft.playready") {
                this.manifest.contentProtection = this.manifest.contentProtection || {}, this.manifest.contentProtection["com.microsoft.playready"] = {
                  uri: b.attributes.URI
                };
                return;
              }
              if (b.attributes.KEYFORMAT === h) {
                var M = ["SAMPLE-AES", "SAMPLE-AES-CTR", "SAMPLE-AES-CENC"];
                if (M.indexOf(b.attributes.METHOD) === -1) {
                  this.trigger("warn", {
                    message: "invalid key method provided for Widevine"
                  });
                  return;
                }
                if (b.attributes.METHOD === "SAMPLE-AES-CENC" && this.trigger("warn", {
                  message: "SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead"
                }), b.attributes.URI.substring(0, 23) !== "data:text/plain;base64,") {
                  this.trigger("warn", {
                    message: "invalid key URI provided for Widevine"
                  });
                  return;
                }
                if (!(b.attributes.KEYID && b.attributes.KEYID.substring(0, 2) === "0x")) {
                  this.trigger("warn", {
                    message: "invalid key ID provided for Widevine"
                  });
                  return;
                }
                this.manifest.contentProtection = this.manifest.contentProtection || {}, this.manifest.contentProtection["com.widevine.alpha"] = {
                  attributes: {
                    schemeIdUri: b.attributes.KEYFORMAT,
                    keyId: b.attributes.KEYID.substring(2)
                  },
                  pssh: Em(b.attributes.URI.split(",")[1])
                };
                return;
              }
              b.attributes.METHOD || this.trigger("warn", {
                message: "defaulting key method to AES-128"
              }), u = {
                method: b.attributes.METHOD || "AES-128",
                uri: b.attributes.URI
              }, typeof b.attributes.IV < "u" && (u.iv = b.attributes.IV);
            },
            "media-sequence": function() {
              if (!isFinite(b.number)) {
                this.trigger("warn", {
                  message: "ignoring invalid media sequence: " + b.number
                });
                return;
              }
              this.manifest.mediaSequence = b.number;
            },
            "discontinuity-sequence": function() {
              if (!isFinite(b.number)) {
                this.trigger("warn", {
                  message: "ignoring invalid discontinuity sequence: " + b.number
                });
                return;
              }
              this.manifest.discontinuitySequence = b.number, m = b.number;
            },
            "playlist-type": function() {
              if (!/VOD|EVENT/.test(b.playlistType)) {
                this.trigger("warn", {
                  message: "ignoring unknown playlist type: " + b.playlist
                });
                return;
              }
              this.manifest.playlistType = b.playlistType;
            },
            map: function() {
              o = {}, b.uri && (o.uri = b.uri), b.byterange && (o.byterange = b.byterange), u && (o.key = u);
            },
            "stream-inf": function() {
              if (this.manifest.playlists = s, this.manifest.mediaGroups = this.manifest.mediaGroups || p, !b.attributes) {
                this.trigger("warn", {
                  message: "ignoring empty stream-inf attributes"
                });
                return;
              }
              a.attributes || (a.attributes = {}), Mi(a.attributes, b.attributes);
            },
            media: function() {
              if (this.manifest.mediaGroups = this.manifest.mediaGroups || p, !(b.attributes && b.attributes.TYPE && b.attributes["GROUP-ID"] && b.attributes.NAME)) {
                this.trigger("warn", {
                  message: "ignoring incomplete or missing media group"
                });
                return;
              }
              var M = this.manifest.mediaGroups[b.attributes.TYPE];
              M[b.attributes["GROUP-ID"]] = M[b.attributes["GROUP-ID"]] || {}, I = M[b.attributes["GROUP-ID"]], B = {
                default: /yes/i.test(b.attributes.DEFAULT)
              }, B.default ? B.autoselect = !0 : B.autoselect = /yes/i.test(b.attributes.AUTOSELECT), b.attributes.LANGUAGE && (B.language = b.attributes.LANGUAGE), b.attributes.URI && (B.uri = b.attributes.URI), b.attributes["INSTREAM-ID"] && (B.instreamId = b.attributes["INSTREAM-ID"]), b.attributes.CHARACTERISTICS && (B.characteristics = b.attributes.CHARACTERISTICS), b.attributes.FORCED && (B.forced = /yes/i.test(b.attributes.FORCED)), I[b.attributes.NAME] = B;
            },
            discontinuity: function() {
              m += 1, a.discontinuity = !0, this.manifest.discontinuityStarts.push(s.length);
            },
            "program-date-time": function() {
              typeof this.manifest.dateTimeString > "u" && (this.manifest.dateTimeString = b.dateTimeString, this.manifest.dateTimeObject = b.dateTimeObject), a.dateTimeString = b.dateTimeString, a.dateTimeObject = b.dateTimeObject;
            },
            targetduration: function() {
              if (!isFinite(b.duration) || b.duration < 0) {
                this.trigger("warn", {
                  message: "ignoring invalid target duration: " + b.duration
                });
                return;
              }
              this.manifest.targetDuration = b.duration, Ku.call(this, this.manifest);
            },
            start: function() {
              if (!b.attributes || isNaN(b.attributes["TIME-OFFSET"])) {
                this.trigger("warn", {
                  message: "ignoring start declaration without appropriate attribute list"
                });
                return;
              }
              this.manifest.start = {
                timeOffset: b.attributes["TIME-OFFSET"],
                precise: b.attributes.PRECISE
              };
            },
            "cue-out": function() {
              a.cueOut = b.data;
            },
            "cue-out-cont": function() {
              a.cueOutCont = b.data;
            },
            "cue-in": function() {
              a.cueIn = b.data;
            },
            skip: function() {
              this.manifest.skip = Mr(b.attributes), this.warnOnMissingAttributes_("#EXT-X-SKIP", b.attributes, ["SKIPPED-SEGMENTS"]);
            },
            part: function() {
              var M = this;
              l = !0;
              var A = this.manifest.segments.length, x = Mr(b.attributes);
              a.parts = a.parts || [], a.parts.push(x), x.byterange && (x.byterange.hasOwnProperty("offset") || (x.byterange.offset = T), T = x.byterange.offset + x.byterange.length);
              var P = a.parts.length - 1;
              this.warnOnMissingAttributes_("#EXT-X-PART #" + P + " for segment #" + A, b.attributes, ["URI", "DURATION"]), this.manifest.renditionReports && this.manifest.renditionReports.forEach(function(j, H) {
                j.hasOwnProperty("lastPart") || M.trigger("warn", {
                  message: "#EXT-X-RENDITION-REPORT #" + H + " lacks required attribute(s): LAST-PART"
                });
              });
            },
            "server-control": function() {
              var M = this.manifest.serverControl = Mr(b.attributes);
              M.hasOwnProperty("canBlockReload") || (M.canBlockReload = !1, this.trigger("info", {
                message: "#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false"
              })), Ku.call(this, this.manifest), M.canSkipDateranges && !M.hasOwnProperty("canSkipUntil") && this.trigger("warn", {
                message: "#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set"
              });
            },
            "preload-hint": function() {
              var M = this.manifest.segments.length, A = Mr(b.attributes), x = A.type && A.type === "PART";
              a.preloadHints = a.preloadHints || [], a.preloadHints.push(A), A.byterange && (A.byterange.hasOwnProperty("offset") || (A.byterange.offset = x ? T : 0, x && (T = A.byterange.offset + A.byterange.length)));
              var P = a.preloadHints.length - 1;
              if (this.warnOnMissingAttributes_("#EXT-X-PRELOAD-HINT #" + P + " for segment #" + M, b.attributes, ["TYPE", "URI"]), !!A.type)
                for (var j = 0; j < a.preloadHints.length - 1; j++) {
                  var H = a.preloadHints[j];
                  !H.type || H.type === A.type && this.trigger("warn", {
                    message: "#EXT-X-PRELOAD-HINT #" + P + " for segment #" + M + " has the same TYPE " + A.type + " as preload hint #" + j
                  });
                }
            },
            "rendition-report": function() {
              var M = Mr(b.attributes);
              this.manifest.renditionReports = this.manifest.renditionReports || [], this.manifest.renditionReports.push(M);
              var A = this.manifest.renditionReports.length - 1, x = ["LAST-MSN", "URI"];
              l && x.push("LAST-PART"), this.warnOnMissingAttributes_("#EXT-X-RENDITION-REPORT #" + A, b.attributes, x);
            },
            "part-inf": function() {
              this.manifest.partInf = Mr(b.attributes), this.warnOnMissingAttributes_("#EXT-X-PART-INF", b.attributes, ["PART-TARGET"]), this.manifest.partInf.partTarget && (this.manifest.partTargetDuration = this.manifest.partInf.partTarget), Ku.call(this, this.manifest);
            }
          }[b.tagType] || d).call(r);
        },
        uri: function() {
          a.uri = b.uri, s.push(a), this.manifest.targetDuration && !("duration" in a) && (this.trigger("warn", {
            message: "defaulting segment duration to the target duration"
          }), a.duration = this.manifest.targetDuration), u && (a.key = u), a.timeline = m, o && (a.map = o), T = 0, a = {};
        },
        comment: function() {
        },
        custom: function() {
          b.segment ? (a.custom = a.custom || {}, a.custom[b.customType] = b.data) : (this.manifest.custom = this.manifest.custom || {}, this.manifest.custom[b.customType] = b.data);
        }
      })[b.type].call(r);
    }), t;
  }
  var n = i.prototype;
  return n.warnOnMissingAttributes_ = function(t, r, s) {
    var a = [];
    s.forEach(function(o) {
      r.hasOwnProperty(o) || a.push(o);
    }), a.length && this.trigger("warn", {
      message: t + " lacks required attribute(s): " + a.join(", ")
    });
  }, n.push = function(t) {
    this.lineStream.push(t);
  }, n.end = function() {
    this.lineStream.push(`
`), this.trigger("end");
  }, n.addParser = function(t) {
    this.parseStream.addParser(t);
  }, n.addTagMapper = function(t) {
    this.parseStream.addTagMapper(t);
  }, i;
}(zc), hr = {
  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,
  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,
  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,
  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,
  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,
  text: /^(stpp.ttml.im1t)/,
  muxerVideo: /^(avc0?1)/,
  muxerAudio: /^(mp4a)/,
  muxerText: /a^/
}, wb = ["video", "audio", "text"], xh = ["Video", "Audio", "Text"], Sm = function(e) {
  return e && e.replace(/avc1\.(\d+)\.(\d+)/i, function(i, n, t) {
    var r = ("00" + Number(n).toString(16)).slice(-2), s = ("00" + Number(t).toString(16)).slice(-2);
    return "avc1." + r + "00" + s;
  });
}, en = function(e) {
  e === void 0 && (e = "");
  var i = e.split(","), n = [];
  return i.forEach(function(t) {
    t = t.trim();
    var r;
    wb.forEach(function(s) {
      var a = hr[s].exec(t.toLowerCase());
      if (!(!a || a.length <= 1)) {
        r = s;
        var o = t.substring(0, a[1].length), u = t.replace(o, "");
        n.push({
          type: o,
          details: u,
          mediaType: s
        });
      }
    }), r || n.push({
      type: t,
      details: "",
      mediaType: "unknown"
    });
  }), n;
}, kb = function(e, i) {
  if (!e.mediaGroups.AUDIO || !i)
    return null;
  var n = e.mediaGroups.AUDIO[i];
  if (!n)
    return null;
  for (var t in n) {
    var r = n[t];
    if (r.default && r.playlists)
      return en(r.playlists[0].attributes.CODECS);
  }
  return null;
}, wm = function(e) {
  return e === void 0 && (e = ""), hr.audio.test(e.trim().toLowerCase());
}, Cb = function(e) {
  return e === void 0 && (e = ""), hr.text.test(e.trim().toLowerCase());
}, sa = function(e) {
  if (!(!e || typeof e != "string")) {
    var i = e.toLowerCase().split(",").map(function(r) {
      return Sm(r.trim());
    }), n = "video";
    i.length === 1 && wm(i[0]) ? n = "audio" : i.length === 1 && Cb(i[0]) && (n = "application");
    var t = "mp4";
    return i.every(function(r) {
      return hr.mp4.test(r);
    }) ? t = "mp4" : i.every(function(r) {
      return hr.webm.test(r);
    }) ? t = "webm" : i.every(function(r) {
      return hr.ogg.test(r);
    }) && (t = "ogg"), n + "/" + t + ';codecs="' + e + '"';
  }
}, ho = function(e) {
  return e === void 0 && (e = ""), q.MediaSource && q.MediaSource.isTypeSupported && q.MediaSource.isTypeSupported(sa(e)) || !1;
}, zu = function(e) {
  return e === void 0 && (e = ""), e.toLowerCase().split(",").every(function(i) {
    i = i.trim();
    for (var n = 0; n < xh.length; n++) {
      var t = xh[n];
      if (hr["muxer" + t].test(i))
        return !0;
    }
    return !1;
  });
}, Ph = "mp4a.40.2", Ab = "avc1.4d400d", Ib = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i, Db = /^application\/dash\+xml/i, km = function(e) {
  return Ib.test(e) ? "hls" : Db.test(e) ? "dash" : e === "application/vnd.videojs.vhs+json" ? "vhs-json" : null;
}, xb = function(e) {
  return e.toString(2).length;
}, Pb = function(e) {
  return Math.ceil(xb(e) / 8);
}, Cm = function(e) {
  return ArrayBuffer.isView === "function" ? ArrayBuffer.isView(e) : e && e.buffer instanceof ArrayBuffer;
}, Lb = function(e) {
  return Cm(e);
}, Re = function(e) {
  return e instanceof Uint8Array ? e : (!Array.isArray(e) && !Lb(e) && !(e instanceof ArrayBuffer) && (typeof e != "number" || typeof e == "number" && e !== e ? e = 0 : e = [e]), new Uint8Array(e && e.buffer || e, e && e.byteOffset || 0, e && e.byteLength || 0));
}, $t = q.BigInt || Number, oc = [$t("0x1"), $t("0x100"), $t("0x10000"), $t("0x1000000"), $t("0x100000000"), $t("0x10000000000"), $t("0x1000000000000"), $t("0x100000000000000"), $t("0x10000000000000000")];
(function() {
  var e = new Uint16Array([65484]), i = new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
  return i[0] === 255 ? "big" : i[0] === 204 ? "little" : "unknown";
})();
var Ob = function(e, i) {
  var n = i === void 0 ? {} : i, t = n.signed, r = t === void 0 ? !1 : t, s = n.le, a = s === void 0 ? !1 : s;
  e = Re(e);
  var o = a ? "reduce" : "reduceRight", u = e[o] ? e[o] : Array.prototype[o], l = u.call(e, function(p, h, m) {
    var y = a ? m : Math.abs(m + 1 - e.length);
    return p + $t(h) * oc[y];
  }, $t(0));
  if (r) {
    var d = oc[e.length] / $t(2) - $t(1);
    l = $t(l), l > d && (l -= d, l -= d, l -= $t(2));
  }
  return Number(l);
}, Nb = function(e, i) {
  var n = i === void 0 ? {} : i, t = n.le, r = t === void 0 ? !1 : t;
  (typeof e != "bigint" && typeof e != "number" || typeof e == "number" && e !== e) && (e = 0), e = $t(e);
  for (var s = Pb(e), a = new Uint8Array(new ArrayBuffer(s)), o = 0; o < s; o++) {
    var u = r ? o : Math.abs(o + 1 - a.length);
    a[u] = Number(e / oc[o] & $t(255)), e < 0 && (a[u] = Math.abs(~a[u]), a[u] -= o === 0 ? 1 : 2);
  }
  return a;
}, Am = function(e, i) {
  if (typeof e != "string" && e && typeof e.toString == "function" && (e = e.toString()), typeof e != "string")
    return new Uint8Array();
  i || (e = unescape(encodeURIComponent(e)));
  for (var n = new Uint8Array(e.length), t = 0; t < e.length; t++)
    n[t] = e.charCodeAt(t);
  return n;
}, Rb = function() {
  for (var e = arguments.length, i = new Array(e), n = 0; n < e; n++)
    i[n] = arguments[n];
  if (i = i.filter(function(a) {
    return a && (a.byteLength || a.length) && typeof a != "string";
  }), i.length <= 1)
    return Re(i[0]);
  var t = i.reduce(function(a, o, u) {
    return a + (o.byteLength || o.length);
  }, 0), r = new Uint8Array(t), s = 0;
  return i.forEach(function(a) {
    a = Re(a), r.set(a, s), s += a.byteLength;
  }), r;
}, Ct = function(e, i, n) {
  var t = n === void 0 ? {} : n, r = t.offset, s = r === void 0 ? 0 : r, a = t.mask, o = a === void 0 ? [] : a;
  e = Re(e), i = Re(i);
  var u = i.every ? i.every : Array.prototype.every;
  return i.length && e.length - s >= i.length && u.call(i, function(l, d) {
    var p = o[d] ? o[d] & e[s + d] : e[s + d];
    return l === p;
  });
}, Mb = function(e, i, n) {
  i.forEach(function(t) {
    for (var r in e.mediaGroups[t])
      for (var s in e.mediaGroups[t][r]) {
        var a = e.mediaGroups[t][r][s];
        n(a, t, r, s);
      }
  });
}, qn = {}, An = {};
function Bb(e, i, n) {
  if (n === void 0 && (n = Array.prototype), e && typeof n.find == "function")
    return n.find.call(e, i);
  for (var t = 0; t < e.length; t++)
    if (Object.prototype.hasOwnProperty.call(e, t)) {
      var r = e[t];
      if (i.call(void 0, r, t, e))
        return r;
    }
}
function Xc(e, i) {
  return i === void 0 && (i = Object), i && typeof i.freeze == "function" ? i.freeze(e) : e;
}
function Ub(e, i) {
  if (e === null || typeof e != "object")
    throw new TypeError("target is not an object");
  for (var n in i)
    Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);
  return e;
}
var Im = Xc({
  HTML: "text/html",
  isHTML: function(e) {
    return e === Im.HTML;
  },
  XML_APPLICATION: "application/xml",
  XML_TEXT: "text/xml",
  XML_XHTML_APPLICATION: "application/xhtml+xml",
  XML_SVG_IMAGE: "image/svg+xml"
}), Dm = Xc({
  HTML: "http://www.w3.org/1999/xhtml",
  isHTML: function(e) {
    return e === Dm.HTML;
  },
  SVG: "http://www.w3.org/2000/svg",
  XML: "http://www.w3.org/XML/1998/namespace",
  XMLNS: "http://www.w3.org/2000/xmlns/"
});
An.assign = Ub;
An.find = Bb;
An.freeze = Xc;
An.MIME_TYPE = Im;
An.NAMESPACE = Dm;
var xm = An, on = xm.find, aa = xm.NAMESPACE;
function Fb(e) {
  return e !== "";
}
function jb(e) {
  return e ? e.split(/[\t\n\f\r ]+/).filter(Fb) : [];
}
function qb(e, i) {
  return e.hasOwnProperty(i) || (e[i] = !0), e;
}
function Lh(e) {
  if (!e)
    return [];
  var i = jb(e);
  return Object.keys(i.reduce(qb, {}));
}
function Vb(e) {
  return function(i) {
    return e && e.indexOf(i) !== -1;
  };
}
function ga(e, i) {
  for (var n in e)
    Object.prototype.hasOwnProperty.call(e, n) && (i[n] = e[n]);
}
function Ti(e, i) {
  var n = e.prototype;
  if (!(n instanceof i)) {
    let t = function() {
    };
    t.prototype = i.prototype, t = new t(), ga(n, t), e.prototype = n = t;
  }
  n.constructor != e && (typeof e != "function" && console.error("unknown Class:" + e), n.constructor = e);
}
var Ei = {}, Wi = Ei.ELEMENT_NODE = 1, rs = Ei.ATTRIBUTE_NODE = 2, So = Ei.TEXT_NODE = 3, Pm = Ei.CDATA_SECTION_NODE = 4, Lm = Ei.ENTITY_REFERENCE_NODE = 5, Hb = Ei.ENTITY_NODE = 6, Om = Ei.PROCESSING_INSTRUCTION_NODE = 7, Nm = Ei.COMMENT_NODE = 8, Rm = Ei.DOCUMENT_NODE = 9, Mm = Ei.DOCUMENT_TYPE_NODE = 10, Sn = Ei.DOCUMENT_FRAGMENT_NODE = 11, Wb = Ei.NOTATION_NODE = 12, ai = {}, Qt = {};
ai.INDEX_SIZE_ERR = (Qt[1] = "Index size error", 1);
ai.DOMSTRING_SIZE_ERR = (Qt[2] = "DOMString size error", 2);
var _i = ai.HIERARCHY_REQUEST_ERR = (Qt[3] = "Hierarchy request error", 3);
ai.WRONG_DOCUMENT_ERR = (Qt[4] = "Wrong document", 4);
ai.INVALID_CHARACTER_ERR = (Qt[5] = "Invalid character", 5);
ai.NO_DATA_ALLOWED_ERR = (Qt[6] = "No data allowed", 6);
ai.NO_MODIFICATION_ALLOWED_ERR = (Qt[7] = "No modification allowed", 7);
var Bm = ai.NOT_FOUND_ERR = (Qt[8] = "Not found", 8);
ai.NOT_SUPPORTED_ERR = (Qt[9] = "Not supported", 9);
var Oh = ai.INUSE_ATTRIBUTE_ERR = (Qt[10] = "Attribute in use", 10);
ai.INVALID_STATE_ERR = (Qt[11] = "Invalid state", 11);
ai.SYNTAX_ERR = (Qt[12] = "Syntax error", 12);
ai.INVALID_MODIFICATION_ERR = (Qt[13] = "Invalid modification", 13);
ai.NAMESPACE_ERR = (Qt[14] = "Invalid namespace", 14);
ai.INVALID_ACCESS_ERR = (Qt[15] = "Invalid access", 15);
function Rt(e, i) {
  if (i instanceof Error)
    var n = i;
  else
    n = this, Error.call(this, Qt[e]), this.message = Qt[e], Error.captureStackTrace && Error.captureStackTrace(this, Rt);
  return n.code = e, i && (this.message = this.message + ": " + i), n;
}
Rt.prototype = Error.prototype;
ga(ai, Rt);
function _n() {
}
_n.prototype = {
  length: 0,
  item: function(e) {
    return this[e] || null;
  },
  toString: function(e, i) {
    for (var n = [], t = 0; t < this.length; t++)
      zr(this[t], n, e, i);
    return n.join("");
  },
  filter: function(e) {
    return Array.prototype.filter.call(this, e);
  },
  indexOf: function(e) {
    return Array.prototype.indexOf.call(this, e);
  }
};
function ss(e, i) {
  this._node = e, this._refresh = i, Qc(this);
}
function Qc(e) {
  var i = e._node._inc || e._node.ownerDocument._inc;
  if (e._inc != i) {
    var n = e._refresh(e._node);
    Qm(e, "length", n.length), ga(n, e), e._inc = i;
  }
}
ss.prototype.item = function(e) {
  return Qc(this), this[e];
};
Ti(ss, _n);
function wo() {
}
function Um(e, i) {
  for (var n = e.length; n--; )
    if (e[n] === i)
      return n;
}
function Nh(e, i, n, t) {
  if (t ? i[Um(i, t)] = n : i[i.length++] = n, e) {
    n.ownerElement = e;
    var r = e.ownerDocument;
    r && (t && qm(r, e, t), Gb(r, e, n));
  }
}
function Rh(e, i, n) {
  var t = Um(i, n);
  if (t >= 0) {
    for (var r = i.length - 1; t < r; )
      i[t] = i[++t];
    if (i.length = r, e) {
      var s = e.ownerDocument;
      s && (qm(s, e, n), n.ownerElement = null);
    }
  } else
    throw new Rt(Bm, new Error(e.tagName + "@" + n));
}
wo.prototype = {
  length: 0,
  item: _n.prototype.item,
  getNamedItem: function(e) {
    for (var i = this.length; i--; ) {
      var n = this[i];
      if (n.nodeName == e)
        return n;
    }
  },
  setNamedItem: function(e) {
    var i = e.ownerElement;
    if (i && i != this._ownerElement)
      throw new Rt(Oh);
    var n = this.getNamedItem(e.nodeName);
    return Nh(this._ownerElement, this, e, n), n;
  },
  setNamedItemNS: function(e) {
    var i = e.ownerElement, n;
    if (i && i != this._ownerElement)
      throw new Rt(Oh);
    return n = this.getNamedItemNS(e.namespaceURI, e.localName), Nh(this._ownerElement, this, e, n), n;
  },
  removeNamedItem: function(e) {
    var i = this.getNamedItem(e);
    return Rh(this._ownerElement, this, i), i;
  },
  removeNamedItemNS: function(e, i) {
    var n = this.getNamedItemNS(e, i);
    return Rh(this._ownerElement, this, n), n;
  },
  getNamedItemNS: function(e, i) {
    for (var n = this.length; n--; ) {
      var t = this[n];
      if (t.localName == i && t.namespaceURI == e)
        return t;
    }
    return null;
  }
};
function Fm() {
}
Fm.prototype = {
  hasFeature: function(e, i) {
    return !0;
  },
  createDocument: function(e, i, n) {
    var t = new va();
    if (t.implementation = this, t.childNodes = new _n(), t.doctype = n || null, n && t.appendChild(n), i) {
      var r = t.createElementNS(e, i);
      t.appendChild(r);
    }
    return t;
  },
  createDocumentType: function(e, i, n) {
    var t = new $o();
    return t.name = e, t.nodeName = e, t.publicId = i || "", t.systemId = n || "", t;
  }
};
function dt() {
}
dt.prototype = {
  firstChild: null,
  lastChild: null,
  previousSibling: null,
  nextSibling: null,
  attributes: null,
  parentNode: null,
  childNodes: null,
  ownerDocument: null,
  nodeValue: null,
  namespaceURI: null,
  prefix: null,
  localName: null,
  insertBefore: function(e, i) {
    return ko(this, e, i);
  },
  replaceChild: function(e, i) {
    ko(this, e, i, Hm), i && this.removeChild(i);
  },
  removeChild: function(e) {
    return Vm(this, e);
  },
  appendChild: function(e) {
    return this.insertBefore(e, null);
  },
  hasChildNodes: function() {
    return this.firstChild != null;
  },
  cloneNode: function(e) {
    return uc(this.ownerDocument || this, this, e);
  },
  normalize: function() {
    for (var e = this.firstChild; e; ) {
      var i = e.nextSibling;
      i && i.nodeType == So && e.nodeType == So ? (this.removeChild(i), e.appendData(i.data)) : (e.normalize(), e = i);
    }
  },
  isSupported: function(e, i) {
    return this.ownerDocument.implementation.hasFeature(e, i);
  },
  hasAttributes: function() {
    return this.attributes.length > 0;
  },
  lookupPrefix: function(e) {
    for (var i = this; i; ) {
      var n = i._nsMap;
      if (n) {
        for (var t in n)
          if (Object.prototype.hasOwnProperty.call(n, t) && n[t] === e)
            return t;
      }
      i = i.nodeType == rs ? i.ownerDocument : i.parentNode;
    }
    return null;
  },
  lookupNamespaceURI: function(e) {
    for (var i = this; i; ) {
      var n = i._nsMap;
      if (n && Object.prototype.hasOwnProperty.call(n, e))
        return n[e];
      i = i.nodeType == rs ? i.ownerDocument : i.parentNode;
    }
    return null;
  },
  isDefaultNamespace: function(e) {
    var i = this.lookupPrefix(e);
    return i == null;
  }
};
function jm(e) {
  return e == "<" && "&lt;" || e == ">" && "&gt;" || e == "&" && "&amp;" || e == '"' && "&quot;" || "&#" + e.charCodeAt() + ";";
}
ga(Ei, dt);
ga(Ei, dt.prototype);
function oa(e, i) {
  if (i(e))
    return !0;
  if (e = e.firstChild)
    do
      if (oa(e, i))
        return !0;
    while (e = e.nextSibling);
}
function va() {
  this.ownerDocument = this;
}
function Gb(e, i, n) {
  e && e._inc++;
  var t = n.namespaceURI;
  t === aa.XMLNS && (i._nsMap[n.prefix ? n.localName : ""] = n.value);
}
function qm(e, i, n, t) {
  e && e._inc++;
  var r = n.namespaceURI;
  r === aa.XMLNS && delete i._nsMap[n.prefix ? n.localName : ""];
}
function Jc(e, i, n) {
  if (e && e._inc) {
    e._inc++;
    var t = i.childNodes;
    if (n)
      t[t.length++] = n;
    else {
      for (var r = i.firstChild, s = 0; r; )
        t[s++] = r, r = r.nextSibling;
      t.length = s, delete t[t.length];
    }
  }
}
function Vm(e, i) {
  var n = i.previousSibling, t = i.nextSibling;
  return n ? n.nextSibling = t : e.firstChild = t, t ? t.previousSibling = n : e.lastChild = n, i.parentNode = null, i.previousSibling = null, i.nextSibling = null, Jc(e.ownerDocument, e), i;
}
function Kb(e) {
  return e && (e.nodeType === dt.DOCUMENT_NODE || e.nodeType === dt.DOCUMENT_FRAGMENT_NODE || e.nodeType === dt.ELEMENT_NODE);
}
function zb(e) {
  return e && (un(e) || Yc(e) || wn(e) || e.nodeType === dt.DOCUMENT_FRAGMENT_NODE || e.nodeType === dt.COMMENT_NODE || e.nodeType === dt.PROCESSING_INSTRUCTION_NODE);
}
function wn(e) {
  return e && e.nodeType === dt.DOCUMENT_TYPE_NODE;
}
function un(e) {
  return e && e.nodeType === dt.ELEMENT_NODE;
}
function Yc(e) {
  return e && e.nodeType === dt.TEXT_NODE;
}
function Mh(e, i) {
  var n = e.childNodes || [];
  if (on(n, un) || wn(i))
    return !1;
  var t = on(n, wn);
  return !(i && t && n.indexOf(t) > n.indexOf(i));
}
function Bh(e, i) {
  var n = e.childNodes || [];
  function t(s) {
    return un(s) && s !== i;
  }
  if (on(n, t))
    return !1;
  var r = on(n, wn);
  return !(i && r && n.indexOf(r) > n.indexOf(i));
}
function Xb(e, i, n) {
  if (!Kb(e))
    throw new Rt(_i, "Unexpected parent node type " + e.nodeType);
  if (n && n.parentNode !== e)
    throw new Rt(Bm, "child not in parent");
  if (!zb(i) || wn(i) && e.nodeType !== dt.DOCUMENT_NODE)
    throw new Rt(
      _i,
      "Unexpected node type " + i.nodeType + " for parent node type " + e.nodeType
    );
}
function Qb(e, i, n) {
  var t = e.childNodes || [], r = i.childNodes || [];
  if (i.nodeType === dt.DOCUMENT_FRAGMENT_NODE) {
    var s = r.filter(un);
    if (s.length > 1 || on(r, Yc))
      throw new Rt(_i, "More than one element or text in fragment");
    if (s.length === 1 && !Mh(e, n))
      throw new Rt(_i, "Element in fragment can not be inserted before doctype");
  }
  if (un(i) && !Mh(e, n))
    throw new Rt(_i, "Only one element can be added and only after doctype");
  if (wn(i)) {
    if (on(t, wn))
      throw new Rt(_i, "Only one doctype is allowed");
    var a = on(t, un);
    if (n && t.indexOf(a) < t.indexOf(n))
      throw new Rt(_i, "Doctype can only be inserted before an element");
    if (!n && a)
      throw new Rt(_i, "Doctype can not be appended since element is present");
  }
}
function Hm(e, i, n) {
  var t = e.childNodes || [], r = i.childNodes || [];
  if (i.nodeType === dt.DOCUMENT_FRAGMENT_NODE) {
    var s = r.filter(un);
    if (s.length > 1 || on(r, Yc))
      throw new Rt(_i, "More than one element or text in fragment");
    if (s.length === 1 && !Bh(e, n))
      throw new Rt(_i, "Element in fragment can not be inserted before doctype");
  }
  if (un(i) && !Bh(e, n))
    throw new Rt(_i, "Only one element can be added and only after doctype");
  if (wn(i)) {
    if (on(t, function(o) {
      return wn(o) && o !== n;
    }))
      throw new Rt(_i, "Only one doctype is allowed");
    var a = on(t, un);
    if (n && t.indexOf(a) < t.indexOf(n))
      throw new Rt(_i, "Doctype can only be inserted before an element");
  }
}
function ko(e, i, n, t) {
  Xb(e, i, n), e.nodeType === dt.DOCUMENT_NODE && (t || Qb)(e, i, n);
  var r = i.parentNode;
  if (r && r.removeChild(i), i.nodeType === Sn) {
    var s = i.firstChild;
    if (s == null)
      return i;
    var a = i.lastChild;
  } else
    s = a = i;
  var o = n ? n.previousSibling : e.lastChild;
  s.previousSibling = o, a.nextSibling = n, o ? o.nextSibling = s : e.firstChild = s, n == null ? e.lastChild = a : n.previousSibling = a;
  do
    s.parentNode = e;
  while (s !== a && (s = s.nextSibling));
  return Jc(e.ownerDocument || e, e), i.nodeType == Sn && (i.firstChild = i.lastChild = null), i;
}
function Jb(e, i) {
  return i.parentNode && i.parentNode.removeChild(i), i.parentNode = e, i.previousSibling = e.lastChild, i.nextSibling = null, i.previousSibling ? i.previousSibling.nextSibling = i : e.firstChild = i, e.lastChild = i, Jc(e.ownerDocument, e, i), i;
}
va.prototype = {
  nodeName: "#document",
  nodeType: Rm,
  doctype: null,
  documentElement: null,
  _inc: 1,
  insertBefore: function(e, i) {
    if (e.nodeType == Sn) {
      for (var n = e.firstChild; n; ) {
        var t = n.nextSibling;
        this.insertBefore(n, i), n = t;
      }
      return e;
    }
    return ko(this, e, i), e.ownerDocument = this, this.documentElement === null && e.nodeType === Wi && (this.documentElement = e), e;
  },
  removeChild: function(e) {
    return this.documentElement == e && (this.documentElement = null), Vm(this, e);
  },
  replaceChild: function(e, i) {
    ko(this, e, i, Hm), e.ownerDocument = this, i && this.removeChild(i), un(e) && (this.documentElement = e);
  },
  importNode: function(e, i) {
    return Xm(this, e, i);
  },
  getElementById: function(e) {
    var i = null;
    return oa(this.documentElement, function(n) {
      if (n.nodeType == Wi && n.getAttribute("id") == e)
        return i = n, !0;
    }), i;
  },
  getElementsByClassName: function(e) {
    var i = Lh(e);
    return new ss(this, function(n) {
      var t = [];
      return i.length > 0 && oa(n.documentElement, function(r) {
        if (r !== n && r.nodeType === Wi) {
          var s = r.getAttribute("class");
          if (s) {
            var a = e === s;
            if (!a) {
              var o = Lh(s);
              a = i.every(Vb(o));
            }
            a && t.push(r);
          }
        }
      }), t;
    });
  },
  createElement: function(e) {
    var i = new gr();
    i.ownerDocument = this, i.nodeName = e, i.tagName = e, i.localName = e, i.childNodes = new _n();
    var n = i.attributes = new wo();
    return n._ownerElement = i, i;
  },
  createDocumentFragment: function() {
    var e = new Zo();
    return e.ownerDocument = this, e.childNodes = new _n(), e;
  },
  createTextNode: function(e) {
    var i = new $c();
    return i.ownerDocument = this, i.appendData(e), i;
  },
  createComment: function(e) {
    var i = new Zc();
    return i.ownerDocument = this, i.appendData(e), i;
  },
  createCDATASection: function(e) {
    var i = new ed();
    return i.ownerDocument = this, i.appendData(e), i;
  },
  createProcessingInstruction: function(e, i) {
    var n = new id();
    return n.ownerDocument = this, n.tagName = n.target = e, n.nodeValue = n.data = i, n;
  },
  createAttribute: function(e) {
    var i = new Co();
    return i.ownerDocument = this, i.name = e, i.nodeName = e, i.localName = e, i.specified = !0, i;
  },
  createEntityReference: function(e) {
    var i = new td();
    return i.ownerDocument = this, i.nodeName = e, i;
  },
  createElementNS: function(e, i) {
    var n = new gr(), t = i.split(":"), r = n.attributes = new wo();
    return n.childNodes = new _n(), n.ownerDocument = this, n.nodeName = i, n.tagName = i, n.namespaceURI = e, t.length == 2 ? (n.prefix = t[0], n.localName = t[1]) : n.localName = i, r._ownerElement = n, n;
  },
  createAttributeNS: function(e, i) {
    var n = new Co(), t = i.split(":");
    return n.ownerDocument = this, n.nodeName = i, n.name = i, n.namespaceURI = e, n.specified = !0, t.length == 2 ? (n.prefix = t[0], n.localName = t[1]) : n.localName = i, n;
  }
};
Ti(va, dt);
function gr() {
  this._nsMap = {};
}
gr.prototype = {
  nodeType: Wi,
  hasAttribute: function(e) {
    return this.getAttributeNode(e) != null;
  },
  getAttribute: function(e) {
    var i = this.getAttributeNode(e);
    return i && i.value || "";
  },
  getAttributeNode: function(e) {
    return this.attributes.getNamedItem(e);
  },
  setAttribute: function(e, i) {
    var n = this.ownerDocument.createAttribute(e);
    n.value = n.nodeValue = "" + i, this.setAttributeNode(n);
  },
  removeAttribute: function(e) {
    var i = this.getAttributeNode(e);
    i && this.removeAttributeNode(i);
  },
  appendChild: function(e) {
    return e.nodeType === Sn ? this.insertBefore(e, null) : Jb(this, e);
  },
  setAttributeNode: function(e) {
    return this.attributes.setNamedItem(e);
  },
  setAttributeNodeNS: function(e) {
    return this.attributes.setNamedItemNS(e);
  },
  removeAttributeNode: function(e) {
    return this.attributes.removeNamedItem(e.nodeName);
  },
  removeAttributeNS: function(e, i) {
    var n = this.getAttributeNodeNS(e, i);
    n && this.removeAttributeNode(n);
  },
  hasAttributeNS: function(e, i) {
    return this.getAttributeNodeNS(e, i) != null;
  },
  getAttributeNS: function(e, i) {
    var n = this.getAttributeNodeNS(e, i);
    return n && n.value || "";
  },
  setAttributeNS: function(e, i, n) {
    var t = this.ownerDocument.createAttributeNS(e, i);
    t.value = t.nodeValue = "" + n, this.setAttributeNode(t);
  },
  getAttributeNodeNS: function(e, i) {
    return this.attributes.getNamedItemNS(e, i);
  },
  getElementsByTagName: function(e) {
    return new ss(this, function(i) {
      var n = [];
      return oa(i, function(t) {
        t !== i && t.nodeType == Wi && (e === "*" || t.tagName == e) && n.push(t);
      }), n;
    });
  },
  getElementsByTagNameNS: function(e, i) {
    return new ss(this, function(n) {
      var t = [];
      return oa(n, function(r) {
        r !== n && r.nodeType === Wi && (e === "*" || r.namespaceURI === e) && (i === "*" || r.localName == i) && t.push(r);
      }), t;
    });
  }
};
va.prototype.getElementsByTagName = gr.prototype.getElementsByTagName;
va.prototype.getElementsByTagNameNS = gr.prototype.getElementsByTagNameNS;
Ti(gr, dt);
function Co() {
}
Co.prototype.nodeType = rs;
Ti(Co, dt);
function ya() {
}
ya.prototype = {
  data: "",
  substringData: function(e, i) {
    return this.data.substring(e, e + i);
  },
  appendData: function(e) {
    e = this.data + e, this.nodeValue = this.data = e, this.length = e.length;
  },
  insertData: function(e, i) {
    this.replaceData(e, 0, i);
  },
  appendChild: function(e) {
    throw new Error(Qt[_i]);
  },
  deleteData: function(e, i) {
    this.replaceData(e, i, "");
  },
  replaceData: function(e, i, n) {
    var t = this.data.substring(0, e), r = this.data.substring(e + i);
    n = t + n + r, this.nodeValue = this.data = n, this.length = n.length;
  }
};
Ti(ya, dt);
function $c() {
}
$c.prototype = {
  nodeName: "#text",
  nodeType: So,
  splitText: function(e) {
    var i = this.data, n = i.substring(e);
    i = i.substring(0, e), this.data = this.nodeValue = i, this.length = i.length;
    var t = this.ownerDocument.createTextNode(n);
    return this.parentNode && this.parentNode.insertBefore(t, this.nextSibling), t;
  }
};
Ti($c, ya);
function Zc() {
}
Zc.prototype = {
  nodeName: "#comment",
  nodeType: Nm
};
Ti(Zc, ya);
function ed() {
}
ed.prototype = {
  nodeName: "#cdata-section",
  nodeType: Pm
};
Ti(ed, ya);
function $o() {
}
$o.prototype.nodeType = Mm;
Ti($o, dt);
function Wm() {
}
Wm.prototype.nodeType = Wb;
Ti(Wm, dt);
function Gm() {
}
Gm.prototype.nodeType = Hb;
Ti(Gm, dt);
function td() {
}
td.prototype.nodeType = Lm;
Ti(td, dt);
function Zo() {
}
Zo.prototype.nodeName = "#document-fragment";
Zo.prototype.nodeType = Sn;
Ti(Zo, dt);
function id() {
}
id.prototype.nodeType = Om;
Ti(id, dt);
function Km() {
}
Km.prototype.serializeToString = function(e, i, n) {
  return zm.call(e, i, n);
};
dt.prototype.toString = zm;
function zm(e, i) {
  var n = [], t = this.nodeType == 9 && this.documentElement || this, r = t.prefix, s = t.namespaceURI;
  if (s && r == null) {
    var r = t.lookupPrefix(s);
    if (r == null)
      var a = [
        { namespace: s, prefix: null }
      ];
  }
  return zr(this, n, e, i, a), n.join("");
}
function Uh(e, i, n) {
  var t = e.prefix || "", r = e.namespaceURI;
  if (!r || t === "xml" && r === aa.XML || r === aa.XMLNS)
    return !1;
  for (var s = n.length; s--; ) {
    var a = n[s];
    if (a.prefix === t)
      return a.namespace !== r;
  }
  return !0;
}
function Xu(e, i, n) {
  e.push(" ", i, '="', n.replace(/[<>&"\t\n\r]/g, jm), '"');
}
function zr(e, i, n, t, r) {
  if (r || (r = []), t)
    if (e = t(e), e) {
      if (typeof e == "string") {
        i.push(e);
        return;
      }
    } else
      return;
  switch (e.nodeType) {
    case Wi:
      var s = e.attributes, a = s.length, o = e.firstChild, u = e.tagName;
      n = aa.isHTML(e.namespaceURI) || n;
      var l = u;
      if (!n && !e.prefix && e.namespaceURI) {
        for (var d, p = 0; p < s.length; p++)
          if (s.item(p).name === "xmlns") {
            d = s.item(p).value;
            break;
          }
        if (!d)
          for (var h = r.length - 1; h >= 0; h--) {
            var m = r[h];
            if (m.prefix === "" && m.namespace === e.namespaceURI) {
              d = m.namespace;
              break;
            }
          }
        if (d !== e.namespaceURI)
          for (var h = r.length - 1; h >= 0; h--) {
            var m = r[h];
            if (m.namespace === e.namespaceURI) {
              m.prefix && (l = m.prefix + ":" + u);
              break;
            }
          }
      }
      i.push("<", l);
      for (var y = 0; y < a; y++) {
        var T = s.item(y);
        T.prefix == "xmlns" ? r.push({ prefix: T.localName, namespace: T.value }) : T.nodeName == "xmlns" && r.push({ prefix: "", namespace: T.value });
      }
      for (var y = 0; y < a; y++) {
        var T = s.item(y);
        if (Uh(T, n, r)) {
          var b = T.prefix || "", I = T.namespaceURI;
          Xu(i, b ? "xmlns:" + b : "xmlns", I), r.push({ prefix: b, namespace: I });
        }
        zr(T, i, n, t, r);
      }
      if (u === l && Uh(e, n, r)) {
        var b = e.prefix || "", I = e.namespaceURI;
        Xu(i, b ? "xmlns:" + b : "xmlns", I), r.push({ prefix: b, namespace: I });
      }
      if (o || n && !/^(?:meta|link|img|br|hr|input)$/i.test(u)) {
        if (i.push(">"), n && /^script$/i.test(u))
          for (; o; )
            o.data ? i.push(o.data) : zr(o, i, n, t, r.slice()), o = o.nextSibling;
        else
          for (; o; )
            zr(o, i, n, t, r.slice()), o = o.nextSibling;
        i.push("</", l, ">");
      } else
        i.push("/>");
      return;
    case Rm:
    case Sn:
      for (var o = e.firstChild; o; )
        zr(o, i, n, t, r.slice()), o = o.nextSibling;
      return;
    case rs:
      return Xu(i, e.name, e.value);
    case So:
      return i.push(
        e.data.replace(/[<&>]/g, jm)
      );
    case Pm:
      return i.push("<![CDATA[", e.data, "]]>");
    case Nm:
      return i.push("<!--", e.data, "-->");
    case Mm:
      var B = e.publicId, M = e.systemId;
      if (i.push("<!DOCTYPE ", e.name), B)
        i.push(" PUBLIC ", B), M && M != "." && i.push(" ", M), i.push(">");
      else if (M && M != ".")
        i.push(" SYSTEM ", M, ">");
      else {
        var A = e.internalSubset;
        A && i.push(" [", A, "]"), i.push(">");
      }
      return;
    case Om:
      return i.push("<?", e.target, " ", e.data, "?>");
    case Lm:
      return i.push("&", e.nodeName, ";");
    default:
      i.push("??", e.nodeName);
  }
}
function Xm(e, i, n) {
  var t;
  switch (i.nodeType) {
    case Wi:
      t = i.cloneNode(!1), t.ownerDocument = e;
    case Sn:
      break;
    case rs:
      n = !0;
      break;
  }
  if (t || (t = i.cloneNode(!1)), t.ownerDocument = e, t.parentNode = null, n)
    for (var r = i.firstChild; r; )
      t.appendChild(Xm(e, r, n)), r = r.nextSibling;
  return t;
}
function uc(e, i, n) {
  var t = new i.constructor();
  for (var r in i)
    if (Object.prototype.hasOwnProperty.call(i, r)) {
      var s = i[r];
      typeof s != "object" && s != t[r] && (t[r] = s);
    }
  switch (i.childNodes && (t.childNodes = new _n()), t.ownerDocument = e, t.nodeType) {
    case Wi:
      var a = i.attributes, o = t.attributes = new wo(), u = a.length;
      o._ownerElement = t;
      for (var l = 0; l < u; l++)
        t.setAttributeNode(uc(e, a.item(l), !0));
      break;
    case rs:
      n = !0;
  }
  if (n)
    for (var d = i.firstChild; d; )
      t.appendChild(uc(e, d, n)), d = d.nextSibling;
  return t;
}
function Qm(e, i, n) {
  e[i] = n;
}
try {
  if (Object.defineProperty) {
    let e = function(i) {
      switch (i.nodeType) {
        case Wi:
        case Sn:
          var n = [];
          for (i = i.firstChild; i; )
            i.nodeType !== 7 && i.nodeType !== 8 && n.push(e(i)), i = i.nextSibling;
          return n.join("");
        default:
          return i.nodeValue;
      }
    };
    Object.defineProperty(ss.prototype, "length", {
      get: function() {
        return Qc(this), this.$$length;
      }
    }), Object.defineProperty(dt.prototype, "textContent", {
      get: function() {
        return e(this);
      },
      set: function(i) {
        switch (this.nodeType) {
          case Wi:
          case Sn:
            for (; this.firstChild; )
              this.removeChild(this.firstChild);
            (i || String(i)) && this.appendChild(this.ownerDocument.createTextNode(i));
            break;
          default:
            this.data = i, this.value = i, this.nodeValue = i;
        }
      }
    }), Qm = function(i, n, t) {
      i["$$" + n] = t;
    };
  }
} catch {
}
qn.DocumentType = $o;
qn.DOMException = Rt;
qn.DOMImplementation = Fm;
qn.Element = gr;
qn.Node = dt;
qn.NodeList = _n;
qn.XMLSerializer = Km;
var eu = {}, Jm = {};
(function(e) {
  var i = An.freeze;
  e.XML_ENTITIES = i({ amp: "&", apos: "'", gt: ">", lt: "<", quot: '"' }), e.HTML_ENTITIES = i({
    lt: "<",
    gt: ">",
    amp: "&",
    quot: '"',
    apos: "'",
    Agrave: "À",
    Aacute: "Á",
    Acirc: "Â",
    Atilde: "Ã",
    Auml: "Ä",
    Aring: "Å",
    AElig: "Æ",
    Ccedil: "Ç",
    Egrave: "È",
    Eacute: "É",
    Ecirc: "Ê",
    Euml: "Ë",
    Igrave: "Ì",
    Iacute: "Í",
    Icirc: "Î",
    Iuml: "Ï",
    ETH: "Ð",
    Ntilde: "Ñ",
    Ograve: "Ò",
    Oacute: "Ó",
    Ocirc: "Ô",
    Otilde: "Õ",
    Ouml: "Ö",
    Oslash: "Ø",
    Ugrave: "Ù",
    Uacute: "Ú",
    Ucirc: "Û",
    Uuml: "Ü",
    Yacute: "Ý",
    THORN: "Þ",
    szlig: "ß",
    agrave: "à",
    aacute: "á",
    acirc: "â",
    atilde: "ã",
    auml: "ä",
    aring: "å",
    aelig: "æ",
    ccedil: "ç",
    egrave: "è",
    eacute: "é",
    ecirc: "ê",
    euml: "ë",
    igrave: "ì",
    iacute: "í",
    icirc: "î",
    iuml: "ï",
    eth: "ð",
    ntilde: "ñ",
    ograve: "ò",
    oacute: "ó",
    ocirc: "ô",
    otilde: "õ",
    ouml: "ö",
    oslash: "ø",
    ugrave: "ù",
    uacute: "ú",
    ucirc: "û",
    uuml: "ü",
    yacute: "ý",
    thorn: "þ",
    yuml: "ÿ",
    nbsp: " ",
    iexcl: "¡",
    cent: "¢",
    pound: "£",
    curren: "¤",
    yen: "¥",
    brvbar: "¦",
    sect: "§",
    uml: "¨",
    copy: "©",
    ordf: "ª",
    laquo: "«",
    not: "¬",
    shy: "­­",
    reg: "®",
    macr: "¯",
    deg: "°",
    plusmn: "±",
    sup2: "²",
    sup3: "³",
    acute: "´",
    micro: "µ",
    para: "¶",
    middot: "·",
    cedil: "¸",
    sup1: "¹",
    ordm: "º",
    raquo: "»",
    frac14: "¼",
    frac12: "½",
    frac34: "¾",
    iquest: "¿",
    times: "×",
    divide: "÷",
    forall: "∀",
    part: "∂",
    exist: "∃",
    empty: "∅",
    nabla: "∇",
    isin: "∈",
    notin: "∉",
    ni: "∋",
    prod: "∏",
    sum: "∑",
    minus: "−",
    lowast: "∗",
    radic: "√",
    prop: "∝",
    infin: "∞",
    ang: "∠",
    and: "∧",
    or: "∨",
    cap: "∩",
    cup: "∪",
    int: "∫",
    there4: "∴",
    sim: "∼",
    cong: "≅",
    asymp: "≈",
    ne: "≠",
    equiv: "≡",
    le: "≤",
    ge: "≥",
    sub: "⊂",
    sup: "⊃",
    nsub: "⊄",
    sube: "⊆",
    supe: "⊇",
    oplus: "⊕",
    otimes: "⊗",
    perp: "⊥",
    sdot: "⋅",
    Alpha: "Α",
    Beta: "Β",
    Gamma: "Γ",
    Delta: "Δ",
    Epsilon: "Ε",
    Zeta: "Ζ",
    Eta: "Η",
    Theta: "Θ",
    Iota: "Ι",
    Kappa: "Κ",
    Lambda: "Λ",
    Mu: "Μ",
    Nu: "Ν",
    Xi: "Ξ",
    Omicron: "Ο",
    Pi: "Π",
    Rho: "Ρ",
    Sigma: "Σ",
    Tau: "Τ",
    Upsilon: "Υ",
    Phi: "Φ",
    Chi: "Χ",
    Psi: "Ψ",
    Omega: "Ω",
    alpha: "α",
    beta: "β",
    gamma: "γ",
    delta: "δ",
    epsilon: "ε",
    zeta: "ζ",
    eta: "η",
    theta: "θ",
    iota: "ι",
    kappa: "κ",
    lambda: "λ",
    mu: "μ",
    nu: "ν",
    xi: "ξ",
    omicron: "ο",
    pi: "π",
    rho: "ρ",
    sigmaf: "ς",
    sigma: "σ",
    tau: "τ",
    upsilon: "υ",
    phi: "φ",
    chi: "χ",
    psi: "ψ",
    omega: "ω",
    thetasym: "ϑ",
    upsih: "ϒ",
    piv: "ϖ",
    OElig: "Œ",
    oelig: "œ",
    Scaron: "Š",
    scaron: "š",
    Yuml: "Ÿ",
    fnof: "ƒ",
    circ: "ˆ",
    tilde: "˜",
    ensp: " ",
    emsp: " ",
    thinsp: " ",
    zwnj: "‌",
    zwj: "‍",
    lrm: "‎",
    rlm: "‏",
    ndash: "–",
    mdash: "—",
    lsquo: "‘",
    rsquo: "’",
    sbquo: "‚",
    ldquo: "“",
    rdquo: "”",
    bdquo: "„",
    dagger: "†",
    Dagger: "‡",
    bull: "•",
    hellip: "…",
    permil: "‰",
    prime: "′",
    Prime: "″",
    lsaquo: "‹",
    rsaquo: "›",
    oline: "‾",
    euro: "€",
    trade: "™",
    larr: "←",
    uarr: "↑",
    rarr: "→",
    darr: "↓",
    harr: "↔",
    crarr: "↵",
    lceil: "⌈",
    rceil: "⌉",
    lfloor: "⌊",
    rfloor: "⌋",
    loz: "◊",
    spades: "♠",
    clubs: "♣",
    hearts: "♥",
    diams: "♦"
  }), e.entityMap = e.HTML_ENTITIES;
})(Jm);
var nd = {}, ua = An.NAMESPACE, lc = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, Fh = new RegExp("[\\-\\.0-9" + lc.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"), jh = new RegExp("^" + lc.source + Fh.source + "*(?::" + lc.source + Fh.source + "*)?$"), Bs = 0, Bn = 1, Br = 2, Us = 3, Ur = 4, Fr = 5, Fs = 6, Ja = 7;
function as(e, i) {
  this.message = e, this.locator = i, Error.captureStackTrace && Error.captureStackTrace(this, as);
}
as.prototype = new Error();
as.prototype.name = as.name;
function Ym() {
}
Ym.prototype = {
  parse: function(e, i, n) {
    var t = this.domBuilder;
    t.startDocument(), $m(i, i = {}), Yb(
      e,
      i,
      n,
      t,
      this.errorHandler
    ), t.endDocument();
  }
};
function Yb(e, i, n, t, r) {
  function s(te) {
    if (te > 65535) {
      te -= 65536;
      var ue = 55296 + (te >> 10), be = 56320 + (te & 1023);
      return String.fromCharCode(ue, be);
    } else
      return String.fromCharCode(te);
  }
  function a(te) {
    var ue = te.slice(1, -1);
    return Object.hasOwnProperty.call(n, ue) ? n[ue] : ue.charAt(0) === "#" ? s(parseInt(ue.substr(1).replace("x", "0x"))) : (r.error("entity not found:" + te), te);
  }
  function o(te) {
    if (te > T) {
      var ue = e.substring(T, te).replace(/&#?\w+;/g, a);
      h && u(T), t.characters(ue, 0, te - T), T = te;
    }
  }
  function u(te, ue) {
    for (; te >= d && (ue = p.exec(e)); )
      l = ue.index, d = l + ue[0].length, h.lineNumber++;
    h.columnNumber = te - l + 1;
  }
  for (var l = 0, d = 0, p = /.*(?:\r\n?|\n)|.*$/g, h = t.locator, m = [{ currentNSMap: i }], y = {}, T = 0; ; ) {
    try {
      var b = e.indexOf("<", T);
      if (b < 0) {
        if (!e.substr(T).match(/^\s*$/)) {
          var I = t.doc, B = I.createTextNode(e.substr(T));
          I.appendChild(B), t.currentElement = B;
        }
        return;
      }
      switch (b > T && o(b), e.charAt(b + 1)) {
        case "/":
          var W = e.indexOf(">", b + 3), M = e.substring(b + 2, W).replace(/[ \t\n\r]+$/g, ""), A = m.pop();
          W < 0 ? (M = e.substring(b + 2).replace(/[\s<].*/, ""), r.error("end tag name: " + M + " is not complete:" + A.tagName), W = b + 1 + M.length) : M.match(/\s</) && (M = M.replace(/[\s<].*/, ""), r.error("end tag name: " + M + " maybe not complete"), W = b + 1 + M.length);
          var x = A.localNSMap, P = A.tagName == M, j = P || A.tagName && A.tagName.toLowerCase() == M.toLowerCase();
          if (j) {
            if (t.endElement(A.uri, A.localName, M), x)
              for (var H in x)
                Object.prototype.hasOwnProperty.call(x, H) && t.endPrefixMapping(H);
            P || r.fatalError("end tag name: " + M + " is not match the current start tagName:" + A.tagName);
          } else
            m.push(A);
          W++;
          break;
        case "?":
          h && u(b), W = iT(e, b, t);
          break;
        case "!":
          h && u(b), W = tT(e, b, t, r);
          break;
        default:
          h && u(b);
          var D = new Zm(), O = m[m.length - 1].currentNSMap, W = $b(e, b, D, O, a, r), X = D.length;
          if (!D.closed && eT(e, W, D.tagName, y) && (D.closed = !0, n.nbsp || r.warning("unclosed xml attribute")), h && X) {
            for (var ie = qh(h, {}), K = 0; K < X; K++) {
              var Z = D[K];
              u(Z.offset), Z.locator = qh(h, {});
            }
            t.locator = ie, Vh(D, t, O) && m.push(D), t.locator = h;
          } else
            Vh(D, t, O) && m.push(D);
          ua.isHTML(D.uri) && !D.closed ? W = Zb(e, W, D.tagName, a, t) : W++;
      }
    } catch (te) {
      if (te instanceof as)
        throw te;
      r.error("element parse error: " + te), W = -1;
    }
    W > T ? T = W : o(Math.max(b, T) + 1);
  }
}
function qh(e, i) {
  return i.lineNumber = e.lineNumber, i.columnNumber = e.columnNumber, i;
}
function $b(e, i, n, t, r, s) {
  function a(h, m, y) {
    n.attributeNames.hasOwnProperty(h) && s.fatalError("Attribute " + h + " redefined"), n.addValue(
      h,
      m.replace(/[\t\n\r]/g, " ").replace(/&#?\w+;/g, r),
      y
    );
  }
  for (var o, u, l = ++i, d = Bs; ; ) {
    var p = e.charAt(l);
    switch (p) {
      case "=":
        if (d === Bn)
          o = e.slice(i, l), d = Us;
        else if (d === Br)
          d = Us;
        else
          throw new Error("attribute equal must after attrName");
        break;
      case "'":
      case '"':
        if (d === Us || d === Bn)
          if (d === Bn && (s.warning('attribute value must after "="'), o = e.slice(i, l)), i = l + 1, l = e.indexOf(p, i), l > 0)
            u = e.slice(i, l), a(o, u, i - 1), d = Fr;
          else
            throw new Error("attribute value no end '" + p + "' match");
        else if (d == Ur)
          u = e.slice(i, l), a(o, u, i), s.warning('attribute "' + o + '" missed start quot(' + p + ")!!"), i = l + 1, d = Fr;
        else
          throw new Error('attribute value must after "="');
        break;
      case "/":
        switch (d) {
          case Bs:
            n.setTagName(e.slice(i, l));
          case Fr:
          case Fs:
          case Ja:
            d = Ja, n.closed = !0;
          case Ur:
          case Bn:
          case Br:
            break;
          default:
            throw new Error("attribute invalid close char('/')");
        }
        break;
      case "":
        return s.error("unexpected end of input"), d == Bs && n.setTagName(e.slice(i, l)), l;
      case ">":
        switch (d) {
          case Bs:
            n.setTagName(e.slice(i, l));
          case Fr:
          case Fs:
          case Ja:
            break;
          case Ur:
          case Bn:
            u = e.slice(i, l), u.slice(-1) === "/" && (n.closed = !0, u = u.slice(0, -1));
          case Br:
            d === Br && (u = o), d == Ur ? (s.warning('attribute "' + u + '" missed quot(")!'), a(o, u, i)) : ((!ua.isHTML(t[""]) || !u.match(/^(?:disabled|checked|selected)$/i)) && s.warning('attribute "' + u + '" missed value!! "' + u + '" instead!!'), a(u, u, i));
            break;
          case Us:
            throw new Error("attribute value missed!!");
        }
        return l;
      case "":
        p = " ";
      default:
        if (p <= " ")
          switch (d) {
            case Bs:
              n.setTagName(e.slice(i, l)), d = Fs;
              break;
            case Bn:
              o = e.slice(i, l), d = Br;
              break;
            case Ur:
              var u = e.slice(i, l);
              s.warning('attribute "' + u + '" missed quot(")!!'), a(o, u, i);
            case Fr:
              d = Fs;
              break;
          }
        else
          switch (d) {
            case Br:
              n.tagName, (!ua.isHTML(t[""]) || !o.match(/^(?:disabled|checked|selected)$/i)) && s.warning('attribute "' + o + '" missed value!! "' + o + '" instead2!!'), a(o, o, i), i = l, d = Bn;
              break;
            case Fr:
              s.warning('attribute space is required"' + o + '"!!');
            case Fs:
              d = Bn, i = l;
              break;
            case Us:
              d = Ur, i = l;
              break;
            case Ja:
              throw new Error("elements closed character '/' and '>' must be connected to");
          }
    }
    l++;
  }
}
function Vh(e, i, n) {
  for (var t = e.tagName, r = null, s = e.length; s--; ) {
    var a = e[s], o = a.qName, u = a.value, h = o.indexOf(":");
    if (h > 0)
      var l = a.prefix = o.slice(0, h), d = o.slice(h + 1), p = l === "xmlns" && d;
    else
      d = o, l = null, p = o === "xmlns" && "";
    a.localName = d, p !== !1 && (r == null && (r = {}, $m(n, n = {})), n[p] = r[p] = u, a.uri = ua.XMLNS, i.startPrefixMapping(p, u));
  }
  for (var s = e.length; s--; ) {
    a = e[s];
    var l = a.prefix;
    l && (l === "xml" && (a.uri = ua.XML), l !== "xmlns" && (a.uri = n[l || ""]));
  }
  var h = t.indexOf(":");
  h > 0 ? (l = e.prefix = t.slice(0, h), d = e.localName = t.slice(h + 1)) : (l = null, d = e.localName = t);
  var m = e.uri = n[l || ""];
  if (i.startElement(m, d, t, e), e.closed) {
    if (i.endElement(m, d, t), r)
      for (l in r)
        Object.prototype.hasOwnProperty.call(r, l) && i.endPrefixMapping(l);
  } else
    return e.currentNSMap = n, e.localNSMap = r, !0;
}
function Zb(e, i, n, t, r) {
  if (/^(?:script|textarea)$/i.test(n)) {
    var s = e.indexOf("</" + n + ">", i), a = e.substring(i + 1, s);
    if (/[&<]/.test(a))
      return /^script$/i.test(n) ? (r.characters(a, 0, a.length), s) : (a = a.replace(/&#?\w+;/g, t), r.characters(a, 0, a.length), s);
  }
  return i + 1;
}
function eT(e, i, n, t) {
  var r = t[n];
  return r == null && (r = e.lastIndexOf("</" + n + ">"), r < i && (r = e.lastIndexOf("</" + n)), t[n] = r), r < i;
}
function $m(e, i) {
  for (var n in e)
    Object.prototype.hasOwnProperty.call(e, n) && (i[n] = e[n]);
}
function tT(e, i, n, t) {
  var r = e.charAt(i + 2);
  switch (r) {
    case "-":
      if (e.charAt(i + 3) === "-") {
        var s = e.indexOf("-->", i + 4);
        return s > i ? (n.comment(e, i + 4, s - i - 4), s + 3) : (t.error("Unclosed comment"), -1);
      } else
        return -1;
    default:
      if (e.substr(i + 3, 6) == "CDATA[") {
        var s = e.indexOf("]]>", i + 9);
        return n.startCDATA(), n.characters(e, i + 9, s - i - 9), n.endCDATA(), s + 3;
      }
      var a = nT(e, i), o = a.length;
      if (o > 1 && /!doctype/i.test(a[0][0])) {
        var u = a[1][0], l = !1, d = !1;
        o > 3 && (/^public$/i.test(a[2][0]) ? (l = a[3][0], d = o > 4 && a[4][0]) : /^system$/i.test(a[2][0]) && (d = a[3][0]));
        var p = a[o - 1];
        return n.startDTD(u, l, d), n.endDTD(), p.index + p[0].length;
      }
  }
  return -1;
}
function iT(e, i, n) {
  var t = e.indexOf("?>", i);
  if (t) {
    var r = e.substring(i, t).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
    return r ? (r[0].length, n.processingInstruction(r[1], r[2]), t + 2) : -1;
  }
  return -1;
}
function Zm() {
  this.attributeNames = {};
}
Zm.prototype = {
  setTagName: function(e) {
    if (!jh.test(e))
      throw new Error("invalid tagName:" + e);
    this.tagName = e;
  },
  addValue: function(e, i, n) {
    if (!jh.test(e))
      throw new Error("invalid attribute:" + e);
    this.attributeNames[e] = this.length, this[this.length++] = { qName: e, value: i, offset: n };
  },
  length: 0,
  getLocalName: function(e) {
    return this[e].localName;
  },
  getLocator: function(e) {
    return this[e].locator;
  },
  getQName: function(e) {
    return this[e].qName;
  },
  getURI: function(e) {
    return this[e].uri;
  },
  getValue: function(e) {
    return this[e].value;
  }
};
function nT(e, i) {
  var n, t = [], r = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
  for (r.lastIndex = i, r.exec(e); n = r.exec(e); )
    if (t.push(n), n[1])
      return t;
}
nd.XMLReader = Ym;
nd.ParseError = as;
var rT = An, sT = qn, Hh = Jm, eg = nd, aT = sT.DOMImplementation, Wh = rT.NAMESPACE, oT = eg.ParseError, uT = eg.XMLReader;
function tg(e) {
  return e.replace(/\r[\n\u0085]/g, `
`).replace(/[\r\u0085\u2028]/g, `
`);
}
function ig(e) {
  this.options = e || { locator: {} };
}
ig.prototype.parseFromString = function(e, i) {
  var n = this.options, t = new uT(), r = n.domBuilder || new _a(), s = n.errorHandler, a = n.locator, o = n.xmlns || {}, u = /\/x?html?$/.test(i), l = u ? Hh.HTML_ENTITIES : Hh.XML_ENTITIES;
  a && r.setDocumentLocator(a), t.errorHandler = lT(s, r, a), t.domBuilder = n.domBuilder || r, u && (o[""] = Wh.HTML), o.xml = o.xml || Wh.XML;
  var d = n.normalizeLineEndings || tg;
  return e && typeof e == "string" ? t.parse(
    d(e),
    o,
    l
  ) : t.errorHandler.error("invalid doc source"), r.doc;
};
function lT(e, i, n) {
  if (!e) {
    if (i instanceof _a)
      return i;
    e = i;
  }
  var t = {}, r = e instanceof Function;
  n = n || {};
  function s(a) {
    var o = e[a];
    !o && r && (o = e.length == 2 ? function(u) {
      e(a, u);
    } : e), t[a] = o && function(u) {
      o("[xmldom " + a + "]	" + u + cc(n));
    } || function() {
    };
  }
  return s("warning"), s("error"), s("fatalError"), t;
}
function _a() {
  this.cdata = !1;
}
function jr(e, i) {
  i.lineNumber = e.lineNumber, i.columnNumber = e.columnNumber;
}
_a.prototype = {
  startDocument: function() {
    this.doc = new aT().createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId);
  },
  startElement: function(e, i, n, t) {
    var r = this.doc, s = r.createElementNS(e, n || i), a = t.length;
    Ya(this, s), this.currentElement = s, this.locator && jr(this.locator, s);
    for (var o = 0; o < a; o++) {
      var e = t.getURI(o), u = t.getValue(o), n = t.getQName(o), l = r.createAttributeNS(e, n);
      this.locator && jr(t.getLocator(o), l), l.value = l.nodeValue = u, s.setAttributeNode(l);
    }
  },
  endElement: function(e, i, n) {
    var t = this.currentElement;
    t.tagName, this.currentElement = t.parentNode;
  },
  startPrefixMapping: function(e, i) {
  },
  endPrefixMapping: function(e) {
  },
  processingInstruction: function(e, i) {
    var n = this.doc.createProcessingInstruction(e, i);
    this.locator && jr(this.locator, n), Ya(this, n);
  },
  ignorableWhitespace: function(e, i, n) {
  },
  characters: function(e, i, n) {
    if (e = Gh.apply(this, arguments), e) {
      if (this.cdata)
        var t = this.doc.createCDATASection(e);
      else
        var t = this.doc.createTextNode(e);
      this.currentElement ? this.currentElement.appendChild(t) : /^\s*$/.test(e) && this.doc.appendChild(t), this.locator && jr(this.locator, t);
    }
  },
  skippedEntity: function(e) {
  },
  endDocument: function() {
    this.doc.normalize();
  },
  setDocumentLocator: function(e) {
    (this.locator = e) && (e.lineNumber = 0);
  },
  comment: function(e, i, n) {
    e = Gh.apply(this, arguments);
    var t = this.doc.createComment(e);
    this.locator && jr(this.locator, t), Ya(this, t);
  },
  startCDATA: function() {
    this.cdata = !0;
  },
  endCDATA: function() {
    this.cdata = !1;
  },
  startDTD: function(e, i, n) {
    var t = this.doc.implementation;
    if (t && t.createDocumentType) {
      var r = t.createDocumentType(e, i, n);
      this.locator && jr(this.locator, r), Ya(this, r), this.doc.doctype = r;
    }
  },
  warning: function(e) {
    console.warn("[xmldom warning]	" + e, cc(this.locator));
  },
  error: function(e) {
    console.error("[xmldom error]	" + e, cc(this.locator));
  },
  fatalError: function(e) {
    throw new oT(e, this.locator);
  }
};
function cc(e) {
  if (e)
    return `
@` + (e.systemId || "") + "#[line:" + e.lineNumber + ",col:" + e.columnNumber + "]";
}
function Gh(e, i, n) {
  return typeof e == "string" ? e.substr(i, n) : e.length >= i + n || i ? new java.lang.String(e, i, n) + "" : e;
}
"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(e) {
  _a.prototype[e] = function() {
    return null;
  };
});
function Ya(e, i) {
  e.currentElement ? e.currentElement.appendChild(i) : e.doc.appendChild(i);
}
eu.__DOMHandler = _a;
eu.normalizeLineEndings = tg;
eu.DOMParser = ig;
var cT = eu.DOMParser;
/*! @name mpd-parser @version 0.22.1 @license Apache-2.0 */
var Kh = function(e) {
  return !!e && typeof e == "object";
}, di = function e() {
  for (var i = arguments.length, n = new Array(i), t = 0; t < i; t++)
    n[t] = arguments[t];
  return n.reduce(function(r, s) {
    return typeof s != "object" || Object.keys(s).forEach(function(a) {
      Array.isArray(r[a]) && Array.isArray(s[a]) ? r[a] = r[a].concat(s[a]) : Kh(r[a]) && Kh(s[a]) ? r[a] = e(r[a], s[a]) : r[a] = s[a];
    }), r;
  }, {});
}, ng = function(e) {
  return Object.keys(e).map(function(i) {
    return e[i];
  });
}, dT = function(e, i) {
  for (var n = [], t = e; t < i; t++)
    n.push(t);
  return n;
}, tu = function(e) {
  return e.reduce(function(i, n) {
    return i.concat(n);
  }, []);
}, rg = function(e) {
  if (!e.length)
    return [];
  for (var i = [], n = 0; n < e.length; n++)
    i.push(e[n]);
  return i;
}, hT = function(e, i) {
  return e.reduce(function(n, t, r) {
    return t[i] && n.push(r), n;
  }, []);
}, dc = function(e, i) {
  for (var n = 0; n < e.length; n++)
    if (i(e[n]))
      return n;
  return -1;
}, pT = function(e, i) {
  return ng(e.reduce(function(n, t) {
    return t.forEach(function(r) {
      n[i(r)] = r;
    }), n;
  }, {}));
}, os = {
  INVALID_NUMBER_OF_PERIOD: "INVALID_NUMBER_OF_PERIOD",
  DASH_EMPTY_MANIFEST: "DASH_EMPTY_MANIFEST",
  DASH_INVALID_XML: "DASH_INVALID_XML",
  NO_BASE_URL: "NO_BASE_URL",
  MISSING_SEGMENT_INFORMATION: "MISSING_SEGMENT_INFORMATION",
  SEGMENT_TIME_UNSPECIFIED: "SEGMENT_TIME_UNSPECIFIED",
  UNSUPPORTED_UTC_TIMING_SCHEME: "UNSUPPORTED_UTC_TIMING_SCHEME"
}, la = function(e) {
  var i = e.baseUrl, n = i === void 0 ? "" : i, t = e.source, r = t === void 0 ? "" : t, s = e.range, a = s === void 0 ? "" : s, o = e.indexRange, u = o === void 0 ? "" : o, l = {
    uri: r,
    resolvedUri: Yo(n || "", r)
  };
  if (a || u) {
    var d = a || u, p = d.split("-"), h = q.BigInt ? q.BigInt(p[0]) : parseInt(p[0], 10), m = q.BigInt ? q.BigInt(p[1]) : parseInt(p[1], 10);
    h < Number.MAX_SAFE_INTEGER && typeof h == "bigint" && (h = Number(h)), m < Number.MAX_SAFE_INTEGER && typeof m == "bigint" && (m = Number(m));
    var y;
    typeof m == "bigint" || typeof h == "bigint" ? y = q.BigInt(m) - q.BigInt(h) + q.BigInt(1) : y = m - h + 1, typeof y == "bigint" && y < Number.MAX_SAFE_INTEGER && (y = Number(y)), l.byterange = {
      length: y,
      offset: h
    };
  }
  return l;
}, fT = function(e) {
  var i;
  return typeof e.offset == "bigint" || typeof e.length == "bigint" ? i = q.BigInt(e.offset) + q.BigInt(e.length) - q.BigInt(1) : i = e.offset + e.length - 1, e.offset + "-" + i;
}, zh = function(e) {
  return e && typeof e != "number" && (e = parseInt(e, 10)), isNaN(e) ? null : e;
}, mT = {
  static: function(e) {
    var i = e.duration, n = e.timescale, t = n === void 0 ? 1 : n, r = e.sourceDuration, s = e.periodDuration, a = zh(e.endNumber), o = i / t;
    return typeof a == "number" ? {
      start: 0,
      end: a
    } : typeof s == "number" ? {
      start: 0,
      end: s / o
    } : {
      start: 0,
      end: r / o
    };
  },
  dynamic: function(e) {
    var i = e.NOW, n = e.clientOffset, t = e.availabilityStartTime, r = e.timescale, s = r === void 0 ? 1 : r, a = e.duration, o = e.periodStart, u = o === void 0 ? 0 : o, l = e.minimumUpdatePeriod, d = l === void 0 ? 0 : l, p = e.timeShiftBufferDepth, h = p === void 0 ? 1 / 0 : p, m = zh(e.endNumber), y = (i + n) / 1e3, T = t + u, b = y + d, I = b - T, B = Math.ceil(I * s / a), M = Math.floor((y - T - h) * s / a), A = Math.floor((y - T) * s / a);
    return {
      start: Math.max(0, M),
      end: typeof m == "number" ? m : Math.min(B, A)
    };
  }
}, gT = function(e) {
  return function(i) {
    var n = e.duration, t = e.timescale, r = t === void 0 ? 1 : t, s = e.periodStart, a = e.startNumber, o = a === void 0 ? 1 : a;
    return {
      number: o + i,
      duration: n / r,
      timeline: s,
      time: i * n
    };
  };
}, rd = function(e) {
  var i = e.type, n = e.duration, t = e.timescale, r = t === void 0 ? 1 : t, s = e.periodDuration, a = e.sourceDuration, o = mT[i](e), u = o.start, l = o.end, d = dT(u, l).map(gT(e));
  if (i === "static") {
    var p = d.length - 1, h = typeof s == "number" ? s : a;
    d[p].duration = h - n / r * p;
  }
  return d;
}, sg = function(e) {
  var i = e.baseUrl, n = e.initialization, t = n === void 0 ? {} : n, r = e.sourceDuration, s = e.indexRange, a = s === void 0 ? "" : s, o = e.periodStart, u = e.presentationTime, l = e.number, d = l === void 0 ? 0 : l, p = e.duration;
  if (!i)
    throw new Error(os.NO_BASE_URL);
  var h = la({
    baseUrl: i,
    source: t.sourceURL,
    range: t.range
  }), m = la({
    baseUrl: i,
    source: i,
    indexRange: a
  });
  if (m.map = h, p) {
    var y = rd(e);
    y.length && (m.duration = y[0].duration, m.timeline = y[0].timeline);
  } else
    r && (m.duration = r, m.timeline = o);
  return m.presentationTime = u || o, m.number = d, [m];
}, sd = function(e, i, n) {
  var t = e.sidx.map ? e.sidx.map : null, r = e.sidx.duration, s = e.timeline || 0, a = e.sidx.byterange, o = a.offset + a.length, u = i.timescale, l = i.references.filter(function(H) {
    return H.referenceType !== 1;
  }), d = [], p = e.endList ? "static" : "dynamic", h = e.sidx.timeline, m = h, y = e.mediaSequence || 0, T;
  typeof i.firstOffset == "bigint" ? T = q.BigInt(o) + i.firstOffset : T = o + i.firstOffset;
  for (var b = 0; b < l.length; b++) {
    var I = i.references[b], B = I.referencedSize, M = I.subsegmentDuration, A = void 0;
    typeof T == "bigint" ? A = T + q.BigInt(B) - q.BigInt(1) : A = T + B - 1;
    var x = T + "-" + A, P = {
      baseUrl: n,
      timescale: u,
      timeline: s,
      periodStart: h,
      presentationTime: m,
      number: y,
      duration: M,
      sourceDuration: r,
      indexRange: x,
      type: p
    }, j = sg(P)[0];
    t && (j.map = t), d.push(j), typeof T == "bigint" ? T += q.BigInt(B) : T += B, m += M / u, y++;
  }
  return e.segments = d, e;
}, vT = ["AUDIO", "SUBTITLES"], yT = 1 / 60, ag = function(e) {
  return pT(e, function(i) {
    var n = i.timeline;
    return n;
  }).sort(function(i, n) {
    return i.timeline > n.timeline ? 1 : -1;
  });
}, _T = function(e, i) {
  for (var n = 0; n < e.length; n++)
    if (e[n].attributes.NAME === i)
      return e[n];
  return null;
}, Xh = function(e) {
  var i = [];
  return Mb(e, vT, function(n, t, r, s) {
    i = i.concat(n.playlists || []);
  }), i;
}, Qh = function(e) {
  var i = e.playlist, n = e.mediaSequence;
  i.mediaSequence = n, i.segments.forEach(function(t, r) {
    t.number = i.mediaSequence + r;
  });
}, bT = function(e) {
  var i = e.oldPlaylists, n = e.newPlaylists, t = e.timelineStarts;
  n.forEach(function(r) {
    r.discontinuitySequence = dc(t, function(l) {
      var d = l.timeline;
      return d === r.timeline;
    });
    var s = _T(i, r.attributes.NAME);
    if (s && !r.sidx) {
      var a = r.segments[0], o = dc(s.segments, function(l) {
        return Math.abs(l.presentationTime - a.presentationTime) < yT;
      });
      if (o === -1) {
        Qh({
          playlist: r,
          mediaSequence: s.mediaSequence + s.segments.length
        }), r.segments[0].discontinuity = !0, r.discontinuityStarts.unshift(0), (!s.segments.length && r.timeline > s.timeline || s.segments.length && r.timeline > s.segments[s.segments.length - 1].timeline) && r.discontinuitySequence--;
        return;
      }
      var u = s.segments[o];
      u.discontinuity && !a.discontinuity && (a.discontinuity = !0, r.discontinuityStarts.unshift(0), r.discontinuitySequence--), Qh({
        playlist: r,
        mediaSequence: s.segments[o].number
      });
    }
  });
}, TT = function(e) {
  var i = e.oldManifest, n = e.newManifest, t = i.playlists.concat(Xh(i)), r = n.playlists.concat(Xh(n));
  return n.timelineStarts = ag([i.timelineStarts, n.timelineStarts]), bT({
    oldPlaylists: t,
    newPlaylists: r,
    timelineStarts: n.timelineStarts
  }), n;
}, iu = function(e) {
  return e && e.uri + "-" + fT(e.byterange);
}, Qu = function(e) {
  var i = ng(e.reduce(function(n, t) {
    var r = t.attributes.id + (t.attributes.lang || "");
    if (!n[r])
      n[r] = t, n[r].attributes.timelineStarts = [];
    else {
      if (t.segments) {
        var s;
        t.segments[0] && (t.segments[0].discontinuity = !0), (s = n[r].segments).push.apply(s, t.segments);
      }
      t.attributes.contentProtection && (n[r].attributes.contentProtection = t.attributes.contentProtection);
    }
    return n[r].attributes.timelineStarts.push({
      start: t.attributes.periodStart,
      timeline: t.attributes.periodStart
    }), n;
  }, {}));
  return i.map(function(n) {
    return n.discontinuityStarts = hT(n.segments || [], "discontinuity"), n;
  });
}, ad = function(e, i) {
  var n = iu(e.sidx), t = n && i[n] && i[n].sidx;
  return t && sd(e, t, e.sidx.resolvedUri), e;
}, ET = function(e, i) {
  if (i === void 0 && (i = {}), !Object.keys(i).length)
    return e;
  for (var n in e)
    e[n] = ad(e[n], i);
  return e;
}, ST = function(e, i) {
  var n, t = e.attributes, r = e.segments, s = e.sidx, a = e.mediaSequence, o = e.discontinuitySequence, u = e.discontinuityStarts, l = {
    attributes: (n = {
      NAME: t.id,
      BANDWIDTH: t.bandwidth,
      CODECS: t.codecs
    }, n["PROGRAM-ID"] = 1, n),
    uri: "",
    endList: t.type === "static",
    timeline: t.periodStart,
    resolvedUri: "",
    targetDuration: t.duration,
    discontinuitySequence: o,
    discontinuityStarts: u,
    timelineStarts: t.timelineStarts,
    mediaSequence: a,
    segments: r
  };
  return t.contentProtection && (l.contentProtection = t.contentProtection), s && (l.sidx = s), i && (l.attributes.AUDIO = "audio", l.attributes.SUBTITLES = "subs"), l;
}, wT = function(e) {
  var i, n = e.attributes, t = e.segments, r = e.mediaSequence, s = e.discontinuityStarts, a = e.discontinuitySequence;
  typeof t > "u" && (t = [{
    uri: n.baseUrl,
    timeline: n.periodStart,
    resolvedUri: n.baseUrl || "",
    duration: n.sourceDuration,
    number: 0
  }], n.duration = n.sourceDuration);
  var o = (i = {
    NAME: n.id,
    BANDWIDTH: n.bandwidth
  }, i["PROGRAM-ID"] = 1, i);
  return n.codecs && (o.CODECS = n.codecs), {
    attributes: o,
    uri: "",
    endList: n.type === "static",
    timeline: n.periodStart,
    resolvedUri: n.baseUrl || "",
    targetDuration: n.duration,
    timelineStarts: n.timelineStarts,
    discontinuityStarts: s,
    discontinuitySequence: a,
    mediaSequence: r,
    segments: t
  };
}, kT = function(e, i, n) {
  i === void 0 && (i = {}), n === void 0 && (n = !1);
  var t, r = e.reduce(function(a, o) {
    var u = o.attributes.role && o.attributes.role.value || "", l = o.attributes.lang || "", d = o.attributes.label || "main";
    if (l && !o.attributes.label) {
      var p = u ? " (" + u + ")" : "";
      d = "" + o.attributes.lang + p;
    }
    a[d] || (a[d] = {
      language: l,
      autoselect: !0,
      default: u === "main",
      playlists: [],
      uri: ""
    });
    var h = ad(ST(o, n), i);
    return a[d].playlists.push(h), typeof t > "u" && u === "main" && (t = o, t.default = !0), a;
  }, {});
  if (!t) {
    var s = Object.keys(r)[0];
    r[s].default = !0;
  }
  return r;
}, CT = function(e, i) {
  return i === void 0 && (i = {}), e.reduce(function(n, t) {
    var r = t.attributes.lang || "text";
    return n[r] || (n[r] = {
      language: r,
      default: !1,
      autoselect: !1,
      playlists: [],
      uri: ""
    }), n[r].playlists.push(ad(wT(t), i)), n;
  }, {});
}, AT = function(e) {
  return e.reduce(function(i, n) {
    return n && n.forEach(function(t) {
      var r = t.channel, s = t.language;
      i[s] = {
        autoselect: !1,
        default: !1,
        instreamId: r,
        language: s
      }, t.hasOwnProperty("aspectRatio") && (i[s].aspectRatio = t.aspectRatio), t.hasOwnProperty("easyReader") && (i[s].easyReader = t.easyReader), t.hasOwnProperty("3D") && (i[s]["3D"] = t["3D"]);
    }), i;
  }, {});
}, IT = function(e) {
  var i, n = e.attributes, t = e.segments, r = e.sidx, s = e.discontinuityStarts, a = {
    attributes: (i = {
      NAME: n.id,
      AUDIO: "audio",
      SUBTITLES: "subs",
      RESOLUTION: {
        width: n.width,
        height: n.height
      },
      CODECS: n.codecs,
      BANDWIDTH: n.bandwidth
    }, i["PROGRAM-ID"] = 1, i),
    uri: "",
    endList: n.type === "static",
    timeline: n.periodStart,
    resolvedUri: "",
    targetDuration: n.duration,
    discontinuityStarts: s,
    timelineStarts: n.timelineStarts,
    segments: t
  };
  return n.frameRate && (a.attributes["FRAME-RATE"] = n.frameRate), n.contentProtection && (a.contentProtection = n.contentProtection), r && (a.sidx = r), a;
}, DT = function(e) {
  var i = e.attributes;
  return i.mimeType === "video/mp4" || i.mimeType === "video/webm" || i.contentType === "video";
}, xT = function(e) {
  var i = e.attributes;
  return i.mimeType === "audio/mp4" || i.mimeType === "audio/webm" || i.contentType === "audio";
}, PT = function(e) {
  var i = e.attributes;
  return i.mimeType === "text/vtt" || i.contentType === "text";
}, LT = function(e, i) {
  e.forEach(function(n) {
    n.mediaSequence = 0, n.discontinuitySequence = dc(i, function(t) {
      var r = t.timeline;
      return r === n.timeline;
    }), n.segments && n.segments.forEach(function(t, r) {
      t.number = r;
    });
  });
}, Jh = function(e) {
  return e ? Object.keys(e).reduce(function(i, n) {
    var t = e[n];
    return i.concat(t.playlists);
  }, []) : [];
}, OT = function(e) {
  var i, n = e.dashPlaylists, t = e.locations, r = e.sidxMapping, s = r === void 0 ? {} : r, a = e.previousManifest;
  if (!n.length)
    return {};
  var o = n[0].attributes, u = o.sourceDuration, l = o.type, d = o.suggestedPresentationDelay, p = o.minimumUpdatePeriod, h = Qu(n.filter(DT)).map(IT), m = Qu(n.filter(xT)), y = Qu(n.filter(PT)), T = n.map(function(P) {
    return P.attributes.captionServices;
  }).filter(Boolean), b = {
    allowCache: !0,
    discontinuityStarts: [],
    segments: [],
    endList: !0,
    mediaGroups: (i = {
      AUDIO: {},
      VIDEO: {}
    }, i["CLOSED-CAPTIONS"] = {}, i.SUBTITLES = {}, i),
    uri: "",
    duration: u,
    playlists: ET(h, s)
  };
  p >= 0 && (b.minimumUpdatePeriod = p * 1e3), t && (b.locations = t), l === "dynamic" && (b.suggestedPresentationDelay = d);
  var I = b.playlists.length === 0, B = m.length ? kT(m, s, I) : null, M = y.length ? CT(y, s) : null, A = h.concat(Jh(B), Jh(M)), x = A.map(function(P) {
    var j = P.timelineStarts;
    return j;
  });
  return b.timelineStarts = ag(x), LT(A, b.timelineStarts), B && (b.mediaGroups.AUDIO.audio = B), M && (b.mediaGroups.SUBTITLES.subs = M), T.length && (b.mediaGroups["CLOSED-CAPTIONS"].cc = AT(T)), a ? TT({
    oldManifest: a,
    newManifest: b
  }) : b;
}, NT = function(e, i, n) {
  var t = e.NOW, r = e.clientOffset, s = e.availabilityStartTime, a = e.timescale, o = a === void 0 ? 1 : a, u = e.periodStart, l = u === void 0 ? 0 : u, d = e.minimumUpdatePeriod, p = d === void 0 ? 0 : d, h = (t + r) / 1e3, m = s + l, y = h + p, T = y - m;
  return Math.ceil((T * o - i) / n);
}, og = function(e, i) {
  for (var n = e.type, t = e.minimumUpdatePeriod, r = t === void 0 ? 0 : t, s = e.media, a = s === void 0 ? "" : s, o = e.sourceDuration, u = e.timescale, l = u === void 0 ? 1 : u, d = e.startNumber, p = d === void 0 ? 1 : d, h = e.periodStart, m = [], y = -1, T = 0; T < i.length; T++) {
    var b = i[T], I = b.d, B = b.r || 0, M = b.t || 0;
    y < 0 && (y = M), M && M > y && (y = M);
    var A = void 0;
    if (B < 0) {
      var x = T + 1;
      x === i.length ? n === "dynamic" && r > 0 && a.indexOf("$Number$") > 0 ? A = NT(e, y, I) : A = (o * l - y) / I : A = (i[x].t - y) / I;
    } else
      A = B + 1;
    for (var P = p + m.length + A, j = p + m.length; j < P; )
      m.push({
        number: j,
        duration: I / l,
        time: y,
        timeline: h
      }), y += I, j++;
  }
  return m;
}, RT = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g, MT = function(e) {
  return function(i, n, t, r) {
    if (i === "$$")
      return "$";
    if (typeof e[n] > "u")
      return i;
    var s = "" + e[n];
    return n === "RepresentationID" || (t ? r = parseInt(r, 10) : r = 1, s.length >= r) ? s : "" + new Array(r - s.length + 1).join("0") + s;
  };
}, Yh = function(e, i) {
  return e.replace(RT, MT(i));
}, BT = function(e, i) {
  return !e.duration && !i ? [{
    number: e.startNumber || 1,
    duration: e.sourceDuration,
    time: 0,
    timeline: e.periodStart
  }] : e.duration ? rd(e) : og(e, i);
}, UT = function(e, i) {
  var n = {
    RepresentationID: e.id,
    Bandwidth: e.bandwidth || 0
  }, t = e.initialization, r = t === void 0 ? {
    sourceURL: "",
    range: ""
  } : t, s = la({
    baseUrl: e.baseUrl,
    source: Yh(r.sourceURL, n),
    range: r.range
  }), a = BT(e, i);
  return a.map(function(o) {
    n.Number = o.number, n.Time = o.time;
    var u = Yh(e.media || "", n), l = e.timescale || 1, d = e.presentationTimeOffset || 0, p = e.periodStart + (o.time - d) / l, h = {
      uri: u,
      timeline: o.timeline,
      duration: o.duration,
      resolvedUri: Yo(e.baseUrl || "", u),
      map: s,
      number: o.number,
      presentationTime: p
    };
    return h;
  });
}, FT = function(e, i) {
  var n = e.baseUrl, t = e.initialization, r = t === void 0 ? {} : t, s = la({
    baseUrl: n,
    source: r.sourceURL,
    range: r.range
  }), a = la({
    baseUrl: n,
    source: i.media,
    range: i.mediaRange
  });
  return a.map = s, a;
}, jT = function(e, i) {
  var n = e.duration, t = e.segmentUrls, r = t === void 0 ? [] : t, s = e.periodStart;
  if (!n && !i || n && i)
    throw new Error(os.SEGMENT_TIME_UNSPECIFIED);
  var a = r.map(function(l) {
    return FT(e, l);
  }), o;
  n && (o = rd(e)), i && (o = og(e, i));
  var u = o.map(function(l, d) {
    if (a[d]) {
      var p = a[d], h = e.timescale || 1, m = e.presentationTimeOffset || 0;
      return p.timeline = l.timeline, p.duration = l.duration, p.number = l.number, p.presentationTime = s + (l.time - m) / h, p;
    }
  }).filter(function(l) {
    return l;
  });
  return u;
}, qT = function(e) {
  var i = e.attributes, n = e.segmentInfo, t, r;
  n.template ? (r = UT, t = di(i, n.template)) : n.base ? (r = sg, t = di(i, n.base)) : n.list && (r = jT, t = di(i, n.list));
  var s = {
    attributes: i
  };
  if (!r)
    return s;
  var a = r(t, n.segmentTimeline);
  if (t.duration) {
    var o = t, u = o.duration, l = o.timescale, d = l === void 0 ? 1 : l;
    t.duration = u / d;
  } else
    a.length ? t.duration = a.reduce(function(p, h) {
      return Math.max(p, Math.ceil(h.duration));
    }, 0) : t.duration = 0;
  return s.attributes = t, s.segments = a, n.base && t.indexRange && (s.sidx = a[0], s.segments = []), s;
}, VT = function(e) {
  return e.map(qT);
}, Ot = function(e, i) {
  return rg(e.childNodes).filter(function(n) {
    var t = n.tagName;
    return t === i;
  });
}, od = function(e) {
  return e.textContent.trim();
}, HT = function(e) {
  return parseFloat(e.split("/").reduce(function(i, n) {
    return i / n;
  }));
}, qr = function(e) {
  var i = 31536e3, n = 30 * 24 * 60 * 60, t = 24 * 60 * 60, r = 60 * 60, s = 60, a = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/, o = a.exec(e);
  if (!o)
    return 0;
  var u = o.slice(1), l = u[0], d = u[1], p = u[2], h = u[3], m = u[4], y = u[5];
  return parseFloat(l || 0) * i + parseFloat(d || 0) * n + parseFloat(p || 0) * t + parseFloat(h || 0) * r + parseFloat(m || 0) * s + parseFloat(y || 0);
}, WT = function(e) {
  var i = /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/;
  return i.test(e) && (e += "Z"), Date.parse(e);
}, $h = {
  mediaPresentationDuration: function(e) {
    return qr(e);
  },
  availabilityStartTime: function(e) {
    return WT(e) / 1e3;
  },
  minimumUpdatePeriod: function(e) {
    return qr(e);
  },
  suggestedPresentationDelay: function(e) {
    return qr(e);
  },
  type: function(e) {
    return e;
  },
  timeShiftBufferDepth: function(e) {
    return qr(e);
  },
  start: function(e) {
    return qr(e);
  },
  width: function(e) {
    return parseInt(e, 10);
  },
  height: function(e) {
    return parseInt(e, 10);
  },
  bandwidth: function(e) {
    return parseInt(e, 10);
  },
  frameRate: function(e) {
    return HT(e);
  },
  startNumber: function(e) {
    return parseInt(e, 10);
  },
  timescale: function(e) {
    return parseInt(e, 10);
  },
  presentationTimeOffset: function(e) {
    return parseInt(e, 10);
  },
  duration: function(e) {
    var i = parseInt(e, 10);
    return isNaN(i) ? qr(e) : i;
  },
  d: function(e) {
    return parseInt(e, 10);
  },
  t: function(e) {
    return parseInt(e, 10);
  },
  r: function(e) {
    return parseInt(e, 10);
  },
  DEFAULT: function(e) {
    return e;
  }
}, ri = function(e) {
  return e && e.attributes ? rg(e.attributes).reduce(function(i, n) {
    var t = $h[n.name] || $h.DEFAULT;
    return i[n.name] = t(n.value), i;
  }, {}) : {};
}, GT = {
  "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey",
  "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha",
  "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready",
  "urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime"
}, nu = function(e, i) {
  return i.length ? tu(e.map(function(n) {
    return i.map(function(t) {
      return Yo(n, od(t));
    });
  })) : e;
}, ud = function(e) {
  var i = Ot(e, "SegmentTemplate")[0], n = Ot(e, "SegmentList")[0], t = n && Ot(n, "SegmentURL").map(function(p) {
    return di({
      tag: "SegmentURL"
    }, ri(p));
  }), r = Ot(e, "SegmentBase")[0], s = n || i, a = s && Ot(s, "SegmentTimeline")[0], o = n || r || i, u = o && Ot(o, "Initialization")[0], l = i && ri(i);
  l && u ? l.initialization = u && ri(u) : l && l.initialization && (l.initialization = {
    sourceURL: l.initialization
  });
  var d = {
    template: l,
    segmentTimeline: a && Ot(a, "S").map(function(p) {
      return ri(p);
    }),
    list: n && di(ri(n), {
      segmentUrls: t,
      initialization: ri(u)
    }),
    base: r && di(ri(r), {
      initialization: ri(u)
    })
  };
  return Object.keys(d).forEach(function(p) {
    d[p] || delete d[p];
  }), d;
}, KT = function(e, i, n) {
  return function(t) {
    var r = Ot(t, "BaseURL"), s = nu(i, r), a = di(e, ri(t)), o = ud(t);
    return s.map(function(u) {
      return {
        segmentInfo: di(n, o),
        attributes: di(a, {
          baseUrl: u
        })
      };
    });
  };
}, zT = function(e) {
  return e.reduce(function(i, n) {
    var t = ri(n);
    t.schemeIdUri && (t.schemeIdUri = t.schemeIdUri.toLowerCase());
    var r = GT[t.schemeIdUri];
    if (r) {
      i[r] = {
        attributes: t
      };
      var s = Ot(n, "cenc:pssh")[0];
      if (s) {
        var a = od(s);
        i[r].pssh = a && Em(a);
      }
    }
    return i;
  }, {});
}, XT = function(e) {
  if (e.schemeIdUri === "urn:scte:dash:cc:cea-608:2015") {
    var i = typeof e.value != "string" ? [] : e.value.split(";");
    return i.map(function(t) {
      var r, s;
      if (s = t, /^CC\d=/.test(t)) {
        var a = t.split("=");
        r = a[0], s = a[1];
      } else
        /^CC\d$/.test(t) && (r = t);
      return {
        channel: r,
        language: s
      };
    });
  } else if (e.schemeIdUri === "urn:scte:dash:cc:cea-708:2015") {
    var n = typeof e.value != "string" ? [] : e.value.split(";");
    return n.map(function(t) {
      var r = {
        channel: void 0,
        language: void 0,
        aspectRatio: 1,
        easyReader: 0,
        "3D": 0
      };
      if (/=/.test(t)) {
        var s = t.split("="), a = s[0], o = s[1], u = o === void 0 ? "" : o;
        r.channel = a, r.language = t, u.split(",").forEach(function(l) {
          var d = l.split(":"), p = d[0], h = d[1];
          p === "lang" ? r.language = h : p === "er" ? r.easyReader = Number(h) : p === "war" ? r.aspectRatio = Number(h) : p === "3D" && (r["3D"] = Number(h));
        });
      } else
        r.language = t;
      return r.channel && (r.channel = "SERVICE" + r.channel), r;
    });
  }
}, QT = function(e, i, n) {
  return function(t) {
    var r = ri(t), s = nu(i, Ot(t, "BaseURL")), a = Ot(t, "Role")[0], o = {
      role: ri(a)
    }, u = di(e, r, o), l = Ot(t, "Accessibility")[0], d = XT(ri(l));
    d && (u = di(u, {
      captionServices: d
    }));
    var p = Ot(t, "Label")[0];
    if (p && p.childNodes.length) {
      var h = p.childNodes[0].nodeValue.trim();
      u = di(u, {
        label: h
      });
    }
    var m = zT(Ot(t, "ContentProtection"));
    Object.keys(m).length && (u = di(u, {
      contentProtection: m
    }));
    var y = ud(t), T = Ot(t, "Representation"), b = di(n, y);
    return tu(T.map(KT(u, s, b)));
  };
}, JT = function(e, i) {
  return function(n, t) {
    var r = nu(i, Ot(n.node, "BaseURL")), s = di(e, {
      periodStart: n.attributes.start
    });
    typeof n.attributes.duration == "number" && (s.periodDuration = n.attributes.duration);
    var a = Ot(n.node, "AdaptationSet"), o = ud(n.node);
    return tu(a.map(QT(s, r, o)));
  };
}, YT = function(e) {
  var i = e.attributes, n = e.priorPeriodAttributes, t = e.mpdType;
  return typeof i.start == "number" ? i.start : n && typeof n.start == "number" && typeof n.duration == "number" ? n.start + n.duration : !n && t === "static" ? 0 : null;
}, $T = function(e, i) {
  i === void 0 && (i = {});
  var n = i, t = n.manifestUri, r = t === void 0 ? "" : t, s = n.NOW, a = s === void 0 ? Date.now() : s, o = n.clientOffset, u = o === void 0 ? 0 : o, l = Ot(e, "Period");
  if (!l.length)
    throw new Error(os.INVALID_NUMBER_OF_PERIOD);
  var d = Ot(e, "Location"), p = ri(e), h = nu([r], Ot(e, "BaseURL"));
  p.type = p.type || "static", p.sourceDuration = p.mediaPresentationDuration || 0, p.NOW = a, p.clientOffset = u, d.length && (p.locations = d.map(od));
  var m = [];
  return l.forEach(function(y, T) {
    var b = ri(y), I = m[T - 1];
    b.start = YT({
      attributes: b,
      priorPeriodAttributes: I ? I.attributes : null,
      mpdType: p.type
    }), m.push({
      node: y,
      attributes: b
    });
  }), {
    locations: p.locations,
    representationInfo: tu(m.map(JT(p, h)))
  };
}, ug = function(e) {
  if (e === "")
    throw new Error(os.DASH_EMPTY_MANIFEST);
  var i = new cT(), n, t;
  try {
    n = i.parseFromString(e, "application/xml"), t = n && n.documentElement.tagName === "MPD" ? n.documentElement : null;
  } catch {
  }
  if (!t || t && t.getElementsByTagName("parsererror").length > 0)
    throw new Error(os.DASH_INVALID_XML);
  return t;
}, ZT = function(e) {
  var i = Ot(e, "UTCTiming")[0];
  if (!i)
    return null;
  var n = ri(i);
  switch (n.schemeIdUri) {
    case "urn:mpeg:dash:utc:http-head:2014":
    case "urn:mpeg:dash:utc:http-head:2012":
      n.method = "HEAD";
      break;
    case "urn:mpeg:dash:utc:http-xsdate:2014":
    case "urn:mpeg:dash:utc:http-iso:2014":
    case "urn:mpeg:dash:utc:http-xsdate:2012":
    case "urn:mpeg:dash:utc:http-iso:2012":
      n.method = "GET";
      break;
    case "urn:mpeg:dash:utc:direct:2014":
    case "urn:mpeg:dash:utc:direct:2012":
      n.method = "DIRECT", n.value = Date.parse(n.value);
      break;
    case "urn:mpeg:dash:utc:http-ntp:2014":
    case "urn:mpeg:dash:utc:ntp:2014":
    case "urn:mpeg:dash:utc:sntp:2014":
    default:
      throw new Error(os.UNSUPPORTED_UTC_TIMING_SCHEME);
  }
  return n;
}, e0 = function(e, i) {
  i === void 0 && (i = {});
  var n = $T(ug(e), i), t = VT(n.representationInfo);
  return OT({
    dashPlaylists: t,
    locations: n.locations,
    sidxMapping: i.sidxMapping,
    previousManifest: i.previousManifest
  });
}, t0 = function(e) {
  return ZT(ug(e));
}, lg = Math.pow(2, 32), i0 = function(e) {
  var i = new DataView(e.buffer, e.byteOffset, e.byteLength), n;
  return i.getBigUint64 ? (n = i.getBigUint64(0), n < Number.MAX_SAFE_INTEGER ? Number(n) : n) : i.getUint32(0) * lg + i.getUint32(4);
}, n0 = {
  getUint64: i0,
  MAX_UINT32: lg
}, Zh = n0.getUint64, r0 = function(e) {
  var i = new DataView(e.buffer, e.byteOffset, e.byteLength), n = {
    version: e[0],
    flags: new Uint8Array(e.subarray(1, 4)),
    references: [],
    referenceId: i.getUint32(4),
    timescale: i.getUint32(8)
  }, t = 12;
  n.version === 0 ? (n.earliestPresentationTime = i.getUint32(t), n.firstOffset = i.getUint32(t + 4), t += 8) : (n.earliestPresentationTime = Zh(e.subarray(t)), n.firstOffset = Zh(e.subarray(t + 8)), t += 16), t += 2;
  var r = i.getUint16(t);
  for (t += 2; r > 0; t += 12, r--)
    n.references.push({
      referenceType: (e[t] & 128) >>> 7,
      referencedSize: i.getUint32(t) & 2147483647,
      subsegmentDuration: i.getUint32(t + 4),
      startsWithSap: !!(e[t + 8] & 128),
      sapType: (e[t + 8] & 112) >>> 4,
      sapDeltaTime: i.getUint32(t + 8) & 268435455
    });
  return n;
}, s0 = r0, a0 = Re([73, 68, 51]), o0 = function(e, i) {
  i === void 0 && (i = 0), e = Re(e);
  var n = e[i + 5], t = e[i + 6] << 21 | e[i + 7] << 14 | e[i + 8] << 7 | e[i + 9], r = (n & 16) >> 4;
  return r ? t + 20 : t + 10;
}, zs = function e(i, n) {
  return n === void 0 && (n = 0), i = Re(i), i.length - n < 10 || !Ct(i, a0, {
    offset: n
  }) ? n : (n += o0(i, n), e(i, n));
}, ep = function(e) {
  return typeof e == "string" ? Am(e) : e;
}, u0 = function(e) {
  return Array.isArray(e) ? e.map(function(i) {
    return ep(i);
  }) : [ep(e)];
}, l0 = function e(i, n, t) {
  t === void 0 && (t = !1), n = u0(n), i = Re(i);
  var r = [];
  if (!n.length)
    return r;
  for (var s = 0; s < i.length; ) {
    var a = (i[s] << 24 | i[s + 1] << 16 | i[s + 2] << 8 | i[s + 3]) >>> 0, o = i.subarray(s + 4, s + 8);
    if (a === 0)
      break;
    var u = s + a;
    if (u > i.length) {
      if (t)
        break;
      u = i.length;
    }
    var l = i.subarray(s + 8, u);
    Ct(o, n[0]) && (n.length === 1 ? r.push(l) : r.push.apply(r, e(l, n.slice(1), t))), s = u;
  }
  return r;
}, $a = {
  EBML: Re([26, 69, 223, 163]),
  DocType: Re([66, 130]),
  Segment: Re([24, 83, 128, 103]),
  SegmentInfo: Re([21, 73, 169, 102]),
  Tracks: Re([22, 84, 174, 107]),
  Track: Re([174]),
  TrackNumber: Re([215]),
  DefaultDuration: Re([35, 227, 131]),
  TrackEntry: Re([174]),
  TrackType: Re([131]),
  FlagDefault: Re([136]),
  CodecID: Re([134]),
  CodecPrivate: Re([99, 162]),
  VideoTrack: Re([224]),
  AudioTrack: Re([225]),
  Cluster: Re([31, 67, 182, 117]),
  Timestamp: Re([231]),
  TimestampScale: Re([42, 215, 177]),
  BlockGroup: Re([160]),
  BlockDuration: Re([155]),
  Block: Re([161]),
  SimpleBlock: Re([163])
}, hc = [128, 64, 32, 16, 8, 4, 2, 1], c0 = function(e) {
  for (var i = 1, n = 0; n < hc.length && !(e & hc[n]); n++)
    i++;
  return i;
}, Ao = function(e, i, n, t) {
  n === void 0 && (n = !0), t === void 0 && (t = !1);
  var r = c0(e[i]), s = e.subarray(i, i + r);
  return n && (s = Array.prototype.slice.call(e, i, i + r), s[0] ^= hc[r - 1]), {
    length: r,
    value: Ob(s, {
      signed: t
    }),
    bytes: s
  };
}, tp = function e(i) {
  return typeof i == "string" ? i.match(/.{1,2}/g).map(function(n) {
    return e(n);
  }) : typeof i == "number" ? Nb(i) : i;
}, d0 = function(e) {
  return Array.isArray(e) ? e.map(function(i) {
    return tp(i);
  }) : [tp(e)];
}, h0 = function e(i, n, t) {
  if (t >= n.length)
    return n.length;
  var r = Ao(n, t, !1);
  if (Ct(i.bytes, r.bytes))
    return t;
  var s = Ao(n, t + r.length);
  return e(i, n, t + s.length + s.value + r.length);
}, ip = function e(i, n) {
  n = d0(n), i = Re(i);
  var t = [];
  if (!n.length)
    return t;
  for (var r = 0; r < i.length; ) {
    var s = Ao(i, r, !1), a = Ao(i, r + s.length), o = r + s.length + a.length;
    a.value === 127 && (a.value = h0(s, i, o), a.value !== i.length && (a.value -= o));
    var u = o + a.value > i.length ? i.length : o + a.value, l = i.subarray(o, u);
    Ct(n[0], s.bytes) && (n.length === 1 ? t.push(l) : t = t.concat(e(l, n.slice(1))));
    var d = s.length + a.length + l.length;
    r += d;
  }
  return t;
}, p0 = Re([0, 0, 0, 1]), f0 = Re([0, 0, 1]), m0 = Re([0, 0, 3]), g0 = function(e) {
  for (var i = [], n = 1; n < e.length - 2; )
    Ct(e.subarray(n, n + 3), m0) && (i.push(n + 2), n++), n++;
  if (i.length === 0)
    return e;
  var t = e.length - i.length, r = new Uint8Array(t), s = 0;
  for (n = 0; n < t; s++, n++)
    s === i[0] && (s++, i.shift()), r[n] = e[s];
  return r;
}, cg = function(e, i, n, t) {
  t === void 0 && (t = 1 / 0), e = Re(e), n = [].concat(n);
  for (var r = 0, s, a = 0; r < e.length && (a < t || s); ) {
    var o = void 0;
    if (Ct(e.subarray(r), p0) ? o = 4 : Ct(e.subarray(r), f0) && (o = 3), !o) {
      r++;
      continue;
    }
    if (a++, s)
      return g0(e.subarray(s, r));
    var u = void 0;
    i === "h264" ? u = e[r + o] & 31 : i === "h265" && (u = e[r + o] >> 1 & 63), n.indexOf(u) !== -1 && (s = r + o), r += o + (i === "h264" ? 1 : 2);
  }
  return e.subarray(0, 0);
}, v0 = function(e, i, n) {
  return cg(e, "h264", i, n);
}, y0 = function(e, i, n) {
  return cg(e, "h265", i, n);
}, ui = {
  webm: Re([119, 101, 98, 109]),
  matroska: Re([109, 97, 116, 114, 111, 115, 107, 97]),
  flac: Re([102, 76, 97, 67]),
  ogg: Re([79, 103, 103, 83]),
  ac3: Re([11, 119]),
  riff: Re([82, 73, 70, 70]),
  avi: Re([65, 86, 73]),
  wav: Re([87, 65, 86, 69]),
  "3gp": Re([102, 116, 121, 112, 51, 103]),
  mp4: Re([102, 116, 121, 112]),
  fmp4: Re([115, 116, 121, 112]),
  mov: Re([102, 116, 121, 112, 113, 116]),
  moov: Re([109, 111, 111, 118]),
  moof: Re([109, 111, 111, 102])
}, us = {
  aac: function(e) {
    var i = zs(e);
    return Ct(e, [255, 16], {
      offset: i,
      mask: [255, 22]
    });
  },
  mp3: function(e) {
    var i = zs(e);
    return Ct(e, [255, 2], {
      offset: i,
      mask: [255, 6]
    });
  },
  webm: function(e) {
    var i = ip(e, [$a.EBML, $a.DocType])[0];
    return Ct(i, ui.webm);
  },
  mkv: function(e) {
    var i = ip(e, [$a.EBML, $a.DocType])[0];
    return Ct(i, ui.matroska);
  },
  mp4: function(e) {
    if (us["3gp"](e) || us.mov(e))
      return !1;
    if (Ct(e, ui.mp4, {
      offset: 4
    }) || Ct(e, ui.fmp4, {
      offset: 4
    }) || Ct(e, ui.moof, {
      offset: 4
    }) || Ct(e, ui.moov, {
      offset: 4
    }))
      return !0;
  },
  mov: function(e) {
    return Ct(e, ui.mov, {
      offset: 4
    });
  },
  "3gp": function(e) {
    return Ct(e, ui["3gp"], {
      offset: 4
    });
  },
  ac3: function(e) {
    var i = zs(e);
    return Ct(e, ui.ac3, {
      offset: i
    });
  },
  ts: function(e) {
    if (e.length < 189 && e.length >= 1)
      return e[0] === 71;
    for (var i = 0; i + 188 < e.length && i < 188; ) {
      if (e[i] === 71 && e[i + 188] === 71)
        return !0;
      i += 1;
    }
    return !1;
  },
  flac: function(e) {
    var i = zs(e);
    return Ct(e, ui.flac, {
      offset: i
    });
  },
  ogg: function(e) {
    return Ct(e, ui.ogg);
  },
  avi: function(e) {
    return Ct(e, ui.riff) && Ct(e, ui.avi, {
      offset: 8
    });
  },
  wav: function(e) {
    return Ct(e, ui.riff) && Ct(e, ui.wav, {
      offset: 8
    });
  },
  h264: function(e) {
    return v0(e, 7, 3).length;
  },
  h265: function(e) {
    return y0(e, [32, 33], 3).length;
  }
}, pc = Object.keys(us).filter(function(e) {
  return e !== "ts" && e !== "h264" && e !== "h265";
}).concat(["ts", "h264", "h265"]);
pc.forEach(function(e) {
  var i = us[e];
  us[e] = function(n) {
    return i(Re(n));
  };
});
var _0 = us, ld = function(e) {
  e = Re(e);
  for (var i = 0; i < pc.length; i++) {
    var n = pc[i];
    if (_0[n](e))
      return n;
  }
  return "";
}, b0 = function(e) {
  return l0(e, ["moof"]).length > 0;
}, cd = 9e4, dd, hd, ru, pd, dg, hg, pg;
dd = function(e) {
  return e * cd;
};
hd = function(e, i) {
  return e * i;
};
ru = function(e) {
  return e / cd;
};
pd = function(e, i) {
  return e / i;
};
dg = function(e, i) {
  return dd(pd(e, i));
};
hg = function(e, i) {
  return hd(ru(e), i);
};
pg = function(e, i, n) {
  return ru(n ? e : e - i);
};
var Io = {
  ONE_SECOND_IN_TS: cd,
  secondsToVideoTs: dd,
  secondsToAudioTs: hd,
  videoTsToSeconds: ru,
  audioTsToSeconds: pd,
  audioTsToVideoTs: dg,
  videoTsToAudioTs: hg,
  metadataTsToSeconds: pg
};
function fc(e) {
  return fc = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(i) {
    return i.__proto__ || Object.getPrototypeOf(i);
  }, fc(e);
}
function T0(e) {
  return Function.toString.call(e).indexOf("[native code]") !== -1;
}
function mc(e) {
  var i = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return mc = function(n) {
    if (n === null || !T0(n))
      return n;
    if (typeof n != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof i < "u") {
      if (i.has(n))
        return i.get(n);
      i.set(n, t);
    }
    function t() {
      return Zs(n, arguments, fc(this).constructor);
    }
    return t.prototype = Object.create(n.prototype, {
      constructor: {
        value: t,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }), ns(t, n);
  }, mc(e);
}
/**
 * @license
 * Video.js 7.21.4 <http://videojs.com/>
 * Copyright Brightcove, Inc. <https://www.brightcove.com/>
 * Available under Apache License Version 2.0
 * <https://github.com/videojs/video.js/blob/main/LICENSE>
 *
 * Includes vtt.js <https://github.com/mozilla/vtt.js>
 * Available under Apache License Version 2.0
 * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>
 */
var fg = "7.21.4", vn = {}, Un = function(e, i) {
  return vn[e] = vn[e] || [], i && (vn[e] = vn[e].concat(i)), vn[e];
}, E0 = function(e, i) {
  Un(e, i);
}, mg = function(e, i) {
  var n = Un(e).indexOf(i);
  return n <= -1 ? !1 : (vn[e] = vn[e].slice(), vn[e].splice(n, 1), !0);
}, S0 = function(e, i) {
  Un(e, [].concat(i).map(function(n) {
    var t = function r() {
      return mg(e, r), n.apply(void 0, arguments);
    };
    return t;
  }));
}, Do = {
  prefixed: !0
}, po = [
  ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror", "fullscreen"],
  ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror", "-webkit-full-screen"],
  ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror", "-moz-full-screen"],
  ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError", "-ms-fullscreen"]
], np = po[0], Xs;
for (var Za = 0; Za < po.length; Za++)
  if (po[Za][1] in me) {
    Xs = po[Za];
    break;
  }
if (Xs) {
  for (var eo = 0; eo < Xs.length; eo++)
    Do[np[eo]] = Xs[eo];
  Do.prefixed = Xs[0] !== np[0];
}
var yi = [], w0 = function(e, i) {
  return function(n, t, r) {
    var s = i.levels[t], a = new RegExp("^(" + s + ")$");
    if (n !== "log" && r.unshift(n.toUpperCase() + ":"), r.unshift(e + ":"), yi) {
      yi.push([].concat(r));
      var o = yi.length - 1e3;
      yi.splice(0, o > 0 ? o : 0);
    }
    if (q.console) {
      var u = q.console[n];
      !u && n === "debug" && (u = q.console.info || q.console.log), !(!u || !s || !a.test(n)) && u[Array.isArray(r) ? "apply" : "call"](q.console, r);
    }
  };
};
function gg(e) {
  var i = "info", n, t = function() {
    for (var r = arguments.length, s = new Array(r), a = 0; a < r; a++)
      s[a] = arguments[a];
    n("log", i, s);
  };
  return n = w0(e, t), t.createLogger = function(r) {
    return gg(e + ": " + r);
  }, t.levels = {
    all: "debug|log|warn|error",
    off: "",
    debug: "debug|log|warn|error",
    info: "log|warn|error",
    warn: "warn|error",
    error: "error",
    DEFAULT: i
  }, t.level = function(r) {
    if (typeof r == "string") {
      if (!t.levels.hasOwnProperty(r))
        throw new Error('"' + r + '" in not a valid log level');
      i = r;
    }
    return i;
  }, t.history = function() {
    return yi ? [].concat(yi) : [];
  }, t.history.filter = function(r) {
    return (yi || []).filter(function(s) {
      return new RegExp(".*" + r + ".*").test(s[0]);
    });
  }, t.history.clear = function() {
    yi && (yi.length = 0);
  }, t.history.disable = function() {
    yi !== null && (yi.length = 0, yi = null);
  }, t.history.enable = function() {
    yi === null && (yi = []);
  }, t.error = function() {
    for (var r = arguments.length, s = new Array(r), a = 0; a < r; a++)
      s[a] = arguments[a];
    return n("error", i, s);
  }, t.warn = function() {
    for (var r = arguments.length, s = new Array(r), a = 0; a < r; a++)
      s[a] = arguments[a];
    return n("warn", i, s);
  }, t.debug = function() {
    for (var r = arguments.length, s = new Array(r), a = 0; a < r; a++)
      s[a] = arguments[a];
    return n("debug", i, s);
  }, t;
}
var Ze = gg("VIDEOJS"), vg = Ze.createLogger, k0 = Object.prototype.toString, yg = function(e) {
  return kn(e) ? Object.keys(e) : [];
};
function Zr(e, i) {
  yg(e).forEach(function(n) {
    return i(e[n], n);
  });
}
function C0(e, i, n) {
  return n === void 0 && (n = 0), yg(e).reduce(function(t, r) {
    return i(t, e[r], r);
  }, n);
}
function Dt(e) {
  for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), t = 1; t < i; t++)
    n[t - 1] = arguments[t];
  return Object.assign ? Mi.apply(void 0, [e].concat(n)) : (n.forEach(function(r) {
    !r || Zr(r, function(s, a) {
      e[a] = s;
    });
  }), e);
}
function kn(e) {
  return !!e && typeof e == "object";
}
function ca(e) {
  return kn(e) && k0.call(e) === "[object Object]" && e.constructor === Object;
}
function da(e, i) {
  if (!e || !i)
    return "";
  if (typeof q.getComputedStyle == "function") {
    var n;
    try {
      n = q.getComputedStyle(e);
    } catch {
      return "";
    }
    return n ? n.getPropertyValue(i) || n[i] : "";
  }
  return "";
}
var Xt = q.navigator && q.navigator.userAgent || "", rp = /AppleWebKit\/([\d.]+)/i.exec(Xt), A0 = rp ? parseFloat(rp.pop()) : null, _g = /iPod/i.test(Xt), I0 = function() {
  var e = Xt.match(/OS (\d+)_/i);
  return e && e[1] ? e[1] : null;
}(), In = /Android/i.test(Xt), fd = function() {
  var e = Xt.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
  if (!e)
    return null;
  var i = e[1] && parseFloat(e[1]), n = e[2] && parseFloat(e[2]);
  return i && n ? parseFloat(e[1] + "." + e[2]) : i || null;
}(), bg = In && fd < 5 && A0 < 537, Tg = /Firefox/i.test(Xt), ba = /Edg/i.test(Xt), Dn = !ba && (/Chrome/i.test(Xt) || /CriOS/i.test(Xt)), Eg = function() {
  var e = Xt.match(/(Chrome|CriOS)\/(\d+)/);
  return e && e[2] ? parseFloat(e[2]) : null;
}(), Ta = function() {
  var e = /MSIE\s(\d+)\.\d/.exec(Xt), i = e && parseFloat(e[1]);
  return !i && /Trident\/7.0/i.test(Xt) && /rv:11.0/.test(Xt) && (i = 11), i;
}(), md = /Safari/i.test(Xt) && !Dn && !In && !ba, Sg = /Windows/i.test(Xt), ls = !!(vs() && ("ontouchstart" in q || q.navigator.maxTouchPoints || q.DocumentTouch && q.document instanceof q.DocumentTouch)), gd = /iPad/i.test(Xt) || md && ls && !/iPhone/i.test(Xt), vd = /iPhone/i.test(Xt) && !gd, fi = vd || gd || _g, su = (md || fi) && !Dn, D0 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  IS_IPOD: _g,
  IOS_VERSION: I0,
  IS_ANDROID: In,
  ANDROID_VERSION: fd,
  IS_NATIVE_ANDROID: bg,
  IS_FIREFOX: Tg,
  IS_EDGE: ba,
  IS_CHROME: Dn,
  CHROME_VERSION: Eg,
  IE_VERSION: Ta,
  IS_SAFARI: md,
  IS_WINDOWS: Sg,
  TOUCH_ENABLED: ls,
  IS_IPAD: gd,
  IS_IPHONE: vd,
  IS_IOS: fi,
  IS_ANY_SAFARI: su
});
function sp(e) {
  return typeof e == "string" && !!e.trim();
}
function wg(e) {
  if (e.indexOf(" ") >= 0)
    throw new Error("class has illegal whitespace characters");
}
function x0(e) {
  return new RegExp("(^|\\s)" + e + "($|\\s)");
}
function vs() {
  return me === q.document;
}
function ys(e) {
  return kn(e) && e.nodeType === 1;
}
function kg() {
  try {
    return q.parent !== q.self;
  } catch {
    return !0;
  }
}
function Cg(e) {
  return function(i, n) {
    if (!sp(i))
      return me[e](null);
    sp(n) && (n = me.querySelector(n));
    var t = ys(n) ? n : me;
    return t[e] && t[e](i);
  };
}
function st(e, i, n, t) {
  e === void 0 && (e = "div"), i === void 0 && (i = {}), n === void 0 && (n = {});
  var r = me.createElement(e);
  return Object.getOwnPropertyNames(i).forEach(function(s) {
    var a = i[s];
    s.indexOf("aria-") !== -1 || s === "role" || s === "type" ? (Ze.warn(`Setting attributes in the second argument of createEl()
has been deprecated. Use the third argument instead.
` + ("createEl(type, properties, attributes). Attempting to set " + s + " to " + a + ".")), r.setAttribute(s, a)) : s === "textContent" ? _r(r, a) : (r[s] !== a || s === "tabIndex") && (r[s] = a);
  }), Object.getOwnPropertyNames(n).forEach(function(s) {
    r.setAttribute(s, n[s]);
  }), t && _d(r, t), r;
}
function _r(e, i) {
  return typeof e.textContent > "u" ? e.innerText = i : e.textContent = i, e;
}
function gc(e, i) {
  i.firstChild ? i.insertBefore(e, i.firstChild) : i.appendChild(e);
}
function pr(e, i) {
  return wg(i), e.classList ? e.classList.contains(i) : x0(i).test(e.className);
}
function bn(e, i) {
  return e.classList ? e.classList.add(i) : pr(e, i) || (e.className = (e.className + " " + i).trim()), e;
}
function Ea(e, i) {
  return e ? (e.classList ? e.classList.remove(i) : (wg(i), e.className = e.className.split(/\s+/).filter(function(n) {
    return n !== i;
  }).join(" ")), e) : (Ze.warn("removeClass was called with an element that doesn't exist"), null);
}
function Ag(e, i, n) {
  var t = pr(e, i);
  if (typeof n == "function" && (n = n(e, i)), typeof n != "boolean" && (n = !t), n !== t)
    return n ? bn(e, i) : Ea(e, i), e;
}
function Ig(e, i) {
  Object.getOwnPropertyNames(i).forEach(function(n) {
    var t = i[n];
    t === null || typeof t > "u" || t === !1 ? e.removeAttribute(n) : e.setAttribute(n, t === !0 ? "" : t);
  });
}
function gn(e) {
  var i = {}, n = ",autoplay,controls,playsinline,loop,muted,default,defaultMuted,";
  if (e && e.attributes && e.attributes.length > 0)
    for (var t = e.attributes, r = t.length - 1; r >= 0; r--) {
      var s = t[r].name, a = t[r].value;
      (typeof e[s] == "boolean" || n.indexOf("," + s + ",") !== -1) && (a = a !== null), i[s] = a;
    }
  return i;
}
function Dg(e, i) {
  return e.getAttribute(i);
}
function cs(e, i, n) {
  e.setAttribute(i, n);
}
function au(e, i) {
  e.removeAttribute(i);
}
function xg() {
  me.body.focus(), me.onselectstart = function() {
    return !1;
  };
}
function Pg() {
  me.onselectstart = function() {
    return !0;
  };
}
function ds(e) {
  if (e && e.getBoundingClientRect && e.parentNode) {
    var i = e.getBoundingClientRect(), n = {};
    return ["bottom", "height", "left", "right", "top", "width"].forEach(function(t) {
      i[t] !== void 0 && (n[t] = i[t]);
    }), n.height || (n.height = parseFloat(da(e, "height"))), n.width || (n.width = parseFloat(da(e, "width"))), n;
  }
}
function ha(e) {
  if (!e || e && !e.offsetParent)
    return {
      left: 0,
      top: 0,
      width: 0,
      height: 0
    };
  for (var i = e.offsetWidth, n = e.offsetHeight, t = 0, r = 0; e.offsetParent && e !== me[Do.fullscreenElement]; )
    t += e.offsetLeft, r += e.offsetTop, e = e.offsetParent;
  return {
    left: t,
    top: r,
    width: i,
    height: n
  };
}
function ou(e, i) {
  var n = {
    x: 0,
    y: 0
  };
  if (fi)
    for (var t = e; t && t.nodeName.toLowerCase() !== "html"; ) {
      var r = da(t, "transform");
      if (/^matrix/.test(r)) {
        var s = r.slice(7, -1).split(/,\s/).map(Number);
        n.x += s[4], n.y += s[5];
      } else if (/^matrix3d/.test(r)) {
        var a = r.slice(9, -1).split(/,\s/).map(Number);
        n.x += a[12], n.y += a[13];
      }
      t = t.parentNode;
    }
  var o = {}, u = ha(i.target), l = ha(e), d = l.width, p = l.height, h = i.offsetY - (l.top - u.top), m = i.offsetX - (l.left - u.left);
  return i.changedTouches && (m = i.changedTouches[0].pageX - l.left, h = i.changedTouches[0].pageY + l.top, fi && (m -= n.x, h -= n.y)), o.y = 1 - Math.max(0, Math.min(1, h / p)), o.x = Math.max(0, Math.min(1, m / d)), o;
}
function Lg(e) {
  return kn(e) && e.nodeType === 3;
}
function yd(e) {
  for (; e.firstChild; )
    e.removeChild(e.firstChild);
  return e;
}
function Og(e) {
  return typeof e == "function" && (e = e()), (Array.isArray(e) ? e : [e]).map(function(i) {
    if (typeof i == "function" && (i = i()), ys(i) || Lg(i))
      return i;
    if (typeof i == "string" && /\S/.test(i))
      return me.createTextNode(i);
  }).filter(function(i) {
    return i;
  });
}
function _d(e, i) {
  return Og(i).forEach(function(n) {
    return e.appendChild(n);
  }), e;
}
function Ng(e, i) {
  return _d(yd(e), i);
}
function pa(e) {
  return e.button === void 0 && e.buttons === void 0 || e.button === 0 && e.buttons === void 0 || e.type === "mouseup" && e.button === 0 && e.buttons === 0 ? !0 : !(e.button !== 0 || e.buttons !== 1);
}
var Fn = Cg("querySelector"), Rg = Cg("querySelectorAll"), Mg = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  isReal: vs,
  isEl: ys,
  isInFrame: kg,
  createEl: st,
  textContent: _r,
  prependTo: gc,
  hasClass: pr,
  addClass: bn,
  removeClass: Ea,
  toggleClass: Ag,
  setAttributes: Ig,
  getAttributes: gn,
  getAttribute: Dg,
  setAttribute: cs,
  removeAttribute: au,
  blockTextSelection: xg,
  unblockTextSelection: Pg,
  getBoundingClientRect: ds,
  findPosition: ha,
  getPointerPosition: ou,
  isTextNode: Lg,
  emptyEl: yd,
  normalizeContent: Og,
  appendContent: _d,
  insertContent: Ng,
  isSingleLeftClick: pa,
  $: Fn,
  $$: Rg
}), Bg = !1, vc, P0 = function() {
  if (vc.options.autoSetup !== !1) {
    var e = Array.prototype.slice.call(me.getElementsByTagName("video")), i = Array.prototype.slice.call(me.getElementsByTagName("audio")), n = Array.prototype.slice.call(me.getElementsByTagName("video-js")), t = e.concat(i, n);
    if (t && t.length > 0)
      for (var r = 0, s = t.length; r < s; r++) {
        var a = t[r];
        if (a && a.getAttribute) {
          if (a.player === void 0) {
            var o = a.getAttribute("data-setup");
            o !== null && vc(a);
          }
        } else {
          yc(1);
          break;
        }
      }
    else
      Bg || yc(1);
  }
};
function yc(e, i) {
  !vs() || (i && (vc = i), q.setTimeout(P0, e));
}
function _c() {
  Bg = !0, q.removeEventListener("load", _c);
}
vs() && (me.readyState === "complete" ? _c() : q.addEventListener("load", _c));
var Ug = function(e) {
  var i = me.createElement("style");
  return i.className = e, i;
}, Fg = function(e, i) {
  e.styleSheet ? e.styleSheet.cssText = i : e.textContent = i;
}, L0 = 3, O0 = L0;
function xn() {
  return O0++;
}
var jg;
q.WeakMap || (jg = /* @__PURE__ */ function() {
  function e() {
    this.vdata = "vdata" + Math.floor(q.performance && q.performance.now() || Date.now()), this.data = {};
  }
  var i = e.prototype;
  return i.set = function(n, t) {
    var r = n[this.vdata] || xn();
    return n[this.vdata] || (n[this.vdata] = r), this.data[r] = t, this;
  }, i.get = function(n) {
    var t = n[this.vdata];
    if (t)
      return this.data[t];
    Ze("We have no data for this element", n);
  }, i.has = function(n) {
    var t = n[this.vdata];
    return t in this.data;
  }, i.delete = function(n) {
    var t = n[this.vdata];
    t && (delete this.data[t], delete n[this.vdata]);
  }, e;
}());
var hi = q.WeakMap ? /* @__PURE__ */ new WeakMap() : new jg();
function ap(e, i) {
  if (hi.has(e)) {
    var n = hi.get(e);
    n.handlers[i].length === 0 && (delete n.handlers[i], e.removeEventListener ? e.removeEventListener(i, n.dispatcher, !1) : e.detachEvent && e.detachEvent("on" + i, n.dispatcher)), Object.getOwnPropertyNames(n.handlers).length <= 0 && (delete n.handlers, delete n.dispatcher, delete n.disabled), Object.getOwnPropertyNames(n).length === 0 && hi.delete(e);
  }
}
function bd(e, i, n, t) {
  n.forEach(function(r) {
    e(i, r, t);
  });
}
function uu(e) {
  if (e.fixed_)
    return e;
  function i() {
    return !0;
  }
  function n() {
    return !1;
  }
  if (!e || !e.isPropagationStopped || !e.isImmediatePropagationStopped) {
    var t = e || q.event;
    e = {};
    for (var r in t)
      r !== "layerX" && r !== "layerY" && r !== "keyLocation" && r !== "webkitMovementX" && r !== "webkitMovementY" && r !== "path" && (r === "returnValue" && t.preventDefault || (e[r] = t[r]));
    if (e.target || (e.target = e.srcElement || me), e.relatedTarget || (e.relatedTarget = e.fromElement === e.target ? e.toElement : e.fromElement), e.preventDefault = function() {
      t.preventDefault && t.preventDefault(), e.returnValue = !1, t.returnValue = !1, e.defaultPrevented = !0;
    }, e.defaultPrevented = !1, e.stopPropagation = function() {
      t.stopPropagation && t.stopPropagation(), e.cancelBubble = !0, t.cancelBubble = !0, e.isPropagationStopped = i;
    }, e.isPropagationStopped = n, e.stopImmediatePropagation = function() {
      t.stopImmediatePropagation && t.stopImmediatePropagation(), e.isImmediatePropagationStopped = i, e.stopPropagation();
    }, e.isImmediatePropagationStopped = n, e.clientX !== null && e.clientX !== void 0) {
      var s = me.documentElement, a = me.body;
      e.pageX = e.clientX + (s && s.scrollLeft || a && a.scrollLeft || 0) - (s && s.clientLeft || a && a.clientLeft || 0), e.pageY = e.clientY + (s && s.scrollTop || a && a.scrollTop || 0) - (s && s.clientTop || a && a.clientTop || 0);
    }
    e.which = e.charCode || e.keyCode, e.button !== null && e.button !== void 0 && (e.button = e.button & 1 ? 0 : e.button & 4 ? 1 : e.button & 2 ? 2 : 0);
  }
  return e.fixed_ = !0, e;
}
var to, N0 = function() {
  if (typeof to != "boolean") {
    to = !1;
    try {
      var e = Object.defineProperty({}, "passive", {
        get: function() {
          to = !0;
        }
      });
      q.addEventListener("test", null, e), q.removeEventListener("test", null, e);
    } catch {
    }
  }
  return to;
}, R0 = ["touchstart", "touchmove"];
function Ii(e, i, n) {
  if (Array.isArray(i))
    return bd(Ii, e, i, n);
  hi.has(e) || hi.set(e, {});
  var t = hi.get(e);
  if (t.handlers || (t.handlers = {}), t.handlers[i] || (t.handlers[i] = []), n.guid || (n.guid = xn()), t.handlers[i].push(n), t.dispatcher || (t.disabled = !1, t.dispatcher = function(s, a) {
    if (!t.disabled) {
      s = uu(s);
      var o = t.handlers[s.type];
      if (o)
        for (var u = o.slice(0), l = 0, d = u.length; l < d && !s.isImmediatePropagationStopped(); l++)
          try {
            u[l].call(e, s, a);
          } catch (p) {
            Ze.error(p);
          }
    }
  }), t.handlers[i].length === 1)
    if (e.addEventListener) {
      var r = !1;
      N0() && R0.indexOf(i) > -1 && (r = {
        passive: !0
      }), e.addEventListener(i, t.dispatcher, r);
    } else
      e.attachEvent && e.attachEvent("on" + i, t.dispatcher);
}
function si(e, i, n) {
  if (hi.has(e)) {
    var t = hi.get(e);
    if (t.handlers) {
      if (Array.isArray(i))
        return bd(si, e, i, n);
      var r = function(u, l) {
        t.handlers[l] = [], ap(u, l);
      };
      if (i === void 0) {
        for (var s in t.handlers)
          Object.prototype.hasOwnProperty.call(t.handlers || {}, s) && r(e, s);
        return;
      }
      var a = t.handlers[i];
      if (a) {
        if (!n) {
          r(e, i);
          return;
        }
        if (n.guid)
          for (var o = 0; o < a.length; o++)
            a[o].guid === n.guid && a.splice(o--, 1);
        ap(e, i);
      }
    }
  }
}
function _s(e, i, n) {
  var t = hi.has(e) ? hi.get(e) : {}, r = e.parentNode || e.ownerDocument;
  if (typeof i == "string" ? i = {
    type: i,
    target: e
  } : i.target || (i.target = e), i = uu(i), t.dispatcher && t.dispatcher.call(e, i, n), r && !i.isPropagationStopped() && i.bubbles === !0)
    _s.call(null, r, i, n);
  else if (!r && !i.defaultPrevented && i.target && i.target[i.type]) {
    hi.has(i.target) || hi.set(i.target, {});
    var s = hi.get(i.target);
    i.target[i.type] && (s.disabled = !0, typeof i.target[i.type] == "function" && i.target[i.type](), s.disabled = !1);
  }
  return !i.defaultPrevented;
}
function lu(e, i, n) {
  if (Array.isArray(i))
    return bd(lu, e, i, n);
  var t = function r() {
    si(e, i, r), n.apply(this, arguments);
  };
  t.guid = n.guid = n.guid || xn(), Ii(e, i, t);
}
function qg(e, i, n) {
  var t = function r() {
    si(e, i, r), n.apply(this, arguments);
  };
  t.guid = n.guid = n.guid || xn(), Ii(e, i, t);
}
var M0 = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  fixEvent: uu,
  on: Ii,
  off: si,
  trigger: _s,
  one: lu,
  any: qg
}), Ki = 30, kt = function(e, i, n) {
  i.guid || (i.guid = xn());
  var t = i.bind(e);
  return t.guid = n ? n + "_" + i.guid : i.guid, t;
}, Cn = function(e, i) {
  var n = q.performance.now(), t = function() {
    var r = q.performance.now();
    r - n >= i && (e.apply(void 0, arguments), n = r);
  };
  return t;
}, B0 = function(e, i, n, t) {
  t === void 0 && (t = q);
  var r, s = function() {
    t.clearTimeout(r), r = null;
  }, a = function() {
    var o = this, u = arguments, l = function() {
      r = null, l = null, n || e.apply(o, u);
    };
    !r && n && e.apply(o, u), t.clearTimeout(r), r = t.setTimeout(l, i);
  };
  return a.cancel = s, a;
}, Jt = function() {
};
Jt.prototype.allowedEvents_ = {};
Jt.prototype.on = function(e, i) {
  var n = this.addEventListener;
  this.addEventListener = function() {
  }, Ii(this, e, i), this.addEventListener = n;
};
Jt.prototype.addEventListener = Jt.prototype.on;
Jt.prototype.off = function(e, i) {
  si(this, e, i);
};
Jt.prototype.removeEventListener = Jt.prototype.off;
Jt.prototype.one = function(e, i) {
  var n = this.addEventListener;
  this.addEventListener = function() {
  }, lu(this, e, i), this.addEventListener = n;
};
Jt.prototype.any = function(e, i) {
  var n = this.addEventListener;
  this.addEventListener = function() {
  }, qg(this, e, i), this.addEventListener = n;
};
Jt.prototype.trigger = function(e) {
  var i = e.type || e;
  typeof e == "string" && (e = {
    type: i
  }), e = uu(e), this.allowedEvents_[i] && this["on" + i] && this["on" + i](e), _s(this, e);
};
Jt.prototype.dispatchEvent = Jt.prototype.trigger;
var js;
Jt.prototype.queueTrigger = function(e) {
  var i = this;
  js || (js = /* @__PURE__ */ new Map());
  var n = e.type || e, t = js.get(this);
  t || (t = /* @__PURE__ */ new Map(), js.set(this, t));
  var r = t.get(n);
  t.delete(n), q.clearTimeout(r);
  var s = q.setTimeout(function() {
    t.delete(n), t.size === 0 && (t = null, js.delete(i)), i.trigger(e);
  }, 0);
  t.set(n, s);
};
var cu = function(e) {
  return typeof e.name == "function" ? e.name() : typeof e.name == "string" ? e.name : e.name_ ? e.name_ : e.constructor && e.constructor.name ? e.constructor.name : typeof e;
}, Tn = function(e) {
  return e instanceof Jt || !!e.eventBusEl_ && ["on", "one", "off", "trigger"].every(function(i) {
    return typeof e[i] == "function";
  });
}, U0 = function(e, i) {
  Tn(e) ? i() : (e.eventedCallbacks || (e.eventedCallbacks = []), e.eventedCallbacks.push(i));
}, bc = function(e) {
  return typeof e == "string" && /\S/.test(e) || Array.isArray(e) && !!e.length;
}, xo = function(e, i, n) {
  if (!e || !e.nodeName && !Tn(e))
    throw new Error("Invalid target for " + cu(i) + "#" + n + "; must be a DOM node or evented object.");
}, Vg = function(e, i, n) {
  if (!bc(e))
    throw new Error("Invalid event type for " + cu(i) + "#" + n + "; must be a non-empty string or array.");
}, Hg = function(e, i, n) {
  if (typeof e != "function")
    throw new Error("Invalid listener for " + cu(i) + "#" + n + "; must be a function.");
}, Ju = function(e, i, n) {
  var t = i.length < 3 || i[0] === e || i[0] === e.eventBusEl_, r, s, a;
  return t ? (r = e.eventBusEl_, i.length >= 3 && i.shift(), s = i[0], a = i[1]) : (r = i[0], s = i[1], a = i[2]), xo(r, e, n), Vg(s, e, n), Hg(a, e, n), a = kt(e, a), {
    isTargetingSelf: t,
    target: r,
    type: s,
    listener: a
  };
}, ar = function(e, i, n, t) {
  xo(e, e, i), e.nodeName ? M0[i](e, n, t) : e[i](n, t);
}, F0 = {
  on: function() {
    for (var e = this, i = arguments.length, n = new Array(i), t = 0; t < i; t++)
      n[t] = arguments[t];
    var r = Ju(this, n, "on"), s = r.isTargetingSelf, a = r.target, o = r.type, u = r.listener;
    if (ar(a, "on", o, u), !s) {
      var l = function() {
        return e.off(a, o, u);
      };
      l.guid = u.guid;
      var d = function() {
        return e.off("dispose", l);
      };
      d.guid = u.guid, ar(this, "on", "dispose", l), ar(a, "on", "dispose", d);
    }
  },
  one: function() {
    for (var e = this, i = arguments.length, n = new Array(i), t = 0; t < i; t++)
      n[t] = arguments[t];
    var r = Ju(this, n, "one"), s = r.isTargetingSelf, a = r.target, o = r.type, u = r.listener;
    if (s)
      ar(a, "one", o, u);
    else {
      var l = function d() {
        e.off(a, o, d);
        for (var p = arguments.length, h = new Array(p), m = 0; m < p; m++)
          h[m] = arguments[m];
        u.apply(null, h);
      };
      l.guid = u.guid, ar(a, "one", o, l);
    }
  },
  any: function() {
    for (var e = this, i = arguments.length, n = new Array(i), t = 0; t < i; t++)
      n[t] = arguments[t];
    var r = Ju(this, n, "any"), s = r.isTargetingSelf, a = r.target, o = r.type, u = r.listener;
    if (s)
      ar(a, "any", o, u);
    else {
      var l = function d() {
        e.off(a, o, d);
        for (var p = arguments.length, h = new Array(p), m = 0; m < p; m++)
          h[m] = arguments[m];
        u.apply(null, h);
      };
      l.guid = u.guid, ar(a, "any", o, l);
    }
  },
  off: function(e, i, n) {
    if (!e || bc(e))
      si(this.eventBusEl_, e, i);
    else {
      var t = e, r = i;
      xo(t, this, "off"), Vg(r, this, "off"), Hg(n, this, "off"), n = kt(this, n), this.off("dispose", n), t.nodeName ? (si(t, r, n), si(t, "dispose", n)) : Tn(t) && (t.off(r, n), t.off("dispose", n));
    }
  },
  trigger: function(e, i) {
    xo(this.eventBusEl_, this, "trigger");
    var n = e && typeof e != "string" ? e.type : e;
    if (!bc(n)) {
      var t = "Invalid event type for " + cu(this) + "#trigger; must be a non-empty string or object with a type key that has a non-empty value.";
      if (e)
        (this.log || Ze).error(t);
      else
        throw new Error(t);
    }
    return _s(this.eventBusEl_, e, i);
  }
};
function Td(e, i) {
  i === void 0 && (i = {});
  var n = i, t = n.eventBusKey;
  if (t) {
    if (!e[t].nodeName)
      throw new Error('The eventBusKey "' + t + '" does not refer to an element.');
    e.eventBusEl_ = e[t];
  } else
    e.eventBusEl_ = st("span", {
      className: "vjs-event-bus"
    });
  return Dt(e, F0), e.eventedCallbacks && e.eventedCallbacks.forEach(function(r) {
    r();
  }), e.on("dispose", function() {
    e.off(), [e, e.el_, e.eventBusEl_].forEach(function(r) {
      r && hi.has(r) && hi.delete(r);
    }), q.setTimeout(function() {
      e.eventBusEl_ = null;
    }, 0);
  }), e;
}
var j0 = {
  state: {},
  setState: function(e) {
    var i = this;
    typeof e == "function" && (e = e());
    var n;
    return Zr(e, function(t, r) {
      i.state[r] !== t && (n = n || {}, n[r] = {
        from: i.state[r],
        to: t
      }), i.state[r] = t;
    }), n && Tn(this) && this.trigger({
      changes: n,
      type: "statechanged"
    }), n;
  }
};
function Wg(e, i) {
  return Dt(e, j0), e.state = Dt({}, e.state, i), typeof e.handleStateChanged == "function" && Tn(e) && e.on("statechanged", e.handleStateChanged), e;
}
var fo = function(e) {
  return typeof e != "string" ? e : e.replace(/./, function(i) {
    return i.toLowerCase();
  });
}, Nt = function(e) {
  return typeof e != "string" ? e : e.replace(/./, function(i) {
    return i.toUpperCase();
  });
}, q0 = function(e, i) {
  return Nt(e) === Nt(i);
};
function wt() {
  for (var e = {}, i = arguments.length, n = new Array(i), t = 0; t < i; t++)
    n[t] = arguments[t];
  return n.forEach(function(r) {
    !r || Zr(r, function(s, a) {
      if (!ca(s)) {
        e[a] = s;
        return;
      }
      ca(e[a]) || (e[a] = {}), e[a] = wt(e[a], s);
    });
  }), e;
}
var V0 = /* @__PURE__ */ function() {
  function e() {
    this.map_ = {};
  }
  var i = e.prototype;
  return i.has = function(n) {
    return n in this.map_;
  }, i.delete = function(n) {
    var t = this.has(n);
    return delete this.map_[n], t;
  }, i.set = function(n, t) {
    return this.map_[n] = t, this;
  }, i.forEach = function(n, t) {
    for (var r in this.map_)
      n.call(t, this.map_[r], r, this);
  }, e;
}(), H0 = q.Map ? q.Map : V0, W0 = /* @__PURE__ */ function() {
  function e() {
    this.set_ = {};
  }
  var i = e.prototype;
  return i.has = function(n) {
    return n in this.set_;
  }, i.delete = function(n) {
    var t = this.has(n);
    return delete this.set_[n], t;
  }, i.add = function(n) {
    return this.set_[n] = 1, this;
  }, i.forEach = function(n, t) {
    for (var r in this.set_)
      n.call(t, r, r, this);
  }, e;
}(), Yu = q.Set ? q.Set : W0, ce = /* @__PURE__ */ function() {
  function e(n, t, r) {
    var s = this;
    if (!n && this.play ? this.player_ = n = this : this.player_ = n, this.isDisposed_ = !1, this.parentComponent_ = null, this.options_ = wt({}, this.options_), t = this.options_ = wt(this.options_, t), this.id_ = t.id || t.el && t.el.id, !this.id_) {
      var a = n && n.id && n.id() || "no_player";
      this.id_ = a + "_component_" + xn();
    }
    this.name_ = t.name || null, t.el ? this.el_ = t.el : t.createEl !== !1 && (this.el_ = this.createEl()), t.className && this.el_ && t.className.split(" ").forEach(function(o) {
      return s.addClass(o);
    }), t.evented !== !1 && (Td(this, {
      eventBusKey: this.el_ ? "el_" : null
    }), this.handleLanguagechange = this.handleLanguagechange.bind(this), this.on(this.player_, "languagechange", this.handleLanguagechange)), Wg(this, this.constructor.defaultState), this.children_ = [], this.childIndex_ = {}, this.childNameIndex_ = {}, this.setTimeoutIds_ = new Yu(), this.setIntervalIds_ = new Yu(), this.rafIds_ = new Yu(), this.namedRafs_ = new H0(), this.clearingTimersOnDispose_ = !1, t.initChildren !== !1 && this.initChildren(), this.ready(r), t.reportTouchActivity !== !1 && this.enableTouchActivity();
  }
  var i = e.prototype;
  return i.dispose = function(n) {
    if (n === void 0 && (n = {}), !this.isDisposed_) {
      if (this.readyQueue_ && (this.readyQueue_.length = 0), this.trigger({
        type: "dispose",
        bubbles: !1
      }), this.isDisposed_ = !0, this.children_)
        for (var t = this.children_.length - 1; t >= 0; t--)
          this.children_[t].dispose && this.children_[t].dispose();
      this.children_ = null, this.childIndex_ = null, this.childNameIndex_ = null, this.parentComponent_ = null, this.el_ && (this.el_.parentNode && (n.restoreEl ? this.el_.parentNode.replaceChild(n.restoreEl, this.el_) : this.el_.parentNode.removeChild(this.el_)), this.el_ = null), this.player_ = null;
    }
  }, i.isDisposed = function() {
    return !!this.isDisposed_;
  }, i.player = function() {
    return this.player_;
  }, i.options = function(n) {
    return n ? (this.options_ = wt(this.options_, n), this.options_) : this.options_;
  }, i.el = function() {
    return this.el_;
  }, i.createEl = function(n, t, r) {
    return st(n, t, r);
  }, i.localize = function(n, t, r) {
    r === void 0 && (r = n);
    var s = this.player_.language && this.player_.language(), a = this.player_.languages && this.player_.languages(), o = a && a[s], u = s && s.split("-")[0], l = a && a[u], d = r;
    return o && o[n] ? d = o[n] : l && l[n] && (d = l[n]), t && (d = d.replace(/\{(\d+)\}/g, function(p, h) {
      var m = t[h - 1], y = m;
      return typeof m > "u" && (y = p), y;
    })), d;
  }, i.handleLanguagechange = function() {
  }, i.contentEl = function() {
    return this.contentEl_ || this.el_;
  }, i.id = function() {
    return this.id_;
  }, i.name = function() {
    return this.name_;
  }, i.children = function() {
    return this.children_;
  }, i.getChildById = function(n) {
    return this.childIndex_[n];
  }, i.getChild = function(n) {
    if (n)
      return this.childNameIndex_[n];
  }, i.getDescendant = function() {
    for (var n = arguments.length, t = new Array(n), r = 0; r < n; r++)
      t[r] = arguments[r];
    t = t.reduce(function(o, u) {
      return o.concat(u);
    }, []);
    for (var s = this, a = 0; a < t.length; a++)
      if (s = s.getChild(t[a]), !s || !s.getChild)
        return;
    return s;
  }, i.addChild = function(n, t, r) {
    t === void 0 && (t = {}), r === void 0 && (r = this.children_.length);
    var s, a;
    if (typeof n == "string") {
      a = Nt(n);
      var o = t.componentClass || a;
      t.name = a;
      var u = e.getComponent(o);
      if (!u)
        throw new Error("Component " + o + " does not exist");
      if (typeof u != "function")
        return null;
      s = new u(this.player_ || this, t);
    } else
      s = n;
    if (s.parentComponent_ && s.parentComponent_.removeChild(s), this.children_.splice(r, 0, s), s.parentComponent_ = this, typeof s.id == "function" && (this.childIndex_[s.id()] = s), a = a || s.name && Nt(s.name()), a && (this.childNameIndex_[a] = s, this.childNameIndex_[fo(a)] = s), typeof s.el == "function" && s.el()) {
      var l = null;
      this.children_[r + 1] && (this.children_[r + 1].el_ ? l = this.children_[r + 1].el_ : ys(this.children_[r + 1]) && (l = this.children_[r + 1])), this.contentEl().insertBefore(s.el(), l);
    }
    return s;
  }, i.removeChild = function(n) {
    if (typeof n == "string" && (n = this.getChild(n)), !(!n || !this.children_)) {
      for (var t = !1, r = this.children_.length - 1; r >= 0; r--)
        if (this.children_[r] === n) {
          t = !0, this.children_.splice(r, 1);
          break;
        }
      if (t) {
        n.parentComponent_ = null, this.childIndex_[n.id()] = null, this.childNameIndex_[Nt(n.name())] = null, this.childNameIndex_[fo(n.name())] = null;
        var s = n.el();
        s && s.parentNode === this.contentEl() && this.contentEl().removeChild(n.el());
      }
    }
  }, i.initChildren = function() {
    var n = this, t = this.options_.children;
    if (t) {
      var r = this.options_, s = function(u) {
        var l = u.name, d = u.opts;
        if (r[l] !== void 0 && (d = r[l]), d !== !1) {
          d === !0 && (d = {}), d.playerOptions = n.options_.playerOptions;
          var p = n.addChild(l, d);
          p && (n[l] = p);
        }
      }, a, o = e.getComponent("Tech");
      Array.isArray(t) ? a = t : a = Object.keys(t), a.concat(Object.keys(this.options_).filter(function(u) {
        return !a.some(function(l) {
          return typeof l == "string" ? u === l : u === l.name;
        });
      })).map(function(u) {
        var l, d;
        return typeof u == "string" ? (l = u, d = t[l] || n.options_[l] || {}) : (l = u.name, d = u), {
          name: l,
          opts: d
        };
      }).filter(function(u) {
        var l = e.getComponent(u.opts.componentClass || Nt(u.name));
        return l && !o.isTech(l);
      }).forEach(s);
    }
  }, i.buildCSSClass = function() {
    return "";
  }, i.ready = function(n, t) {
    if (t === void 0 && (t = !1), !!n) {
      if (!this.isReady_) {
        this.readyQueue_ = this.readyQueue_ || [], this.readyQueue_.push(n);
        return;
      }
      t ? n.call(this) : this.setTimeout(n, 1);
    }
  }, i.triggerReady = function() {
    this.isReady_ = !0, this.setTimeout(function() {
      var n = this.readyQueue_;
      this.readyQueue_ = [], n && n.length > 0 && n.forEach(function(t) {
        t.call(this);
      }, this), this.trigger("ready");
    }, 1);
  }, i.$ = function(n, t) {
    return Fn(n, t || this.contentEl());
  }, i.$$ = function(n, t) {
    return Rg(n, t || this.contentEl());
  }, i.hasClass = function(n) {
    return pr(this.el_, n);
  }, i.addClass = function(n) {
    bn(this.el_, n);
  }, i.removeClass = function(n) {
    Ea(this.el_, n);
  }, i.toggleClass = function(n, t) {
    Ag(this.el_, n, t);
  }, i.show = function() {
    this.removeClass("vjs-hidden");
  }, i.hide = function() {
    this.addClass("vjs-hidden");
  }, i.lockShowing = function() {
    this.addClass("vjs-lock-showing");
  }, i.unlockShowing = function() {
    this.removeClass("vjs-lock-showing");
  }, i.getAttribute = function(n) {
    return Dg(this.el_, n);
  }, i.setAttribute = function(n, t) {
    cs(this.el_, n, t);
  }, i.removeAttribute = function(n) {
    au(this.el_, n);
  }, i.width = function(n, t) {
    return this.dimension("width", n, t);
  }, i.height = function(n, t) {
    return this.dimension("height", n, t);
  }, i.dimensions = function(n, t) {
    this.width(n, !0), this.height(t);
  }, i.dimension = function(n, t, r) {
    if (t !== void 0) {
      (t === null || t !== t) && (t = 0), ("" + t).indexOf("%") !== -1 || ("" + t).indexOf("px") !== -1 ? this.el_.style[n] = t : t === "auto" ? this.el_.style[n] = "" : this.el_.style[n] = t + "px", r || this.trigger("componentresize");
      return;
    }
    if (!this.el_)
      return 0;
    var s = this.el_.style[n], a = s.indexOf("px");
    return parseInt(a !== -1 ? s.slice(0, a) : this.el_["offset" + Nt(n)], 10);
  }, i.currentDimension = function(n) {
    var t = 0;
    if (n !== "width" && n !== "height")
      throw new Error("currentDimension only accepts width or height value");
    if (t = da(this.el_, n), t = parseFloat(t), t === 0 || isNaN(t)) {
      var r = "offset" + Nt(n);
      t = this.el_[r];
    }
    return t;
  }, i.currentDimensions = function() {
    return {
      width: this.currentDimension("width"),
      height: this.currentDimension("height")
    };
  }, i.currentWidth = function() {
    return this.currentDimension("width");
  }, i.currentHeight = function() {
    return this.currentDimension("height");
  }, i.focus = function() {
    this.el_.focus();
  }, i.blur = function() {
    this.el_.blur();
  }, i.handleKeyDown = function(n) {
    this.player_ && (ze.isEventKey(n, "Tab") || n.stopPropagation(), this.player_.handleKeyDown(n));
  }, i.handleKeyPress = function(n) {
    this.handleKeyDown(n);
  }, i.emitTapEvents = function() {
    var n = 0, t = null, r = 10, s = 200, a;
    this.on("touchstart", function(u) {
      u.touches.length === 1 && (t = {
        pageX: u.touches[0].pageX,
        pageY: u.touches[0].pageY
      }, n = q.performance.now(), a = !0);
    }), this.on("touchmove", function(u) {
      if (u.touches.length > 1)
        a = !1;
      else if (t) {
        var l = u.touches[0].pageX - t.pageX, d = u.touches[0].pageY - t.pageY, p = Math.sqrt(l * l + d * d);
        p > r && (a = !1);
      }
    });
    var o = function() {
      a = !1;
    };
    this.on("touchleave", o), this.on("touchcancel", o), this.on("touchend", function(u) {
      if (t = null, a === !0) {
        var l = q.performance.now() - n;
        l < s && (u.preventDefault(), this.trigger("tap"));
      }
    });
  }, i.enableTouchActivity = function() {
    if (!(!this.player() || !this.player().reportUserActivity)) {
      var n = kt(this.player(), this.player().reportUserActivity), t;
      this.on("touchstart", function() {
        n(), this.clearInterval(t), t = this.setInterval(n, 250);
      });
      var r = function(s) {
        n(), this.clearInterval(t);
      };
      this.on("touchmove", n), this.on("touchend", r), this.on("touchcancel", r);
    }
  }, i.setTimeout = function(n, t) {
    var r = this, s;
    return n = kt(this, n), this.clearTimersOnDispose_(), s = q.setTimeout(function() {
      r.setTimeoutIds_.has(s) && r.setTimeoutIds_.delete(s), n();
    }, t), this.setTimeoutIds_.add(s), s;
  }, i.clearTimeout = function(n) {
    return this.setTimeoutIds_.has(n) && (this.setTimeoutIds_.delete(n), q.clearTimeout(n)), n;
  }, i.setInterval = function(n, t) {
    n = kt(this, n), this.clearTimersOnDispose_();
    var r = q.setInterval(n, t);
    return this.setIntervalIds_.add(r), r;
  }, i.clearInterval = function(n) {
    return this.setIntervalIds_.has(n) && (this.setIntervalIds_.delete(n), q.clearInterval(n)), n;
  }, i.requestAnimationFrame = function(n) {
    var t = this;
    if (!this.supportsRaf_)
      return this.setTimeout(n, 1e3 / 60);
    this.clearTimersOnDispose_();
    var r;
    return n = kt(this, n), r = q.requestAnimationFrame(function() {
      t.rafIds_.has(r) && t.rafIds_.delete(r), n();
    }), this.rafIds_.add(r), r;
  }, i.requestNamedAnimationFrame = function(n, t) {
    var r = this;
    if (!this.namedRafs_.has(n)) {
      this.clearTimersOnDispose_(), t = kt(this, t);
      var s = this.requestAnimationFrame(function() {
        t(), r.namedRafs_.has(n) && r.namedRafs_.delete(n);
      });
      return this.namedRafs_.set(n, s), n;
    }
  }, i.cancelNamedAnimationFrame = function(n) {
    !this.namedRafs_.has(n) || (this.cancelAnimationFrame(this.namedRafs_.get(n)), this.namedRafs_.delete(n));
  }, i.cancelAnimationFrame = function(n) {
    return this.supportsRaf_ ? (this.rafIds_.has(n) && (this.rafIds_.delete(n), q.cancelAnimationFrame(n)), n) : this.clearTimeout(n);
  }, i.clearTimersOnDispose_ = function() {
    var n = this;
    this.clearingTimersOnDispose_ || (this.clearingTimersOnDispose_ = !0, this.one("dispose", function() {
      [["namedRafs_", "cancelNamedAnimationFrame"], ["rafIds_", "cancelAnimationFrame"], ["setTimeoutIds_", "clearTimeout"], ["setIntervalIds_", "clearInterval"]].forEach(function(t) {
        var r = t[0], s = t[1];
        n[r].forEach(function(a, o) {
          return n[s](o);
        });
      }), n.clearingTimersOnDispose_ = !1;
    }));
  }, e.registerComponent = function(n, t) {
    if (typeof n != "string" || !n)
      throw new Error('Illegal component name, "' + n + '"; must be a non-empty string.');
    var r = e.getComponent("Tech"), s = r && r.isTech(t), a = e === t || e.prototype.isPrototypeOf(t.prototype);
    if (s || !a) {
      var o;
      throw s ? o = "techs must be registered using Tech.registerTech()" : o = "must be a Component subclass", new Error('Illegal component, "' + n + '"; ' + o + ".");
    }
    n = Nt(n), e.components_ || (e.components_ = {});
    var u = e.getComponent("Player");
    if (n === "Player" && u && u.players) {
      var l = u.players, d = Object.keys(l);
      if (l && d.length > 0 && d.map(function(p) {
        return l[p];
      }).every(Boolean))
        throw new Error("Can not register Player component after player has been created.");
    }
    return e.components_[n] = t, e.components_[fo(n)] = t, t;
  }, e.getComponent = function(n) {
    if (!(!n || !e.components_))
      return e.components_[n];
  }, e;
}();
ce.prototype.supportsRaf_ = typeof q.requestAnimationFrame == "function" && typeof q.cancelAnimationFrame == "function";
ce.registerComponent("Component", ce);
function G0(e, i, n) {
  if (typeof i != "number" || i < 0 || i > n)
    throw new Error("Failed to execute '" + e + "' on 'TimeRanges': The index provided (" + i + ") is non-numeric or out of bounds (0-" + n + ").");
}
function op(e, i, n, t) {
  return G0(e, t, n.length - 1), n[t][i];
}
function $u(e) {
  var i;
  return e === void 0 || e.length === 0 ? i = {
    length: 0,
    start: function() {
      throw new Error("This TimeRanges object is empty");
    },
    end: function() {
      throw new Error("This TimeRanges object is empty");
    }
  } : i = {
    length: e.length,
    start: op.bind(null, "start", 0, e),
    end: op.bind(null, "end", 1, e)
  }, q.Symbol && q.Symbol.iterator && (i[q.Symbol.iterator] = function() {
    return (e || []).values();
  }), i;
}
function fr(e, i) {
  return Array.isArray(e) ? $u(e) : e === void 0 || i === void 0 ? $u() : $u([[e, i]]);
}
function Gg(e, i) {
  var n = 0, t, r;
  if (!i)
    return 0;
  (!e || !e.length) && (e = fr(0, 0));
  for (var s = 0; s < e.length; s++)
    t = e.start(s), r = e.end(s), r > i && (r = i), n += r - t;
  return n / i;
}
function pi(e) {
  if (e instanceof pi)
    return e;
  typeof e == "number" ? this.code = e : typeof e == "string" ? this.message = e : kn(e) && (typeof e.code == "number" && (this.code = e.code), Dt(this, e)), this.message || (this.message = pi.defaultMessages[this.code] || "");
}
pi.prototype.code = 0;
pi.prototype.message = "";
pi.prototype.status = null;
pi.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"];
pi.defaultMessages = {
  1: "You aborted the media playback",
  2: "A network error caused the media download to fail part-way.",
  3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.",
  4: "The media could not be loaded, either because the server or network failed or because the format is not supported.",
  5: "The media is encrypted and we do not have the keys to decrypt it."
};
for (var Vr = 0; Vr < pi.errorTypes.length; Vr++)
  pi[pi.errorTypes[Vr]] = Vr, pi.prototype[pi.errorTypes[Vr]] = Vr;
function ea(e) {
  return e != null && typeof e.then == "function";
}
function nn(e) {
  ea(e) && e.then(null, function(i) {
  });
}
var Tc = function(e) {
  var i = ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce(function(n, t, r) {
    return e[t] && (n[t] = e[t]), n;
  }, {
    cues: e.cues && Array.prototype.map.call(e.cues, function(n) {
      return {
        startTime: n.startTime,
        endTime: n.endTime,
        text: n.text,
        id: n.id
      };
    })
  });
  return i;
}, K0 = function(e) {
  var i = e.$$("track"), n = Array.prototype.map.call(i, function(r) {
    return r.track;
  }), t = Array.prototype.map.call(i, function(r) {
    var s = Tc(r.track);
    return r.src && (s.src = r.src), s;
  });
  return t.concat(Array.prototype.filter.call(e.textTracks(), function(r) {
    return n.indexOf(r) === -1;
  }).map(Tc));
}, z0 = function(e, i) {
  return e.forEach(function(n) {
    var t = i.addRemoteTextTrack(n).track;
    !n.src && n.cues && n.cues.forEach(function(r) {
      return t.addCue(r);
    });
  }), i.textTracks();
}, up = {
  textTracksToJson: K0,
  jsonToTextTracks: z0,
  trackToJson_: Tc
}, Zu = "vjs-modal-dialog", bs = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.handleKeyDown_ = function(a) {
      return s.handleKeyDown(a);
    }, s.close_ = function(a) {
      return s.close(a);
    }, s.opened_ = s.hasBeenOpened_ = s.hasBeenFilled_ = !1, s.closeable(!s.options_.uncloseable), s.content(s.options_.content), s.contentEl_ = st("div", {
      className: Zu + "-content"
    }, {
      role: "document"
    }), s.descEl_ = st("p", {
      className: Zu + "-description vjs-control-text",
      id: s.el().getAttribute("aria-describedby")
    }), _r(s.descEl_, s.description()), s.el_.appendChild(s.descEl_), s.el_.appendChild(s.contentEl_), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: this.buildCSSClass(),
      tabIndex: -1
    }, {
      "aria-describedby": this.id() + "_description",
      "aria-hidden": "true",
      "aria-label": this.label(),
      role: "dialog"
    });
  }, n.dispose = function() {
    this.contentEl_ = null, this.descEl_ = null, this.previouslyActiveEl_ = null, e.prototype.dispose.call(this);
  }, n.buildCSSClass = function() {
    return Zu + " vjs-hidden " + e.prototype.buildCSSClass.call(this);
  }, n.label = function() {
    return this.localize(this.options_.label || "Modal Window");
  }, n.description = function() {
    var t = this.options_.description || this.localize("This is a modal window.");
    return this.closeable() && (t += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")), t;
  }, n.open = function() {
    if (!this.opened_) {
      var t = this.player();
      this.trigger("beforemodalopen"), this.opened_ = !0, (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) && this.fill(), this.wasPlaying_ = !t.paused(), this.options_.pauseOnOpen && this.wasPlaying_ && t.pause(), this.on("keydown", this.handleKeyDown_), this.hadControls_ = t.controls(), t.controls(!1), this.show(), this.conditionalFocus_(), this.el().setAttribute("aria-hidden", "false"), this.trigger("modalopen"), this.hasBeenOpened_ = !0;
    }
  }, n.opened = function(t) {
    return typeof t == "boolean" && this[t ? "open" : "close"](), this.opened_;
  }, n.close = function() {
    if (this.opened_) {
      var t = this.player();
      this.trigger("beforemodalclose"), this.opened_ = !1, this.wasPlaying_ && this.options_.pauseOnOpen && t.play(), this.off("keydown", this.handleKeyDown_), this.hadControls_ && t.controls(!0), this.hide(), this.el().setAttribute("aria-hidden", "true"), this.trigger("modalclose"), this.conditionalBlur_(), this.options_.temporary && this.dispose();
    }
  }, n.closeable = function(t) {
    if (typeof t == "boolean") {
      var r = this.closeable_ = !!t, s = this.getChild("closeButton");
      if (r && !s) {
        var a = this.contentEl_;
        this.contentEl_ = this.el_, s = this.addChild("closeButton", {
          controlText: "Close Modal Dialog"
        }), this.contentEl_ = a, this.on(s, "close", this.close_);
      }
      !r && s && (this.off(s, "close", this.close_), this.removeChild(s), s.dispose());
    }
    return this.closeable_;
  }, n.fill = function() {
    this.fillWith(this.content());
  }, n.fillWith = function(t) {
    var r = this.contentEl(), s = r.parentNode, a = r.nextSibling;
    this.trigger("beforemodalfill"), this.hasBeenFilled_ = !0, s.removeChild(r), this.empty(), Ng(r, t), this.trigger("modalfill"), a ? s.insertBefore(r, a) : s.appendChild(r);
    var o = this.getChild("closeButton");
    o && s.appendChild(o.el_);
  }, n.empty = function() {
    this.trigger("beforemodalempty"), yd(this.contentEl()), this.trigger("modalempty");
  }, n.content = function(t) {
    return typeof t < "u" && (this.content_ = t), this.content_;
  }, n.conditionalFocus_ = function() {
    var t = me.activeElement, r = this.player_.el_;
    this.previouslyActiveEl_ = null, (r.contains(t) || r === t) && (this.previouslyActiveEl_ = t, this.focus());
  }, n.conditionalBlur_ = function() {
    this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(), this.previouslyActiveEl_ = null);
  }, n.handleKeyDown = function(t) {
    if (t.stopPropagation(), ze.isEventKey(t, "Escape") && this.closeable()) {
      t.preventDefault(), this.close();
      return;
    }
    if (ze.isEventKey(t, "Tab")) {
      for (var r = this.focusableEls_(), s = this.el_.querySelector(":focus"), a, o = 0; o < r.length; o++)
        if (s === r[o]) {
          a = o;
          break;
        }
      me.activeElement === this.el_ && (a = 0), t.shiftKey && a === 0 ? (r[r.length - 1].focus(), t.preventDefault()) : !t.shiftKey && a === r.length - 1 && (r[0].focus(), t.preventDefault());
    }
  }, n.focusableEls_ = function() {
    var t = this.el_.querySelectorAll("*");
    return Array.prototype.filter.call(t, function(r) {
      return (r instanceof q.HTMLAnchorElement || r instanceof q.HTMLAreaElement) && r.hasAttribute("href") || (r instanceof q.HTMLInputElement || r instanceof q.HTMLSelectElement || r instanceof q.HTMLTextAreaElement || r instanceof q.HTMLButtonElement) && !r.hasAttribute("disabled") || r instanceof q.HTMLIFrameElement || r instanceof q.HTMLObjectElement || r instanceof q.HTMLEmbedElement || r.hasAttribute("tabindex") && r.getAttribute("tabindex") !== -1 || r.hasAttribute("contenteditable");
    });
  }, i;
}(ce);
bs.prototype.options_ = {
  pauseOnOpen: !0,
  temporary: !0
};
ce.registerComponent("ModalDialog", bs);
var hs = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    t === void 0 && (t = []), r = e.call(this) || this, r.tracks_ = [], Object.defineProperty(Ge(r), "length", {
      get: function() {
        return this.tracks_.length;
      }
    });
    for (var s = 0; s < t.length; s++)
      r.addTrack(t[s]);
    return r;
  }
  var n = i.prototype;
  return n.addTrack = function(t) {
    var r = this, s = this.tracks_.length;
    "" + s in this || Object.defineProperty(this, s, {
      get: function() {
        return this.tracks_[s];
      }
    }), this.tracks_.indexOf(t) === -1 && (this.tracks_.push(t), this.trigger({
      track: t,
      type: "addtrack",
      target: this
    })), t.labelchange_ = function() {
      r.trigger({
        track: t,
        type: "labelchange",
        target: r
      });
    }, Tn(t) && t.addEventListener("labelchange", t.labelchange_);
  }, n.removeTrack = function(t) {
    for (var r, s = 0, a = this.length; s < a; s++)
      if (this[s] === t) {
        r = this[s], r.off && r.off(), this.tracks_.splice(s, 1);
        break;
      }
    !r || this.trigger({
      track: r,
      type: "removetrack",
      target: this
    });
  }, n.getTrackById = function(t) {
    for (var r = null, s = 0, a = this.length; s < a; s++) {
      var o = this[s];
      if (o.id === t) {
        r = o;
        break;
      }
    }
    return r;
  }, i;
}(Jt);
hs.prototype.allowedEvents_ = {
  change: "change",
  addtrack: "addtrack",
  removetrack: "removetrack",
  labelchange: "labelchange"
};
for (var X0 in hs.prototype.allowedEvents_)
  hs.prototype["on" + X0] = null;
var el = function(e, i) {
  for (var n = 0; n < e.length; n++)
    !Object.keys(e[n]).length || i.id === e[n].id || (e[n].enabled = !1);
}, Q0 = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    t === void 0 && (t = []);
    for (var s = t.length - 1; s >= 0; s--)
      if (t[s].enabled) {
        el(t, t[s]);
        break;
      }
    return r = e.call(this, t) || this, r.changing_ = !1, r;
  }
  var n = i.prototype;
  return n.addTrack = function(t) {
    var r = this;
    t.enabled && el(this, t), e.prototype.addTrack.call(this, t), t.addEventListener && (t.enabledChange_ = function() {
      r.changing_ || (r.changing_ = !0, el(r, t), r.changing_ = !1, r.trigger("change"));
    }, t.addEventListener("enabledchange", t.enabledChange_));
  }, n.removeTrack = function(t) {
    e.prototype.removeTrack.call(this, t), t.removeEventListener && t.enabledChange_ && (t.removeEventListener("enabledchange", t.enabledChange_), t.enabledChange_ = null);
  }, i;
}(hs), tl = function(e, i) {
  for (var n = 0; n < e.length; n++)
    !Object.keys(e[n]).length || i.id === e[n].id || (e[n].selected = !1);
}, J0 = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    t === void 0 && (t = []);
    for (var s = t.length - 1; s >= 0; s--)
      if (t[s].selected) {
        tl(t, t[s]);
        break;
      }
    return r = e.call(this, t) || this, r.changing_ = !1, Object.defineProperty(Ge(r), "selectedIndex", {
      get: function() {
        for (var a = 0; a < this.length; a++)
          if (this[a].selected)
            return a;
        return -1;
      },
      set: function() {
      }
    }), r;
  }
  var n = i.prototype;
  return n.addTrack = function(t) {
    var r = this;
    t.selected && tl(this, t), e.prototype.addTrack.call(this, t), t.addEventListener && (t.selectedChange_ = function() {
      r.changing_ || (r.changing_ = !0, tl(r, t), r.changing_ = !1, r.trigger("change"));
    }, t.addEventListener("selectedchange", t.selectedChange_));
  }, n.removeTrack = function(t) {
    e.prototype.removeTrack.call(this, t), t.removeEventListener && t.selectedChange_ && (t.removeEventListener("selectedchange", t.selectedChange_), t.selectedChange_ = null);
  }, i;
}(hs), Kg = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.addTrack = function(t) {
    var r = this;
    e.prototype.addTrack.call(this, t), this.queueChange_ || (this.queueChange_ = function() {
      return r.queueTrigger("change");
    }), this.triggerSelectedlanguagechange || (this.triggerSelectedlanguagechange_ = function() {
      return r.trigger("selectedlanguagechange");
    }), t.addEventListener("modechange", this.queueChange_);
    var s = ["metadata", "chapters"];
    s.indexOf(t.kind) === -1 && t.addEventListener("modechange", this.triggerSelectedlanguagechange_);
  }, n.removeTrack = function(t) {
    e.prototype.removeTrack.call(this, t), t.removeEventListener && (this.queueChange_ && t.removeEventListener("modechange", this.queueChange_), this.selectedlanguagechange_ && t.removeEventListener("modechange", this.triggerSelectedlanguagechange_));
  }, i;
}(hs), Y0 = /* @__PURE__ */ function() {
  function e(n) {
    n === void 0 && (n = []), this.trackElements_ = [], Object.defineProperty(this, "length", {
      get: function() {
        return this.trackElements_.length;
      }
    });
    for (var t = 0, r = n.length; t < r; t++)
      this.addTrackElement_(n[t]);
  }
  var i = e.prototype;
  return i.addTrackElement_ = function(n) {
    var t = this.trackElements_.length;
    "" + t in this || Object.defineProperty(this, t, {
      get: function() {
        return this.trackElements_[t];
      }
    }), this.trackElements_.indexOf(n) === -1 && this.trackElements_.push(n);
  }, i.getTrackElementByTrack_ = function(n) {
    for (var t, r = 0, s = this.trackElements_.length; r < s; r++)
      if (n === this.trackElements_[r].track) {
        t = this.trackElements_[r];
        break;
      }
    return t;
  }, i.removeTrackElement_ = function(n) {
    for (var t = 0, r = this.trackElements_.length; t < r; t++)
      if (n === this.trackElements_[t]) {
        this.trackElements_[t].track && typeof this.trackElements_[t].track.off == "function" && this.trackElements_[t].track.off(), typeof this.trackElements_[t].off == "function" && this.trackElements_[t].off(), this.trackElements_.splice(t, 1);
        break;
      }
  }, e;
}(), lp = /* @__PURE__ */ function() {
  function e(n) {
    e.prototype.setCues_.call(this, n), Object.defineProperty(this, "length", {
      get: function() {
        return this.length_;
      }
    });
  }
  var i = e.prototype;
  return i.setCues_ = function(n) {
    var t = this.length || 0, r = 0, s = n.length;
    this.cues_ = n, this.length_ = n.length;
    var a = function(o) {
      "" + o in this || Object.defineProperty(this, "" + o, {
        get: function() {
          return this.cues_[o];
        }
      });
    };
    if (t < s)
      for (r = t; r < s; r++)
        a.call(this, r);
  }, i.getCueById = function(n) {
    for (var t = null, r = 0, s = this.length; r < s; r++) {
      var a = this[r];
      if (a.id === n) {
        t = a;
        break;
      }
    }
    return t;
  }, e;
}(), $0 = {
  alternative: "alternative",
  captions: "captions",
  main: "main",
  sign: "sign",
  subtitles: "subtitles",
  commentary: "commentary"
}, Z0 = {
  alternative: "alternative",
  descriptions: "descriptions",
  main: "main",
  "main-desc": "main-desc",
  translation: "translation",
  commentary: "commentary"
}, eE = {
  subtitles: "subtitles",
  captions: "captions",
  descriptions: "descriptions",
  chapters: "chapters",
  metadata: "metadata"
}, cp = {
  disabled: "disabled",
  hidden: "hidden",
  showing: "showing"
}, Ed = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(n) {
    var t;
    n === void 0 && (n = {}), t = e.call(this) || this;
    var r = {
      id: n.id || "vjs_track_" + xn(),
      kind: n.kind || "",
      language: n.language || ""
    }, s = n.label || "", a = function(u) {
      Object.defineProperty(Ge(t), u, {
        get: function() {
          return r[u];
        },
        set: function() {
        }
      });
    };
    for (var o in r)
      a(o);
    return Object.defineProperty(Ge(t), "label", {
      get: function() {
        return s;
      },
      set: function(u) {
        u !== s && (s = u, this.trigger("labelchange"));
      }
    }), t;
  }
  return i;
}(Jt), Sd = function(e) {
  var i = ["protocol", "hostname", "port", "pathname", "search", "hash", "host"], n = me.createElement("a");
  n.href = e;
  for (var t = {}, r = 0; r < i.length; r++)
    t[i[r]] = n[i[r]];
  return t.protocol === "http:" && (t.host = t.host.replace(/:80$/, "")), t.protocol === "https:" && (t.host = t.host.replace(/:443$/, "")), t.protocol || (t.protocol = q.location.protocol), t.host || (t.host = q.location.host), t;
}, zg = function(e) {
  if (!e.match(/^https?:\/\//)) {
    var i = me.createElement("a");
    i.href = e, e = i.href;
  }
  return e;
}, wd = function(e) {
  if (typeof e == "string") {
    var i = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/, n = i.exec(e);
    if (n)
      return n.pop().toLowerCase();
  }
  return "";
}, du = function(e, i) {
  i === void 0 && (i = q.location);
  var n = Sd(e), t = n.protocol === ":" ? i.protocol : n.protocol, r = t + n.host !== i.protocol + i.host;
  return r;
}, tE = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  parseUrl: Sd,
  getAbsoluteURL: zg,
  getFileExtension: wd,
  isCrossOrigin: du
}), dp = function(e, i) {
  var n = new q.WebVTT.Parser(q, q.vttjs, q.WebVTT.StringDecoder()), t = [];
  n.oncue = function(r) {
    i.addCue(r);
  }, n.onparsingerror = function(r) {
    t.push(r);
  }, n.onflush = function() {
    i.trigger({
      type: "loadeddata",
      target: i
    });
  }, n.parse(e), t.length > 0 && (q.console && q.console.groupCollapsed && q.console.groupCollapsed("Text Track parsing errors for " + i.src), t.forEach(function(r) {
    return Ze.error(r);
  }), q.console && q.console.groupEnd && q.console.groupEnd()), n.flush();
}, hp = function(e, i) {
  var n = {
    uri: e
  }, t = du(e);
  t && (n.cors = t);
  var r = i.tech_.crossOrigin() === "use-credentials";
  r && (n.withCredentials = r), Qo.exports(n, kt(this, function(s, a, o) {
    if (s)
      return Ze.error(s, a);
    i.loaded_ = !0, typeof q.WebVTT != "function" ? i.tech_ && i.tech_.any(["vttjsloaded", "vttjserror"], function(u) {
      if (u.type === "vttjserror") {
        Ze.error("vttjs failed to load, stopping trying to process " + i.src);
        return;
      }
      return dp(o, i);
    }) : dp(o, i);
  }));
}, Sa = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    if (t === void 0 && (t = {}), !t.tech)
      throw new Error("A tech was not provided.");
    var s = wt(t, {
      kind: eE[t.kind] || "subtitles",
      language: t.language || t.srclang || ""
    }), a = cp[s.mode] || "disabled", o = s.default;
    (s.kind === "metadata" || s.kind === "chapters") && (a = "hidden"), r = e.call(this, s) || this, r.tech_ = s.tech, r.cues_ = [], r.activeCues_ = [], r.preload_ = r.tech_.preloadTextTracks !== !1;
    var u = new lp(r.cues_), l = new lp(r.activeCues_), d = !1;
    r.timeupdateHandler = kt(Ge(r), function(h) {
      if (h === void 0 && (h = {}), !this.tech_.isDisposed()) {
        if (!this.tech_.isReady_) {
          h.type !== "timeupdate" && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler));
          return;
        }
        this.activeCues = this.activeCues, d && (this.trigger("cuechange"), d = !1), h.type !== "timeupdate" && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler));
      }
    });
    var p = function() {
      r.stopTracking();
    };
    return r.tech_.one("dispose", p), a !== "disabled" && r.startTracking(), Object.defineProperties(Ge(r), {
      default: {
        get: function() {
          return o;
        },
        set: function() {
        }
      },
      mode: {
        get: function() {
          return a;
        },
        set: function(h) {
          !cp[h] || a !== h && (a = h, !this.preload_ && a !== "disabled" && this.cues.length === 0 && hp(this.src, this), this.stopTracking(), a !== "disabled" && this.startTracking(), this.trigger("modechange"));
        }
      },
      cues: {
        get: function() {
          return this.loaded_ ? u : null;
        },
        set: function() {
        }
      },
      activeCues: {
        get: function() {
          if (!this.loaded_)
            return null;
          if (this.cues.length === 0)
            return l;
          for (var h = this.tech_.currentTime(), m = [], y = 0, T = this.cues.length; y < T; y++) {
            var b = this.cues[y];
            (b.startTime <= h && b.endTime >= h || b.startTime === b.endTime && b.startTime <= h && b.startTime + 0.5 >= h) && m.push(b);
          }
          if (d = !1, m.length !== this.activeCues_.length)
            d = !0;
          else
            for (var I = 0; I < m.length; I++)
              this.activeCues_.indexOf(m[I]) === -1 && (d = !0);
          return this.activeCues_ = m, l.setCues_(this.activeCues_), l;
        },
        set: function() {
        }
      }
    }), s.src ? (r.src = s.src, r.preload_ || (r.loaded_ = !0), (r.preload_ || s.kind !== "subtitles" && s.kind !== "captions") && hp(r.src, Ge(r))) : r.loaded_ = !0, r;
  }
  var n = i.prototype;
  return n.startTracking = function() {
    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler), this.tech_.on("timeupdate", this.timeupdateHandler);
  }, n.stopTracking = function() {
    this.rvf_ && (this.tech_.cancelVideoFrameCallback(this.rvf_), this.rvf_ = void 0), this.tech_.off("timeupdate", this.timeupdateHandler);
  }, n.addCue = function(t) {
    var r = t;
    if (q.vttjs && !(t instanceof q.vttjs.VTTCue)) {
      r = new q.vttjs.VTTCue(t.startTime, t.endTime, t.text);
      for (var s in t)
        s in r || (r[s] = t[s]);
      r.id = t.id, r.originalCue_ = t;
    }
    for (var a = this.tech_.textTracks(), o = 0; o < a.length; o++)
      a[o] !== this && a[o].removeCue(r);
    this.cues_.push(r), this.cues.setCues_(this.cues_);
  }, n.removeCue = function(t) {
    for (var r = this.cues_.length; r--; ) {
      var s = this.cues_[r];
      if (s === t || s.originalCue_ && s.originalCue_ === t) {
        this.cues_.splice(r, 1), this.cues.setCues_(this.cues_);
        break;
      }
    }
  }, i;
}(Ed);
Sa.prototype.allowedEvents_ = {
  cuechange: "cuechange"
};
var Xg = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(n) {
    var t;
    n === void 0 && (n = {});
    var r = wt(n, {
      kind: Z0[n.kind] || ""
    });
    t = e.call(this, r) || this;
    var s = !1;
    return Object.defineProperty(Ge(t), "enabled", {
      get: function() {
        return s;
      },
      set: function(a) {
        typeof a != "boolean" || a === s || (s = a, this.trigger("enabledchange"));
      }
    }), r.enabled && (t.enabled = r.enabled), t.loaded_ = !0, t;
  }
  return i;
}(Ed), Qg = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(n) {
    var t;
    n === void 0 && (n = {});
    var r = wt(n, {
      kind: $0[n.kind] || ""
    });
    t = e.call(this, r) || this;
    var s = !1;
    return Object.defineProperty(Ge(t), "selected", {
      get: function() {
        return s;
      },
      set: function(a) {
        typeof a != "boolean" || a === s || (s = a, this.trigger("selectedchange"));
      }
    }), r.selected && (t.selected = r.selected), t;
  }
  return i;
}(Ed), Jg = 0, iE = 1, Yg = 2, nE = 3, Ts = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(n) {
    var t;
    n === void 0 && (n = {}), t = e.call(this) || this;
    var r, s = new Sa(n);
    return t.kind = s.kind, t.src = s.src, t.srclang = s.language, t.label = s.label, t.default = s.default, Object.defineProperties(Ge(t), {
      readyState: {
        get: function() {
          return r;
        }
      },
      track: {
        get: function() {
          return s;
        }
      }
    }), r = Jg, s.addEventListener("loadeddata", function() {
      r = Yg, t.trigger({
        type: "load",
        target: Ge(t)
      });
    }), t;
  }
  return i;
}(Jt);
Ts.prototype.allowedEvents_ = {
  load: "load"
};
Ts.NONE = Jg;
Ts.LOADING = iE;
Ts.LOADED = Yg;
Ts.ERROR = nE;
var Ri = {
  audio: {
    ListClass: Q0,
    TrackClass: Xg,
    capitalName: "Audio"
  },
  video: {
    ListClass: J0,
    TrackClass: Qg,
    capitalName: "Video"
  },
  text: {
    ListClass: Kg,
    TrackClass: Sa,
    capitalName: "Text"
  }
};
Object.keys(Ri).forEach(function(e) {
  Ri[e].getterName = e + "Tracks", Ri[e].privateName = e + "Tracks_";
});
var ps = {
  remoteText: {
    ListClass: Kg,
    TrackClass: Sa,
    capitalName: "RemoteText",
    getterName: "remoteTextTracks",
    privateName: "remoteTextTracks_"
  },
  remoteTextEl: {
    ListClass: Y0,
    TrackClass: Ts,
    capitalName: "RemoteTextTrackEls",
    getterName: "remoteTextTrackEls",
    privateName: "remoteTextTrackEls_"
  }
}, li = Mi({}, Ri, ps);
ps.names = Object.keys(ps);
Ri.names = Object.keys(Ri);
li.names = [].concat(ps.names).concat(Ri.names);
function rE(e, i, n, t, r) {
  r === void 0 && (r = {});
  var s = e.textTracks();
  r.kind = i, n && (r.label = n), t && (r.language = t), r.tech = e;
  var a = new li.text.TrackClass(r);
  return s.addTrack(a), a;
}
var mt = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return t === void 0 && (t = {}), r === void 0 && (r = function() {
    }), t.reportTouchActivity = !1, s = e.call(this, null, t, r) || this, s.onDurationChange_ = function(a) {
      return s.onDurationChange(a);
    }, s.trackProgress_ = function(a) {
      return s.trackProgress(a);
    }, s.trackCurrentTime_ = function(a) {
      return s.trackCurrentTime(a);
    }, s.stopTrackingCurrentTime_ = function(a) {
      return s.stopTrackingCurrentTime(a);
    }, s.disposeSourceHandler_ = function(a) {
      return s.disposeSourceHandler(a);
    }, s.queuedHanders_ = /* @__PURE__ */ new Set(), s.hasStarted_ = !1, s.on("playing", function() {
      this.hasStarted_ = !0;
    }), s.on("loadstart", function() {
      this.hasStarted_ = !1;
    }), li.names.forEach(function(a) {
      var o = li[a];
      t && t[o.getterName] && (s[o.privateName] = t[o.getterName]);
    }), s.featuresProgressEvents || s.manualProgressOn(), s.featuresTimeupdateEvents || s.manualTimeUpdatesOn(), ["Text", "Audio", "Video"].forEach(function(a) {
      t["native" + a + "Tracks"] === !1 && (s["featuresNative" + a + "Tracks"] = !1);
    }), t.nativeCaptions === !1 || t.nativeTextTracks === !1 ? s.featuresNativeTextTracks = !1 : (t.nativeCaptions === !0 || t.nativeTextTracks === !0) && (s.featuresNativeTextTracks = !0), s.featuresNativeTextTracks || s.emulateTextTracks(), s.preloadTextTracks = t.preloadTextTracks !== !1, s.autoRemoteTextTracks_ = new li.text.ListClass(), s.initTrackListeners(), t.nativeControlsForTouch || s.emitTapEvents(), s.constructor && (s.name_ = s.constructor.name || "Unknown Tech"), s;
  }
  var n = i.prototype;
  return n.triggerSourceset = function(t) {
    var r = this;
    this.isReady_ || this.one("ready", function() {
      return r.setTimeout(function() {
        return r.triggerSourceset(t);
      }, 1);
    }), this.trigger({
      src: t,
      type: "sourceset"
    });
  }, n.manualProgressOn = function() {
    this.on("durationchange", this.onDurationChange_), this.manualProgress = !0, this.one("ready", this.trackProgress_);
  }, n.manualProgressOff = function() {
    this.manualProgress = !1, this.stopTrackingProgress(), this.off("durationchange", this.onDurationChange_);
  }, n.trackProgress = function(t) {
    this.stopTrackingProgress(), this.progressInterval = this.setInterval(kt(this, function() {
      var r = this.bufferedPercent();
      this.bufferedPercent_ !== r && this.trigger("progress"), this.bufferedPercent_ = r, r === 1 && this.stopTrackingProgress();
    }), 500);
  }, n.onDurationChange = function(t) {
    this.duration_ = this.duration();
  }, n.buffered = function() {
    return fr(0, 0);
  }, n.bufferedPercent = function() {
    return Gg(this.buffered(), this.duration_);
  }, n.stopTrackingProgress = function() {
    this.clearInterval(this.progressInterval);
  }, n.manualTimeUpdatesOn = function() {
    this.manualTimeUpdates = !0, this.on("play", this.trackCurrentTime_), this.on("pause", this.stopTrackingCurrentTime_);
  }, n.manualTimeUpdatesOff = function() {
    this.manualTimeUpdates = !1, this.stopTrackingCurrentTime(), this.off("play", this.trackCurrentTime_), this.off("pause", this.stopTrackingCurrentTime_);
  }, n.trackCurrentTime = function() {
    this.currentTimeInterval && this.stopTrackingCurrentTime(), this.currentTimeInterval = this.setInterval(function() {
      this.trigger({
        type: "timeupdate",
        target: this,
        manuallyTriggered: !0
      });
    }, 250);
  }, n.stopTrackingCurrentTime = function() {
    this.clearInterval(this.currentTimeInterval), this.trigger({
      type: "timeupdate",
      target: this,
      manuallyTriggered: !0
    });
  }, n.dispose = function() {
    this.clearTracks(Ri.names), this.manualProgress && this.manualProgressOff(), this.manualTimeUpdates && this.manualTimeUpdatesOff(), e.prototype.dispose.call(this);
  }, n.clearTracks = function(t) {
    var r = this;
    t = [].concat(t), t.forEach(function(s) {
      for (var a = r[s + "Tracks"]() || [], o = a.length; o--; ) {
        var u = a[o];
        s === "text" && r.removeRemoteTextTrack(u), a.removeTrack(u);
      }
    });
  }, n.cleanupAutoTextTracks = function() {
    for (var t = this.autoRemoteTextTracks_ || [], r = t.length; r--; ) {
      var s = t[r];
      this.removeRemoteTextTrack(s);
    }
  }, n.reset = function() {
  }, n.crossOrigin = function() {
  }, n.setCrossOrigin = function() {
  }, n.error = function(t) {
    return t !== void 0 && (this.error_ = new pi(t), this.trigger("error")), this.error_;
  }, n.played = function() {
    return this.hasStarted_ ? fr(0, 0) : fr();
  }, n.play = function() {
  }, n.setScrubbing = function() {
  }, n.scrubbing = function() {
  }, n.setCurrentTime = function() {
    this.manualTimeUpdates && this.trigger({
      type: "timeupdate",
      target: this,
      manuallyTriggered: !0
    });
  }, n.initTrackListeners = function() {
    var t = this;
    Ri.names.forEach(function(r) {
      var s = Ri[r], a = function() {
        t.trigger(r + "trackchange");
      }, o = t[s.getterName]();
      o.addEventListener("removetrack", a), o.addEventListener("addtrack", a), t.on("dispose", function() {
        o.removeEventListener("removetrack", a), o.removeEventListener("addtrack", a);
      });
    });
  }, n.addWebVttScript_ = function() {
    var t = this;
    if (!q.WebVTT)
      if (me.body.contains(this.el())) {
        if (!this.options_["vtt.js"] && ca(ac.exports) && Object.keys(ac.exports).length > 0) {
          this.trigger("vttjsloaded");
          return;
        }
        var r = me.createElement("script");
        r.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js", r.onload = function() {
          t.trigger("vttjsloaded");
        }, r.onerror = function() {
          t.trigger("vttjserror");
        }, this.on("dispose", function() {
          r.onload = null, r.onerror = null;
        }), q.WebVTT = !0, this.el().parentNode.appendChild(r);
      } else
        this.ready(this.addWebVttScript_);
  }, n.emulateTextTracks = function() {
    var t = this, r = this.textTracks(), s = this.remoteTextTracks(), a = function(d) {
      return r.addTrack(d.track);
    }, o = function(d) {
      return r.removeTrack(d.track);
    };
    s.on("addtrack", a), s.on("removetrack", o), this.addWebVttScript_();
    var u = function() {
      return t.trigger("texttrackchange");
    }, l = function() {
      u();
      for (var d = 0; d < r.length; d++) {
        var p = r[d];
        p.removeEventListener("cuechange", u), p.mode === "showing" && p.addEventListener("cuechange", u);
      }
    };
    l(), r.addEventListener("change", l), r.addEventListener("addtrack", l), r.addEventListener("removetrack", l), this.on("dispose", function() {
      s.off("addtrack", a), s.off("removetrack", o), r.removeEventListener("change", l), r.removeEventListener("addtrack", l), r.removeEventListener("removetrack", l);
      for (var d = 0; d < r.length; d++) {
        var p = r[d];
        p.removeEventListener("cuechange", u);
      }
    });
  }, n.addTextTrack = function(t, r, s) {
    if (!t)
      throw new Error("TextTrack kind is required but was not provided");
    return rE(this, t, r, s);
  }, n.createRemoteTextTrack = function(t) {
    var r = wt(t, {
      tech: this
    });
    return new ps.remoteTextEl.TrackClass(r);
  }, n.addRemoteTextTrack = function(t, r) {
    var s = this;
    t === void 0 && (t = {});
    var a = this.createRemoteTextTrack(t);
    return r !== !0 && r !== !1 && (Ze.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js'), r = !0), this.remoteTextTrackEls().addTrackElement_(a), this.remoteTextTracks().addTrack(a.track), r !== !0 && this.ready(function() {
      return s.autoRemoteTextTracks_.addTrack(a.track);
    }), a;
  }, n.removeRemoteTextTrack = function(t) {
    var r = this.remoteTextTrackEls().getTrackElementByTrack_(t);
    this.remoteTextTrackEls().removeTrackElement_(r), this.remoteTextTracks().removeTrack(t), this.autoRemoteTextTracks_.removeTrack(t);
  }, n.getVideoPlaybackQuality = function() {
    return {};
  }, n.requestPictureInPicture = function() {
    var t = this.options_.Promise || q.Promise;
    if (t)
      return t.reject();
  }, n.disablePictureInPicture = function() {
    return !0;
  }, n.setDisablePictureInPicture = function() {
  }, n.requestVideoFrameCallback = function(t) {
    var r = this, s = xn();
    return !this.isReady_ || this.paused() ? (this.queuedHanders_.add(s), this.one("playing", function() {
      r.queuedHanders_.has(s) && (r.queuedHanders_.delete(s), t());
    })) : this.requestNamedAnimationFrame(s, t), s;
  }, n.cancelVideoFrameCallback = function(t) {
    this.queuedHanders_.has(t) ? this.queuedHanders_.delete(t) : this.cancelNamedAnimationFrame(t);
  }, n.setPoster = function() {
  }, n.playsinline = function() {
  }, n.setPlaysinline = function() {
  }, n.overrideNativeAudioTracks = function() {
  }, n.overrideNativeVideoTracks = function() {
  }, n.canPlayType = function() {
    return "";
  }, i.canPlayType = function() {
    return "";
  }, i.canPlaySource = function(t, r) {
    return i.canPlayType(t.type);
  }, i.isTech = function(t) {
    return t.prototype instanceof i || t instanceof i || t === i;
  }, i.registerTech = function(t, r) {
    if (i.techs_ || (i.techs_ = {}), !i.isTech(r))
      throw new Error("Tech " + t + " must be a Tech");
    if (!i.canPlayType)
      throw new Error("Techs must have a static canPlayType method on them");
    if (!i.canPlaySource)
      throw new Error("Techs must have a static canPlaySource method on them");
    return t = Nt(t), i.techs_[t] = r, i.techs_[fo(t)] = r, t !== "Tech" && i.defaultTechOrder_.push(t), r;
  }, i.getTech = function(t) {
    if (t) {
      if (i.techs_ && i.techs_[t])
        return i.techs_[t];
      if (t = Nt(t), q && q.videojs && q.videojs[t])
        return Ze.warn("The " + t + " tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)"), q.videojs[t];
    }
  }, i;
}(ce);
li.names.forEach(function(e) {
  var i = li[e];
  mt.prototype[i.getterName] = function() {
    return this[i.privateName] = this[i.privateName] || new i.ListClass(), this[i.privateName];
  };
});
mt.prototype.featuresVolumeControl = !0;
mt.prototype.featuresMuteControl = !0;
mt.prototype.featuresFullscreenResize = !1;
mt.prototype.featuresPlaybackRate = !1;
mt.prototype.featuresProgressEvents = !1;
mt.prototype.featuresSourceset = !1;
mt.prototype.featuresTimeupdateEvents = !1;
mt.prototype.featuresNativeTextTracks = !1;
mt.prototype.featuresVideoFrameCallback = !1;
mt.withSourceHandlers = function(e) {
  e.registerSourceHandler = function(n, t) {
    var r = e.sourceHandlers;
    r || (r = e.sourceHandlers = []), t === void 0 && (t = r.length), r.splice(t, 0, n);
  }, e.canPlayType = function(n) {
    for (var t = e.sourceHandlers || [], r, s = 0; s < t.length; s++)
      if (r = t[s].canPlayType(n), r)
        return r;
    return "";
  }, e.selectSourceHandler = function(n, t) {
    for (var r = e.sourceHandlers || [], s, a = 0; a < r.length; a++)
      if (s = r[a].canHandleSource(n, t), s)
        return r[a];
    return null;
  }, e.canPlaySource = function(n, t) {
    var r = e.selectSourceHandler(n, t);
    return r ? r.canHandleSource(n, t) : "";
  };
  var i = ["seekable", "seeking", "duration"];
  i.forEach(function(n) {
    var t = this[n];
    typeof t == "function" && (this[n] = function() {
      return this.sourceHandler_ && this.sourceHandler_[n] ? this.sourceHandler_[n].apply(this.sourceHandler_, arguments) : t.apply(this, arguments);
    });
  }, e.prototype), e.prototype.setSource = function(n) {
    var t = e.selectSourceHandler(n, this.options_);
    t || (e.nativeSourceHandler ? t = e.nativeSourceHandler : Ze.error("No source handler found for the current source.")), this.disposeSourceHandler(), this.off("dispose", this.disposeSourceHandler_), t !== e.nativeSourceHandler && (this.currentSource_ = n), this.sourceHandler_ = t.handleSource(n, this, this.options_), this.one("dispose", this.disposeSourceHandler_);
  }, e.prototype.disposeSourceHandler = function() {
    this.currentSource_ && (this.clearTracks(["audio", "video"]), this.currentSource_ = null), this.cleanupAutoTextTracks(), this.sourceHandler_ && (this.sourceHandler_.dispose && this.sourceHandler_.dispose(), this.sourceHandler_ = null);
  };
};
ce.registerComponent("Tech", mt);
mt.registerTech("Tech", mt);
mt.defaultTechOrder_ = [];
var mr = {}, Ec = {}, Po = {};
function sE(e, i) {
  mr[e] = mr[e] || [], mr[e].push(i);
}
function aE(e, i, n) {
  e.setTimeout(function() {
    return ur(i, mr[i.type], n, e);
  }, 1);
}
function oE(e, i) {
  e.forEach(function(n) {
    return n.setTech && n.setTech(i);
  });
}
function uE(e, i, n) {
  return e.reduceRight(kd(n), i[n]());
}
function lE(e, i, n, t) {
  return i[n](e.reduce(kd(n), t));
}
function pp(e, i, n, t) {
  t === void 0 && (t = null);
  var r = "call" + Nt(n), s = e.reduce(kd(r), t), a = s === Po, o = a ? null : i[n](s);
  return hE(e, n, o, a), o;
}
var cE = {
  buffered: 1,
  currentTime: 1,
  duration: 1,
  muted: 1,
  played: 1,
  paused: 1,
  seekable: 1,
  volume: 1,
  ended: 1
}, dE = {
  setCurrentTime: 1,
  setMuted: 1,
  setVolume: 1
}, fp = {
  play: 1,
  pause: 1
};
function kd(e) {
  return function(i, n) {
    return i === Po ? Po : n[e] ? n[e](i) : i;
  };
}
function hE(e, i, n, t) {
  for (var r = e.length - 1; r >= 0; r--) {
    var s = e[r];
    s[i] && s[i](t, n);
  }
}
function pE(e) {
  Ec[e.id()] = null;
}
function fE(e, i) {
  var n = Ec[e.id()], t = null;
  if (n == null)
    return t = i(e), Ec[e.id()] = [[i, t]], t;
  for (var r = 0; r < n.length; r++) {
    var s = n[r], a = s[0], o = s[1];
    a === i && (t = o);
  }
  return t === null && (t = i(e), n.push([i, t])), t;
}
function ur(e, i, n, t, r, s) {
  e === void 0 && (e = {}), i === void 0 && (i = []), r === void 0 && (r = []), s === void 0 && (s = !1);
  var a = i, o = a[0], u = a.slice(1);
  if (typeof o == "string")
    ur(e, mr[o], n, t, r, s);
  else if (o) {
    var l = fE(t, o);
    if (!l.setSource)
      return r.push(l), ur(e, u, n, t, r, s);
    l.setSource(Dt({}, e), function(d, p) {
      if (d)
        return ur(e, u, n, t, r, s);
      r.push(l), ur(p, e.type === p.type ? u : mr[p.type], n, t, r, s);
    });
  } else
    u.length ? ur(e, u, n, t, r, s) : s ? n(e, r) : ur(e, mr["*"], n, t, r, !0);
}
var mE = {
  opus: "video/ogg",
  ogv: "video/ogg",
  mp4: "video/mp4",
  mov: "video/mp4",
  m4v: "video/mp4",
  mkv: "video/x-matroska",
  m4a: "audio/mp4",
  mp3: "audio/mpeg",
  aac: "audio/aac",
  caf: "audio/x-caf",
  flac: "audio/flac",
  oga: "audio/ogg",
  wav: "audio/wav",
  m3u8: "application/x-mpegURL",
  mpd: "application/dash+xml",
  jpg: "image/jpeg",
  jpeg: "image/jpeg",
  gif: "image/gif",
  png: "image/png",
  svg: "image/svg+xml",
  webp: "image/webp"
}, Lo = function(e) {
  e === void 0 && (e = "");
  var i = wd(e), n = mE[i.toLowerCase()];
  return n || "";
}, gE = function(e, i) {
  if (!i)
    return "";
  if (e.cache_.source.src === i && e.cache_.source.type)
    return e.cache_.source.type;
  var n = e.cache_.sources.filter(function(a) {
    return a.src === i;
  });
  if (n.length)
    return n[0].type;
  for (var t = e.$$("source"), r = 0; r < t.length; r++) {
    var s = t[r];
    if (s.type && s.src && s.src === i)
      return s.type;
  }
  return Lo(i);
}, vE = function e(i) {
  if (Array.isArray(i)) {
    var n = [];
    i.forEach(function(t) {
      t = e(t), Array.isArray(t) ? n = n.concat(t) : kn(t) && n.push(t);
    }), i = n;
  } else
    typeof i == "string" && i.trim() ? i = [mp({
      src: i
    })] : kn(i) && typeof i.src == "string" && i.src && i.src.trim() ? i = [mp(i)] : i = [];
  return i;
};
function mp(e) {
  if (!e.type) {
    var i = Lo(e.src);
    i && (e.type = i);
  }
  return e;
}
var yE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(n, t, r) {
    var s, a = wt({
      createEl: !1
    }, t);
    if (s = e.call(this, n, a, r) || this, !t.playerOptions.sources || t.playerOptions.sources.length === 0)
      for (var o = 0, u = t.playerOptions.techOrder; o < u.length; o++) {
        var l = Nt(u[o]), d = mt.getTech(l);
        if (l || (d = ce.getComponent(l)), d && d.isSupported()) {
          n.loadTech_(l);
          break;
        }
      }
    else
      n.src(t.playerOptions.sources);
    return s;
  }
  return i;
}(ce);
ce.registerComponent("MediaLoader", yE);
var hu = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.options_.controlText && s.controlText(s.options_.controlText), s.handleMouseOver_ = function(a) {
      return s.handleMouseOver(a);
    }, s.handleMouseOut_ = function(a) {
      return s.handleMouseOut(a);
    }, s.handleClick_ = function(a) {
      return s.handleClick(a);
    }, s.handleKeyDown_ = function(a) {
      return s.handleKeyDown(a);
    }, s.emitTapEvents(), s.enable(), s;
  }
  var n = i.prototype;
  return n.createEl = function(t, r, s) {
    t === void 0 && (t = "div"), r === void 0 && (r = {}), s === void 0 && (s = {}), r = Dt({
      className: this.buildCSSClass(),
      tabIndex: 0
    }, r), t === "button" && Ze.error("Creating a ClickableComponent with an HTML element of " + t + " is not supported; use a Button instead."), s = Dt({
      role: "button"
    }, s), this.tabIndex_ = r.tabIndex;
    var a = st(t, r, s);
    return a.appendChild(st("span", {
      className: "vjs-icon-placeholder"
    }, {
      "aria-hidden": !0
    })), this.createControlTextEl(a), a;
  }, n.dispose = function() {
    this.controlTextEl_ = null, e.prototype.dispose.call(this);
  }, n.createControlTextEl = function(t) {
    return this.controlTextEl_ = st("span", {
      className: "vjs-control-text"
    }, {
      "aria-live": "polite"
    }), t && t.appendChild(this.controlTextEl_), this.controlText(this.controlText_, t), this.controlTextEl_;
  }, n.controlText = function(t, r) {
    if (r === void 0 && (r = this.el()), t === void 0)
      return this.controlText_ || "Need Text";
    var s = this.localize(t);
    this.controlText_ = t, _r(this.controlTextEl_, s), !this.nonIconControl && !this.player_.options_.noUITitleAttributes && r.setAttribute("title", s);
  }, n.buildCSSClass = function() {
    return "vjs-control vjs-button " + e.prototype.buildCSSClass.call(this);
  }, n.enable = function() {
    this.enabled_ || (this.enabled_ = !0, this.removeClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "false"), typeof this.tabIndex_ < "u" && this.el_.setAttribute("tabIndex", this.tabIndex_), this.on(["tap", "click"], this.handleClick_), this.on("keydown", this.handleKeyDown_));
  }, n.disable = function() {
    this.enabled_ = !1, this.addClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "true"), typeof this.tabIndex_ < "u" && this.el_.removeAttribute("tabIndex"), this.off("mouseover", this.handleMouseOver_), this.off("mouseout", this.handleMouseOut_), this.off(["tap", "click"], this.handleClick_), this.off("keydown", this.handleKeyDown_);
  }, n.handleLanguagechange = function() {
    this.controlText(this.controlText_);
  }, n.handleClick = function(t) {
    this.options_.clickHandler && this.options_.clickHandler.call(this, arguments);
  }, n.handleKeyDown = function(t) {
    ze.isEventKey(t, "Space") || ze.isEventKey(t, "Enter") ? (t.preventDefault(), t.stopPropagation(), this.trigger("click")) : e.prototype.handleKeyDown.call(this, t);
  }, i;
}(ce);
ce.registerComponent("ClickableComponent", hu);
var _E = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.update(), s.update_ = function(a) {
      return s.update(a);
    }, t.on("posterchange", s.update_), s;
  }
  var n = i.prototype;
  return n.dispose = function() {
    this.player().off("posterchange", this.update_), e.prototype.dispose.call(this);
  }, n.createEl = function() {
    var t = st("div", {
      className: "vjs-poster",
      tabIndex: -1
    });
    return t;
  }, n.update = function(t) {
    var r = this.player().poster();
    this.setSrc(r), r ? this.show() : this.hide();
  }, n.setSrc = function(t) {
    var r = "";
    t && (r = 'url("' + t + '")'), this.el_.style.backgroundImage = r;
  }, n.handleClick = function(t) {
    if (this.player_.controls()) {
      var r = this.player_.usingPlugin("eme") && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;
      this.player_.tech(!0) && !((Ta || ba) && r) && this.player_.tech(!0).focus(), this.player_.paused() ? nn(this.player_.play()) : this.player_.pause();
    }
  }, i;
}(hu);
ce.registerComponent("PosterImage", _E);
var Oi = "#222", gp = "#ccc", bE = {
  monospace: "monospace",
  sansSerif: "sans-serif",
  serif: "serif",
  monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
  monospaceSerif: '"Courier New", monospace',
  proportionalSansSerif: "sans-serif",
  proportionalSerif: "serif",
  casual: '"Comic Sans MS", Impact, fantasy',
  script: '"Monotype Corsiva", cursive',
  smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
};
function il(e, i) {
  var n;
  if (e.length === 4)
    n = e[1] + e[1] + e[2] + e[2] + e[3] + e[3];
  else if (e.length === 7)
    n = e.slice(1);
  else
    throw new Error("Invalid color code provided, " + e + "; must be formatted as e.g. #f0e or #f604e2.");
  return "rgba(" + parseInt(n.slice(0, 2), 16) + "," + parseInt(n.slice(2, 4), 16) + "," + parseInt(n.slice(4, 6), 16) + "," + i + ")";
}
function nl(e, i, n) {
  try {
    e.style[i] = n;
  } catch {
    return;
  }
}
var TE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    var a;
    a = e.call(this, t, r, s) || this;
    var o = function(u) {
      return a.updateDisplay(u);
    };
    return t.on("loadstart", function(u) {
      return a.toggleDisplay(u);
    }), t.on("texttrackchange", o), t.on("loadedmetadata", function(u) {
      return a.preselectTrack(u);
    }), t.ready(kt(Ge(a), function() {
      if (t.tech_ && t.tech_.featuresNativeTextTracks) {
        this.hide();
        return;
      }
      t.on("fullscreenchange", o), t.on("playerresize", o), q.addEventListener("orientationchange", o), t.on("dispose", function() {
        return q.removeEventListener("orientationchange", o);
      });
      for (var u = this.options_.playerOptions.tracks || [], l = 0; l < u.length; l++)
        this.player_.addRemoteTextTrack(u[l], !0);
      this.preselectTrack();
    })), a;
  }
  var n = i.prototype;
  return n.preselectTrack = function() {
    for (var t = {
      captions: 1,
      subtitles: 1
    }, r = this.player_.textTracks(), s = this.player_.cache_.selectedLanguage, a, o, u, l = 0; l < r.length; l++) {
      var d = r[l];
      s && s.enabled && s.language && s.language === d.language && d.kind in t ? d.kind === s.kind ? u = d : u || (u = d) : s && !s.enabled ? (u = null, a = null, o = null) : d.default && (d.kind === "descriptions" && !a ? a = d : d.kind in t && !o && (o = d));
    }
    u ? u.mode = "showing" : o ? o.mode = "showing" : a && (a.mode = "showing");
  }, n.toggleDisplay = function() {
    this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks ? this.hide() : this.show();
  }, n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-text-track-display"
    }, {
      translate: "yes",
      "aria-live": "off",
      "aria-atomic": "true"
    });
  }, n.clearDisplay = function() {
    typeof q.WebVTT == "function" && q.WebVTT.processCues(q, [], this.el_);
  }, n.updateDisplay = function() {
    var t = this.player_.textTracks(), r = this.options_.allowMultipleShowingTracks;
    if (this.clearDisplay(), r) {
      for (var s = [], a = 0; a < t.length; ++a) {
        var o = t[a];
        o.mode === "showing" && s.push(o);
      }
      this.updateForTrack(s);
      return;
    }
    for (var u = null, l = null, d = t.length; d--; ) {
      var p = t[d];
      p.mode === "showing" && (p.kind === "descriptions" ? u = p : l = p);
    }
    l ? (this.getAttribute("aria-live") !== "off" && this.setAttribute("aria-live", "off"), this.updateForTrack(l)) : u && (this.getAttribute("aria-live") !== "assertive" && this.setAttribute("aria-live", "assertive"), this.updateForTrack(u));
  }, n.updateDisplayState = function(t) {
    for (var r = this.player_.textTrackSettings.getValues(), s = t.activeCues, a = s.length; a--; ) {
      var o = s[a];
      if (o) {
        var u = o.displayState;
        if (r.color && (u.firstChild.style.color = r.color), r.textOpacity && nl(u.firstChild, "color", il(r.color || "#fff", r.textOpacity)), r.backgroundColor && (u.firstChild.style.backgroundColor = r.backgroundColor), r.backgroundOpacity && nl(u.firstChild, "backgroundColor", il(r.backgroundColor || "#000", r.backgroundOpacity)), r.windowColor && (r.windowOpacity ? nl(u, "backgroundColor", il(r.windowColor, r.windowOpacity)) : u.style.backgroundColor = r.windowColor), r.edgeStyle && (r.edgeStyle === "dropshadow" ? u.firstChild.style.textShadow = "2px 2px 3px " + Oi + ", 2px 2px 4px " + Oi + ", 2px 2px 5px " + Oi : r.edgeStyle === "raised" ? u.firstChild.style.textShadow = "1px 1px " + Oi + ", 2px 2px " + Oi + ", 3px 3px " + Oi : r.edgeStyle === "depressed" ? u.firstChild.style.textShadow = "1px 1px " + gp + ", 0 1px " + gp + ", -1px -1px " + Oi + ", 0 -1px " + Oi : r.edgeStyle === "uniform" && (u.firstChild.style.textShadow = "0 0 4px " + Oi + ", 0 0 4px " + Oi + ", 0 0 4px " + Oi + ", 0 0 4px " + Oi)), r.fontPercent && r.fontPercent !== 1) {
          var l = q.parseFloat(u.style.fontSize);
          u.style.fontSize = l * r.fontPercent + "px", u.style.height = "auto", u.style.top = "auto";
        }
        r.fontFamily && r.fontFamily !== "default" && (r.fontFamily === "small-caps" ? u.firstChild.style.fontVariant = "small-caps" : u.firstChild.style.fontFamily = bE[r.fontFamily]);
      }
    }
  }, n.updateForTrack = function(t) {
    if (Array.isArray(t) || (t = [t]), !(typeof q.WebVTT != "function" || t.every(function(h) {
      return !h.activeCues;
    }))) {
      for (var r = [], s = 0; s < t.length; ++s)
        for (var a = t[s], o = 0; o < a.activeCues.length; ++o)
          r.push(a.activeCues[o]);
      q.WebVTT.processCues(q, r, this.el_);
      for (var u = 0; u < t.length; ++u) {
        for (var l = t[u], d = 0; d < l.activeCues.length; ++d) {
          var p = l.activeCues[d].displayState;
          bn(p, "vjs-text-track-cue"), bn(p, "vjs-text-track-cue-" + (l.language ? l.language : u)), l.language && cs(p, "lang", l.language);
        }
        this.player_.textTrackSettings && this.updateDisplayState(l);
      }
    }
  }, i;
}(ce);
ce.registerComponent("TextTrackDisplay", TE);
var EE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = this.player_.isAudio(), r = this.localize(t ? "Audio Player" : "Video Player"), s = st("span", {
      className: "vjs-control-text",
      textContent: this.localize("{1} is loading.", [r])
    }), a = e.prototype.createEl.call(this, "div", {
      className: "vjs-loading-spinner",
      dir: "ltr"
    });
    return a.appendChild(s), a;
  }, i;
}(ce);
ce.registerComponent("LoadingSpinner", EE);
var Gi = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.createEl = function(t, r, s) {
    r === void 0 && (r = {}), s === void 0 && (s = {}), t = "button", r = Dt({
      className: this.buildCSSClass()
    }, r), s = Dt({
      type: "button"
    }, s);
    var a = st(t, r, s);
    return a.appendChild(st("span", {
      className: "vjs-icon-placeholder"
    }, {
      "aria-hidden": !0
    })), this.createControlTextEl(a), a;
  }, n.addChild = function(t, r) {
    r === void 0 && (r = {});
    var s = this.constructor.name;
    return Ze.warn("Adding an actionable (user controllable) child to a Button (" + s + ") is not supported; use a ClickableComponent instead."), ce.prototype.addChild.call(this, t, r);
  }, n.enable = function() {
    e.prototype.enable.call(this), this.el_.removeAttribute("disabled");
  }, n.disable = function() {
    e.prototype.disable.call(this), this.el_.setAttribute("disabled", "disabled");
  }, n.handleKeyDown = function(t) {
    if (ze.isEventKey(t, "Space") || ze.isEventKey(t, "Enter")) {
      t.stopPropagation();
      return;
    }
    e.prototype.handleKeyDown.call(this, t);
  }, i;
}(hu);
ce.registerComponent("Button", Gi);
var $g = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.mouseused_ = !1, s.on("mousedown", function(a) {
      return s.handleMouseDown(a);
    }), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-big-play-button";
  }, n.handleClick = function(t) {
    var r = this.player_.play();
    if (this.mouseused_ && t.clientX && t.clientY) {
      var s = this.player_.usingPlugin("eme") && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;
      nn(r), this.player_.tech(!0) && !((Ta || ba) && s) && this.player_.tech(!0).focus();
      return;
    }
    var a = this.player_.getChild("controlBar"), o = a && a.getChild("playToggle");
    if (!o) {
      this.player_.tech(!0).focus();
      return;
    }
    var u = function() {
      return o.focus();
    };
    ea(r) ? r.then(u, function() {
    }) : this.setTimeout(u, 1);
  }, n.handleKeyDown = function(t) {
    this.mouseused_ = !1, e.prototype.handleKeyDown.call(this, t);
  }, n.handleMouseDown = function(t) {
    this.mouseused_ = !0;
  }, i;
}(Gi);
$g.prototype.controlText_ = "Play Video";
ce.registerComponent("BigPlayButton", $g);
var SE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.controlText(r && r.controlText || s.localize("Close")), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-close-button " + e.prototype.buildCSSClass.call(this);
  }, n.handleClick = function(t) {
    this.trigger({
      type: "close",
      bubbles: !1
    });
  }, n.handleKeyDown = function(t) {
    ze.isEventKey(t, "Esc") ? (t.preventDefault(), t.stopPropagation(), this.trigger("click")) : e.prototype.handleKeyDown.call(this, t);
  }, i;
}(Gi);
ce.registerComponent("CloseButton", SE);
var Zg = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r === void 0 && (r = {}), s = e.call(this, t, r) || this, r.replay = r.replay === void 0 || r.replay, s.on(t, "play", function(a) {
      return s.handlePlay(a);
    }), s.on(t, "pause", function(a) {
      return s.handlePause(a);
    }), r.replay && s.on(t, "ended", function(a) {
      return s.handleEnded(a);
    }), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-play-control " + e.prototype.buildCSSClass.call(this);
  }, n.handleClick = function(t) {
    this.player_.paused() ? nn(this.player_.play()) : this.player_.pause();
  }, n.handleSeeked = function(t) {
    this.removeClass("vjs-ended"), this.player_.paused() ? this.handlePause(t) : this.handlePlay(t);
  }, n.handlePlay = function(t) {
    this.removeClass("vjs-ended"), this.removeClass("vjs-paused"), this.addClass("vjs-playing"), this.controlText("Pause");
  }, n.handlePause = function(t) {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.controlText("Play");
  }, n.handleEnded = function(t) {
    var r = this;
    this.removeClass("vjs-playing"), this.addClass("vjs-ended"), this.controlText("Replay"), this.one(this.player_, "seeked", function(s) {
      return r.handleSeeked(s);
    });
  }, i;
}(Gi);
Zg.prototype.controlText_ = "Play";
ce.registerComponent("PlayToggle", Zg);
var ev = function(e, i) {
  e = e < 0 ? 0 : e;
  var n = Math.floor(e % 60), t = Math.floor(e / 60 % 60), r = Math.floor(e / 3600), s = Math.floor(i / 60 % 60), a = Math.floor(i / 3600);
  return (isNaN(e) || e === 1 / 0) && (r = t = n = "-"), r = r > 0 || a > 0 ? r + ":" : "", t = ((r || s >= 10) && t < 10 ? "0" + t : t) + ":", n = n < 10 ? "0" + n : n, r + t + n;
}, Cd = ev;
function wE(e) {
  Cd = e;
}
function kE() {
  Cd = ev;
}
function fs(e, i) {
  return i === void 0 && (i = e), Cd(e, i);
}
var Es = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.on(t, ["timeupdate", "ended"], function(a) {
      return s.updateContent(a);
    }), s.updateTextNode_(), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = this.buildCSSClass(), r = e.prototype.createEl.call(this, "div", {
      className: t + " vjs-time-control vjs-control"
    }), s = st("span", {
      className: "vjs-control-text",
      textContent: this.localize(this.labelText_) + " "
    }, {
      role: "presentation"
    });
    return r.appendChild(s), this.contentEl_ = st("span", {
      className: t + "-display"
    }, {
      "aria-live": "off",
      role: "presentation"
    }), r.appendChild(this.contentEl_), r;
  }, n.dispose = function() {
    this.contentEl_ = null, this.textNode_ = null, e.prototype.dispose.call(this);
  }, n.updateTextNode_ = function(t) {
    var r = this;
    t === void 0 && (t = 0), t = fs(t), this.formattedTime_ !== t && (this.formattedTime_ = t, this.requestNamedAnimationFrame("TimeDisplay#updateTextNode_", function() {
      if (r.contentEl_) {
        var s = r.textNode_;
        s && r.contentEl_.firstChild !== s && (s = null, Ze.warn("TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.")), r.textNode_ = me.createTextNode(r.formattedTime_), r.textNode_ && (s ? r.contentEl_.replaceChild(r.textNode_, s) : r.contentEl_.appendChild(r.textNode_));
      }
    }));
  }, n.updateContent = function(t) {
  }, i;
}(ce);
Es.prototype.labelText_ = "Time";
Es.prototype.controlText_ = "Time";
ce.registerComponent("TimeDisplay", Es);
var Ad = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-current-time";
  }, n.updateContent = function(t) {
    var r;
    this.player_.ended() ? r = this.player_.duration() : r = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime(), this.updateTextNode_(r);
  }, i;
}(Es);
Ad.prototype.labelText_ = "Current Time";
Ad.prototype.controlText_ = "Current Time";
ce.registerComponent("CurrentTimeDisplay", Ad);
var Id = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    s = e.call(this, t, r) || this;
    var a = function(o) {
      return s.updateContent(o);
    };
    return s.on(t, "durationchange", a), s.on(t, "loadstart", a), s.on(t, "loadedmetadata", a), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-duration";
  }, n.updateContent = function(t) {
    var r = this.player_.duration();
    this.updateTextNode_(r);
  }, i;
}(Es);
Id.prototype.labelText_ = "Duration";
Id.prototype.controlText_ = "Duration";
ce.registerComponent("DurationDisplay", Id);
var CE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = e.prototype.createEl.call(this, "div", {
      className: "vjs-time-control vjs-time-divider"
    }, {
      "aria-hidden": !0
    }), r = e.prototype.createEl.call(this, "div"), s = e.prototype.createEl.call(this, "span", {
      textContent: "/"
    });
    return r.appendChild(s), t.appendChild(r), t;
  }, i;
}(ce);
ce.registerComponent("TimeDivider", CE);
var Dd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.on(t, "durationchange", function(a) {
      return s.updateContent(a);
    }), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-remaining-time";
  }, n.createEl = function() {
    var t = e.prototype.createEl.call(this);
    return this.options_.displayNegative !== !1 && t.insertBefore(st("span", {}, {
      "aria-hidden": !0
    }, "-"), this.contentEl_), t;
  }, n.updateContent = function(t) {
    if (typeof this.player_.duration() == "number") {
      var r;
      this.player_.ended() ? r = 0 : this.player_.remainingTimeDisplay ? r = this.player_.remainingTimeDisplay() : r = this.player_.remainingTime(), this.updateTextNode_(r);
    }
  }, i;
}(Es);
Dd.prototype.labelText_ = "Remaining Time";
Dd.prototype.controlText_ = "Remaining Time";
ce.registerComponent("RemainingTimeDisplay", Dd);
var AE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.updateShowing(), s.on(s.player(), "durationchange", function(a) {
      return s.updateShowing(a);
    }), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = e.prototype.createEl.call(this, "div", {
      className: "vjs-live-control vjs-control"
    });
    return this.contentEl_ = st("div", {
      className: "vjs-live-display"
    }, {
      "aria-live": "off"
    }), this.contentEl_.appendChild(st("span", {
      className: "vjs-control-text",
      textContent: this.localize("Stream Type") + " "
    })), this.contentEl_.appendChild(me.createTextNode(this.localize("LIVE"))), t.appendChild(this.contentEl_), t;
  }, n.dispose = function() {
    this.contentEl_ = null, e.prototype.dispose.call(this);
  }, n.updateShowing = function(t) {
    this.player().duration() === 1 / 0 ? this.show() : this.hide();
  }, i;
}(ce);
ce.registerComponent("LiveDisplay", AE);
var iv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.updateLiveEdgeStatus(), s.player_.liveTracker && (s.updateLiveEdgeStatusHandler_ = function(a) {
      return s.updateLiveEdgeStatus(a);
    }, s.on(s.player_.liveTracker, "liveedgechange", s.updateLiveEdgeStatusHandler_)), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = e.prototype.createEl.call(this, "button", {
      className: "vjs-seek-to-live-control vjs-control"
    });
    return this.textEl_ = st("span", {
      className: "vjs-seek-to-live-text",
      textContent: this.localize("LIVE")
    }, {
      "aria-hidden": "true"
    }), t.appendChild(this.textEl_), t;
  }, n.updateLiveEdgeStatus = function() {
    !this.player_.liveTracker || this.player_.liveTracker.atLiveEdge() ? (this.setAttribute("aria-disabled", !0), this.addClass("vjs-at-live-edge"), this.controlText("Seek to live, currently playing live")) : (this.setAttribute("aria-disabled", !1), this.removeClass("vjs-at-live-edge"), this.controlText("Seek to live, currently behind live"));
  }, n.handleClick = function() {
    this.player_.liveTracker.seekToLiveEdge();
  }, n.dispose = function() {
    this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_), this.textEl_ = null, e.prototype.dispose.call(this);
  }, i;
}(Gi);
iv.prototype.controlText_ = "Seek to live, currently playing live";
ce.registerComponent("SeekToLive", iv);
var pu = function(e, i, n) {
  return e = Number(e), Math.min(n, Math.max(i, isNaN(e) ? i : e));
}, xd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.handleMouseDown_ = function(a) {
      return s.handleMouseDown(a);
    }, s.handleMouseUp_ = function(a) {
      return s.handleMouseUp(a);
    }, s.handleKeyDown_ = function(a) {
      return s.handleKeyDown(a);
    }, s.handleClick_ = function(a) {
      return s.handleClick(a);
    }, s.handleMouseMove_ = function(a) {
      return s.handleMouseMove(a);
    }, s.update_ = function(a) {
      return s.update(a);
    }, s.bar = s.getChild(s.options_.barName), s.vertical(!!s.options_.vertical), s.enable(), s;
  }
  var n = i.prototype;
  return n.enabled = function() {
    return this.enabled_;
  }, n.enable = function() {
    this.enabled() || (this.on("mousedown", this.handleMouseDown_), this.on("touchstart", this.handleMouseDown_), this.on("keydown", this.handleKeyDown_), this.on("click", this.handleClick_), this.on(this.player_, "controlsvisible", this.update), this.playerEvent && this.on(this.player_, this.playerEvent, this.update), this.removeClass("disabled"), this.setAttribute("tabindex", 0), this.enabled_ = !0);
  }, n.disable = function() {
    if (this.enabled()) {
      var t = this.bar.el_.ownerDocument;
      this.off("mousedown", this.handleMouseDown_), this.off("touchstart", this.handleMouseDown_), this.off("keydown", this.handleKeyDown_), this.off("click", this.handleClick_), this.off(this.player_, "controlsvisible", this.update_), this.off(t, "mousemove", this.handleMouseMove_), this.off(t, "mouseup", this.handleMouseUp_), this.off(t, "touchmove", this.handleMouseMove_), this.off(t, "touchend", this.handleMouseUp_), this.removeAttribute("tabindex"), this.addClass("disabled"), this.playerEvent && this.off(this.player_, this.playerEvent, this.update), this.enabled_ = !1;
    }
  }, n.createEl = function(t, r, s) {
    return r === void 0 && (r = {}), s === void 0 && (s = {}), r.className = r.className + " vjs-slider", r = Dt({
      tabIndex: 0
    }, r), s = Dt({
      role: "slider",
      "aria-valuenow": 0,
      "aria-valuemin": 0,
      "aria-valuemax": 100,
      tabIndex: 0
    }, s), e.prototype.createEl.call(this, t, r, s);
  }, n.handleMouseDown = function(t) {
    var r = this.bar.el_.ownerDocument;
    t.type === "mousedown" && t.preventDefault(), t.type === "touchstart" && !Dn && t.preventDefault(), xg(), this.addClass("vjs-sliding"), this.trigger("slideractive"), this.on(r, "mousemove", this.handleMouseMove_), this.on(r, "mouseup", this.handleMouseUp_), this.on(r, "touchmove", this.handleMouseMove_), this.on(r, "touchend", this.handleMouseUp_), this.handleMouseMove(t, !0);
  }, n.handleMouseMove = function(t) {
  }, n.handleMouseUp = function() {
    var t = this.bar.el_.ownerDocument;
    Pg(), this.removeClass("vjs-sliding"), this.trigger("sliderinactive"), this.off(t, "mousemove", this.handleMouseMove_), this.off(t, "mouseup", this.handleMouseUp_), this.off(t, "touchmove", this.handleMouseMove_), this.off(t, "touchend", this.handleMouseUp_), this.update();
  }, n.update = function() {
    var t = this;
    if (!(!this.el_ || !this.bar)) {
      var r = this.getProgress();
      return r === this.progress_ || (this.progress_ = r, this.requestNamedAnimationFrame("Slider#update", function() {
        var s = t.vertical() ? "height" : "width";
        t.bar.el().style[s] = (r * 100).toFixed(2) + "%";
      })), r;
    }
  }, n.getProgress = function() {
    return Number(pu(this.getPercent(), 0, 1).toFixed(4));
  }, n.calculateDistance = function(t) {
    var r = ou(this.el_, t);
    return this.vertical() ? r.y : r.x;
  }, n.handleKeyDown = function(t) {
    ze.isEventKey(t, "Left") || ze.isEventKey(t, "Down") ? (t.preventDefault(), t.stopPropagation(), this.stepBack()) : ze.isEventKey(t, "Right") || ze.isEventKey(t, "Up") ? (t.preventDefault(), t.stopPropagation(), this.stepForward()) : e.prototype.handleKeyDown.call(this, t);
  }, n.handleClick = function(t) {
    t.stopPropagation(), t.preventDefault();
  }, n.vertical = function(t) {
    if (t === void 0)
      return this.vertical_ || !1;
    this.vertical_ = !!t, this.vertical_ ? this.addClass("vjs-slider-vertical") : this.addClass("vjs-slider-horizontal");
  }, i;
}(ce);
ce.registerComponent("Slider", xd);
var rl = function(e, i) {
  return pu(e / i * 100, 0, 100).toFixed(2) + "%";
}, IE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.partEls_ = [], s.on(t, "progress", function(a) {
      return s.update(a);
    }), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = e.prototype.createEl.call(this, "div", {
      className: "vjs-load-progress"
    }), r = st("span", {
      className: "vjs-control-text"
    }), s = st("span", {
      textContent: this.localize("Loaded")
    }), a = me.createTextNode(": ");
    return this.percentageEl_ = st("span", {
      className: "vjs-control-text-loaded-percentage",
      textContent: "0%"
    }), t.appendChild(r), r.appendChild(s), r.appendChild(a), r.appendChild(this.percentageEl_), t;
  }, n.dispose = function() {
    this.partEls_ = null, this.percentageEl_ = null, e.prototype.dispose.call(this);
  }, n.update = function(t) {
    var r = this;
    this.requestNamedAnimationFrame("LoadProgressBar#update", function() {
      var s = r.player_.liveTracker, a = r.player_.buffered(), o = s && s.isLive() ? s.seekableEnd() : r.player_.duration(), u = r.player_.bufferedEnd(), l = r.partEls_, d = rl(u, o);
      r.percent_ !== d && (r.el_.style.width = d, _r(r.percentageEl_, d), r.percent_ = d);
      for (var p = 0; p < a.length; p++) {
        var h = a.start(p), m = a.end(p), y = l[p];
        y || (y = r.el_.appendChild(st()), l[p] = y), !(y.dataset.start === h && y.dataset.end === m) && (y.dataset.start = h, y.dataset.end = m, y.style.left = rl(h, u), y.style.width = rl(m - h, u));
      }
      for (var T = l.length; T > a.length; T--)
        r.el_.removeChild(l[T - 1]);
      l.length = a.length;
    });
  }, i;
}(ce);
ce.registerComponent("LoadProgressBar", IE);
var DE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.update = Cn(kt(Ge(s), s.update), Ki), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-time-tooltip"
    }, {
      "aria-hidden": "true"
    });
  }, n.update = function(t, r, s) {
    var a = ha(this.el_), o = ds(this.player_.el()), u = t.width * r;
    if (!(!o || !a)) {
      var l = t.left - o.left + u, d = t.width - u + (o.right - t.right), p = a.width / 2;
      l < p ? p += p - l : d < p && (p = d), p < 0 ? p = 0 : p > a.width && (p = a.width), p = Math.round(p), this.el_.style.right = "-" + p + "px", this.write(s);
    }
  }, n.write = function(t) {
    _r(this.el_, t);
  }, n.updateTime = function(t, r, s, a) {
    var o = this;
    this.requestNamedAnimationFrame("TimeTooltip#updateTime", function() {
      var u, l = o.player_.duration();
      if (o.player_.liveTracker && o.player_.liveTracker.isLive()) {
        var d = o.player_.liveTracker.liveWindow(), p = d - r * d;
        u = (p < 1 ? "" : "-") + fs(p, d);
      } else
        u = fs(s, l);
      o.update(t, r, u), a && a();
    });
  }, i;
}(ce);
ce.registerComponent("TimeTooltip", DE);
var Pd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.update = Cn(kt(Ge(s), s.update), Ki), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-play-progress vjs-slider-bar"
    }, {
      "aria-hidden": "true"
    });
  }, n.update = function(t, r) {
    var s = this.getChild("timeTooltip");
    if (s) {
      var a = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
      s.updateTime(t, r, a);
    }
  }, i;
}(ce);
Pd.prototype.options_ = {
  children: []
};
!fi && !In && Pd.prototype.options_.children.push("timeTooltip");
ce.registerComponent("PlayProgressBar", Pd);
var nv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.update = Cn(kt(Ge(s), s.update), Ki), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-mouse-display"
    });
  }, n.update = function(t, r) {
    var s = this, a = r * this.player_.duration();
    this.getChild("timeTooltip").updateTime(t, r, a, function() {
      s.el_.style.left = t.width * r + "px";
    });
  }, i;
}(ce);
nv.prototype.options_ = {
  children: ["timeTooltip"]
};
ce.registerComponent("MouseTimeDisplay", nv);
var io = 5, vp = 12, Ld = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.setEventHandlers_(), s;
  }
  var n = i.prototype;
  return n.setEventHandlers_ = function() {
    var t = this;
    this.update_ = kt(this, this.update), this.update = Cn(this.update_, Ki), this.on(this.player_, ["ended", "durationchange", "timeupdate"], this.update), this.player_.liveTracker && this.on(this.player_.liveTracker, "liveedgechange", this.update), this.updateInterval = null, this.enableIntervalHandler_ = function(r) {
      return t.enableInterval_(r);
    }, this.disableIntervalHandler_ = function(r) {
      return t.disableInterval_(r);
    }, this.on(this.player_, ["playing"], this.enableIntervalHandler_), this.on(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_), "hidden" in me && "visibilityState" in me && this.on(me, "visibilitychange", this.toggleVisibility_);
  }, n.toggleVisibility_ = function(t) {
    me.visibilityState === "hidden" ? (this.cancelNamedAnimationFrame("SeekBar#update"), this.cancelNamedAnimationFrame("Slider#update"), this.disableInterval_(t)) : (!this.player_.ended() && !this.player_.paused() && this.enableInterval_(), this.update());
  }, n.enableInterval_ = function() {
    this.updateInterval || (this.updateInterval = this.setInterval(this.update, Ki));
  }, n.disableInterval_ = function(t) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && t && t.type !== "ended" || !this.updateInterval || (this.clearInterval(this.updateInterval), this.updateInterval = null);
  }, n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-progress-holder"
    }, {
      "aria-label": this.localize("Progress Bar")
    });
  }, n.update = function(t) {
    var r = this;
    if (me.visibilityState !== "hidden") {
      var s = e.prototype.update.call(this);
      return this.requestNamedAnimationFrame("SeekBar#update", function() {
        var a = r.player_.ended() ? r.player_.duration() : r.getCurrentTime_(), o = r.player_.liveTracker, u = r.player_.duration();
        o && o.isLive() && (u = r.player_.liveTracker.liveCurrentTime()), r.percent_ !== s && (r.el_.setAttribute("aria-valuenow", (s * 100).toFixed(2)), r.percent_ = s), (r.currentTime_ !== a || r.duration_ !== u) && (r.el_.setAttribute("aria-valuetext", r.localize("progress bar timing: currentTime={1} duration={2}", [fs(a, u), fs(u, u)], "{1} of {2}")), r.currentTime_ = a, r.duration_ = u), r.bar && r.bar.update(ds(r.el()), r.getProgress());
      }), s;
    }
  }, n.userSeek_ = function(t) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && this.player_.liveTracker.nextSeekedFromUser(), this.player_.currentTime(t);
  }, n.getCurrentTime_ = function() {
    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
  }, n.getPercent = function() {
    var t = this.getCurrentTime_(), r, s = this.player_.liveTracker;
    return s && s.isLive() ? (r = (t - s.seekableStart()) / s.liveWindow(), s.atLiveEdge() && (r = 1)) : r = t / this.player_.duration(), r;
  }, n.handleMouseDown = function(t) {
    !pa(t) || (t.stopPropagation(), this.videoWasPlaying = !this.player_.paused(), this.player_.pause(), e.prototype.handleMouseDown.call(this, t));
  }, n.handleMouseMove = function(t, r) {
    if (r === void 0 && (r = !1), !!pa(t)) {
      !r && !this.player_.scrubbing() && this.player_.scrubbing(!0);
      var s, a = this.calculateDistance(t), o = this.player_.liveTracker;
      if (!o || !o.isLive())
        s = a * this.player_.duration(), s === this.player_.duration() && (s = s - 0.1);
      else {
        if (a >= 0.99) {
          o.seekToLiveEdge();
          return;
        }
        var u = o.seekableStart(), l = o.liveCurrentTime();
        if (s = u + a * o.liveWindow(), s >= l && (s = l), s <= u && (s = u + 0.1), s === 1 / 0)
          return;
      }
      this.userSeek_(s);
    }
  }, n.enable = function() {
    e.prototype.enable.call(this);
    var t = this.getChild("mouseTimeDisplay");
    !t || t.show();
  }, n.disable = function() {
    e.prototype.disable.call(this);
    var t = this.getChild("mouseTimeDisplay");
    !t || t.hide();
  }, n.handleMouseUp = function(t) {
    e.prototype.handleMouseUp.call(this, t), t && t.stopPropagation(), this.player_.scrubbing(!1), this.player_.trigger({
      type: "timeupdate",
      target: this,
      manuallyTriggered: !0
    }), this.videoWasPlaying ? nn(this.player_.play()) : this.update_();
  }, n.stepForward = function() {
    this.userSeek_(this.player_.currentTime() + io);
  }, n.stepBack = function() {
    this.userSeek_(this.player_.currentTime() - io);
  }, n.handleAction = function(t) {
    this.player_.paused() ? this.player_.play() : this.player_.pause();
  }, n.handleKeyDown = function(t) {
    var r = this.player_.liveTracker;
    if (ze.isEventKey(t, "Space") || ze.isEventKey(t, "Enter"))
      t.preventDefault(), t.stopPropagation(), this.handleAction(t);
    else if (ze.isEventKey(t, "Home"))
      t.preventDefault(), t.stopPropagation(), this.userSeek_(0);
    else if (ze.isEventKey(t, "End"))
      t.preventDefault(), t.stopPropagation(), r && r.isLive() ? this.userSeek_(r.liveCurrentTime()) : this.userSeek_(this.player_.duration());
    else if (/^[0-9]$/.test(ze(t))) {
      t.preventDefault(), t.stopPropagation();
      var s = (ze.codes[ze(t)] - ze.codes[0]) * 10 / 100;
      r && r.isLive() ? this.userSeek_(r.seekableStart() + r.liveWindow() * s) : this.userSeek_(this.player_.duration() * s);
    } else
      ze.isEventKey(t, "PgDn") ? (t.preventDefault(), t.stopPropagation(), this.userSeek_(this.player_.currentTime() - io * vp)) : ze.isEventKey(t, "PgUp") ? (t.preventDefault(), t.stopPropagation(), this.userSeek_(this.player_.currentTime() + io * vp)) : e.prototype.handleKeyDown.call(this, t);
  }, n.dispose = function() {
    this.disableInterval_(), this.off(this.player_, ["ended", "durationchange", "timeupdate"], this.update), this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.update), this.off(this.player_, ["playing"], this.enableIntervalHandler_), this.off(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_), "hidden" in me && "visibilityState" in me && this.off(me, "visibilitychange", this.toggleVisibility_), e.prototype.dispose.call(this);
  }, i;
}(xd);
Ld.prototype.options_ = {
  children: ["loadProgressBar", "playProgressBar"],
  barName: "playProgressBar"
};
!fi && !In && Ld.prototype.options_.children.splice(1, 0, "mouseTimeDisplay");
ce.registerComponent("SeekBar", Ld);
var rv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.handleMouseMove = Cn(kt(Ge(s), s.handleMouseMove), Ki), s.throttledHandleMouseSeek = Cn(kt(Ge(s), s.handleMouseSeek), Ki), s.handleMouseUpHandler_ = function(a) {
      return s.handleMouseUp(a);
    }, s.handleMouseDownHandler_ = function(a) {
      return s.handleMouseDown(a);
    }, s.enable(), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-progress-control vjs-control"
    });
  }, n.handleMouseMove = function(t) {
    var r = this.getChild("seekBar");
    if (r) {
      var s = r.getChild("playProgressBar"), a = r.getChild("mouseTimeDisplay");
      if (!(!s && !a)) {
        var o = r.el(), u = ha(o), l = ou(o, t).x;
        l = pu(l, 0, 1), a && a.update(u, l), s && s.update(u, r.getProgress());
      }
    }
  }, n.handleMouseSeek = function(t) {
    var r = this.getChild("seekBar");
    r && r.handleMouseMove(t);
  }, n.enabled = function() {
    return this.enabled_;
  }, n.disable = function() {
    if (this.children().forEach(function(r) {
      return r.disable && r.disable();
    }), !!this.enabled() && (this.off(["mousedown", "touchstart"], this.handleMouseDownHandler_), this.off(this.el_, "mousemove", this.handleMouseMove), this.removeListenersAddedOnMousedownAndTouchstart(), this.addClass("disabled"), this.enabled_ = !1, this.player_.scrubbing())) {
      var t = this.getChild("seekBar");
      this.player_.scrubbing(!1), t.videoWasPlaying && nn(this.player_.play());
    }
  }, n.enable = function() {
    this.children().forEach(function(t) {
      return t.enable && t.enable();
    }), !this.enabled() && (this.on(["mousedown", "touchstart"], this.handleMouseDownHandler_), this.on(this.el_, "mousemove", this.handleMouseMove), this.removeClass("disabled"), this.enabled_ = !0);
  }, n.removeListenersAddedOnMousedownAndTouchstart = function() {
    var t = this.el_.ownerDocument;
    this.off(t, "mousemove", this.throttledHandleMouseSeek), this.off(t, "touchmove", this.throttledHandleMouseSeek), this.off(t, "mouseup", this.handleMouseUpHandler_), this.off(t, "touchend", this.handleMouseUpHandler_);
  }, n.handleMouseDown = function(t) {
    var r = this.el_.ownerDocument, s = this.getChild("seekBar");
    s && s.handleMouseDown(t), this.on(r, "mousemove", this.throttledHandleMouseSeek), this.on(r, "touchmove", this.throttledHandleMouseSeek), this.on(r, "mouseup", this.handleMouseUpHandler_), this.on(r, "touchend", this.handleMouseUpHandler_);
  }, n.handleMouseUp = function(t) {
    var r = this.getChild("seekBar");
    r && r.handleMouseUp(t), this.removeListenersAddedOnMousedownAndTouchstart();
  }, i;
}(ce);
rv.prototype.options_ = {
  children: ["seekBar"]
};
ce.registerComponent("ProgressControl", rv);
var sv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.on(t, ["enterpictureinpicture", "leavepictureinpicture"], function(a) {
      return s.handlePictureInPictureChange(a);
    }), s.on(t, ["disablepictureinpicturechanged", "loadedmetadata"], function(a) {
      return s.handlePictureInPictureEnabledChange(a);
    }), s.on(t, ["loadedmetadata", "audioonlymodechange", "audiopostermodechange"], function() {
      var a = t.currentType().substring(0, 5) === "audio";
      a || t.audioPosterMode() || t.audioOnlyMode() ? (t.isInPictureInPicture() && t.exitPictureInPicture(), s.hide()) : s.show();
    }), s.disable(), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-picture-in-picture-control " + e.prototype.buildCSSClass.call(this);
  }, n.handlePictureInPictureEnabledChange = function() {
    me.pictureInPictureEnabled && this.player_.disablePictureInPicture() === !1 ? this.enable() : this.disable();
  }, n.handlePictureInPictureChange = function(t) {
    this.player_.isInPictureInPicture() ? this.controlText("Exit Picture-in-Picture") : this.controlText("Picture-in-Picture"), this.handlePictureInPictureEnabledChange();
  }, n.handleClick = function(t) {
    this.player_.isInPictureInPicture() ? this.player_.exitPictureInPicture() : this.player_.requestPictureInPicture();
  }, i;
}(Gi);
sv.prototype.controlText_ = "Picture-in-Picture";
ce.registerComponent("PictureInPictureToggle", sv);
var av = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.on(t, "fullscreenchange", function(a) {
      return s.handleFullscreenChange(a);
    }), me[t.fsApi_.fullscreenEnabled] === !1 && s.disable(), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-fullscreen-control " + e.prototype.buildCSSClass.call(this);
  }, n.handleFullscreenChange = function(t) {
    this.player_.isFullscreen() ? this.controlText("Non-Fullscreen") : this.controlText("Fullscreen");
  }, n.handleClick = function(t) {
    this.player_.isFullscreen() ? this.player_.exitFullscreen() : this.player_.requestFullscreen();
  }, i;
}(Gi);
av.prototype.controlText_ = "Fullscreen";
ce.registerComponent("FullscreenToggle", av);
var xE = function(e, i) {
  i.tech_ && !i.tech_.featuresVolumeControl && e.addClass("vjs-hidden"), e.on(i, "loadstart", function() {
    i.tech_.featuresVolumeControl ? e.removeClass("vjs-hidden") : e.addClass("vjs-hidden");
  });
}, PE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = e.prototype.createEl.call(this, "div", {
      className: "vjs-volume-level"
    });
    return t.appendChild(e.prototype.createEl.call(this, "span", {
      className: "vjs-control-text"
    })), t;
  }, i;
}(ce);
ce.registerComponent("VolumeLevel", PE);
var LE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.update = Cn(kt(Ge(s), s.update), Ki), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-volume-tooltip"
    }, {
      "aria-hidden": "true"
    });
  }, n.update = function(t, r, s, a) {
    if (!s) {
      var o = ds(this.el_), u = ds(this.player_.el()), l = t.width * r;
      if (!u || !o)
        return;
      var d = t.left - u.left + l, p = t.width - l + (u.right - t.right), h = o.width / 2;
      d < h ? h += h - d : p < h && (h = p), h < 0 ? h = 0 : h > o.width && (h = o.width), this.el_.style.right = "-" + h + "px";
    }
    this.write(a + "%");
  }, n.write = function(t) {
    _r(this.el_, t);
  }, n.updateVolume = function(t, r, s, a, o) {
    var u = this;
    this.requestNamedAnimationFrame("VolumeLevelTooltip#updateVolume", function() {
      u.update(t, r, s, a.toFixed(0)), o && o();
    });
  }, i;
}(ce);
ce.registerComponent("VolumeLevelTooltip", LE);
var ov = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.update = Cn(kt(Ge(s), s.update), Ki), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-mouse-display"
    });
  }, n.update = function(t, r, s) {
    var a = this, o = 100 * r;
    this.getChild("volumeLevelTooltip").updateVolume(t, r, s, o, function() {
      s ? a.el_.style.bottom = t.height * r + "px" : a.el_.style.left = t.width * r + "px";
    });
  }, i;
}(ce);
ov.prototype.options_ = {
  children: ["volumeLevelTooltip"]
};
ce.registerComponent("MouseVolumeLevelDisplay", ov);
var fu = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.on("slideractive", function(a) {
      return s.updateLastVolume_(a);
    }), s.on(t, "volumechange", function(a) {
      return s.updateARIAAttributes(a);
    }), t.ready(function() {
      return s.updateARIAAttributes();
    }), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-volume-bar vjs-slider-bar"
    }, {
      "aria-label": this.localize("Volume Level"),
      "aria-live": "polite"
    });
  }, n.handleMouseDown = function(t) {
    !pa(t) || e.prototype.handleMouseDown.call(this, t);
  }, n.handleMouseMove = function(t) {
    var r = this.getChild("mouseVolumeLevelDisplay");
    if (r) {
      var s = this.el(), a = ds(s), o = this.vertical(), u = ou(s, t);
      u = o ? u.y : u.x, u = pu(u, 0, 1), r.update(a, u, o);
    }
    !pa(t) || (this.checkMuted(), this.player_.volume(this.calculateDistance(t)));
  }, n.checkMuted = function() {
    this.player_.muted() && this.player_.muted(!1);
  }, n.getPercent = function() {
    return this.player_.muted() ? 0 : this.player_.volume();
  }, n.stepForward = function() {
    this.checkMuted(), this.player_.volume(this.player_.volume() + 0.1);
  }, n.stepBack = function() {
    this.checkMuted(), this.player_.volume(this.player_.volume() - 0.1);
  }, n.updateARIAAttributes = function(t) {
    var r = this.player_.muted() ? 0 : this.volumeAsPercentage_();
    this.el_.setAttribute("aria-valuenow", r), this.el_.setAttribute("aria-valuetext", r + "%");
  }, n.volumeAsPercentage_ = function() {
    return Math.round(this.player_.volume() * 100);
  }, n.updateLastVolume_ = function() {
    var t = this, r = this.player_.volume();
    this.one("sliderinactive", function() {
      t.player_.volume() === 0 && t.player_.lastVolume_(r);
    });
  }, i;
}(xd);
fu.prototype.options_ = {
  children: ["volumeLevel"],
  barName: "volumeLevel"
};
!fi && !In && fu.prototype.options_.children.splice(0, 0, "mouseVolumeLevelDisplay");
fu.prototype.playerEvent = "volumechange";
ce.registerComponent("VolumeBar", fu);
var uv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r === void 0 && (r = {}), r.vertical = r.vertical || !1, (typeof r.volumeBar > "u" || ca(r.volumeBar)) && (r.volumeBar = r.volumeBar || {}, r.volumeBar.vertical = r.vertical), s = e.call(this, t, r) || this, xE(Ge(s), t), s.throttledHandleMouseMove = Cn(kt(Ge(s), s.handleMouseMove), Ki), s.handleMouseUpHandler_ = function(a) {
      return s.handleMouseUp(a);
    }, s.on("mousedown", function(a) {
      return s.handleMouseDown(a);
    }), s.on("touchstart", function(a) {
      return s.handleMouseDown(a);
    }), s.on("mousemove", function(a) {
      return s.handleMouseMove(a);
    }), s.on(s.volumeBar, ["focus", "slideractive"], function() {
      s.volumeBar.addClass("vjs-slider-active"), s.addClass("vjs-slider-active"), s.trigger("slideractive");
    }), s.on(s.volumeBar, ["blur", "sliderinactive"], function() {
      s.volumeBar.removeClass("vjs-slider-active"), s.removeClass("vjs-slider-active"), s.trigger("sliderinactive");
    }), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = "vjs-volume-horizontal";
    return this.options_.vertical && (t = "vjs-volume-vertical"), e.prototype.createEl.call(this, "div", {
      className: "vjs-volume-control vjs-control " + t
    });
  }, n.handleMouseDown = function(t) {
    var r = this.el_.ownerDocument;
    this.on(r, "mousemove", this.throttledHandleMouseMove), this.on(r, "touchmove", this.throttledHandleMouseMove), this.on(r, "mouseup", this.handleMouseUpHandler_), this.on(r, "touchend", this.handleMouseUpHandler_);
  }, n.handleMouseUp = function(t) {
    var r = this.el_.ownerDocument;
    this.off(r, "mousemove", this.throttledHandleMouseMove), this.off(r, "touchmove", this.throttledHandleMouseMove), this.off(r, "mouseup", this.handleMouseUpHandler_), this.off(r, "touchend", this.handleMouseUpHandler_);
  }, n.handleMouseMove = function(t) {
    this.volumeBar.handleMouseMove(t);
  }, i;
}(ce);
uv.prototype.options_ = {
  children: ["volumeBar"]
};
ce.registerComponent("VolumeControl", uv);
var OE = function(e, i) {
  i.tech_ && !i.tech_.featuresMuteControl && e.addClass("vjs-hidden"), e.on(i, "loadstart", function() {
    i.tech_.featuresMuteControl ? e.removeClass("vjs-hidden") : e.addClass("vjs-hidden");
  });
}, lv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, OE(Ge(s), t), s.on(t, ["loadstart", "volumechange"], function(a) {
      return s.update(a);
    }), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-mute-control " + e.prototype.buildCSSClass.call(this);
  }, n.handleClick = function(t) {
    var r = this.player_.volume(), s = this.player_.lastVolume_();
    if (r === 0) {
      var a = s < 0.1 ? 0.1 : s;
      this.player_.volume(a), this.player_.muted(!1);
    } else
      this.player_.muted(!this.player_.muted());
  }, n.update = function(t) {
    this.updateIcon_(), this.updateControlText_();
  }, n.updateIcon_ = function() {
    var t = this.player_.volume(), r = 3;
    fi && this.player_.tech_ && this.player_.tech_.el_ && this.player_.muted(this.player_.tech_.el_.muted), t === 0 || this.player_.muted() ? r = 0 : t < 0.33 ? r = 1 : t < 0.67 && (r = 2);
    for (var s = 0; s < 4; s++)
      Ea(this.el_, "vjs-vol-" + s);
    bn(this.el_, "vjs-vol-" + r);
  }, n.updateControlText_ = function() {
    var t = this.player_.muted() || this.player_.volume() === 0, r = t ? "Unmute" : "Mute";
    this.controlText() !== r && this.controlText(r);
  }, i;
}(Gi);
lv.prototype.controlText_ = "Mute";
ce.registerComponent("MuteToggle", lv);
var cv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r === void 0 && (r = {}), typeof r.inline < "u" ? r.inline = r.inline : r.inline = !0, (typeof r.volumeControl > "u" || ca(r.volumeControl)) && (r.volumeControl = r.volumeControl || {}, r.volumeControl.vertical = !r.inline), s = e.call(this, t, r) || this, s.handleKeyPressHandler_ = function(a) {
      return s.handleKeyPress(a);
    }, s.on(t, ["loadstart"], function(a) {
      return s.volumePanelState_(a);
    }), s.on(s.muteToggle, "keyup", function(a) {
      return s.handleKeyPress(a);
    }), s.on(s.volumeControl, "keyup", function(a) {
      return s.handleVolumeControlKeyUp(a);
    }), s.on("keydown", function(a) {
      return s.handleKeyPress(a);
    }), s.on("mouseover", function(a) {
      return s.handleMouseOver(a);
    }), s.on("mouseout", function(a) {
      return s.handleMouseOut(a);
    }), s.on(s.volumeControl, ["slideractive"], s.sliderActive_), s.on(s.volumeControl, ["sliderinactive"], s.sliderInactive_), s;
  }
  var n = i.prototype;
  return n.sliderActive_ = function() {
    this.addClass("vjs-slider-active");
  }, n.sliderInactive_ = function() {
    this.removeClass("vjs-slider-active");
  }, n.volumePanelState_ = function() {
    this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-hidden"), this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-mute-toggle-only");
  }, n.createEl = function() {
    var t = "vjs-volume-panel-horizontal";
    return this.options_.inline || (t = "vjs-volume-panel-vertical"), e.prototype.createEl.call(this, "div", {
      className: "vjs-volume-panel vjs-control " + t
    });
  }, n.dispose = function() {
    this.handleMouseOut(), e.prototype.dispose.call(this);
  }, n.handleVolumeControlKeyUp = function(t) {
    ze.isEventKey(t, "Esc") && this.muteToggle.focus();
  }, n.handleMouseOver = function(t) {
    this.addClass("vjs-hover"), Ii(me, "keyup", this.handleKeyPressHandler_);
  }, n.handleMouseOut = function(t) {
    this.removeClass("vjs-hover"), si(me, "keyup", this.handleKeyPressHandler_);
  }, n.handleKeyPress = function(t) {
    ze.isEventKey(t, "Esc") && this.handleMouseOut();
  }, i;
}(ce);
cv.prototype.options_ = {
  children: ["muteToggle", "volumeControl"]
};
ce.registerComponent("VolumePanel", cv);
var dv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, r && (s.menuButton_ = r.menuButton), s.focusedChild_ = -1, s.on("keydown", function(a) {
      return s.handleKeyDown(a);
    }), s.boundHandleBlur_ = function(a) {
      return s.handleBlur(a);
    }, s.boundHandleTapClick_ = function(a) {
      return s.handleTapClick(a);
    }, s;
  }
  var n = i.prototype;
  return n.addEventListenerForItem = function(t) {
    t instanceof ce && (this.on(t, "blur", this.boundHandleBlur_), this.on(t, ["tap", "click"], this.boundHandleTapClick_));
  }, n.removeEventListenerForItem = function(t) {
    t instanceof ce && (this.off(t, "blur", this.boundHandleBlur_), this.off(t, ["tap", "click"], this.boundHandleTapClick_));
  }, n.removeChild = function(t) {
    typeof t == "string" && (t = this.getChild(t)), this.removeEventListenerForItem(t), e.prototype.removeChild.call(this, t);
  }, n.addItem = function(t) {
    var r = this.addChild(t);
    r && this.addEventListenerForItem(r);
  }, n.createEl = function() {
    var t = this.options_.contentElType || "ul";
    this.contentEl_ = st(t, {
      className: "vjs-menu-content"
    }), this.contentEl_.setAttribute("role", "menu");
    var r = e.prototype.createEl.call(this, "div", {
      append: this.contentEl_,
      className: "vjs-menu"
    });
    return r.appendChild(this.contentEl_), Ii(r, "click", function(s) {
      s.preventDefault(), s.stopImmediatePropagation();
    }), r;
  }, n.dispose = function() {
    this.contentEl_ = null, this.boundHandleBlur_ = null, this.boundHandleTapClick_ = null, e.prototype.dispose.call(this);
  }, n.handleBlur = function(t) {
    var r = t.relatedTarget || me.activeElement;
    if (!this.children().some(function(a) {
      return a.el() === r;
    })) {
      var s = this.menuButton_;
      s && s.buttonPressed_ && r !== s.el().firstChild && s.unpressButton();
    }
  }, n.handleTapClick = function(t) {
    if (this.menuButton_) {
      this.menuButton_.unpressButton();
      var r = this.children();
      if (!Array.isArray(r))
        return;
      var s = r.filter(function(a) {
        return a.el() === t.target;
      })[0];
      if (!s)
        return;
      s.name() !== "CaptionSettingsMenuItem" && this.menuButton_.focus();
    }
  }, n.handleKeyDown = function(t) {
    ze.isEventKey(t, "Left") || ze.isEventKey(t, "Down") ? (t.preventDefault(), t.stopPropagation(), this.stepForward()) : (ze.isEventKey(t, "Right") || ze.isEventKey(t, "Up")) && (t.preventDefault(), t.stopPropagation(), this.stepBack());
  }, n.stepForward = function() {
    var t = 0;
    this.focusedChild_ !== void 0 && (t = this.focusedChild_ + 1), this.focus(t);
  }, n.stepBack = function() {
    var t = 0;
    this.focusedChild_ !== void 0 && (t = this.focusedChild_ - 1), this.focus(t);
  }, n.focus = function(t) {
    t === void 0 && (t = 0);
    var r = this.children().slice(), s = r.length && r[0].hasClass("vjs-menu-title");
    s && r.shift(), r.length > 0 && (t < 0 ? t = 0 : t >= r.length && (t = r.length - 1), this.focusedChild_ = t, r[t].el_.focus());
  }, i;
}(ce);
ce.registerComponent("Menu", dv);
var Od = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    r === void 0 && (r = {}), s = e.call(this, t, r) || this, s.menuButton_ = new Gi(t, r), s.menuButton_.controlText(s.controlText_), s.menuButton_.el_.setAttribute("aria-haspopup", "true");
    var a = Gi.prototype.buildCSSClass();
    s.menuButton_.el_.className = s.buildCSSClass() + " " + a, s.menuButton_.removeClass("vjs-control"), s.addChild(s.menuButton_), s.update(), s.enabled_ = !0;
    var o = function(u) {
      return s.handleClick(u);
    };
    return s.handleMenuKeyUp_ = function(u) {
      return s.handleMenuKeyUp(u);
    }, s.on(s.menuButton_, "tap", o), s.on(s.menuButton_, "click", o), s.on(s.menuButton_, "keydown", function(u) {
      return s.handleKeyDown(u);
    }), s.on(s.menuButton_, "mouseenter", function() {
      s.addClass("vjs-hover"), s.menu.show(), Ii(me, "keyup", s.handleMenuKeyUp_);
    }), s.on("mouseleave", function(u) {
      return s.handleMouseLeave(u);
    }), s.on("keydown", function(u) {
      return s.handleSubmenuKeyDown(u);
    }), s;
  }
  var n = i.prototype;
  return n.update = function() {
    var t = this.createMenu();
    this.menu && (this.menu.dispose(), this.removeChild(this.menu)), this.menu = t, this.addChild(t), this.buttonPressed_ = !1, this.menuButton_.el_.setAttribute("aria-expanded", "false"), this.items && this.items.length <= this.hideThreshold_ ? (this.hide(), this.menu.contentEl_.removeAttribute("role")) : (this.show(), this.menu.contentEl_.setAttribute("role", "menu"));
  }, n.createMenu = function() {
    var t = new dv(this.player_, {
      menuButton: this
    });
    if (this.hideThreshold_ = 0, this.options_.title) {
      var r = st("li", {
        className: "vjs-menu-title",
        textContent: Nt(this.options_.title),
        tabIndex: -1
      }), s = new ce(this.player_, {
        el: r
      });
      t.addItem(s);
    }
    if (this.items = this.createItems(), this.items)
      for (var a = 0; a < this.items.length; a++)
        t.addItem(this.items[a]);
    return t;
  }, n.createItems = function() {
  }, n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: this.buildWrapperCSSClass()
    }, {});
  }, n.buildWrapperCSSClass = function() {
    var t = "vjs-menu-button";
    this.options_.inline === !0 ? t += "-inline" : t += "-popup";
    var r = Gi.prototype.buildCSSClass();
    return "vjs-menu-button " + t + " " + r + " " + e.prototype.buildCSSClass.call(this);
  }, n.buildCSSClass = function() {
    var t = "vjs-menu-button";
    return this.options_.inline === !0 ? t += "-inline" : t += "-popup", "vjs-menu-button " + t + " " + e.prototype.buildCSSClass.call(this);
  }, n.controlText = function(t, r) {
    return r === void 0 && (r = this.menuButton_.el()), this.menuButton_.controlText(t, r);
  }, n.dispose = function() {
    this.handleMouseLeave(), e.prototype.dispose.call(this);
  }, n.handleClick = function(t) {
    this.buttonPressed_ ? this.unpressButton() : this.pressButton();
  }, n.handleMouseLeave = function(t) {
    this.removeClass("vjs-hover"), si(me, "keyup", this.handleMenuKeyUp_);
  }, n.focus = function() {
    this.menuButton_.focus();
  }, n.blur = function() {
    this.menuButton_.blur();
  }, n.handleKeyDown = function(t) {
    ze.isEventKey(t, "Esc") || ze.isEventKey(t, "Tab") ? (this.buttonPressed_ && this.unpressButton(), ze.isEventKey(t, "Tab") || (t.preventDefault(), this.menuButton_.focus())) : (ze.isEventKey(t, "Up") || ze.isEventKey(t, "Down")) && (this.buttonPressed_ || (t.preventDefault(), this.pressButton()));
  }, n.handleMenuKeyUp = function(t) {
    (ze.isEventKey(t, "Esc") || ze.isEventKey(t, "Tab")) && this.removeClass("vjs-hover");
  }, n.handleSubmenuKeyPress = function(t) {
    this.handleSubmenuKeyDown(t);
  }, n.handleSubmenuKeyDown = function(t) {
    (ze.isEventKey(t, "Esc") || ze.isEventKey(t, "Tab")) && (this.buttonPressed_ && this.unpressButton(), ze.isEventKey(t, "Tab") || (t.preventDefault(), this.menuButton_.focus()));
  }, n.pressButton = function() {
    if (this.enabled_) {
      if (this.buttonPressed_ = !0, this.menu.show(), this.menu.lockShowing(), this.menuButton_.el_.setAttribute("aria-expanded", "true"), fi && kg())
        return;
      this.menu.focus();
    }
  }, n.unpressButton = function() {
    this.enabled_ && (this.buttonPressed_ = !1, this.menu.unlockShowing(), this.menu.hide(), this.menuButton_.el_.setAttribute("aria-expanded", "false"));
  }, n.disable = function() {
    this.unpressButton(), this.enabled_ = !1, this.addClass("vjs-disabled"), this.menuButton_.disable();
  }, n.enable = function() {
    this.enabled_ = !0, this.removeClass("vjs-disabled"), this.menuButton_.enable();
  }, i;
}(ce);
ce.registerComponent("MenuButton", Od);
var Nd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(n, t) {
    var r, s = t.tracks;
    if (r = e.call(this, n, t) || this, r.items.length <= 1 && r.hide(), !s)
      return Ge(r);
    var a = kt(Ge(r), r.update);
    return s.addEventListener("removetrack", a), s.addEventListener("addtrack", a), s.addEventListener("labelchange", a), r.player_.on("ready", a), r.player_.on("dispose", function() {
      s.removeEventListener("removetrack", a), s.removeEventListener("addtrack", a), s.removeEventListener("labelchange", a);
    }), r;
  }
  return i;
}(Od);
ce.registerComponent("TrackButton", Nd);
var NE = ["Tab", "Esc", "Up", "Down", "Right", "Left"], wa = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.selectable = r.selectable, s.isSelected_ = r.selected || !1, s.multiSelectable = r.multiSelectable, s.selected(s.isSelected_), s.selectable ? s.multiSelectable ? s.el_.setAttribute("role", "menuitemcheckbox") : s.el_.setAttribute("role", "menuitemradio") : s.el_.setAttribute("role", "menuitem"), s;
  }
  var n = i.prototype;
  return n.createEl = function(t, r, s) {
    this.nonIconControl = !0;
    var a = e.prototype.createEl.call(this, "li", Dt({
      className: "vjs-menu-item",
      tabIndex: -1
    }, r), s);
    return a.replaceChild(st("span", {
      className: "vjs-menu-item-text",
      textContent: this.localize(this.options_.label)
    }), a.querySelector(".vjs-icon-placeholder")), a;
  }, n.handleKeyDown = function(t) {
    NE.some(function(r) {
      return ze.isEventKey(t, r);
    }) || e.prototype.handleKeyDown.call(this, t);
  }, n.handleClick = function(t) {
    this.selected(!0);
  }, n.selected = function(t) {
    this.selectable && (t ? (this.addClass("vjs-selected"), this.el_.setAttribute("aria-checked", "true"), this.controlText(", selected"), this.isSelected_ = !0) : (this.removeClass("vjs-selected"), this.el_.setAttribute("aria-checked", "false"), this.controlText(""), this.isSelected_ = !1));
  }, i;
}(hu);
ce.registerComponent("MenuItem", wa);
var ka = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s, a = r.track, o = t.textTracks();
    r.label = a.label || a.language || "Unknown", r.selected = a.mode === "showing", s = e.call(this, t, r) || this, s.track = a, s.kinds = (r.kinds || [r.kind || s.track.kind]).filter(Boolean);
    var u = function() {
      for (var p = arguments.length, h = new Array(p), m = 0; m < p; m++)
        h[m] = arguments[m];
      s.handleTracksChange.apply(Ge(s), h);
    }, l = function() {
      for (var p = arguments.length, h = new Array(p), m = 0; m < p; m++)
        h[m] = arguments[m];
      s.handleSelectedLanguageChange.apply(Ge(s), h);
    };
    if (t.on(["loadstart", "texttrackchange"], u), o.addEventListener("change", u), o.addEventListener("selectedlanguagechange", l), s.on("dispose", function() {
      t.off(["loadstart", "texttrackchange"], u), o.removeEventListener("change", u), o.removeEventListener("selectedlanguagechange", l);
    }), o.onchange === void 0) {
      var d;
      s.on(["tap", "click"], function() {
        if (typeof q.Event != "object")
          try {
            d = new q.Event("change");
          } catch {
          }
        d || (d = me.createEvent("Event"), d.initEvent("change", !0, !0)), o.dispatchEvent(d);
      });
    }
    return s.handleTracksChange(), s;
  }
  var n = i.prototype;
  return n.handleClick = function(t) {
    var r = this.track, s = this.player_.textTracks();
    if (e.prototype.handleClick.call(this, t), !!s)
      for (var a = 0; a < s.length; a++) {
        var o = s[a];
        this.kinds.indexOf(o.kind) !== -1 && (o === r ? o.mode !== "showing" && (o.mode = "showing") : o.mode !== "disabled" && (o.mode = "disabled"));
      }
  }, n.handleTracksChange = function(t) {
    var r = this.track.mode === "showing";
    r !== this.isSelected_ && this.selected(r);
  }, n.handleSelectedLanguageChange = function(t) {
    if (this.track.mode === "showing") {
      var r = this.player_.cache_.selectedLanguage;
      if (r && r.enabled && r.language === this.track.language && r.kind !== this.track.kind)
        return;
      this.player_.cache_.selectedLanguage = {
        enabled: !0,
        language: this.track.language,
        kind: this.track.kind
      };
    }
  }, n.dispose = function() {
    this.track = null, e.prototype.dispose.call(this);
  }, i;
}(wa);
ce.registerComponent("TextTrackMenuItem", ka);
var hv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    return r.track = {
      player: t,
      kind: r.kind,
      kinds: r.kinds,
      default: !1,
      mode: "disabled"
    }, r.kinds || (r.kinds = [r.kind]), r.label ? r.track.label = r.label : r.track.label = r.kinds.join(" and ") + " off", r.selectable = !0, r.multiSelectable = !1, e.call(this, t, r) || this;
  }
  var n = i.prototype;
  return n.handleTracksChange = function(t) {
    for (var r = this.player().textTracks(), s = !0, a = 0, o = r.length; a < o; a++) {
      var u = r[a];
      if (this.options_.kinds.indexOf(u.kind) > -1 && u.mode === "showing") {
        s = !1;
        break;
      }
    }
    s !== this.isSelected_ && this.selected(s);
  }, n.handleSelectedLanguageChange = function(t) {
    for (var r = this.player().textTracks(), s = !0, a = 0, o = r.length; a < o; a++) {
      var u = r[a];
      if (["captions", "descriptions", "subtitles"].indexOf(u.kind) > -1 && u.mode === "showing") {
        s = !1;
        break;
      }
    }
    s && (this.player_.cache_.selectedLanguage = {
      enabled: !1
    });
  }, i;
}(ka);
ce.registerComponent("OffTextTrackMenuItem", hv);
var Ss = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    return r === void 0 && (r = {}), r.tracks = t.textTracks(), e.call(this, t, r) || this;
  }
  var n = i.prototype;
  return n.createItems = function(t, r) {
    t === void 0 && (t = []), r === void 0 && (r = ka);
    var s;
    this.label_ && (s = this.label_ + " off"), t.push(new hv(this.player_, {
      kinds: this.kinds_,
      kind: this.kind_,
      label: s
    })), this.hideThreshold_ += 1;
    var a = this.player_.textTracks();
    Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_]);
    for (var o = 0; o < a.length; o++) {
      var u = a[o];
      if (this.kinds_.indexOf(u.kind) > -1) {
        var l = new r(this.player_, {
          track: u,
          kinds: this.kinds_,
          kind: this.kind_,
          selectable: !0,
          multiSelectable: !1
        });
        l.addClass("vjs-" + u.kind + "-menu-item"), t.push(l);
      }
    }
    return t;
  }, i;
}(Nd);
ce.registerComponent("TextTrackButton", Ss);
var pv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s, a = r.track, o = r.cue, u = t.currentTime();
    return r.selectable = !0, r.multiSelectable = !1, r.label = o.text, r.selected = o.startTime <= u && u < o.endTime, s = e.call(this, t, r) || this, s.track = a, s.cue = o, s;
  }
  var n = i.prototype;
  return n.handleClick = function(t) {
    e.prototype.handleClick.call(this), this.player_.currentTime(this.cue.startTime);
  }, i;
}(wa);
ce.registerComponent("ChaptersTrackMenuItem", pv);
var Rd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    var a;
    return a = e.call(this, t, r, s) || this, a.selectCurrentItem_ = function() {
      a.items.forEach(function(o) {
        o.selected(a.track_.activeCues[0] === o.cue);
      });
    }, a;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-chapters-button " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-chapters-button " + e.prototype.buildWrapperCSSClass.call(this);
  }, n.update = function(t) {
    if (!(t && t.track && t.track.kind !== "chapters")) {
      var r = this.findChaptersTrack();
      r !== this.track_ ? (this.setTrack(r), e.prototype.update.call(this)) : (!this.items || r && r.cues && r.cues.length !== this.items.length) && e.prototype.update.call(this);
    }
  }, n.setTrack = function(t) {
    if (this.track_ !== t) {
      if (this.updateHandler_ || (this.updateHandler_ = this.update.bind(this)), this.track_) {
        var r = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
        r && r.removeEventListener("load", this.updateHandler_), this.track_.removeEventListener("cuechange", this.selectCurrentItem_), this.track_ = null;
      }
      if (this.track_ = t, this.track_) {
        this.track_.mode = "hidden";
        var s = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
        s && s.addEventListener("load", this.updateHandler_), this.track_.addEventListener("cuechange", this.selectCurrentItem_);
      }
    }
  }, n.findChaptersTrack = function() {
    for (var t = this.player_.textTracks() || [], r = t.length - 1; r >= 0; r--) {
      var s = t[r];
      if (s.kind === this.kind_)
        return s;
    }
  }, n.getMenuCaption = function() {
    return this.track_ && this.track_.label ? this.track_.label : this.localize(Nt(this.kind_));
  }, n.createMenu = function() {
    return this.options_.title = this.getMenuCaption(), e.prototype.createMenu.call(this);
  }, n.createItems = function() {
    var t = [];
    if (!this.track_)
      return t;
    var r = this.track_.cues;
    if (!r)
      return t;
    for (var s = 0, a = r.length; s < a; s++) {
      var o = r[s], u = new pv(this.player_, {
        track: this.track_,
        cue: o
      });
      t.push(u);
    }
    return t;
  }, i;
}(Ss);
Rd.prototype.kind_ = "chapters";
Rd.prototype.controlText_ = "Chapters";
ce.registerComponent("ChaptersButton", Rd);
var Md = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    var a;
    a = e.call(this, t, r, s) || this;
    var o = t.textTracks(), u = kt(Ge(a), a.handleTracksChange);
    return o.addEventListener("change", u), a.on("dispose", function() {
      o.removeEventListener("change", u);
    }), a;
  }
  var n = i.prototype;
  return n.handleTracksChange = function(t) {
    for (var r = this.player().textTracks(), s = !1, a = 0, o = r.length; a < o; a++) {
      var u = r[a];
      if (u.kind !== this.kind_ && u.mode === "showing") {
        s = !0;
        break;
      }
    }
    s ? this.disable() : this.enable();
  }, n.buildCSSClass = function() {
    return "vjs-descriptions-button " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-descriptions-button " + e.prototype.buildWrapperCSSClass.call(this);
  }, i;
}(Ss);
Md.prototype.kind_ = "descriptions";
Md.prototype.controlText_ = "Descriptions";
ce.registerComponent("DescriptionsButton", Md);
var Bd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    return e.call(this, t, r, s) || this;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-subtitles-button " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-subtitles-button " + e.prototype.buildWrapperCSSClass.call(this);
  }, i;
}(Ss);
Bd.prototype.kind_ = "subtitles";
Bd.prototype.controlText_ = "Subtitles";
ce.registerComponent("SubtitlesButton", Bd);
var Ud = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r.track = {
      player: t,
      kind: r.kind,
      label: r.kind + " settings",
      selectable: !1,
      default: !1,
      mode: "disabled"
    }, r.selectable = !1, r.name = "CaptionSettingsMenuItem", s = e.call(this, t, r) || this, s.addClass("vjs-texttrack-settings"), s.controlText(", opens " + r.kind + " settings dialog"), s;
  }
  var n = i.prototype;
  return n.handleClick = function(t) {
    this.player().getChild("textTrackSettings").open();
  }, i;
}(ka);
ce.registerComponent("CaptionSettingsMenuItem", Ud);
var Fd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    return e.call(this, t, r, s) || this;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-captions-button " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-captions-button " + e.prototype.buildWrapperCSSClass.call(this);
  }, n.createItems = function() {
    var t = [];
    return !(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild("textTrackSettings") && (t.push(new Ud(this.player_, {
      kind: this.kind_
    })), this.hideThreshold_ += 1), e.prototype.createItems.call(this, t);
  }, i;
}(Ss);
Fd.prototype.kind_ = "captions";
Fd.prototype.controlText_ = "Captions";
ce.registerComponent("CaptionsButton", Fd);
var fv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.createEl = function(t, r, s) {
    var a = e.prototype.createEl.call(this, t, r, s), o = a.querySelector(".vjs-menu-item-text");
    return this.options_.track.kind === "captions" && (o.appendChild(st("span", {
      className: "vjs-icon-placeholder"
    }, {
      "aria-hidden": !0
    })), o.appendChild(st("span", {
      className: "vjs-control-text",
      textContent: " " + this.localize("Captions")
    }))), a;
  }, i;
}(ka);
ce.registerComponent("SubsCapsMenuItem", fv);
var jd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r === void 0 && (r = {}), s = e.call(this, t, r) || this, s.label_ = "subtitles", ["en", "en-us", "en-ca", "fr-ca"].indexOf(s.player_.language_) > -1 && (s.label_ = "captions"), s.menuButton_.controlText(Nt(s.label_)), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-subs-caps-button " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-subs-caps-button " + e.prototype.buildWrapperCSSClass.call(this);
  }, n.createItems = function() {
    var t = [];
    return !(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild("textTrackSettings") && (t.push(new Ud(this.player_, {
      kind: this.label_
    })), this.hideThreshold_ += 1), t = e.prototype.createItems.call(this, t, fv), t;
  }, i;
}(Ss);
jd.prototype.kinds_ = ["captions", "subtitles"];
jd.prototype.controlText_ = "Subtitles";
ce.registerComponent("SubsCapsButton", jd);
var mv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s, a = r.track, o = t.audioTracks();
    r.label = a.label || a.language || "Unknown", r.selected = a.enabled, s = e.call(this, t, r) || this, s.track = a, s.addClass("vjs-" + a.kind + "-menu-item");
    var u = function() {
      for (var l = arguments.length, d = new Array(l), p = 0; p < l; p++)
        d[p] = arguments[p];
      s.handleTracksChange.apply(Ge(s), d);
    };
    return o.addEventListener("change", u), s.on("dispose", function() {
      o.removeEventListener("change", u);
    }), s;
  }
  var n = i.prototype;
  return n.createEl = function(t, r, s) {
    var a = e.prototype.createEl.call(this, t, r, s), o = a.querySelector(".vjs-menu-item-text");
    return this.options_.track.kind === "main-desc" && (o.appendChild(st("span", {
      className: "vjs-icon-placeholder"
    }, {
      "aria-hidden": !0
    })), o.appendChild(st("span", {
      className: "vjs-control-text",
      textContent: " " + this.localize("Descriptions")
    }))), a;
  }, n.handleClick = function(t) {
    if (e.prototype.handleClick.call(this, t), this.track.enabled = !0, this.player_.tech_.featuresNativeAudioTracks)
      for (var r = this.player_.audioTracks(), s = 0; s < r.length; s++) {
        var a = r[s];
        a !== this.track && (a.enabled = a === this.track);
      }
  }, n.handleTracksChange = function(t) {
    this.selected(this.track.enabled);
  }, i;
}(wa);
ce.registerComponent("AudioTrackMenuItem", mv);
var gv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    return r === void 0 && (r = {}), r.tracks = t.audioTracks(), e.call(this, t, r) || this;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-audio-button " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-audio-button " + e.prototype.buildWrapperCSSClass.call(this);
  }, n.createItems = function(t) {
    t === void 0 && (t = []), this.hideThreshold_ = 1;
    for (var r = this.player_.audioTracks(), s = 0; s < r.length; s++) {
      var a = r[s];
      t.push(new mv(this.player_, {
        track: a,
        selectable: !0,
        multiSelectable: !1
      }));
    }
    return t;
  }, i;
}(Nd);
gv.prototype.controlText_ = "Audio Track";
ce.registerComponent("AudioTrackButton", gv);
var qd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s, a = r.rate, o = parseFloat(a, 10);
    return r.label = a, r.selected = o === t.playbackRate(), r.selectable = !0, r.multiSelectable = !1, s = e.call(this, t, r) || this, s.label = a, s.rate = o, s.on(t, "ratechange", function(u) {
      return s.update(u);
    }), s;
  }
  var n = i.prototype;
  return n.handleClick = function(t) {
    e.prototype.handleClick.call(this), this.player().playbackRate(this.rate);
  }, n.update = function(t) {
    this.selected(this.player().playbackRate() === this.rate);
  }, i;
}(wa);
qd.prototype.contentElType = "button";
ce.registerComponent("PlaybackRateMenuItem", qd);
var vv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.menuButton_.el_.setAttribute("aria-describedby", s.labelElId_), s.updateVisibility(), s.updateLabel(), s.on(t, "loadstart", function(a) {
      return s.updateVisibility(a);
    }), s.on(t, "ratechange", function(a) {
      return s.updateLabel(a);
    }), s.on(t, "playbackrateschange", function(a) {
      return s.handlePlaybackRateschange(a);
    }), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    var t = e.prototype.createEl.call(this);
    return this.labelElId_ = "vjs-playback-rate-value-label-" + this.id_, this.labelEl_ = st("div", {
      className: "vjs-playback-rate-value",
      id: this.labelElId_,
      textContent: "1x"
    }), t.appendChild(this.labelEl_), t;
  }, n.dispose = function() {
    this.labelEl_ = null, e.prototype.dispose.call(this);
  }, n.buildCSSClass = function() {
    return "vjs-playback-rate " + e.prototype.buildCSSClass.call(this);
  }, n.buildWrapperCSSClass = function() {
    return "vjs-playback-rate " + e.prototype.buildWrapperCSSClass.call(this);
  }, n.createItems = function() {
    for (var t = this.playbackRates(), r = [], s = t.length - 1; s >= 0; s--)
      r.push(new qd(this.player(), {
        rate: t[s] + "x"
      }));
    return r;
  }, n.updateARIAAttributes = function() {
    this.el().setAttribute("aria-valuenow", this.player().playbackRate());
  }, n.handleClick = function(t) {
    var r = this.player().playbackRate(), s = this.playbackRates(), a = s.indexOf(r), o = (a + 1) % s.length;
    this.player().playbackRate(s[o]);
  }, n.handlePlaybackRateschange = function(t) {
    this.update();
  }, n.playbackRates = function() {
    var t = this.player();
    return t.playbackRates && t.playbackRates() || [];
  }, n.playbackRateSupported = function() {
    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;
  }, n.updateVisibility = function(t) {
    this.playbackRateSupported() ? this.removeClass("vjs-hidden") : this.addClass("vjs-hidden");
  }, n.updateLabel = function(t) {
    this.playbackRateSupported() && (this.labelEl_.textContent = this.player().playbackRate() + "x");
  }, i;
}(Od);
vv.prototype.controlText_ = "Playback Rate";
ce.registerComponent("PlaybackRateMenuButton", vv);
var yv = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-spacer " + e.prototype.buildCSSClass.call(this);
  }, n.createEl = function(t, r, s) {
    return t === void 0 && (t = "div"), r === void 0 && (r = {}), s === void 0 && (s = {}), r.className || (r.className = this.buildCSSClass()), e.prototype.createEl.call(this, t, r, s);
  }, i;
}(ce);
ce.registerComponent("Spacer", yv);
var RE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-custom-control-spacer " + e.prototype.buildCSSClass.call(this);
  }, n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: this.buildCSSClass(),
      textContent: " "
    });
  }, i;
}(yv);
ce.registerComponent("CustomControlSpacer", RE);
var Oo = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.apply(this, arguments) || this;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "div", {
      className: "vjs-control-bar",
      dir: "ltr"
    });
  }, i;
}(ce);
Oo.prototype.options_ = {
  children: ["playToggle", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "seekToLive", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "fullscreenToggle"]
};
"exitPictureInPicture" in me && Oo.prototype.options_.children.splice(Oo.prototype.options_.children.length - 1, 0, "pictureInPictureToggle");
ce.registerComponent("ControlBar", Oo);
var _v = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return s = e.call(this, t, r) || this, s.on(t, "error", function(a) {
      return s.open(a);
    }), s;
  }
  var n = i.prototype;
  return n.buildCSSClass = function() {
    return "vjs-error-display " + e.prototype.buildCSSClass.call(this);
  }, n.content = function() {
    var t = this.player().error();
    return t ? this.localize(t.message) : "";
  }, i;
}(bs);
_v.prototype.options_ = Mi({}, bs.prototype.options_, {
  pauseOnOpen: !1,
  fillAlways: !0,
  temporary: !1,
  uncloseable: !0
});
ce.registerComponent("ErrorDisplay", _v);
var sl = "vjs-text-track-settings", yp = ["#000", "Black"], _p = ["#00F", "Blue"], bp = ["#0FF", "Cyan"], Tp = ["#0F0", "Green"], Ep = ["#F0F", "Magenta"], Sp = ["#F00", "Red"], wp = ["#FFF", "White"], kp = ["#FF0", "Yellow"], al = ["1", "Opaque"], ol = ["0.5", "Semi-Transparent"], Cp = ["0", "Transparent"], cr = {
  backgroundColor: {
    selector: ".vjs-bg-color > select",
    id: "captions-background-color-%s",
    label: "Color",
    options: [yp, wp, Sp, Tp, _p, kp, Ep, bp]
  },
  backgroundOpacity: {
    selector: ".vjs-bg-opacity > select",
    id: "captions-background-opacity-%s",
    label: "Transparency",
    options: [al, ol, Cp]
  },
  color: {
    selector: ".vjs-fg-color > select",
    id: "captions-foreground-color-%s",
    label: "Color",
    options: [wp, yp, Sp, Tp, _p, kp, Ep, bp]
  },
  edgeStyle: {
    selector: ".vjs-edge-style > select",
    id: "%s",
    label: "Text Edge Style",
    options: [["none", "None"], ["raised", "Raised"], ["depressed", "Depressed"], ["uniform", "Uniform"], ["dropshadow", "Dropshadow"]]
  },
  fontFamily: {
    selector: ".vjs-font-family > select",
    id: "captions-font-family-%s",
    label: "Font Family",
    options: [["proportionalSansSerif", "Proportional Sans-Serif"], ["monospaceSansSerif", "Monospace Sans-Serif"], ["proportionalSerif", "Proportional Serif"], ["monospaceSerif", "Monospace Serif"], ["casual", "Casual"], ["script", "Script"], ["small-caps", "Small Caps"]]
  },
  fontPercent: {
    selector: ".vjs-font-percent > select",
    id: "captions-font-size-%s",
    label: "Font Size",
    options: [["0.50", "50%"], ["0.75", "75%"], ["1.00", "100%"], ["1.25", "125%"], ["1.50", "150%"], ["1.75", "175%"], ["2.00", "200%"], ["3.00", "300%"], ["4.00", "400%"]],
    default: 2,
    parser: function(e) {
      return e === "1.00" ? null : Number(e);
    }
  },
  textOpacity: {
    selector: ".vjs-text-opacity > select",
    id: "captions-foreground-opacity-%s",
    label: "Transparency",
    options: [al, ol]
  },
  windowColor: {
    selector: ".vjs-window-color > select",
    id: "captions-window-color-%s",
    label: "Color"
  },
  windowOpacity: {
    selector: ".vjs-window-opacity > select",
    id: "captions-window-opacity-%s",
    label: "Transparency",
    options: [Cp, ol, al]
  }
};
cr.windowColor.options = cr.backgroundColor.options;
function bv(e, i) {
  if (i && (e = i(e)), e && e !== "none")
    return e;
}
function ME(e, i) {
  var n = e.options[e.options.selectedIndex].value;
  return bv(n, i);
}
function BE(e, i, n) {
  if (i) {
    for (var t = 0; t < e.options.length; t++)
      if (bv(e.options[t].value, n) === i) {
        e.selectedIndex = t;
        break;
      }
  }
}
var UE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r.temporary = !1, s = e.call(this, t, r) || this, s.updateDisplay = s.updateDisplay.bind(Ge(s)), s.fill(), s.hasBeenOpened_ = s.hasBeenFilled_ = !0, s.endDialog = st("p", {
      className: "vjs-control-text",
      textContent: s.localize("End of dialog window.")
    }), s.el().appendChild(s.endDialog), s.setDefaults(), r.persistTextTrackSettings === void 0 && (s.options_.persistTextTrackSettings = s.options_.playerOptions.persistTextTrackSettings), s.on(s.$(".vjs-done-button"), "click", function() {
      s.saveSettings(), s.close();
    }), s.on(s.$(".vjs-default-button"), "click", function() {
      s.setDefaults(), s.updateDisplay();
    }), Zr(cr, function(a) {
      s.on(s.$(a.selector), "change", s.updateDisplay);
    }), s.options_.persistTextTrackSettings && s.restoreSettings(), s;
  }
  var n = i.prototype;
  return n.dispose = function() {
    this.endDialog = null, e.prototype.dispose.call(this);
  }, n.createElSelect_ = function(t, r, s) {
    var a = this;
    r === void 0 && (r = ""), s === void 0 && (s = "label");
    var o = cr[t], u = o.id.replace("%s", this.id_), l = [r, u].join(" ").trim();
    return ["<" + s + ' id="' + u + '" class="' + (s === "label" ? "vjs-label" : "") + '">', this.localize(o.label), "</" + s + ">", '<select aria-labelledby="' + l + '">'].concat(o.options.map(function(d) {
      var p = u + "-" + d[1].replace(/\W+/g, "");
      return ['<option id="' + p + '" value="' + d[0] + '" ', 'aria-labelledby="' + l + " " + p + '">', a.localize(d[1]), "</option>"].join("");
    })).concat("</select>").join("");
  }, n.createElFgColor_ = function() {
    var t = "captions-text-legend-" + this.id_;
    return ['<fieldset class="vjs-fg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Text"), "</legend>", this.createElSelect_("color", t), '<span class="vjs-text-opacity vjs-opacity">', this.createElSelect_("textOpacity", t), "</span>", "</fieldset>"].join("");
  }, n.createElBgColor_ = function() {
    var t = "captions-background-" + this.id_;
    return ['<fieldset class="vjs-bg-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Background"), "</legend>", this.createElSelect_("backgroundColor", t), '<span class="vjs-bg-opacity vjs-opacity">', this.createElSelect_("backgroundOpacity", t), "</span>", "</fieldset>"].join("");
  }, n.createElWinColor_ = function() {
    var t = "captions-window-" + this.id_;
    return ['<fieldset class="vjs-window-color vjs-track-setting">', '<legend id="' + t + '">', this.localize("Window"), "</legend>", this.createElSelect_("windowColor", t), '<span class="vjs-window-opacity vjs-opacity">', this.createElSelect_("windowOpacity", t), "</span>", "</fieldset>"].join("");
  }, n.createElColors_ = function() {
    return st("div", {
      className: "vjs-track-settings-colors",
      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join("")
    });
  }, n.createElFont_ = function() {
    return st("div", {
      className: "vjs-track-settings-font",
      innerHTML: ['<fieldset class="vjs-font-percent vjs-track-setting">', this.createElSelect_("fontPercent", "", "legend"), "</fieldset>", '<fieldset class="vjs-edge-style vjs-track-setting">', this.createElSelect_("edgeStyle", "", "legend"), "</fieldset>", '<fieldset class="vjs-font-family vjs-track-setting">', this.createElSelect_("fontFamily", "", "legend"), "</fieldset>"].join("")
    });
  }, n.createElControls_ = function() {
    var t = this.localize("restore all settings to the default values");
    return st("div", {
      className: "vjs-track-settings-controls",
      innerHTML: ['<button type="button" class="vjs-default-button" title="' + t + '">', this.localize("Reset"), '<span class="vjs-control-text"> ' + t + "</span>", "</button>", '<button type="button" class="vjs-done-button">' + this.localize("Done") + "</button>"].join("")
    });
  }, n.content = function() {
    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];
  }, n.label = function() {
    return this.localize("Caption Settings Dialog");
  }, n.description = function() {
    return this.localize("Beginning of dialog window. Escape will cancel and close the window.");
  }, n.buildCSSClass = function() {
    return e.prototype.buildCSSClass.call(this) + " vjs-text-track-settings";
  }, n.getValues = function() {
    var t = this;
    return C0(cr, function(r, s, a) {
      var o = ME(t.$(s.selector), s.parser);
      return o !== void 0 && (r[a] = o), r;
    }, {});
  }, n.setValues = function(t) {
    var r = this;
    Zr(cr, function(s, a) {
      BE(r.$(s.selector), t[a], s.parser);
    });
  }, n.setDefaults = function() {
    var t = this;
    Zr(cr, function(r) {
      var s = r.hasOwnProperty("default") ? r.default : 0;
      t.$(r.selector).selectedIndex = s;
    });
  }, n.restoreSettings = function() {
    var t;
    try {
      t = JSON.parse(q.localStorage.getItem(sl));
    } catch (r) {
      Ze.warn(r);
    }
    t && this.setValues(t);
  }, n.saveSettings = function() {
    if (this.options_.persistTextTrackSettings) {
      var t = this.getValues();
      try {
        Object.keys(t).length ? q.localStorage.setItem(sl, JSON.stringify(t)) : q.localStorage.removeItem(sl);
      } catch (r) {
        Ze.warn(r);
      }
    }
  }, n.updateDisplay = function() {
    var t = this.player_.getChild("textTrackDisplay");
    t && t.updateDisplay();
  }, n.conditionalBlur_ = function() {
    this.previouslyActiveEl_ = null;
    var t = this.player_.controlBar, r = t && t.subsCapsButton, s = t && t.captionsButton;
    r ? r.focus() : s && s.focus();
  }, i;
}(bs);
ce.registerComponent("TextTrackSettings", UE);
var FE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s, a = r.ResizeObserver || q.ResizeObserver;
    r.ResizeObserver === null && (a = !1);
    var o = wt({
      createEl: !a,
      reportTouchActivity: !1
    }, r);
    return s = e.call(this, t, o) || this, s.ResizeObserver = r.ResizeObserver || q.ResizeObserver, s.loadListener_ = null, s.resizeObserver_ = null, s.debouncedHandler_ = B0(function() {
      s.resizeHandler();
    }, 100, !1, Ge(s)), a ? (s.resizeObserver_ = new s.ResizeObserver(s.debouncedHandler_), s.resizeObserver_.observe(t.el())) : (s.loadListener_ = function() {
      if (!(!s.el_ || !s.el_.contentWindow)) {
        var u = s.debouncedHandler_, l = s.unloadListener_ = function() {
          si(this, "resize", u), si(this, "unload", l), l = null;
        };
        Ii(s.el_.contentWindow, "unload", l), Ii(s.el_.contentWindow, "resize", u);
      }
    }, s.one("load", s.loadListener_)), s;
  }
  var n = i.prototype;
  return n.createEl = function() {
    return e.prototype.createEl.call(this, "iframe", {
      className: "vjs-resize-manager",
      tabIndex: -1,
      title: this.localize("No content")
    }, {
      "aria-hidden": "true"
    });
  }, n.resizeHandler = function() {
    !this.player_ || !this.player_.trigger || this.player_.trigger("playerresize");
  }, n.dispose = function() {
    this.debouncedHandler_ && this.debouncedHandler_.cancel(), this.resizeObserver_ && (this.player_.el() && this.resizeObserver_.unobserve(this.player_.el()), this.resizeObserver_.disconnect()), this.loadListener_ && this.off("load", this.loadListener_), this.el_ && this.el_.contentWindow && this.unloadListener_ && this.unloadListener_.call(this.el_.contentWindow), this.ResizeObserver = null, this.resizeObserver = null, this.debouncedHandler_ = null, this.loadListener_ = null, e.prototype.dispose.call(this);
  }, i;
}(ce);
ce.registerComponent("ResizeManager", FE);
var jE = {
  trackingThreshold: 20,
  liveTolerance: 15
}, qE = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s, a = wt(jE, r, {
      createEl: !1
    });
    return s = e.call(this, t, a) || this, s.handleVisibilityChange_ = function(o) {
      return s.handleVisibilityChange(o);
    }, s.trackLiveHandler_ = function() {
      return s.trackLive_();
    }, s.handlePlay_ = function(o) {
      return s.handlePlay(o);
    }, s.handleFirstTimeupdate_ = function(o) {
      return s.handleFirstTimeupdate(o);
    }, s.handleSeeked_ = function(o) {
      return s.handleSeeked(o);
    }, s.seekToLiveEdge_ = function(o) {
      return s.seekToLiveEdge(o);
    }, s.reset_(), s.on(s.player_, "durationchange", function(o) {
      return s.handleDurationchange(o);
    }), s.on(s.player_, "canplay", function() {
      return s.toggleTracking();
    }), Ta && "hidden" in me && "visibilityState" in me && s.on(me, "visibilitychange", s.handleVisibilityChange_), s;
  }
  var n = i.prototype;
  return n.handleVisibilityChange = function() {
    this.player_.duration() === 1 / 0 && (me.hidden ? this.stopTracking() : this.startTracking());
  }, n.trackLive_ = function() {
    var t = this.player_.seekable();
    if (!(!t || !t.length)) {
      var r = Number(q.performance.now().toFixed(4)), s = this.lastTime_ === -1 ? 0 : (r - this.lastTime_) / 1e3;
      this.lastTime_ = r, this.pastSeekEnd_ = this.pastSeekEnd() + s;
      var a = this.liveCurrentTime(), o = this.player_.currentTime(), u = this.player_.paused() || this.seekedBehindLive_ || Math.abs(a - o) > this.options_.liveTolerance;
      (!this.timeupdateSeen_ || a === 1 / 0) && (u = !1), u !== this.behindLiveEdge_ && (this.behindLiveEdge_ = u, this.trigger("liveedgechange"));
    }
  }, n.handleDurationchange = function() {
    this.toggleTracking();
  }, n.toggleTracking = function() {
    this.player_.duration() === 1 / 0 && this.liveWindow() >= this.options_.trackingThreshold ? (this.player_.options_.liveui && this.player_.addClass("vjs-liveui"), this.startTracking()) : (this.player_.removeClass("vjs-liveui"), this.stopTracking());
  }, n.startTracking = function() {
    this.isTracking() || (this.timeupdateSeen_ || (this.timeupdateSeen_ = this.player_.hasStarted()), this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, Ki), this.trackLive_(), this.on(this.player_, ["play", "pause"], this.trackLiveHandler_), this.timeupdateSeen_ ? this.on(this.player_, "seeked", this.handleSeeked_) : (this.one(this.player_, "play", this.handlePlay_), this.one(this.player_, "timeupdate", this.handleFirstTimeupdate_)));
  }, n.handleFirstTimeupdate = function() {
    this.timeupdateSeen_ = !0, this.on(this.player_, "seeked", this.handleSeeked_);
  }, n.handleSeeked = function() {
    var t = Math.abs(this.liveCurrentTime() - this.player_.currentTime());
    this.seekedBehindLive_ = this.nextSeekedFromUser_ && t > 2, this.nextSeekedFromUser_ = !1, this.trackLive_();
  }, n.handlePlay = function() {
    this.one(this.player_, "timeupdate", this.seekToLiveEdge_);
  }, n.reset_ = function() {
    this.lastTime_ = -1, this.pastSeekEnd_ = 0, this.lastSeekEnd_ = -1, this.behindLiveEdge_ = !0, this.timeupdateSeen_ = !1, this.seekedBehindLive_ = !1, this.nextSeekedFromUser_ = !1, this.clearInterval(this.trackingInterval_), this.trackingInterval_ = null, this.off(this.player_, ["play", "pause"], this.trackLiveHandler_), this.off(this.player_, "seeked", this.handleSeeked_), this.off(this.player_, "play", this.handlePlay_), this.off(this.player_, "timeupdate", this.handleFirstTimeupdate_), this.off(this.player_, "timeupdate", this.seekToLiveEdge_);
  }, n.nextSeekedFromUser = function() {
    this.nextSeekedFromUser_ = !0;
  }, n.stopTracking = function() {
    !this.isTracking() || (this.reset_(), this.trigger("liveedgechange"));
  }, n.seekableEnd = function() {
    for (var t = this.player_.seekable(), r = [], s = t ? t.length : 0; s--; )
      r.push(t.end(s));
    return r.length ? r.sort()[r.length - 1] : 1 / 0;
  }, n.seekableStart = function() {
    for (var t = this.player_.seekable(), r = [], s = t ? t.length : 0; s--; )
      r.push(t.start(s));
    return r.length ? r.sort()[0] : 0;
  }, n.liveWindow = function() {
    var t = this.liveCurrentTime();
    return t === 1 / 0 ? 0 : t - this.seekableStart();
  }, n.isLive = function() {
    return this.isTracking();
  }, n.atLiveEdge = function() {
    return !this.behindLiveEdge();
  }, n.liveCurrentTime = function() {
    return this.pastSeekEnd() + this.seekableEnd();
  }, n.pastSeekEnd = function() {
    var t = this.seekableEnd();
    return this.lastSeekEnd_ !== -1 && t !== this.lastSeekEnd_ && (this.pastSeekEnd_ = 0), this.lastSeekEnd_ = t, this.pastSeekEnd_;
  }, n.behindLiveEdge = function() {
    return this.behindLiveEdge_;
  }, n.isTracking = function() {
    return typeof this.trackingInterval_ == "number";
  }, n.seekToLiveEdge = function() {
    this.seekedBehindLive_ = !1, !this.atLiveEdge() && (this.nextSeekedFromUser_ = !1, this.player_.currentTime(this.liveCurrentTime()));
  }, n.dispose = function() {
    this.off(me, "visibilitychange", this.handleVisibilityChange_), this.stopTracking(), e.prototype.dispose.call(this);
  }, i;
}(ce);
ce.registerComponent("LiveTracker", qE);
var Sc = function(e) {
  var i = e.el();
  if (i.hasAttribute("src"))
    return e.triggerSourceset(i.src), !0;
  var n = e.$$("source"), t = [], r = "";
  if (!n.length)
    return !1;
  for (var s = 0; s < n.length; s++) {
    var a = n[s].src;
    a && t.indexOf(a) === -1 && t.push(a);
  }
  return t.length ? (t.length === 1 && (r = t[0]), e.triggerSourceset(r), !0) : !1;
}, VE = Object.defineProperty({}, "innerHTML", {
  get: function() {
    return this.cloneNode(!0).innerHTML;
  },
  set: function(e) {
    var i = me.createElement(this.nodeName.toLowerCase());
    i.innerHTML = e;
    for (var n = me.createDocumentFragment(); i.childNodes.length; )
      n.appendChild(i.childNodes[0]);
    return this.innerText = "", q.Element.prototype.appendChild.call(this, n), this.innerHTML;
  }
}), Tv = function(e, i) {
  for (var n = {}, t = 0; t < e.length && (n = Object.getOwnPropertyDescriptor(e[t], i), !(n && n.set && n.get)); t++)
    ;
  return n.enumerable = !0, n.configurable = !0, n;
}, HE = function(e) {
  return Tv([e.el(), q.HTMLMediaElement.prototype, q.Element.prototype, VE], "innerHTML");
}, Ap = function(e) {
  var i = e.el();
  if (!i.resetSourceWatch_) {
    var n = {}, t = HE(e), r = function(s) {
      return function() {
        for (var a = arguments.length, o = new Array(a), u = 0; u < a; u++)
          o[u] = arguments[u];
        var l = s.apply(i, o);
        return Sc(e), l;
      };
    };
    ["append", "appendChild", "insertAdjacentHTML"].forEach(function(s) {
      !i[s] || (n[s] = i[s], i[s] = r(n[s]));
    }), Object.defineProperty(i, "innerHTML", wt(t, {
      set: r(t.set)
    })), i.resetSourceWatch_ = function() {
      i.resetSourceWatch_ = null, Object.keys(n).forEach(function(s) {
        i[s] = n[s];
      }), Object.defineProperty(i, "innerHTML", t);
    }, e.one("sourceset", i.resetSourceWatch_);
  }
}, WE = Object.defineProperty({}, "src", {
  get: function() {
    return this.hasAttribute("src") ? zg(q.Element.prototype.getAttribute.call(this, "src")) : "";
  },
  set: function(e) {
    return q.Element.prototype.setAttribute.call(this, "src", e), e;
  }
}), GE = function(e) {
  return Tv([e.el(), q.HTMLMediaElement.prototype, WE], "src");
}, KE = function(e) {
  if (e.featuresSourceset) {
    var i = e.el();
    if (!i.resetSourceset_) {
      var n = GE(e), t = i.setAttribute, r = i.load;
      Object.defineProperty(i, "src", wt(n, {
        set: function(s) {
          var a = n.set.call(i, s);
          return e.triggerSourceset(i.src), a;
        }
      })), i.setAttribute = function(s, a) {
        var o = t.call(i, s, a);
        return /src/i.test(s) && e.triggerSourceset(i.src), o;
      }, i.load = function() {
        var s = r.call(i);
        return Sc(e) || (e.triggerSourceset(""), Ap(e)), s;
      }, i.currentSrc ? e.triggerSourceset(i.currentSrc) : Sc(e) || Ap(e), i.resetSourceset_ = function() {
        i.resetSourceset_ = null, i.load = r, i.setAttribute = t, Object.defineProperty(i, "src", n), i.resetSourceWatch_ && i.resetSourceWatch_();
      };
    }
  }
}, Vd = function(e, i, n, t) {
  t === void 0 && (t = !0);
  var r = function(a) {
    return Object.defineProperty(e, i, {
      value: a,
      enumerable: !0,
      writable: !0
    });
  }, s = {
    configurable: !0,
    enumerable: !0,
    get: function() {
      var a = n();
      return r(a), a;
    }
  };
  return t && (s.set = r), Object.defineProperty(e, i, s);
}, Se = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    s = e.call(this, t, r) || this;
    var a = t.source, o = !1;
    if (s.featuresVideoFrameCallback = s.featuresVideoFrameCallback && s.el_.tagName === "VIDEO", a && (s.el_.currentSrc !== a.src || t.tag && t.tag.initNetworkState_ === 3) ? s.setSource(a) : s.handleLateInit_(s.el_), t.enableSourceset && s.setupSourcesetHandling_(), s.isScrubbing_ = !1, s.el_.hasChildNodes()) {
      for (var u = s.el_.childNodes, l = u.length, d = []; l--; ) {
        var p = u[l], h = p.nodeName.toLowerCase();
        h === "track" && (s.featuresNativeTextTracks ? (s.remoteTextTrackEls().addTrackElement_(p), s.remoteTextTracks().addTrack(p.track), s.textTracks().addTrack(p.track), !o && !s.el_.hasAttribute("crossorigin") && du(p.src) && (o = !0)) : d.push(p));
      }
      for (var m = 0; m < d.length; m++)
        s.el_.removeChild(d[m]);
    }
    return s.proxyNativeTracks_(), s.featuresNativeTextTracks && o && Ze.warn(`Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.
This may prevent text tracks from loading.`), s.restoreMetadataTracksInIOSNativePlayer_(), (ls || vd || bg) && t.nativeControlsForTouch === !0 && s.setControls(!0), s.proxyWebkitFullscreen_(), s.triggerReady(), s;
  }
  var n = i.prototype;
  return n.dispose = function() {
    this.el_ && this.el_.resetSourceset_ && this.el_.resetSourceset_(), i.disposeMediaElement(this.el_), this.options_ = null, e.prototype.dispose.call(this);
  }, n.setupSourcesetHandling_ = function() {
    KE(this);
  }, n.restoreMetadataTracksInIOSNativePlayer_ = function() {
    var t = this.textTracks(), r, s = function() {
      r = [];
      for (var o = 0; o < t.length; o++) {
        var u = t[o];
        u.kind === "metadata" && r.push({
          track: u,
          storedMode: u.mode
        });
      }
    };
    s(), t.addEventListener("change", s), this.on("dispose", function() {
      return t.removeEventListener("change", s);
    });
    var a = function o() {
      for (var u = 0; u < r.length; u++) {
        var l = r[u];
        l.track.mode === "disabled" && l.track.mode !== l.storedMode && (l.track.mode = l.storedMode);
      }
      t.removeEventListener("change", o);
    };
    this.on("webkitbeginfullscreen", function() {
      t.removeEventListener("change", s), t.removeEventListener("change", a), t.addEventListener("change", a);
    }), this.on("webkitendfullscreen", function() {
      t.removeEventListener("change", s), t.addEventListener("change", s), t.removeEventListener("change", a);
    });
  }, n.overrideNative_ = function(t, r) {
    var s = this;
    if (r === this["featuresNative" + t + "Tracks"]) {
      var a = t.toLowerCase();
      this[a + "TracksListeners_"] && Object.keys(this[a + "TracksListeners_"]).forEach(function(o) {
        var u = s.el()[a + "Tracks"];
        u.removeEventListener(o, s[a + "TracksListeners_"][o]);
      }), this["featuresNative" + t + "Tracks"] = !r, this[a + "TracksListeners_"] = null, this.proxyNativeTracksForType_(a);
    }
  }, n.overrideNativeAudioTracks = function(t) {
    this.overrideNative_("Audio", t);
  }, n.overrideNativeVideoTracks = function(t) {
    this.overrideNative_("Video", t);
  }, n.proxyNativeTracksForType_ = function(t) {
    var r = this, s = Ri[t], a = this.el()[s.getterName], o = this[s.getterName]();
    if (!(!this["featuresNative" + s.capitalName + "Tracks"] || !a || !a.addEventListener)) {
      var u = {
        change: function(d) {
          var p = {
            type: "change",
            target: o,
            currentTarget: o,
            srcElement: o
          };
          o.trigger(p), t === "text" && r[ps.remoteText.getterName]().trigger(p);
        },
        addtrack: function(d) {
          o.addTrack(d.track);
        },
        removetrack: function(d) {
          o.removeTrack(d.track);
        }
      }, l = function() {
        for (var d = [], p = 0; p < o.length; p++) {
          for (var h = !1, m = 0; m < a.length; m++)
            if (a[m] === o[p]) {
              h = !0;
              break;
            }
          h || d.push(o[p]);
        }
        for (; d.length; )
          o.removeTrack(d.shift());
      };
      this[s.getterName + "Listeners_"] = u, Object.keys(u).forEach(function(d) {
        var p = u[d];
        a.addEventListener(d, p), r.on("dispose", function(h) {
          return a.removeEventListener(d, p);
        });
      }), this.on("loadstart", l), this.on("dispose", function(d) {
        return r.off("loadstart", l);
      });
    }
  }, n.proxyNativeTracks_ = function() {
    var t = this;
    Ri.names.forEach(function(r) {
      t.proxyNativeTracksForType_(r);
    });
  }, n.createEl = function() {
    var t = this.options_.tag;
    if (!t || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
      if (t) {
        var r = t.cloneNode(!0);
        t.parentNode && t.parentNode.insertBefore(r, t), i.disposeMediaElement(t), t = r;
      } else {
        t = me.createElement("video");
        var s = this.options_.tag && gn(this.options_.tag), a = wt({}, s);
        (!ls || this.options_.nativeControlsForTouch !== !0) && delete a.controls, Ig(t, Dt(a, {
          id: this.options_.techId,
          class: "vjs-tech"
        }));
      }
      t.playerId = this.options_.playerId;
    }
    typeof this.options_.preload < "u" && cs(t, "preload", this.options_.preload), this.options_.disablePictureInPicture !== void 0 && (t.disablePictureInPicture = this.options_.disablePictureInPicture);
    for (var o = ["loop", "muted", "playsinline", "autoplay"], u = 0; u < o.length; u++) {
      var l = o[u], d = this.options_[l];
      typeof d < "u" && (d ? cs(t, l, l) : au(t, l), t[l] = d);
    }
    return t;
  }, n.handleLateInit_ = function(t) {
    if (!(t.networkState === 0 || t.networkState === 3)) {
      if (t.readyState === 0) {
        var r = !1, s = function() {
          r = !0;
        };
        this.on("loadstart", s);
        var a = function() {
          r || this.trigger("loadstart");
        };
        this.on("loadedmetadata", a), this.ready(function() {
          this.off("loadstart", s), this.off("loadedmetadata", a), r || this.trigger("loadstart");
        });
        return;
      }
      var o = ["loadstart"];
      o.push("loadedmetadata"), t.readyState >= 2 && o.push("loadeddata"), t.readyState >= 3 && o.push("canplay"), t.readyState >= 4 && o.push("canplaythrough"), this.ready(function() {
        o.forEach(function(u) {
          this.trigger(u);
        }, this);
      });
    }
  }, n.setScrubbing = function(t) {
    this.isScrubbing_ = t;
  }, n.scrubbing = function() {
    return this.isScrubbing_;
  }, n.setCurrentTime = function(t) {
    try {
      this.isScrubbing_ && this.el_.fastSeek && su ? this.el_.fastSeek(t) : this.el_.currentTime = t;
    } catch (r) {
      Ze(r, "Video is not ready. (Video.js)");
    }
  }, n.duration = function() {
    var t = this;
    if (this.el_.duration === 1 / 0 && In && Dn && this.el_.currentTime === 0) {
      var r = function s() {
        t.el_.currentTime > 0 && (t.el_.duration === 1 / 0 && t.trigger("durationchange"), t.off("timeupdate", s));
      };
      return this.on("timeupdate", r), NaN;
    }
    return this.el_.duration || NaN;
  }, n.width = function() {
    return this.el_.offsetWidth;
  }, n.height = function() {
    return this.el_.offsetHeight;
  }, n.proxyWebkitFullscreen_ = function() {
    var t = this;
    if ("webkitDisplayingFullscreen" in this.el_) {
      var r = function() {
        this.trigger("fullscreenchange", {
          isFullscreen: !1
        }), this.el_.controls && !this.options_.nativeControlsForTouch && this.controls() && (this.el_.controls = !1);
      }, s = function() {
        "webkitPresentationMode" in this.el_ && this.el_.webkitPresentationMode !== "picture-in-picture" && (this.one("webkitendfullscreen", r), this.trigger("fullscreenchange", {
          isFullscreen: !0,
          nativeIOSFullscreen: !0
        }));
      };
      this.on("webkitbeginfullscreen", s), this.on("dispose", function() {
        t.off("webkitbeginfullscreen", s), t.off("webkitendfullscreen", r);
      });
    }
  }, n.supportsFullScreen = function() {
    if (typeof this.el_.webkitEnterFullScreen == "function") {
      var t = q.navigator && q.navigator.userAgent || "";
      if (/Android/.test(t) || !/Chrome|Mac OS X 10.5/.test(t))
        return !0;
    }
    return !1;
  }, n.enterFullScreen = function() {
    var t = this.el_;
    if (t.paused && t.networkState <= t.HAVE_METADATA)
      nn(this.el_.play()), this.setTimeout(function() {
        t.pause();
        try {
          t.webkitEnterFullScreen();
        } catch (r) {
          this.trigger("fullscreenerror", r);
        }
      }, 0);
    else
      try {
        t.webkitEnterFullScreen();
      } catch (r) {
        this.trigger("fullscreenerror", r);
      }
  }, n.exitFullScreen = function() {
    if (!this.el_.webkitDisplayingFullscreen) {
      this.trigger("fullscreenerror", new Error("The video is not fullscreen"));
      return;
    }
    this.el_.webkitExitFullScreen();
  }, n.requestPictureInPicture = function() {
    return this.el_.requestPictureInPicture();
  }, n.requestVideoFrameCallback = function(t) {
    return this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.requestVideoFrameCallback(t) : e.prototype.requestVideoFrameCallback.call(this, t);
  }, n.cancelVideoFrameCallback = function(t) {
    this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.cancelVideoFrameCallback(t) : e.prototype.cancelVideoFrameCallback.call(this, t);
  }, n.src = function(t) {
    if (t === void 0)
      return this.el_.src;
    this.setSrc(t);
  }, n.reset = function() {
    i.resetMediaElement(this.el_);
  }, n.currentSrc = function() {
    return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc;
  }, n.setControls = function(t) {
    this.el_.controls = !!t;
  }, n.addTextTrack = function(t, r, s) {
    return this.featuresNativeTextTracks ? this.el_.addTextTrack(t, r, s) : e.prototype.addTextTrack.call(this, t, r, s);
  }, n.createRemoteTextTrack = function(t) {
    if (!this.featuresNativeTextTracks)
      return e.prototype.createRemoteTextTrack.call(this, t);
    var r = me.createElement("track");
    return t.kind && (r.kind = t.kind), t.label && (r.label = t.label), (t.language || t.srclang) && (r.srclang = t.language || t.srclang), t.default && (r.default = t.default), t.id && (r.id = t.id), t.src && (r.src = t.src), r;
  }, n.addRemoteTextTrack = function(t, r) {
    var s = e.prototype.addRemoteTextTrack.call(this, t, r);
    return this.featuresNativeTextTracks && this.el().appendChild(s), s;
  }, n.removeRemoteTextTrack = function(t) {
    if (e.prototype.removeRemoteTextTrack.call(this, t), this.featuresNativeTextTracks)
      for (var r = this.$$("track"), s = r.length; s--; )
        (t === r[s] || t === r[s].track) && this.el().removeChild(r[s]);
  }, n.getVideoPlaybackQuality = function() {
    if (typeof this.el().getVideoPlaybackQuality == "function")
      return this.el().getVideoPlaybackQuality();
    var t = {};
    return typeof this.el().webkitDroppedFrameCount < "u" && typeof this.el().webkitDecodedFrameCount < "u" && (t.droppedVideoFrames = this.el().webkitDroppedFrameCount, t.totalVideoFrames = this.el().webkitDecodedFrameCount), q.performance && typeof q.performance.now == "function" ? t.creationTime = q.performance.now() : q.performance && q.performance.timing && typeof q.performance.timing.navigationStart == "number" && (t.creationTime = q.Date.now() - q.performance.timing.navigationStart), t;
  }, i;
}(mt);
Vd(Se, "TEST_VID", function() {
  if (vs()) {
    var e = me.createElement("video"), i = me.createElement("track");
    return i.kind = "captions", i.srclang = "en", i.label = "English", e.appendChild(i), e;
  }
});
Se.isSupported = function() {
  try {
    Se.TEST_VID.volume = 0.5;
  } catch {
    return !1;
  }
  return !!(Se.TEST_VID && Se.TEST_VID.canPlayType);
};
Se.canPlayType = function(e) {
  return Se.TEST_VID.canPlayType(e);
};
Se.canPlaySource = function(e, i) {
  return Se.canPlayType(e.type);
};
Se.canControlVolume = function() {
  try {
    var e = Se.TEST_VID.volume;
    Se.TEST_VID.volume = e / 2 + 0.1;
    var i = e !== Se.TEST_VID.volume;
    return i && fi ? (q.setTimeout(function() {
      Se && Se.prototype && (Se.prototype.featuresVolumeControl = e !== Se.TEST_VID.volume);
    }), !1) : i;
  } catch {
    return !1;
  }
};
Se.canMuteVolume = function() {
  try {
    var e = Se.TEST_VID.muted;
    return Se.TEST_VID.muted = !e, Se.TEST_VID.muted ? cs(Se.TEST_VID, "muted", "muted") : au(Se.TEST_VID, "muted", "muted"), e !== Se.TEST_VID.muted;
  } catch {
    return !1;
  }
};
Se.canControlPlaybackRate = function() {
  if (In && Dn && Eg < 58)
    return !1;
  try {
    var e = Se.TEST_VID.playbackRate;
    return Se.TEST_VID.playbackRate = e / 2 + 0.1, e !== Se.TEST_VID.playbackRate;
  } catch {
    return !1;
  }
};
Se.canOverrideAttributes = function() {
  try {
    var e = function() {
    };
    Object.defineProperty(me.createElement("video"), "src", {
      get: e,
      set: e
    }), Object.defineProperty(me.createElement("audio"), "src", {
      get: e,
      set: e
    }), Object.defineProperty(me.createElement("video"), "innerHTML", {
      get: e,
      set: e
    }), Object.defineProperty(me.createElement("audio"), "innerHTML", {
      get: e,
      set: e
    });
  } catch {
    return !1;
  }
  return !0;
};
Se.supportsNativeTextTracks = function() {
  return su || fi && Dn;
};
Se.supportsNativeVideoTracks = function() {
  return !!(Se.TEST_VID && Se.TEST_VID.videoTracks);
};
Se.supportsNativeAudioTracks = function() {
  return !!(Se.TEST_VID && Se.TEST_VID.audioTracks);
};
Se.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"];
[["featuresMuteControl", "canMuteVolume"], ["featuresPlaybackRate", "canControlPlaybackRate"], ["featuresSourceset", "canOverrideAttributes"], ["featuresNativeTextTracks", "supportsNativeTextTracks"], ["featuresNativeVideoTracks", "supportsNativeVideoTracks"], ["featuresNativeAudioTracks", "supportsNativeAudioTracks"]].forEach(function(e) {
  var i = e[0], n = e[1];
  Vd(Se.prototype, i, function() {
    return Se[n]();
  }, !0);
});
Se.prototype.featuresVolumeControl = Se.canControlVolume();
Se.prototype.movingMediaElementInDOM = !fi;
Se.prototype.featuresFullscreenResize = !0;
Se.prototype.featuresProgressEvents = !0;
Se.prototype.featuresTimeupdateEvents = !0;
Se.prototype.featuresVideoFrameCallback = !!(Se.TEST_VID && Se.TEST_VID.requestVideoFrameCallback);
var No;
Se.patchCanPlayType = function() {
  fd >= 4 && !Tg && !Dn && (No = Se.TEST_VID && Se.TEST_VID.constructor.prototype.canPlayType, Se.TEST_VID.constructor.prototype.canPlayType = function(e) {
    var i = /^application\/(?:x-|vnd\.apple\.)mpegurl/i;
    return e && i.test(e) ? "maybe" : No.call(this, e);
  });
};
Se.unpatchCanPlayType = function() {
  var e = Se.TEST_VID.constructor.prototype.canPlayType;
  return No && (Se.TEST_VID.constructor.prototype.canPlayType = No), e;
};
Se.patchCanPlayType();
Se.disposeMediaElement = function(e) {
  if (e) {
    for (e.parentNode && e.parentNode.removeChild(e); e.hasChildNodes(); )
      e.removeChild(e.firstChild);
    e.removeAttribute("src"), typeof e.load == "function" && function() {
      try {
        e.load();
      } catch {
      }
    }();
  }
};
Se.resetMediaElement = function(e) {
  if (e) {
    for (var i = e.querySelectorAll("source"), n = i.length; n--; )
      e.removeChild(i[n]);
    e.removeAttribute("src"), typeof e.load == "function" && function() {
      try {
        e.load();
      } catch {
      }
    }();
  }
};
[
  "muted",
  "defaultMuted",
  "autoplay",
  "controls",
  "loop",
  "playsinline"
].forEach(function(e) {
  Se.prototype[e] = function() {
    return this.el_[e] || this.el_.hasAttribute(e);
  };
});
[
  "muted",
  "defaultMuted",
  "autoplay",
  "loop",
  "playsinline"
].forEach(function(e) {
  Se.prototype["set" + Nt(e)] = function(i) {
    this.el_[e] = i, i ? this.el_.setAttribute(e, e) : this.el_.removeAttribute(e);
  };
});
[
  "paused",
  "currentTime",
  "buffered",
  "volume",
  "poster",
  "preload",
  "error",
  "seeking",
  "seekable",
  "ended",
  "playbackRate",
  "defaultPlaybackRate",
  "disablePictureInPicture",
  "played",
  "networkState",
  "readyState",
  "videoWidth",
  "videoHeight",
  "crossOrigin"
].forEach(function(e) {
  Se.prototype[e] = function() {
    return this.el_[e];
  };
});
[
  "volume",
  "src",
  "poster",
  "preload",
  "playbackRate",
  "defaultPlaybackRate",
  "disablePictureInPicture",
  "crossOrigin"
].forEach(function(e) {
  Se.prototype["set" + Nt(e)] = function(i) {
    this.el_[e] = i;
  };
});
[
  "pause",
  "load",
  "play"
].forEach(function(e) {
  Se.prototype[e] = function() {
    return this.el_[e]();
  };
});
mt.withSourceHandlers(Se);
Se.nativeSourceHandler = {};
Se.nativeSourceHandler.canPlayType = function(e) {
  try {
    return Se.TEST_VID.canPlayType(e);
  } catch {
    return "";
  }
};
Se.nativeSourceHandler.canHandleSource = function(e, i) {
  if (e.type)
    return Se.nativeSourceHandler.canPlayType(e.type);
  if (e.src) {
    var n = wd(e.src);
    return Se.nativeSourceHandler.canPlayType("video/" + n);
  }
  return "";
};
Se.nativeSourceHandler.handleSource = function(e, i, n) {
  i.setSrc(e.src);
};
Se.nativeSourceHandler.dispose = function() {
};
Se.registerSourceHandler(Se.nativeSourceHandler);
mt.registerTech("Html5", Se);
var Ev = [
  "progress",
  "abort",
  "suspend",
  "emptied",
  "stalled",
  "loadedmetadata",
  "loadeddata",
  "timeupdate",
  "resize",
  "volumechange",
  "texttrackchange"
], ul = {
  canplay: "CanPlay",
  canplaythrough: "CanPlayThrough",
  playing: "Playing",
  seeked: "Seeked"
}, wc = ["tiny", "xsmall", "small", "medium", "large", "xlarge", "huge"], mo = {};
wc.forEach(function(e) {
  var i = e.charAt(0) === "x" ? "x-" + e.substring(1) : e;
  mo[e] = "vjs-layout-" + i;
});
var zE = {
  tiny: 210,
  xsmall: 320,
  small: 425,
  medium: 768,
  large: 1440,
  xlarge: 2560,
  huge: 1 / 0
}, Ft = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    var a;
    if (t.id = t.id || r.id || "vjs_video_" + xn(), r = Dt(i.getTagSettings(t), r), r.initChildren = !1, r.createEl = !1, r.evented = !1, r.reportTouchActivity = !1, !r.language)
      if (typeof t.closest == "function") {
        var o = t.closest("[lang]");
        o && o.getAttribute && (r.language = o.getAttribute("lang"));
      } else
        for (var u = t; u && u.nodeType === 1; ) {
          if (gn(u).hasOwnProperty("lang")) {
            r.language = u.getAttribute("lang");
            break;
          }
          u = u.parentNode;
        }
    if (a = e.call(this, null, r, s) || this, a.boundDocumentFullscreenChange_ = function(h) {
      return a.documentFullscreenChange_(h);
    }, a.boundFullWindowOnEscKey_ = function(h) {
      return a.fullWindowOnEscKey(h);
    }, a.boundUpdateStyleEl_ = function(h) {
      return a.updateStyleEl_(h);
    }, a.boundApplyInitTime_ = function(h) {
      return a.applyInitTime_(h);
    }, a.boundUpdateCurrentBreakpoint_ = function(h) {
      return a.updateCurrentBreakpoint_(h);
    }, a.boundHandleTechClick_ = function(h) {
      return a.handleTechClick_(h);
    }, a.boundHandleTechDoubleClick_ = function(h) {
      return a.handleTechDoubleClick_(h);
    }, a.boundHandleTechTouchStart_ = function(h) {
      return a.handleTechTouchStart_(h);
    }, a.boundHandleTechTouchMove_ = function(h) {
      return a.handleTechTouchMove_(h);
    }, a.boundHandleTechTouchEnd_ = function(h) {
      return a.handleTechTouchEnd_(h);
    }, a.boundHandleTechTap_ = function(h) {
      return a.handleTechTap_(h);
    }, a.isFullscreen_ = !1, a.log = vg(a.id_), a.fsApi_ = Do, a.isPosterFromTech_ = !1, a.queuedCallbacks_ = [], a.isReady_ = !1, a.hasStarted_ = !1, a.userActive_ = !1, a.debugEnabled_ = !1, a.audioOnlyMode_ = !1, a.audioPosterMode_ = !1, a.audioOnlyCache_ = {
      playerHeight: null,
      hiddenChildren: []
    }, !a.options_ || !a.options_.techOrder || !a.options_.techOrder.length)
      throw new Error("No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?");
    if (a.tag = t, a.tagAttributes = t && gn(t), a.language(a.options_.language), r.languages) {
      var l = {};
      Object.getOwnPropertyNames(r.languages).forEach(function(h) {
        l[h.toLowerCase()] = r.languages[h];
      }), a.languages_ = l;
    } else
      a.languages_ = i.prototype.options_.languages;
    a.resetCache_(), a.poster_ = r.poster || "", a.controls_ = !!r.controls, t.controls = !1, t.removeAttribute("controls"), a.changingSrc_ = !1, a.playCallbacks_ = [], a.playTerminatedQueue_ = [], t.hasAttribute("autoplay") ? a.autoplay(!0) : a.autoplay(a.options_.autoplay), r.plugins && Object.keys(r.plugins).forEach(function(h) {
      if (typeof a[h] != "function")
        throw new Error('plugin "' + h + '" does not exist');
    }), a.scrubbing_ = !1, a.el_ = a.createEl(), Td(Ge(a), {
      eventBusKey: "el_"
    }), a.fsApi_.requestFullscreen && (Ii(me, a.fsApi_.fullscreenchange, a.boundDocumentFullscreenChange_), a.on(a.fsApi_.fullscreenchange, a.boundDocumentFullscreenChange_)), a.fluid_ && a.on(["playerreset", "resize"], a.boundUpdateStyleEl_);
    var d = wt(a.options_);
    r.plugins && Object.keys(r.plugins).forEach(function(h) {
      a[h](r.plugins[h]);
    }), r.debug && a.debug(!0), a.options_.playerOptions = d, a.middleware_ = [], a.playbackRates(r.playbackRates), a.initChildren(), a.isAudio(t.nodeName.toLowerCase() === "audio"), a.controls() ? a.addClass("vjs-controls-enabled") : a.addClass("vjs-controls-disabled"), a.el_.setAttribute("role", "region"), a.isAudio() ? a.el_.setAttribute("aria-label", a.localize("Audio Player")) : a.el_.setAttribute("aria-label", a.localize("Video Player")), a.isAudio() && a.addClass("vjs-audio"), a.flexNotSupported_() && a.addClass("vjs-no-flex"), ls && a.addClass("vjs-touch-enabled"), fi || a.addClass("vjs-workinghover"), i.players[a.id_] = Ge(a);
    var p = fg.split(".")[0];
    return a.addClass("vjs-v" + p), a.userActive(!0), a.reportUserActivity(), a.one("play", function(h) {
      return a.listenForUserActivity_(h);
    }), a.on("stageclick", function(h) {
      return a.handleStageClick_(h);
    }), a.on("keydown", function(h) {
      return a.handleKeyDown(h);
    }), a.on("languagechange", function(h) {
      return a.handleLanguagechange(h);
    }), a.breakpoints(a.options_.breakpoints), a.responsive(a.options_.responsive), a.on("ready", function() {
      a.audioPosterMode(a.options_.audioPosterMode), a.audioOnlyMode(a.options_.audioOnlyMode);
    }), a;
  }
  var n = i.prototype;
  return n.dispose = function() {
    var t = this;
    this.trigger("dispose"), this.off("dispose"), si(me, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_), si(me, "keydown", this.boundFullWindowOnEscKey_), this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_), this.styleEl_ = null), i.players[this.id_] = null, this.tag && this.tag.player && (this.tag.player = null), this.el_ && this.el_.player && (this.el_.player = null), this.tech_ && (this.tech_.dispose(), this.isPosterFromTech_ = !1, this.poster_ = ""), this.playerElIngest_ && (this.playerElIngest_ = null), this.tag && (this.tag = null), pE(this), li.names.forEach(function(r) {
      var s = li[r], a = t[s.getterName]();
      a && a.off && a.off();
    }), e.prototype.dispose.call(this, {
      restoreEl: this.options_.restoreEl
    });
  }, n.createEl = function() {
    var t = this.tag, r, s = this.playerElIngest_ = t.parentNode && t.parentNode.hasAttribute && t.parentNode.hasAttribute("data-vjs-player"), a = this.tag.tagName.toLowerCase() === "video-js";
    s ? r = this.el_ = t.parentNode : a || (r = this.el_ = e.prototype.createEl.call(this, "div"));
    var o = gn(t);
    if (a) {
      for (r = this.el_ = t, t = this.tag = me.createElement("video"); r.children.length; )
        t.appendChild(r.firstChild);
      pr(r, "video-js") || bn(r, "video-js"), r.appendChild(t), s = this.playerElIngest_ = r, Object.keys(r).forEach(function(m) {
        try {
          t[m] = r[m];
        } catch {
        }
      });
    }
    if (t.setAttribute("tabindex", "-1"), o.tabindex = "-1", (Ta || Dn && Sg) && (t.setAttribute("role", "application"), o.role = "application"), t.removeAttribute("width"), t.removeAttribute("height"), "width" in o && delete o.width, "height" in o && delete o.height, Object.getOwnPropertyNames(o).forEach(function(m) {
      a && m === "class" || r.setAttribute(m, o[m]), a && t.setAttribute(m, o[m]);
    }), t.playerId = t.id, t.id += "_html5_api", t.className = "vjs-tech", t.player = r.player = this, this.addClass("vjs-paused"), q.VIDEOJS_NO_DYNAMIC_STYLE !== !0) {
      this.styleEl_ = Ug("vjs-styles-dimensions");
      var u = Fn(".vjs-styles-defaults"), l = Fn("head");
      l.insertBefore(this.styleEl_, u ? u.nextSibling : l.firstChild);
    }
    this.fill_ = !1, this.fluid_ = !1, this.width(this.options_.width), this.height(this.options_.height), this.fill(this.options_.fill), this.fluid(this.options_.fluid), this.aspectRatio(this.options_.aspectRatio), this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);
    for (var d = t.getElementsByTagName("a"), p = 0; p < d.length; p++) {
      var h = d.item(p);
      bn(h, "vjs-hidden"), h.setAttribute("hidden", "hidden");
    }
    return t.initNetworkState_ = t.networkState, t.parentNode && !s && t.parentNode.insertBefore(r, t), gc(t, r), this.children_.unshift(t), this.el_.setAttribute("lang", this.language_), this.el_.setAttribute("translate", "no"), this.el_ = r, r;
  }, n.crossOrigin = function(t) {
    if (!t)
      return this.techGet_("crossOrigin");
    if (t !== "anonymous" && t !== "use-credentials") {
      Ze.warn('crossOrigin must be "anonymous" or "use-credentials", given "' + t + '"');
      return;
    }
    this.techCall_("setCrossOrigin", t);
  }, n.width = function(t) {
    return this.dimension("width", t);
  }, n.height = function(t) {
    return this.dimension("height", t);
  }, n.dimension = function(t, r) {
    var s = t + "_";
    if (r === void 0)
      return this[s] || 0;
    if (r === "" || r === "auto") {
      this[s] = void 0, this.updateStyleEl_();
      return;
    }
    var a = parseFloat(r);
    if (isNaN(a)) {
      Ze.error('Improper value "' + r + '" supplied for for ' + t);
      return;
    }
    this[s] = a, this.updateStyleEl_();
  }, n.fluid = function(t) {
    var r = this;
    if (t === void 0)
      return !!this.fluid_;
    this.fluid_ = !!t, Tn(this) && this.off(["playerreset", "resize"], this.boundUpdateStyleEl_), t ? (this.addClass("vjs-fluid"), this.fill(!1), U0(this, function() {
      r.on(["playerreset", "resize"], r.boundUpdateStyleEl_);
    })) : this.removeClass("vjs-fluid"), this.updateStyleEl_();
  }, n.fill = function(t) {
    if (t === void 0)
      return !!this.fill_;
    this.fill_ = !!t, t ? (this.addClass("vjs-fill"), this.fluid(!1)) : this.removeClass("vjs-fill");
  }, n.aspectRatio = function(t) {
    if (t === void 0)
      return this.aspectRatio_;
    if (!/^\d+\:\d+$/.test(t))
      throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.");
    this.aspectRatio_ = t, this.fluid(!0), this.updateStyleEl_();
  }, n.updateStyleEl_ = function() {
    if (q.VIDEOJS_NO_DYNAMIC_STYLE === !0) {
      var t = typeof this.width_ == "number" ? this.width_ : this.options_.width, r = typeof this.height_ == "number" ? this.height_ : this.options_.height, s = this.tech_ && this.tech_.el();
      s && (t >= 0 && (s.width = t), r >= 0 && (s.height = r));
      return;
    }
    var a, o, u, l;
    this.aspectRatio_ !== void 0 && this.aspectRatio_ !== "auto" ? u = this.aspectRatio_ : this.videoWidth() > 0 ? u = this.videoWidth() + ":" + this.videoHeight() : u = "16:9";
    var d = u.split(":"), p = d[1] / d[0];
    this.width_ !== void 0 ? a = this.width_ : this.height_ !== void 0 ? a = this.height_ / p : a = this.videoWidth() || 300, this.height_ !== void 0 ? o = this.height_ : o = a * p, /^[^a-zA-Z]/.test(this.id()) ? l = "dimensions-" + this.id() : l = this.id() + "-dimensions", this.addClass(l), Fg(this.styleEl_, `
      .` + l + ` {
        width: ` + a + `px;
        height: ` + o + `px;
      }

      .` + l + `.vjs-fluid:not(.vjs-audio-only-mode) {
        padding-top: ` + p * 100 + `%;
      }
    `);
  }, n.loadTech_ = function(t, r) {
    var s = this;
    this.tech_ && this.unloadTech_();
    var a = Nt(t), o = t.charAt(0).toLowerCase() + t.slice(1);
    a !== "Html5" && this.tag && (mt.getTech("Html5").disposeMediaElement(this.tag), this.tag.player = null, this.tag = null), this.techName_ = a, this.isReady_ = !1;
    var u = this.autoplay();
    (typeof this.autoplay() == "string" || this.autoplay() === !0 && this.options_.normalizeAutoplay) && (u = !1);
    var l = {
      source: r,
      autoplay: u,
      nativeControlsForTouch: this.options_.nativeControlsForTouch,
      playerId: this.id(),
      techId: this.id() + "_" + o + "_api",
      playsinline: this.options_.playsinline,
      preload: this.options_.preload,
      loop: this.options_.loop,
      disablePictureInPicture: this.options_.disablePictureInPicture,
      muted: this.options_.muted,
      poster: this.poster(),
      language: this.language(),
      playerElIngest: this.playerElIngest_ || !1,
      "vtt.js": this.options_["vtt.js"],
      canOverridePoster: !!this.options_.techCanOverridePoster,
      enableSourceset: this.options_.enableSourceset,
      Promise: this.options_.Promise
    };
    li.names.forEach(function(p) {
      var h = li[p];
      l[h.getterName] = s[h.privateName];
    }), Dt(l, this.options_[a]), Dt(l, this.options_[o]), Dt(l, this.options_[t.toLowerCase()]), this.tag && (l.tag = this.tag), r && r.src === this.cache_.src && this.cache_.currentTime > 0 && (l.startTime = this.cache_.currentTime);
    var d = mt.getTech(t);
    if (!d)
      throw new Error("No Tech named '" + a + "' exists! '" + a + "' should be registered using videojs.registerTech()'");
    this.tech_ = new d(l), this.tech_.ready(kt(this, this.handleTechReady_), !0), up.jsonToTextTracks(this.textTracksJson_ || [], this.tech_), Ev.forEach(function(p) {
      s.on(s.tech_, p, function(h) {
        return s["handleTech" + Nt(p) + "_"](h);
      });
    }), Object.keys(ul).forEach(function(p) {
      s.on(s.tech_, p, function(h) {
        if (s.tech_.playbackRate() === 0 && s.tech_.seeking()) {
          s.queuedCallbacks_.push({
            callback: s["handleTech" + ul[p] + "_"].bind(s),
            event: h
          });
          return;
        }
        s["handleTech" + ul[p] + "_"](h);
      });
    }), this.on(this.tech_, "loadstart", function(p) {
      return s.handleTechLoadStart_(p);
    }), this.on(this.tech_, "sourceset", function(p) {
      return s.handleTechSourceset_(p);
    }), this.on(this.tech_, "waiting", function(p) {
      return s.handleTechWaiting_(p);
    }), this.on(this.tech_, "ended", function(p) {
      return s.handleTechEnded_(p);
    }), this.on(this.tech_, "seeking", function(p) {
      return s.handleTechSeeking_(p);
    }), this.on(this.tech_, "play", function(p) {
      return s.handleTechPlay_(p);
    }), this.on(this.tech_, "firstplay", function(p) {
      return s.handleTechFirstPlay_(p);
    }), this.on(this.tech_, "pause", function(p) {
      return s.handleTechPause_(p);
    }), this.on(this.tech_, "durationchange", function(p) {
      return s.handleTechDurationChange_(p);
    }), this.on(this.tech_, "fullscreenchange", function(p, h) {
      return s.handleTechFullscreenChange_(p, h);
    }), this.on(this.tech_, "fullscreenerror", function(p, h) {
      return s.handleTechFullscreenError_(p, h);
    }), this.on(this.tech_, "enterpictureinpicture", function(p) {
      return s.handleTechEnterPictureInPicture_(p);
    }), this.on(this.tech_, "leavepictureinpicture", function(p) {
      return s.handleTechLeavePictureInPicture_(p);
    }), this.on(this.tech_, "error", function(p) {
      return s.handleTechError_(p);
    }), this.on(this.tech_, "posterchange", function(p) {
      return s.handleTechPosterChange_(p);
    }), this.on(this.tech_, "textdata", function(p) {
      return s.handleTechTextData_(p);
    }), this.on(this.tech_, "ratechange", function(p) {
      return s.handleTechRateChange_(p);
    }), this.on(this.tech_, "loadedmetadata", this.boundUpdateStyleEl_), this.usingNativeControls(this.techGet_("controls")), this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_(), this.tech_.el().parentNode !== this.el() && (a !== "Html5" || !this.tag) && gc(this.tech_.el(), this.el()), this.tag && (this.tag.player = null, this.tag = null);
  }, n.unloadTech_ = function() {
    var t = this;
    li.names.forEach(function(r) {
      var s = li[r];
      t[s.privateName] = t[s.getterName]();
    }), this.textTracksJson_ = up.textTracksToJson(this.tech_), this.isReady_ = !1, this.tech_.dispose(), this.tech_ = !1, this.isPosterFromTech_ && (this.poster_ = "", this.trigger("posterchange")), this.isPosterFromTech_ = !1;
  }, n.tech = function(t) {
    return t === void 0 && Ze.warn(`Using the tech directly can be dangerous. I hope you know what you're doing.
See https://github.com/videojs/video.js/issues/2617 for more info.
`), this.tech_;
  }, n.addTechControlsListeners_ = function() {
    this.removeTechControlsListeners_(), this.on(this.tech_, "click", this.boundHandleTechClick_), this.on(this.tech_, "dblclick", this.boundHandleTechDoubleClick_), this.on(this.tech_, "touchstart", this.boundHandleTechTouchStart_), this.on(this.tech_, "touchmove", this.boundHandleTechTouchMove_), this.on(this.tech_, "touchend", this.boundHandleTechTouchEnd_), this.on(this.tech_, "tap", this.boundHandleTechTap_);
  }, n.removeTechControlsListeners_ = function() {
    this.off(this.tech_, "tap", this.boundHandleTechTap_), this.off(this.tech_, "touchstart", this.boundHandleTechTouchStart_), this.off(this.tech_, "touchmove", this.boundHandleTechTouchMove_), this.off(this.tech_, "touchend", this.boundHandleTechTouchEnd_), this.off(this.tech_, "click", this.boundHandleTechClick_), this.off(this.tech_, "dblclick", this.boundHandleTechDoubleClick_);
  }, n.handleTechReady_ = function() {
    this.triggerReady(), this.cache_.volume && this.techCall_("setVolume", this.cache_.volume), this.handleTechPosterChange_(), this.handleTechDurationChange_();
  }, n.handleTechLoadStart_ = function() {
    this.removeClass("vjs-ended"), this.removeClass("vjs-seeking"), this.error(null), this.handleTechDurationChange_(), this.paused() ? (this.hasStarted(!1), this.trigger("loadstart")) : (this.trigger("loadstart"), this.trigger("firstplay")), this.manualAutoplay_(this.autoplay() === !0 && this.options_.normalizeAutoplay ? "play" : this.autoplay());
  }, n.manualAutoplay_ = function(t) {
    var r = this;
    if (!(!this.tech_ || typeof t != "string")) {
      var s = function() {
        var o = r.muted();
        r.muted(!0);
        var u = function() {
          r.muted(o);
        };
        r.playTerminatedQueue_.push(u);
        var l = r.play();
        if (ea(l))
          return l.catch(function(d) {
            throw u(), new Error("Rejection at manualAutoplay. Restoring muted value. " + (d || ""));
          });
      }, a;
      if (t === "any" && !this.muted() ? (a = this.play(), ea(a) && (a = a.catch(s))) : t === "muted" && !this.muted() ? a = s() : a = this.play(), !!ea(a))
        return a.then(function() {
          r.trigger({
            type: "autoplay-success",
            autoplay: t
          });
        }).catch(function() {
          r.trigger({
            type: "autoplay-failure",
            autoplay: t
          });
        });
    }
  }, n.updateSourceCaches_ = function(t) {
    t === void 0 && (t = "");
    var r = t, s = "";
    typeof r != "string" && (r = t.src, s = t.type), this.cache_.source = this.cache_.source || {}, this.cache_.sources = this.cache_.sources || [], r && !s && (s = gE(this, r)), this.cache_.source = wt({}, t, {
      src: r,
      type: s
    });
    for (var a = this.cache_.sources.filter(function(h) {
      return h.src && h.src === r;
    }), o = [], u = this.$$("source"), l = [], d = 0; d < u.length; d++) {
      var p = gn(u[d]);
      o.push(p), p.src && p.src === r && l.push(p.src);
    }
    l.length && !a.length ? this.cache_.sources = o : a.length || (this.cache_.sources = [this.cache_.source]), this.cache_.src = r;
  }, n.handleTechSourceset_ = function(t) {
    var r = this;
    if (!this.changingSrc_) {
      var s = function(u) {
        return r.updateSourceCaches_(u);
      }, a = this.currentSource().src, o = t.src;
      a && !/^blob:/.test(a) && /^blob:/.test(o) && (!this.lastSource_ || this.lastSource_.tech !== o && this.lastSource_.player !== a) && (s = function() {
      }), s(o), t.src || this.tech_.any(["sourceset", "loadstart"], function(u) {
        if (u.type !== "sourceset") {
          var l = r.techGet("currentSrc");
          r.lastSource_.tech = l, r.updateSourceCaches_(l);
        }
      });
    }
    this.lastSource_ = {
      player: this.currentSource().src,
      tech: t.src
    }, this.trigger({
      src: t.src,
      type: "sourceset"
    });
  }, n.hasStarted = function(t) {
    if (t === void 0)
      return this.hasStarted_;
    t !== this.hasStarted_ && (this.hasStarted_ = t, this.hasStarted_ ? (this.addClass("vjs-has-started"), this.trigger("firstplay")) : this.removeClass("vjs-has-started"));
  }, n.handleTechPlay_ = function() {
    this.removeClass("vjs-ended"), this.removeClass("vjs-paused"), this.addClass("vjs-playing"), this.hasStarted(!0), this.trigger("play");
  }, n.handleTechRateChange_ = function() {
    this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0 && (this.queuedCallbacks_.forEach(function(t) {
      return t.callback(t.event);
    }), this.queuedCallbacks_ = []), this.cache_.lastPlaybackRate = this.tech_.playbackRate(), this.trigger("ratechange");
  }, n.handleTechWaiting_ = function() {
    var t = this;
    this.addClass("vjs-waiting"), this.trigger("waiting");
    var r = this.currentTime(), s = function a() {
      r !== t.currentTime() && (t.removeClass("vjs-waiting"), t.off("timeupdate", a));
    };
    this.on("timeupdate", s);
  }, n.handleTechCanPlay_ = function() {
    this.removeClass("vjs-waiting"), this.trigger("canplay");
  }, n.handleTechCanPlayThrough_ = function() {
    this.removeClass("vjs-waiting"), this.trigger("canplaythrough");
  }, n.handleTechPlaying_ = function() {
    this.removeClass("vjs-waiting"), this.trigger("playing");
  }, n.handleTechSeeking_ = function() {
    this.addClass("vjs-seeking"), this.trigger("seeking");
  }, n.handleTechSeeked_ = function() {
    this.removeClass("vjs-seeking"), this.removeClass("vjs-ended"), this.trigger("seeked");
  }, n.handleTechFirstPlay_ = function() {
    this.options_.starttime && (Ze.warn("Passing the `starttime` option to the player will be deprecated in 6.0"), this.currentTime(this.options_.starttime)), this.addClass("vjs-has-started"), this.trigger("firstplay");
  }, n.handleTechPause_ = function() {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.trigger("pause");
  }, n.handleTechEnded_ = function() {
    this.addClass("vjs-ended"), this.removeClass("vjs-waiting"), this.options_.loop ? (this.currentTime(0), this.play()) : this.paused() || this.pause(), this.trigger("ended");
  }, n.handleTechDurationChange_ = function() {
    this.duration(this.techGet_("duration"));
  }, n.handleTechClick_ = function(t) {
    !this.controls_ || (this.options_ === void 0 || this.options_.userActions === void 0 || this.options_.userActions.click === void 0 || this.options_.userActions.click !== !1) && (this.options_ !== void 0 && this.options_.userActions !== void 0 && typeof this.options_.userActions.click == "function" ? this.options_.userActions.click.call(this, t) : this.paused() ? nn(this.play()) : this.pause());
  }, n.handleTechDoubleClick_ = function(t) {
    if (this.controls_) {
      var r = Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), function(s) {
        return s.contains(t.target);
      });
      r || (this.options_ === void 0 || this.options_.userActions === void 0 || this.options_.userActions.doubleClick === void 0 || this.options_.userActions.doubleClick !== !1) && (this.options_ !== void 0 && this.options_.userActions !== void 0 && typeof this.options_.userActions.doubleClick == "function" ? this.options_.userActions.doubleClick.call(this, t) : this.isFullscreen() ? this.exitFullscreen() : this.requestFullscreen());
    }
  }, n.handleTechTap_ = function() {
    this.userActive(!this.userActive());
  }, n.handleTechTouchStart_ = function() {
    this.userWasActive = this.userActive();
  }, n.handleTechTouchMove_ = function() {
    this.userWasActive && this.reportUserActivity();
  }, n.handleTechTouchEnd_ = function(t) {
    t.cancelable && t.preventDefault();
  }, n.handleStageClick_ = function() {
    this.reportUserActivity();
  }, n.toggleFullscreenClass_ = function() {
    this.isFullscreen() ? this.addClass("vjs-fullscreen") : this.removeClass("vjs-fullscreen");
  }, n.documentFullscreenChange_ = function(t) {
    var r = t.target.player;
    if (!(r && r !== this)) {
      var s = this.el(), a = me[this.fsApi_.fullscreenElement] === s;
      !a && s.matches ? a = s.matches(":" + this.fsApi_.fullscreen) : !a && s.msMatchesSelector && (a = s.msMatchesSelector(":" + this.fsApi_.fullscreen)), this.isFullscreen(a);
    }
  }, n.handleTechFullscreenChange_ = function(t, r) {
    var s = this;
    r && (r.nativeIOSFullscreen && (this.addClass("vjs-ios-native-fs"), this.tech_.one("webkitendfullscreen", function() {
      s.removeClass("vjs-ios-native-fs");
    })), this.isFullscreen(r.isFullscreen));
  }, n.handleTechFullscreenError_ = function(t, r) {
    this.trigger("fullscreenerror", r);
  }, n.togglePictureInPictureClass_ = function() {
    this.isInPictureInPicture() ? this.addClass("vjs-picture-in-picture") : this.removeClass("vjs-picture-in-picture");
  }, n.handleTechEnterPictureInPicture_ = function(t) {
    this.isInPictureInPicture(!0);
  }, n.handleTechLeavePictureInPicture_ = function(t) {
    this.isInPictureInPicture(!1);
  }, n.handleTechError_ = function() {
    var t = this.tech_.error();
    this.error(t);
  }, n.handleTechTextData_ = function() {
    var t = null;
    arguments.length > 1 && (t = arguments[1]), this.trigger("textdata", t);
  }, n.getCache = function() {
    return this.cache_;
  }, n.resetCache_ = function() {
    this.cache_ = {
      currentTime: 0,
      initTime: 0,
      inactivityTimeout: this.options_.inactivityTimeout,
      duration: NaN,
      lastVolume: 1,
      lastPlaybackRate: this.defaultPlaybackRate(),
      media: null,
      src: "",
      source: {},
      sources: [],
      playbackRates: [],
      volume: 1
    };
  }, n.techCall_ = function(t, r) {
    this.ready(function() {
      if (t in dE)
        return lE(this.middleware_, this.tech_, t, r);
      if (t in fp)
        return pp(this.middleware_, this.tech_, t, r);
      try {
        this.tech_ && this.tech_[t](r);
      } catch (s) {
        throw Ze(s), s;
      }
    }, !0);
  }, n.techGet_ = function(t) {
    if (!(!this.tech_ || !this.tech_.isReady_)) {
      if (t in cE)
        return uE(this.middleware_, this.tech_, t);
      if (t in fp)
        return pp(this.middleware_, this.tech_, t);
      try {
        return this.tech_[t]();
      } catch (r) {
        throw this.tech_[t] === void 0 ? (Ze("Video.js: " + t + " method not defined for " + this.techName_ + " playback technology.", r), r) : r.name === "TypeError" ? (Ze("Video.js: " + t + " unavailable on " + this.techName_ + " playback technology element.", r), this.tech_.isReady_ = !1, r) : (Ze(r), r);
      }
    }
  }, n.play = function() {
    var t = this, r = this.options_.Promise || q.Promise;
    return r ? new r(function(s) {
      t.play_(s);
    }) : this.play_();
  }, n.play_ = function(t) {
    var r = this;
    t === void 0 && (t = nn), this.playCallbacks_.push(t);
    var s = !!(!this.changingSrc_ && (this.src() || this.currentSrc())), a = !!(su || fi);
    if (this.waitToPlay_ && (this.off(["ready", "loadstart"], this.waitToPlay_), this.waitToPlay_ = null), !this.isReady_ || !s) {
      this.waitToPlay_ = function(l) {
        r.play_();
      }, this.one(["ready", "loadstart"], this.waitToPlay_), !s && a && this.load();
      return;
    }
    var o = this.techGet_("play"), u = a && this.hasClass("vjs-ended");
    u && this.resetProgressBar_(), o === null ? this.runPlayTerminatedQueue_() : this.runPlayCallbacks_(o);
  }, n.runPlayTerminatedQueue_ = function() {
    var t = this.playTerminatedQueue_.slice(0);
    this.playTerminatedQueue_ = [], t.forEach(function(r) {
      r();
    });
  }, n.runPlayCallbacks_ = function(t) {
    var r = this.playCallbacks_.slice(0);
    this.playCallbacks_ = [], this.playTerminatedQueue_ = [], r.forEach(function(s) {
      s(t);
    });
  }, n.pause = function() {
    this.techCall_("pause");
  }, n.paused = function() {
    return this.techGet_("paused") !== !1;
  }, n.played = function() {
    return this.techGet_("played") || fr(0, 0);
  }, n.scrubbing = function(t) {
    if (typeof t > "u")
      return this.scrubbing_;
    this.scrubbing_ = !!t, this.techCall_("setScrubbing", this.scrubbing_), t ? this.addClass("vjs-scrubbing") : this.removeClass("vjs-scrubbing");
  }, n.currentTime = function(t) {
    if (typeof t < "u") {
      if (t < 0 && (t = 0), !this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {
        this.cache_.initTime = t, this.off("canplay", this.boundApplyInitTime_), this.one("canplay", this.boundApplyInitTime_);
        return;
      }
      this.techCall_("setCurrentTime", t), this.cache_.initTime = 0;
      return;
    }
    return this.cache_.currentTime = this.techGet_("currentTime") || 0, this.cache_.currentTime;
  }, n.applyInitTime_ = function() {
    this.currentTime(this.cache_.initTime);
  }, n.duration = function(t) {
    if (t === void 0)
      return this.cache_.duration !== void 0 ? this.cache_.duration : NaN;
    t = parseFloat(t), t < 0 && (t = 1 / 0), t !== this.cache_.duration && (this.cache_.duration = t, t === 1 / 0 ? this.addClass("vjs-live") : this.removeClass("vjs-live"), isNaN(t) || this.trigger("durationchange"));
  }, n.remainingTime = function() {
    return this.duration() - this.currentTime();
  }, n.remainingTimeDisplay = function() {
    return Math.floor(this.duration()) - Math.floor(this.currentTime());
  }, n.buffered = function() {
    var t = this.techGet_("buffered");
    return (!t || !t.length) && (t = fr(0, 0)), t;
  }, n.bufferedPercent = function() {
    return Gg(this.buffered(), this.duration());
  }, n.bufferedEnd = function() {
    var t = this.buffered(), r = this.duration(), s = t.end(t.length - 1);
    return s > r && (s = r), s;
  }, n.volume = function(t) {
    var r;
    if (t !== void 0) {
      r = Math.max(0, Math.min(1, parseFloat(t))), this.cache_.volume = r, this.techCall_("setVolume", r), r > 0 && this.lastVolume_(r);
      return;
    }
    return r = parseFloat(this.techGet_("volume")), isNaN(r) ? 1 : r;
  }, n.muted = function(t) {
    if (t !== void 0) {
      this.techCall_("setMuted", t);
      return;
    }
    return this.techGet_("muted") || !1;
  }, n.defaultMuted = function(t) {
    return t !== void 0 ? this.techCall_("setDefaultMuted", t) : this.techGet_("defaultMuted") || !1;
  }, n.lastVolume_ = function(t) {
    if (t !== void 0 && t !== 0) {
      this.cache_.lastVolume = t;
      return;
    }
    return this.cache_.lastVolume;
  }, n.supportsFullScreen = function() {
    return this.techGet_("supportsFullScreen") || !1;
  }, n.isFullscreen = function(t) {
    if (t !== void 0) {
      var r = this.isFullscreen_;
      this.isFullscreen_ = !!t, this.isFullscreen_ !== r && this.fsApi_.prefixed && this.trigger("fullscreenchange"), this.toggleFullscreenClass_();
      return;
    }
    return this.isFullscreen_;
  }, n.requestFullscreen = function(t) {
    var r = this.options_.Promise || q.Promise;
    if (r) {
      var s = this;
      return new r(function(a, o) {
        function u() {
          s.off("fullscreenerror", d), s.off("fullscreenchange", l);
        }
        function l() {
          u(), a();
        }
        function d(h, m) {
          u(), o(m);
        }
        s.one("fullscreenchange", l), s.one("fullscreenerror", d);
        var p = s.requestFullscreenHelper_(t);
        p && (p.then(u, u), p.then(a, o));
      });
    }
    return this.requestFullscreenHelper_();
  }, n.requestFullscreenHelper_ = function(t) {
    var r = this, s;
    if (this.fsApi_.prefixed || (s = this.options_.fullscreen && this.options_.fullscreen.options || {}, t !== void 0 && (s = t)), this.fsApi_.requestFullscreen) {
      var a = this.el_[this.fsApi_.requestFullscreen](s);
      return a && a.then(function() {
        return r.isFullscreen(!0);
      }, function() {
        return r.isFullscreen(!1);
      }), a;
    } else
      this.tech_.supportsFullScreen() && !this.options_.preferFullWindow ? this.techCall_("enterFullScreen") : this.enterFullWindow();
  }, n.exitFullscreen = function() {
    var t = this.options_.Promise || q.Promise;
    if (t) {
      var r = this;
      return new t(function(s, a) {
        function o() {
          r.off("fullscreenerror", l), r.off("fullscreenchange", u);
        }
        function u() {
          o(), s();
        }
        function l(p, h) {
          o(), a(h);
        }
        r.one("fullscreenchange", u), r.one("fullscreenerror", l);
        var d = r.exitFullscreenHelper_();
        d && (d.then(o, o), d.then(s, a));
      });
    }
    return this.exitFullscreenHelper_();
  }, n.exitFullscreenHelper_ = function() {
    var t = this;
    if (this.fsApi_.requestFullscreen) {
      var r = me[this.fsApi_.exitFullscreen]();
      return r && nn(r.then(function() {
        return t.isFullscreen(!1);
      })), r;
    } else
      this.tech_.supportsFullScreen() && !this.options_.preferFullWindow ? this.techCall_("exitFullScreen") : this.exitFullWindow();
  }, n.enterFullWindow = function() {
    this.isFullscreen(!0), this.isFullWindow = !0, this.docOrigOverflow = me.documentElement.style.overflow, Ii(me, "keydown", this.boundFullWindowOnEscKey_), me.documentElement.style.overflow = "hidden", bn(me.body, "vjs-full-window"), this.trigger("enterFullWindow");
  }, n.fullWindowOnEscKey = function(t) {
    ze.isEventKey(t, "Esc") && this.isFullscreen() === !0 && (this.isFullWindow ? this.exitFullWindow() : this.exitFullscreen());
  }, n.exitFullWindow = function() {
    this.isFullscreen(!1), this.isFullWindow = !1, si(me, "keydown", this.boundFullWindowOnEscKey_), me.documentElement.style.overflow = this.docOrigOverflow, Ea(me.body, "vjs-full-window"), this.trigger("exitFullWindow");
  }, n.disablePictureInPicture = function(t) {
    if (t === void 0)
      return this.techGet_("disablePictureInPicture");
    this.techCall_("setDisablePictureInPicture", t), this.options_.disablePictureInPicture = t, this.trigger("disablepictureinpicturechanged");
  }, n.isInPictureInPicture = function(t) {
    if (t !== void 0) {
      this.isInPictureInPicture_ = !!t, this.togglePictureInPictureClass_();
      return;
    }
    return !!this.isInPictureInPicture_;
  }, n.requestPictureInPicture = function() {
    if ("pictureInPictureEnabled" in me && this.disablePictureInPicture() === !1)
      return this.techGet_("requestPictureInPicture");
  }, n.exitPictureInPicture = function() {
    if ("pictureInPictureEnabled" in me)
      return me.exitPictureInPicture();
  }, n.handleKeyDown = function(t) {
    var r = this.options_.userActions;
    if (!(!r || !r.hotkeys)) {
      var s = function(a) {
        var o = a.tagName.toLowerCase();
        if (a.isContentEditable)
          return !0;
        var u = ["button", "checkbox", "hidden", "radio", "reset", "submit"];
        if (o === "input")
          return u.indexOf(a.type) === -1;
        var l = ["textarea"];
        return l.indexOf(o) !== -1;
      };
      s(this.el_.ownerDocument.activeElement) || (typeof r.hotkeys == "function" ? r.hotkeys.call(this, t) : this.handleHotkeys(t));
    }
  }, n.handleHotkeys = function(t) {
    var r = this.options_.userActions ? this.options_.userActions.hotkeys : {}, s = r.fullscreenKey, a = s === void 0 ? function(y) {
      return ze.isEventKey(y, "f");
    } : s, o = r.muteKey, u = o === void 0 ? function(y) {
      return ze.isEventKey(y, "m");
    } : o, l = r.playPauseKey, d = l === void 0 ? function(y) {
      return ze.isEventKey(y, "k") || ze.isEventKey(y, "Space");
    } : l;
    if (a.call(this, t)) {
      t.preventDefault(), t.stopPropagation();
      var p = ce.getComponent("FullscreenToggle");
      me[this.fsApi_.fullscreenEnabled] !== !1 && p.prototype.handleClick.call(this, t);
    } else if (u.call(this, t)) {
      t.preventDefault(), t.stopPropagation();
      var h = ce.getComponent("MuteToggle");
      h.prototype.handleClick.call(this, t);
    } else if (d.call(this, t)) {
      t.preventDefault(), t.stopPropagation();
      var m = ce.getComponent("PlayToggle");
      m.prototype.handleClick.call(this, t);
    }
  }, n.canPlayType = function(t) {
    for (var r, s = 0, a = this.options_.techOrder; s < a.length; s++) {
      var o = a[s], u = mt.getTech(o);
      if (u || (u = ce.getComponent(o)), !u) {
        Ze.error('The "' + o + '" tech is undefined. Skipped browser support check for that tech.');
        continue;
      }
      if (u.isSupported() && (r = u.canPlayType(t), r))
        return r;
    }
    return "";
  }, n.selectSource = function(t) {
    var r = this, s = this.options_.techOrder.map(function(d) {
      return [d, mt.getTech(d)];
    }).filter(function(d) {
      var p = d[0], h = d[1];
      return h ? h.isSupported() : (Ze.error('The "' + p + '" tech is undefined. Skipped browser support check for that tech.'), !1);
    }), a = function(d, p, h) {
      var m;
      return d.some(function(y) {
        return p.some(function(T) {
          if (m = h(y, T), m)
            return !0;
        });
      }), m;
    }, o, u = function(d) {
      return function(p, h) {
        return d(h, p);
      };
    }, l = function(d, p) {
      var h = d[0], m = d[1];
      if (m.canPlaySource(p, r.options_[h.toLowerCase()]))
        return {
          source: p,
          tech: h
        };
    };
    return this.options_.sourceOrder ? o = a(t, s, u(l)) : o = a(s, t, l), o || !1;
  }, n.handleSrc_ = function(t, r) {
    var s = this;
    if (typeof t > "u")
      return this.cache_.src || "";
    this.resetRetryOnError_ && this.resetRetryOnError_();
    var a = vE(t);
    if (!a.length) {
      this.setTimeout(function() {
        this.error({
          code: 4,
          message: this.options_.notSupportedMessage
        });
      }, 0);
      return;
    }
    if (this.changingSrc_ = !0, r || (this.cache_.sources = a), this.updateSourceCaches_(a[0]), aE(this, a[0], function(l, d) {
      s.middleware_ = d, r || (s.cache_.sources = a), s.updateSourceCaches_(l);
      var p = s.src_(l);
      if (p) {
        if (a.length > 1)
          return s.handleSrc_(a.slice(1));
        s.changingSrc_ = !1, s.setTimeout(function() {
          this.error({
            code: 4,
            message: this.options_.notSupportedMessage
          });
        }, 0), s.triggerReady();
        return;
      }
      oE(d, s.tech_);
    }), this.options_.retryOnError && a.length > 1) {
      var o = function() {
        s.error(null), s.handleSrc_(a.slice(1), !0);
      }, u = function() {
        s.off("error", o);
      };
      this.one("error", o), this.one("playing", u), this.resetRetryOnError_ = function() {
        s.off("error", o), s.off("playing", u);
      };
    }
  }, n.src = function(t) {
    return this.handleSrc_(t, !1);
  }, n.src_ = function(t) {
    var r = this, s = this.selectSource([t]);
    return s ? q0(s.tech, this.techName_) ? (this.ready(function() {
      this.tech_.constructor.prototype.hasOwnProperty("setSource") ? this.techCall_("setSource", t) : this.techCall_("src", t.src), this.changingSrc_ = !1;
    }, !0), !1) : (this.changingSrc_ = !0, this.loadTech_(s.tech, s.source), this.tech_.ready(function() {
      r.changingSrc_ = !1;
    }), !1) : !0;
  }, n.load = function() {
    this.techCall_("load");
  }, n.reset = function() {
    var t = this, r = this.options_.Promise || q.Promise;
    if (this.paused() || !r)
      this.doReset_();
    else {
      var s = this.play();
      nn(s.then(function() {
        return t.doReset_();
      }));
    }
  }, n.doReset_ = function() {
    this.tech_ && this.tech_.clearTracks("text"), this.resetCache_(), this.poster(""), this.loadTech_(this.options_.techOrder[0], null), this.techCall_("reset"), this.resetControlBarUI_(), Tn(this) && this.trigger("playerreset");
  }, n.resetControlBarUI_ = function() {
    this.resetProgressBar_(), this.resetPlaybackRate_(), this.resetVolumeBar_();
  }, n.resetProgressBar_ = function() {
    this.currentTime(0);
    var t = this.controlBar || {}, r = t.durationDisplay, s = t.remainingTimeDisplay;
    r && r.updateContent(), s && s.updateContent();
  }, n.resetPlaybackRate_ = function() {
    this.playbackRate(this.defaultPlaybackRate()), this.handleTechRateChange_();
  }, n.resetVolumeBar_ = function() {
    this.volume(1), this.trigger("volumechange");
  }, n.currentSources = function() {
    var t = this.currentSource(), r = [];
    return Object.keys(t).length !== 0 && r.push(t), this.cache_.sources || r;
  }, n.currentSource = function() {
    return this.cache_.source || {};
  }, n.currentSrc = function() {
    return this.currentSource() && this.currentSource().src || "";
  }, n.currentType = function() {
    return this.currentSource() && this.currentSource().type || "";
  }, n.preload = function(t) {
    if (t !== void 0) {
      this.techCall_("setPreload", t), this.options_.preload = t;
      return;
    }
    return this.techGet_("preload");
  }, n.autoplay = function(t) {
    if (t === void 0)
      return this.options_.autoplay || !1;
    var r;
    typeof t == "string" && /(any|play|muted)/.test(t) || t === !0 && this.options_.normalizeAutoplay ? (this.options_.autoplay = t, this.manualAutoplay_(typeof t == "string" ? t : "play"), r = !1) : t ? this.options_.autoplay = !0 : this.options_.autoplay = !1, r = typeof r > "u" ? this.options_.autoplay : r, this.tech_ && this.techCall_("setAutoplay", r);
  }, n.playsinline = function(t) {
    return t !== void 0 ? (this.techCall_("setPlaysinline", t), this.options_.playsinline = t, this) : this.techGet_("playsinline");
  }, n.loop = function(t) {
    if (t !== void 0) {
      this.techCall_("setLoop", t), this.options_.loop = t;
      return;
    }
    return this.techGet_("loop");
  }, n.poster = function(t) {
    if (t === void 0)
      return this.poster_;
    t || (t = ""), t !== this.poster_ && (this.poster_ = t, this.techCall_("setPoster", t), this.isPosterFromTech_ = !1, this.trigger("posterchange"));
  }, n.handleTechPosterChange_ = function() {
    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
      var t = this.tech_.poster() || "";
      t !== this.poster_ && (this.poster_ = t, this.isPosterFromTech_ = !0, this.trigger("posterchange"));
    }
  }, n.controls = function(t) {
    if (t === void 0)
      return !!this.controls_;
    t = !!t, this.controls_ !== t && (this.controls_ = t, this.usingNativeControls() && this.techCall_("setControls", t), this.controls_ ? (this.removeClass("vjs-controls-disabled"), this.addClass("vjs-controls-enabled"), this.trigger("controlsenabled"), this.usingNativeControls() || this.addTechControlsListeners_()) : (this.removeClass("vjs-controls-enabled"), this.addClass("vjs-controls-disabled"), this.trigger("controlsdisabled"), this.usingNativeControls() || this.removeTechControlsListeners_()));
  }, n.usingNativeControls = function(t) {
    if (t === void 0)
      return !!this.usingNativeControls_;
    t = !!t, this.usingNativeControls_ !== t && (this.usingNativeControls_ = t, this.usingNativeControls_ ? (this.addClass("vjs-using-native-controls"), this.trigger("usingnativecontrols")) : (this.removeClass("vjs-using-native-controls"), this.trigger("usingcustomcontrols")));
  }, n.error = function(t) {
    var r = this;
    if (t === void 0)
      return this.error_ || null;
    if (Un("beforeerror").forEach(function(a) {
      var o = a(r, t);
      if (!(kn(o) && !Array.isArray(o) || typeof o == "string" || typeof o == "number" || o === null)) {
        r.log.error("please return a value that MediaError expects in beforeerror hooks");
        return;
      }
      t = o;
    }), this.options_.suppressNotSupportedError && t && t.code === 4) {
      var s = function() {
        this.error(t);
      };
      this.options_.suppressNotSupportedError = !1, this.any(["click", "touchstart"], s), this.one("loadstart", function() {
        this.off(["click", "touchstart"], s);
      });
      return;
    }
    if (t === null) {
      this.error_ = t, this.removeClass("vjs-error"), this.errorDisplay && this.errorDisplay.close();
      return;
    }
    this.error_ = new pi(t), this.addClass("vjs-error"), Ze.error("(CODE:" + this.error_.code + " " + pi.errorTypes[this.error_.code] + ")", this.error_.message, this.error_), this.trigger("error"), Un("error").forEach(function(a) {
      return a(r, r.error_);
    });
  }, n.reportUserActivity = function(t) {
    this.userActivity_ = !0;
  }, n.userActive = function(t) {
    if (t === void 0)
      return this.userActive_;
    if (t = !!t, t !== this.userActive_) {
      if (this.userActive_ = t, this.userActive_) {
        this.userActivity_ = !0, this.removeClass("vjs-user-inactive"), this.addClass("vjs-user-active"), this.trigger("useractive");
        return;
      }
      this.tech_ && this.tech_.one("mousemove", function(r) {
        r.stopPropagation(), r.preventDefault();
      }), this.userActivity_ = !1, this.removeClass("vjs-user-active"), this.addClass("vjs-user-inactive"), this.trigger("userinactive");
    }
  }, n.listenForUserActivity_ = function() {
    var t, r, s, a = kt(this, this.reportUserActivity), o = function(h) {
      (h.screenX !== r || h.screenY !== s) && (r = h.screenX, s = h.screenY, a());
    }, u = function() {
      a(), this.clearInterval(t), t = this.setInterval(a, 250);
    }, l = function(h) {
      a(), this.clearInterval(t);
    };
    this.on("mousedown", u), this.on("mousemove", o), this.on("mouseup", l), this.on("mouseleave", l);
    var d = this.getChild("controlBar");
    d && !fi && !In && (d.on("mouseenter", function(h) {
      this.player().options_.inactivityTimeout !== 0 && (this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout), this.player().options_.inactivityTimeout = 0;
    }), d.on("mouseleave", function(h) {
      this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;
    })), this.on("keydown", a), this.on("keyup", a);
    var p;
    this.setInterval(function() {
      if (this.userActivity_) {
        this.userActivity_ = !1, this.userActive(!0), this.clearTimeout(p);
        var h = this.options_.inactivityTimeout;
        h <= 0 || (p = this.setTimeout(function() {
          this.userActivity_ || this.userActive(!1);
        }, h));
      }
    }, 250);
  }, n.playbackRate = function(t) {
    if (t !== void 0) {
      this.techCall_("setPlaybackRate", t);
      return;
    }
    return this.tech_ && this.tech_.featuresPlaybackRate ? this.cache_.lastPlaybackRate || this.techGet_("playbackRate") : 1;
  }, n.defaultPlaybackRate = function(t) {
    return t !== void 0 ? this.techCall_("setDefaultPlaybackRate", t) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_("defaultPlaybackRate") : 1;
  }, n.isAudio = function(t) {
    if (t !== void 0) {
      this.isAudio_ = !!t;
      return;
    }
    return !!this.isAudio_;
  }, n.enableAudioOnlyUI_ = function() {
    var t = this;
    this.addClass("vjs-audio-only-mode");
    var r = this.children(), s = this.getChild("ControlBar"), a = s && s.currentHeight();
    r.forEach(function(o) {
      o !== s && o.el_ && !o.hasClass("vjs-hidden") && (o.hide(), t.audioOnlyCache_.hiddenChildren.push(o));
    }), this.audioOnlyCache_.playerHeight = this.currentHeight(), this.height(a), this.trigger("audioonlymodechange");
  }, n.disableAudioOnlyUI_ = function() {
    this.removeClass("vjs-audio-only-mode"), this.audioOnlyCache_.hiddenChildren.forEach(function(t) {
      return t.show();
    }), this.height(this.audioOnlyCache_.playerHeight), this.trigger("audioonlymodechange");
  }, n.audioOnlyMode = function(t) {
    var r = this;
    if (typeof t != "boolean" || t === this.audioOnlyMode_)
      return this.audioOnlyMode_;
    this.audioOnlyMode_ = t;
    var s = this.options_.Promise || q.Promise;
    if (s) {
      if (t) {
        var a = [];
        return this.isInPictureInPicture() && a.push(this.exitPictureInPicture()), this.isFullscreen() && a.push(this.exitFullscreen()), this.audioPosterMode() && a.push(this.audioPosterMode(!1)), s.all(a).then(function() {
          return r.enableAudioOnlyUI_();
        });
      }
      return s.resolve().then(function() {
        return r.disableAudioOnlyUI_();
      });
    }
    t ? (this.isInPictureInPicture() && this.exitPictureInPicture(), this.isFullscreen() && this.exitFullscreen(), this.enableAudioOnlyUI_()) : this.disableAudioOnlyUI_();
  }, n.enablePosterModeUI_ = function() {
    var t = this.tech_ && this.tech_;
    t.hide(), this.addClass("vjs-audio-poster-mode"), this.trigger("audiopostermodechange");
  }, n.disablePosterModeUI_ = function() {
    var t = this.tech_ && this.tech_;
    t.show(), this.removeClass("vjs-audio-poster-mode"), this.trigger("audiopostermodechange");
  }, n.audioPosterMode = function(t) {
    var r = this;
    if (typeof t != "boolean" || t === this.audioPosterMode_)
      return this.audioPosterMode_;
    this.audioPosterMode_ = t;
    var s = this.options_.Promise || q.Promise;
    if (s) {
      if (t) {
        if (this.audioOnlyMode()) {
          var a = this.audioOnlyMode(!1);
          return a.then(function() {
            r.enablePosterModeUI_();
          });
        }
        return s.resolve().then(function() {
          r.enablePosterModeUI_();
        });
      }
      return s.resolve().then(function() {
        r.disablePosterModeUI_();
      });
    }
    if (t) {
      this.audioOnlyMode() && this.audioOnlyMode(!1), this.enablePosterModeUI_();
      return;
    }
    this.disablePosterModeUI_();
  }, n.addTextTrack = function(t, r, s) {
    if (this.tech_)
      return this.tech_.addTextTrack(t, r, s);
  }, n.addRemoteTextTrack = function(t, r) {
    if (this.tech_)
      return this.tech_.addRemoteTextTrack(t, r);
  }, n.removeRemoteTextTrack = function(t) {
    t === void 0 && (t = {});
    var r = t, s = r.track;
    if (s || (s = t), this.tech_)
      return this.tech_.removeRemoteTextTrack(s);
  }, n.getVideoPlaybackQuality = function() {
    return this.techGet_("getVideoPlaybackQuality");
  }, n.videoWidth = function() {
    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;
  }, n.videoHeight = function() {
    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;
  }, n.language = function(t) {
    if (t === void 0)
      return this.language_;
    this.language_ !== String(t).toLowerCase() && (this.language_ = String(t).toLowerCase(), Tn(this) && this.trigger("languagechange"));
  }, n.languages = function() {
    return wt(i.prototype.options_.languages, this.languages_);
  }, n.toJSON = function() {
    var t = wt(this.options_), r = t.tracks;
    t.tracks = [];
    for (var s = 0; s < r.length; s++) {
      var a = r[s];
      a = wt(a), a.player = void 0, t.tracks[s] = a;
    }
    return t;
  }, n.createModal = function(t, r) {
    var s = this;
    r = r || {}, r.content = t || "";
    var a = new bs(this, r);
    return this.addChild(a), a.on("dispose", function() {
      s.removeChild(a);
    }), a.open(), a;
  }, n.updateCurrentBreakpoint_ = function() {
    if (this.responsive())
      for (var t = this.currentBreakpoint(), r = this.currentWidth(), s = 0; s < wc.length; s++) {
        var a = wc[s], o = this.breakpoints_[a];
        if (r <= o) {
          if (t === a)
            return;
          t && this.removeClass(mo[t]), this.addClass(mo[a]), this.breakpoint_ = a;
          break;
        }
      }
  }, n.removeCurrentBreakpoint_ = function() {
    var t = this.currentBreakpointClass();
    this.breakpoint_ = "", t && this.removeClass(t);
  }, n.breakpoints = function(t) {
    return t === void 0 ? Dt(this.breakpoints_) : (this.breakpoint_ = "", this.breakpoints_ = Dt({}, zE, t), this.updateCurrentBreakpoint_(), Dt(this.breakpoints_));
  }, n.responsive = function(t) {
    if (t === void 0)
      return this.responsive_;
    t = !!t;
    var r = this.responsive_;
    if (t !== r)
      return this.responsive_ = t, t ? (this.on("playerresize", this.boundUpdateCurrentBreakpoint_), this.updateCurrentBreakpoint_()) : (this.off("playerresize", this.boundUpdateCurrentBreakpoint_), this.removeCurrentBreakpoint_()), t;
  }, n.currentBreakpoint = function() {
    return this.breakpoint_;
  }, n.currentBreakpointClass = function() {
    return mo[this.breakpoint_] || "";
  }, n.loadMedia = function(t, r) {
    var s = this;
    if (!(!t || typeof t != "object")) {
      this.reset(), this.cache_.media = wt(t);
      var a = this.cache_.media, o = a.artwork, u = a.poster, l = a.src, d = a.textTracks;
      !o && u && (this.cache_.media.artwork = [{
        src: u,
        type: Lo(u)
      }]), l && this.src(l), u && this.poster(u), Array.isArray(d) && d.forEach(function(p) {
        return s.addRemoteTextTrack(p, !1);
      }), this.ready(r);
    }
  }, n.getMedia = function() {
    if (!this.cache_.media) {
      var t = this.poster(), r = this.currentSources(), s = Array.prototype.map.call(this.remoteTextTracks(), function(o) {
        return {
          kind: o.kind,
          label: o.label,
          language: o.language,
          src: o.src
        };
      }), a = {
        src: r,
        textTracks: s
      };
      return t && (a.poster = t, a.artwork = [{
        src: a.poster,
        type: Lo(a.poster)
      }]), a;
    }
    return wt(this.cache_.media);
  }, i.getTagSettings = function(t) {
    var r = {
      sources: [],
      tracks: []
    }, s = gn(t), a = s["data-setup"];
    if (pr(t, "vjs-fill") && (s.fill = !0), pr(t, "vjs-fluid") && (s.fluid = !0), a !== null) {
      var o = I_(a || "{}"), u = o[0], l = o[1];
      u && Ze.error(u), Dt(s, l);
    }
    if (Dt(r, s), t.hasChildNodes())
      for (var d = t.childNodes, p = 0, h = d.length; p < h; p++) {
        var m = d[p], y = m.nodeName.toLowerCase();
        y === "source" ? r.sources.push(gn(m)) : y === "track" && r.tracks.push(gn(m));
      }
    return r;
  }, n.flexNotSupported_ = function() {
    var t = me.createElement("i");
    return !("flexBasis" in t.style || "webkitFlexBasis" in t.style || "mozFlexBasis" in t.style || "msFlexBasis" in t.style || "msFlexOrder" in t.style);
  }, n.debug = function(t) {
    if (t === void 0)
      return this.debugEnabled_;
    t ? (this.trigger("debugon"), this.previousLogLevel_ = this.log.level, this.log.level("debug"), this.debugEnabled_ = !0) : (this.trigger("debugoff"), this.log.level(this.previousLogLevel_), this.previousLogLevel_ = void 0, this.debugEnabled_ = !1);
  }, n.playbackRates = function(t) {
    if (t === void 0)
      return this.cache_.playbackRates;
    !Array.isArray(t) || !t.every(function(r) {
      return typeof r == "number";
    }) || (this.cache_.playbackRates = t, this.trigger("playbackrateschange"));
  }, i;
}(ce);
li.names.forEach(function(e) {
  var i = li[e];
  Ft.prototype[i.getterName] = function() {
    return this.tech_ ? this.tech_[i.getterName]() : (this[i.privateName] = this[i.privateName] || new i.ListClass(), this[i.privateName]);
  };
});
Ft.prototype.crossorigin = Ft.prototype.crossOrigin;
Ft.players = {};
var qs = q.navigator;
Ft.prototype.options_ = {
  techOrder: mt.defaultTechOrder_,
  html5: {},
  inactivityTimeout: 2e3,
  playbackRates: [],
  liveui: !1,
  children: ["mediaLoader", "posterImage", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "liveTracker", "controlBar", "errorDisplay", "textTrackSettings", "resizeManager"],
  language: qs && (qs.languages && qs.languages[0] || qs.userLanguage || qs.language) || "en",
  languages: {},
  notSupportedMessage: "No compatible source was found for this media.",
  normalizeAutoplay: !1,
  fullscreen: {
    options: {
      navigationUI: "hide"
    }
  },
  breakpoints: {},
  responsive: !1,
  audioOnlyMode: !1,
  audioPosterMode: !1
};
[
  "ended",
  "seeking",
  "seekable",
  "networkState",
  "readyState"
].forEach(function(e) {
  Ft.prototype[e] = function() {
    return this.techGet_(e);
  };
});
Ev.forEach(function(e) {
  Ft.prototype["handleTech" + Nt(e) + "_"] = function() {
    return this.trigger(e);
  };
});
ce.registerComponent("Player", Ft);
var Ro = "plugin", es = "activePlugins_", Xr = {}, Mo = function(e) {
  return Xr.hasOwnProperty(e);
}, go = function(e) {
  return Mo(e) ? Xr[e] : void 0;
}, Sv = function(e, i) {
  e[es] = e[es] || {}, e[es][i] = !0;
}, Bo = function(e, i, n) {
  var t = (n ? "before" : "") + "pluginsetup";
  e.trigger(t, i), e.trigger(t + ":" + i.name, i);
}, XE = function(e, i) {
  var n = function() {
    Bo(this, {
      name: e,
      plugin: i,
      instance: null
    }, !0);
    var t = i.apply(this, arguments);
    return Sv(this, e), Bo(this, {
      name: e,
      plugin: i,
      instance: t
    }), t;
  };
  return Object.keys(i).forEach(function(t) {
    n[t] = i[t];
  }), n;
}, Ip = function(e, i) {
  return i.prototype.name = e, function() {
    Bo(this, {
      name: e,
      plugin: i,
      instance: null
    }, !0);
    for (var n = arguments.length, t = new Array(n), r = 0; r < n; r++)
      t[r] = arguments[r];
    var s = Zs(i, [this].concat(t));
    return this[e] = function() {
      return s;
    }, Bo(this, s.getEventHash()), s;
  };
}, ln = /* @__PURE__ */ function() {
  function e(n) {
    if (this.constructor === e)
      throw new Error("Plugin must be sub-classed; not directly instantiated.");
    this.player = n, this.log || (this.log = this.player.log.createLogger(this.name)), Td(this), delete this.trigger, Wg(this, this.constructor.defaultState), Sv(n, this.name), this.dispose = this.dispose.bind(this), n.on("dispose", this.dispose);
  }
  var i = e.prototype;
  return i.version = function() {
    return this.constructor.VERSION;
  }, i.getEventHash = function(n) {
    return n === void 0 && (n = {}), n.name = this.name, n.plugin = this.constructor, n.instance = this, n;
  }, i.trigger = function(n, t) {
    return t === void 0 && (t = {}), _s(this.eventBusEl_, n, this.getEventHash(t));
  }, i.handleStateChanged = function(n) {
  }, i.dispose = function() {
    var n = this.name, t = this.player;
    this.trigger("dispose"), this.off(), t.off("dispose", this.dispose), t[es][n] = !1, this.player = this.state = null, t[n] = Ip(n, Xr[n]);
  }, e.isBasic = function(n) {
    var t = typeof n == "string" ? go(n) : n;
    return typeof t == "function" && !e.prototype.isPrototypeOf(t.prototype);
  }, e.registerPlugin = function(n, t) {
    if (typeof n != "string")
      throw new Error('Illegal plugin name, "' + n + '", must be a string, was ' + typeof n + ".");
    if (Mo(n))
      Ze.warn('A plugin named "' + n + '" already exists. You may want to avoid re-registering plugins!');
    else if (Ft.prototype.hasOwnProperty(n))
      throw new Error('Illegal plugin name, "' + n + '", cannot share a name with an existing player method!');
    if (typeof t != "function")
      throw new Error('Illegal plugin for "' + n + '", must be a function, was ' + typeof t + ".");
    return Xr[n] = t, n !== Ro && (e.isBasic(t) ? Ft.prototype[n] = XE(n, t) : Ft.prototype[n] = Ip(n, t)), t;
  }, e.deregisterPlugin = function(n) {
    if (n === Ro)
      throw new Error("Cannot de-register base plugin.");
    Mo(n) && (delete Xr[n], delete Ft.prototype[n]);
  }, e.getPlugins = function(n) {
    n === void 0 && (n = Object.keys(Xr));
    var t;
    return n.forEach(function(r) {
      var s = go(r);
      s && (t = t || {}, t[r] = s);
    }), t;
  }, e.getPluginVersion = function(n) {
    var t = go(n);
    return t && t.VERSION || "";
  }, e;
}();
ln.getPlugin = go;
ln.BASE_PLUGIN_NAME = Ro;
ln.registerPlugin(Ro, ln);
Ft.prototype.usingPlugin = function(e) {
  return !!this[es] && this[es][e] === !0;
};
Ft.prototype.hasPlugin = function(e) {
  return !!Mo(e);
};
var Dp = !1, QE = function(e, i) {
  i === void 0 && (i = {}), Dp || (Ze.warn("videojs.extend is deprecated as of Video.js 7.22.0 and will be removed in Video.js 8.0.0"), Dp = !0);
  var n = function() {
    e.apply(this, arguments);
  }, t = {};
  typeof i == "object" ? (i.constructor !== Object.prototype.constructor && (n = i.constructor), t = i) : typeof i == "function" && (n = i), gb(n, e), e && (n.super_ = e);
  for (var r in t)
    t.hasOwnProperty(r) && (n.prototype[r] = t[r]);
  return n;
}, wv = function(e) {
  return e.indexOf("#") === 0 ? e.slice(1) : e;
};
function G(e, i, n) {
  var t = G.getPlayer(e);
  if (t)
    return i && Ze.warn('Player "' + e + '" is already initialised. Options will not be applied.'), n && t.ready(n), t;
  var r = typeof e == "string" ? Fn("#" + wv(e)) : e;
  if (!ys(r))
    throw new TypeError("The element or ID supplied is not valid. (videojs)");
  (!r.ownerDocument.defaultView || !r.ownerDocument.body.contains(r)) && Ze.warn("The element supplied is not included in the DOM"), i = i || {}, i.restoreEl === !0 && (i.restoreEl = (r.parentNode && r.parentNode.hasAttribute("data-vjs-player") ? r.parentNode : r).cloneNode(!0)), Un("beforesetup").forEach(function(a) {
    var o = a(r, wt(i));
    if (!kn(o) || Array.isArray(o)) {
      Ze.error("please return an object in beforesetup hooks");
      return;
    }
    i = wt(i, o);
  });
  var s = ce.getComponent("Player");
  return t = new s(r, i, n), Un("setup").forEach(function(a) {
    return a(t);
  }), t;
}
G.hooks_ = vn;
G.hooks = Un;
G.hook = E0;
G.hookOnce = S0;
G.removeHook = mg;
if (q.VIDEOJS_NO_DYNAMIC_STYLE !== !0 && vs()) {
  var no = Fn(".vjs-styles-defaults");
  if (!no) {
    no = Ug("vjs-styles-defaults");
    var ll = Fn("head");
    ll && ll.insertBefore(no, ll.firstChild), Fg(no, `
      .video-js {
        width: 300px;
        height: 150px;
      }

      .vjs-fluid:not(.vjs-audio-only-mode) {
        padding-top: 56.25%
      }
    `);
  }
}
yc(1, G);
G.VERSION = fg;
G.options = Ft.prototype.options_;
G.getPlayers = function() {
  return Ft.players;
};
G.getPlayer = function(e) {
  var i = Ft.players, n;
  if (typeof e == "string") {
    var t = wv(e), r = i[t];
    if (r)
      return r;
    n = Fn("#" + t);
  } else
    n = e;
  if (ys(n)) {
    var s = n, a = s.player, o = s.playerId;
    if (a || i[o])
      return a || i[o];
  }
};
G.getAllPlayers = function() {
  return Object.keys(Ft.players).map(function(e) {
    return Ft.players[e];
  }).filter(Boolean);
};
G.players = Ft.players;
G.getComponent = ce.getComponent;
G.registerComponent = function(e, i) {
  mt.isTech(i) && Ze.warn("The " + e + " tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)"), ce.registerComponent.call(ce, e, i);
};
G.getTech = mt.getTech;
G.registerTech = mt.registerTech;
G.use = sE;
Object.defineProperty(G, "middleware", {
  value: {},
  writeable: !1,
  enumerable: !0
});
Object.defineProperty(G.middleware, "TERMINATOR", {
  value: Po,
  writeable: !1,
  enumerable: !0
});
G.browser = D0;
G.TOUCH_ENABLED = ls;
G.extend = QE;
G.mergeOptions = wt;
G.bind = kt;
G.registerPlugin = ln.registerPlugin;
G.deregisterPlugin = ln.deregisterPlugin;
G.plugin = function(e, i) {
  return Ze.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead"), ln.registerPlugin(e, i);
};
G.getPlugins = ln.getPlugins;
G.getPlugin = ln.getPlugin;
G.getPluginVersion = ln.getPluginVersion;
G.addLanguage = function(e, i) {
  var n;
  return e = ("" + e).toLowerCase(), G.options.languages = wt(G.options.languages, (n = {}, n[e] = i, n)), G.options.languages[e];
};
G.log = Ze;
G.createLogger = vg;
G.createTimeRange = G.createTimeRanges = fr;
G.formatTime = fs;
G.setFormatTime = wE;
G.resetFormatTime = kE;
G.parseUrl = Sd;
G.isCrossOrigin = du;
G.EventTarget = Jt;
G.on = Ii;
G.one = lu;
G.off = si;
G.trigger = _s;
G.xhr = Qo.exports;
G.TextTrack = Sa;
G.AudioTrack = Xg;
G.VideoTrack = Qg;
["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach(function(e) {
  G[e] = function() {
    return Ze.warn("videojs." + e + "() is deprecated; use videojs.dom." + e + "() instead"), Mg[e].apply(null, arguments);
  };
});
G.computedStyle = da;
G.dom = Mg;
G.url = tE;
G.defineLazyProperty = Vd;
G.addLanguage("en", {
  "Non-Fullscreen": "Exit Fullscreen"
});
/*! @name @videojs/http-streaming @version 2.16.2 @license Apache-2.0 */
var Hi = Yo, Uo = function(e, i, n) {
  return e && n && n.responseURL && i !== n.responseURL ? n.responseURL : i;
}, zi = function(e) {
  return G.log.debug ? G.log.debug.bind(G, "VHS:", e + " >") : function() {
  };
}, jn = 1 / 30, rn = jn * 3, kv = function(e, i) {
  var n = [], t;
  if (e && e.length)
    for (t = 0; t < e.length; t++)
      i(e.start(t), e.end(t)) && n.push([e.start(t), e.end(t)]);
  return G.createTimeRanges(n);
}, Qr = function(e, i) {
  return kv(e, function(n, t) {
    return n - rn <= i && t + rn >= i;
  });
}, ro = function(e, i) {
  return kv(e, function(n) {
    return n - jn >= i;
  });
}, JE = function(e) {
  if (e.length < 2)
    return G.createTimeRanges();
  for (var i = [], n = 1; n < e.length; n++) {
    var t = e.end(n - 1), r = e.start(n);
    i.push([t, r]);
  }
  return G.createTimeRanges(i);
}, YE = function(e, i) {
  var n = null, t = null, r = 0, s = [], a = [];
  if (!e || !e.length || !i || !i.length)
    return G.createTimeRange();
  for (var o = e.length; o--; )
    s.push({
      time: e.start(o),
      type: "start"
    }), s.push({
      time: e.end(o),
      type: "end"
    });
  for (o = i.length; o--; )
    s.push({
      time: i.start(o),
      type: "start"
    }), s.push({
      time: i.end(o),
      type: "end"
    });
  for (s.sort(function(u, l) {
    return u.time - l.time;
  }), o = 0; o < s.length; o++)
    s[o].type === "start" ? (r++, r === 2 && (n = s[o].time)) : s[o].type === "end" && (r--, r === 1 && (t = s[o].time)), n !== null && t !== null && (a.push([n, t]), n = null, t = null);
  return G.createTimeRanges(a);
}, Cv = function(e) {
  var i = [];
  if (!e || !e.length)
    return "";
  for (var n = 0; n < e.length; n++)
    i.push(e.start(n) + " => " + e.end(n));
  return i.join(", ");
}, $E = function(e, i, n) {
  n === void 0 && (n = 1);
  var t = e.length ? e.end(e.length - 1) : 0;
  return (t - i) / n;
}, dr = function(e) {
  for (var i = [], n = 0; n < e.length; n++)
    i.push({
      start: e.start(n),
      end: e.end(n)
    });
  return i;
}, ZE = function(e, i) {
  if (e === i)
    return !1;
  if (!e && i || !i && e || e.length !== i.length)
    return !0;
  for (var n = 0; n < e.length; n++)
    if (e.start(n) !== i.start(n) || e.end(n) !== i.end(n))
      return !0;
  return !1;
}, xp = function(e) {
  if (!(!e || !e.length || !e.end))
    return e.end(e.length - 1);
}, Hd = function(e, i) {
  var n = 0;
  if (!e || !e.length)
    return n;
  for (var t = 0; t < e.length; t++) {
    var r = e.start(t), s = e.end(t);
    if (!(i > s)) {
      if (i > r && i <= s) {
        n += s - i;
        continue;
      }
      n += s - r;
    }
  }
  return n;
}, Pp = G.createTimeRange, Wd = function(e, i) {
  if (!i.preload)
    return i.duration;
  var n = 0;
  return (i.parts || []).forEach(function(t) {
    n += t.duration;
  }), (i.preloadHints || []).forEach(function(t) {
    t.type === "PART" && (n += e.partTargetDuration);
  }), n;
}, kc = function(e) {
  return (e.segments || []).reduce(function(i, n, t) {
    return n.parts ? n.parts.forEach(function(r, s) {
      i.push({
        duration: r.duration,
        segmentIndex: t,
        partIndex: s,
        part: r,
        segment: n
      });
    }) : i.push({
      duration: n.duration,
      segmentIndex: t,
      partIndex: null,
      segment: n,
      part: null
    }), i;
  }, []);
}, Av = function(e) {
  var i = e.segments && e.segments.length && e.segments[e.segments.length - 1];
  return i && i.parts || [];
}, Iv = function(e) {
  var i = e.preloadSegment;
  if (i) {
    var n = i.parts, t = i.preloadHints, r = (t || []).reduce(function(s, a) {
      return s + (a.type === "PART" ? 1 : 0);
    }, 0);
    return r += n && n.length ? n.length : 0, r;
  }
}, Dv = function(e, i) {
  if (i.endList)
    return 0;
  if (e && e.suggestedPresentationDelay)
    return e.suggestedPresentationDelay;
  var n = Av(i).length > 0;
  return n && i.serverControl && i.serverControl.partHoldBack ? i.serverControl.partHoldBack : n && i.partTargetDuration ? i.partTargetDuration * 3 : i.serverControl && i.serverControl.holdBack ? i.serverControl.holdBack : i.targetDuration ? i.targetDuration * 3 : 0;
}, eS = function(e, i) {
  var n = 0, t = i - e.mediaSequence, r = e.segments[t];
  if (r) {
    if (typeof r.start < "u")
      return {
        result: r.start,
        precise: !0
      };
    if (typeof r.end < "u")
      return {
        result: r.end - r.duration,
        precise: !0
      };
  }
  for (; t--; ) {
    if (r = e.segments[t], typeof r.end < "u")
      return {
        result: n + r.end,
        precise: !0
      };
    if (n += Wd(e, r), typeof r.start < "u")
      return {
        result: n + r.start,
        precise: !0
      };
  }
  return {
    result: n,
    precise: !1
  };
}, tS = function(e, i) {
  for (var n = 0, t, r = i - e.mediaSequence; r < e.segments.length; r++) {
    if (t = e.segments[r], typeof t.start < "u")
      return {
        result: t.start - n,
        precise: !0
      };
    if (n += Wd(e, t), typeof t.end < "u")
      return {
        result: t.end - n,
        precise: !0
      };
  }
  return {
    result: -1,
    precise: !1
  };
}, xv = function(e, i, n) {
  if (typeof i > "u" && (i = e.mediaSequence + e.segments.length), i < e.mediaSequence)
    return 0;
  var t = eS(e, i);
  if (t.precise)
    return t.result;
  var r = tS(e, i);
  return r.precise ? r.result : t.result + n;
}, Pv = function(e, i, n) {
  if (!e)
    return 0;
  if (typeof n != "number" && (n = 0), typeof i > "u") {
    if (e.totalDuration)
      return e.totalDuration;
    if (!e.endList)
      return q.Infinity;
  }
  return xv(e, i, n);
}, ta = function(e) {
  var i = e.defaultDuration, n = e.durationList, t = e.startIndex, r = e.endIndex, s = 0;
  if (t > r) {
    var a = [r, t];
    t = a[0], r = a[1];
  }
  if (t < 0) {
    for (var o = t; o < Math.min(0, r); o++)
      s += i;
    t = 0;
  }
  for (var u = t; u < r; u++)
    s += n[u].duration;
  return s;
}, Lv = function(e, i, n, t) {
  if (!e || !e.segments)
    return null;
  if (e.endList)
    return Pv(e);
  if (i === null)
    return null;
  i = i || 0;
  var r = xv(e, e.mediaSequence + e.segments.length, i);
  return n && (t = typeof t == "number" ? t : Dv(null, e), r -= t), Math.max(0, r);
}, iS = function(e, i, n) {
  var t = !0, r = i || 0, s = Lv(e, i, t, n);
  return s === null ? Pp() : Pp(r, s);
}, nS = function(e) {
  for (var i = e.playlist, n = e.currentTime, t = e.startingSegmentIndex, r = e.startingPartIndex, s = e.startTime, a = e.experimentalExactManifestTimings, o = n - s, u = kc(i), l = 0, d = 0; d < u.length; d++) {
    var p = u[d];
    if (t === p.segmentIndex && !(typeof r == "number" && typeof p.partIndex == "number" && r !== p.partIndex)) {
      l = d;
      break;
    }
  }
  if (o < 0) {
    if (l > 0)
      for (var h = l - 1; h >= 0; h--) {
        var m = u[h];
        if (o += m.duration, a) {
          if (o < 0)
            continue;
        } else if (o + jn <= 0)
          continue;
        return {
          partIndex: m.partIndex,
          segmentIndex: m.segmentIndex,
          startTime: s - ta({
            defaultDuration: i.targetDuration,
            durationList: u,
            startIndex: l,
            endIndex: h
          })
        };
      }
    return {
      partIndex: u[0] && u[0].partIndex || null,
      segmentIndex: u[0] && u[0].segmentIndex || 0,
      startTime: n
    };
  }
  if (l < 0) {
    for (var y = l; y < 0; y++)
      if (o -= i.targetDuration, o < 0)
        return {
          partIndex: u[0] && u[0].partIndex || null,
          segmentIndex: u[0] && u[0].segmentIndex || 0,
          startTime: n
        };
    l = 0;
  }
  for (var T = l; T < u.length; T++) {
    var b = u[T];
    if (o -= b.duration, a) {
      if (o > 0)
        continue;
    } else if (o - jn >= 0)
      continue;
    return {
      partIndex: b.partIndex,
      segmentIndex: b.segmentIndex,
      startTime: s + ta({
        defaultDuration: i.targetDuration,
        durationList: u,
        startIndex: l,
        endIndex: T
      })
    };
  }
  return {
    segmentIndex: u[u.length - 1].segmentIndex,
    partIndex: u[u.length - 1].partIndex,
    startTime: n
  };
}, Ov = function(e) {
  return e.excludeUntil && e.excludeUntil > Date.now();
}, Gd = function(e) {
  return e.excludeUntil && e.excludeUntil === 1 / 0;
}, mu = function(e) {
  var i = Ov(e);
  return !e.disabled && !i;
}, rS = function(e) {
  return e.disabled;
}, sS = function(e) {
  for (var i = 0; i < e.segments.length; i++)
    if (e.segments[i].key)
      return !0;
  return !1;
}, Nv = function(e, i) {
  return i.attributes && i.attributes[e];
}, aS = function(e, i, n, t) {
  if (t === void 0 && (t = 0), !Nv("BANDWIDTH", n))
    return NaN;
  var r = e * n.attributes.BANDWIDTH;
  return (r - t * 8) / i;
}, Cc = function(e, i) {
  if (e.playlists.length === 1)
    return !0;
  var n = i.attributes.BANDWIDTH || Number.MAX_VALUE;
  return e.playlists.filter(function(t) {
    return mu(t) ? (t.attributes.BANDWIDTH || 0) < n : !1;
  }).length === 0;
}, Kd = function(e, i) {
  return !e && !i || !e && i || e && !i ? !1 : !!(e === i || e.id && i.id && e.id === i.id || e.resolvedUri && i.resolvedUri && e.resolvedUri === i.resolvedUri || e.uri && i.uri && e.uri === i.uri);
}, Lp = function(e, i) {
  var n = e && e.mediaGroups && e.mediaGroups.AUDIO || {}, t = !1;
  for (var r in n) {
    for (var s in n[r])
      if (t = i(n[r][s]), t)
        break;
    if (t)
      break;
  }
  return !!t;
}, Ca = function(e) {
  if (!e || !e.playlists || !e.playlists.length) {
    var i = Lp(e, function(s) {
      return s.playlists && s.playlists.length || s.uri;
    });
    return i;
  }
  for (var n = function(s) {
    var a = e.playlists[s], o = a.attributes && a.attributes.CODECS;
    if (o && o.split(",").every(function(l) {
      return wm(l);
    }))
      return "continue";
    var u = Lp(e, function(l) {
      return Kd(a, l);
    });
    return u ? "continue" : {
      v: !1
    };
  }, t = 0; t < e.playlists.length; t++) {
    var r = n(t);
    if (r !== "continue" && typeof r == "object")
      return r.v;
  }
  return !0;
}, bi = {
  liveEdgeDelay: Dv,
  duration: Pv,
  seekable: iS,
  getMediaInfoForTime: nS,
  isEnabled: mu,
  isDisabled: rS,
  isBlacklisted: Ov,
  isIncompatible: Gd,
  playlistEnd: Lv,
  isAes: sS,
  hasAttribute: Nv,
  estimateSegmentRequestTime: aS,
  isLowestEnabledRendition: Cc,
  isAudioOnly: Ca,
  playlistMatch: Kd,
  segmentDurationWithParts: Wd
}, Rv = G.log, zd = function(e, i) {
  return e + "-" + i;
}, oS = function(e, i, n) {
  return "placeholder-uri-" + e + "-" + i + "-" + n;
}, uS = function(e) {
  var i = e.onwarn, n = e.oninfo, t = e.manifestString, r = e.customTagParsers, s = r === void 0 ? [] : r, a = e.customTagMappers, o = a === void 0 ? [] : a, u = e.experimentalLLHLS, l = new Sb();
  i && l.on("warn", i), n && l.on("info", n), s.forEach(function(y) {
    return l.addParser(y);
  }), o.forEach(function(y) {
    return l.addTagMapper(y);
  }), l.push(t), l.end();
  var d = l.manifest;
  if (u || (["preloadSegment", "skip", "serverControl", "renditionReports", "partInf", "partTargetDuration"].forEach(function(y) {
    d.hasOwnProperty(y) && delete d[y];
  }), d.segments && d.segments.forEach(function(y) {
    ["parts", "preloadHints"].forEach(function(T) {
      y.hasOwnProperty(T) && delete y[T];
    });
  })), !d.targetDuration) {
    var p = 10;
    d.segments && d.segments.length && (p = d.segments.reduce(function(y, T) {
      return Math.max(y, T.duration);
    }, 0)), i && i("manifest has no targetDuration defaulting to " + p), d.targetDuration = p;
  }
  var h = Av(d);
  if (h.length && !d.partTargetDuration) {
    var m = h.reduce(function(y, T) {
      return Math.max(y, T.duration);
    }, 0);
    i && (i("manifest has no partTargetDuration defaulting to " + m), Rv.error("LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.")), d.partTargetDuration = m;
  }
  return d;
}, ws = function(e, i) {
  !e.mediaGroups || ["AUDIO", "SUBTITLES"].forEach(function(n) {
    if (e.mediaGroups[n])
      for (var t in e.mediaGroups[n])
        for (var r in e.mediaGroups[n][t]) {
          var s = e.mediaGroups[n][t][r];
          i(s, n, t, r);
        }
  });
}, Mv = function(e) {
  var i = e.playlist, n = e.uri, t = e.id;
  i.id = t, i.playlistErrors_ = 0, n && (i.uri = n), i.attributes = i.attributes || {};
}, lS = function(e) {
  for (var i = e.playlists.length; i--; ) {
    var n = e.playlists[i];
    Mv({
      playlist: n,
      id: zd(i, n.uri)
    }), n.resolvedUri = Hi(e.uri, n.uri), e.playlists[n.id] = n, e.playlists[n.uri] = n, n.attributes.BANDWIDTH || Rv.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.");
  }
}, cS = function(e) {
  ws(e, function(i) {
    i.uri && (i.resolvedUri = Hi(e.uri, i.uri));
  });
}, dS = function(e, i) {
  var n = zd(0, i), t = {
    mediaGroups: {
      AUDIO: {},
      VIDEO: {},
      "CLOSED-CAPTIONS": {},
      SUBTITLES: {}
    },
    uri: q.location.href,
    resolvedUri: q.location.href,
    playlists: [{
      uri: i,
      id: n,
      resolvedUri: i,
      attributes: {}
    }]
  };
  return t.playlists[n] = t.playlists[0], t.playlists[i] = t.playlists[0], t;
}, Bv = function(e, i, n) {
  n === void 0 && (n = oS), e.uri = i;
  for (var t = 0; t < e.playlists.length; t++)
    if (!e.playlists[t].uri) {
      var r = "placeholder-uri-" + t;
      e.playlists[t].uri = r;
    }
  var s = Ca(e);
  ws(e, function(a, o, u, l) {
    if (!a.playlists || !a.playlists.length) {
      if (s && o === "AUDIO" && !a.uri)
        for (var d = 0; d < e.playlists.length; d++) {
          var p = e.playlists[d];
          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === u)
            return;
        }
      a.playlists = [Mi({}, a)];
    }
    a.playlists.forEach(function(h, m) {
      var y = n(o, u, l, h), T = zd(m, y);
      h.uri ? h.resolvedUri = h.resolvedUri || Hi(e.uri, h.uri) : (h.uri = m === 0 ? y : T, h.resolvedUri = h.uri), h.id = h.id || T, h.attributes = h.attributes || {}, e.playlists[h.id] = h, e.playlists[h.uri] = h;
    });
  }), lS(e), cS(e);
}, Fo = G.mergeOptions, hS = G.EventTarget, pS = function(e, i) {
  if (i.endList || !i.serverControl)
    return e;
  var n = {};
  if (i.serverControl.canBlockReload) {
    var t = i.preloadSegment, r = i.mediaSequence + i.segments.length;
    if (t) {
      var s = t.parts || [], a = Iv(i) - 1;
      a > -1 && a !== s.length - 1 && (n._HLS_part = a), (a > -1 || s.length) && r--;
    }
    n._HLS_msn = r;
  }
  if (i.serverControl && i.serverControl.canSkipUntil && (n._HLS_skip = i.serverControl.canSkipDateranges ? "v2" : "YES"), Object.keys(n).length) {
    var o = new q.URL(e);
    ["_HLS_skip", "_HLS_msn", "_HLS_part"].forEach(function(u) {
      !n.hasOwnProperty(u) || o.searchParams.set(u, n[u]);
    }), e = o.toString();
  }
  return e;
}, fS = function(e, i) {
  if (!e)
    return i;
  var n = Fo(e, i);
  if (e.preloadHints && !i.preloadHints && delete n.preloadHints, e.parts && !i.parts)
    delete n.parts;
  else if (e.parts && i.parts)
    for (var t = 0; t < i.parts.length; t++)
      e.parts && e.parts[t] && (n.parts[t] = Fo(e.parts[t], i.parts[t]));
  return !e.skipped && i.skipped && (n.skipped = !1), e.preload && !i.preload && (n.preload = !1), n;
}, mS = function(e, i, n) {
  var t = e.slice(), r = i.slice();
  n = n || 0;
  for (var s = [], a, o = 0; o < r.length; o++) {
    var u = t[o + n], l = r[o];
    u ? (a = u.map || a, s.push(fS(u, l))) : (a && !l.map && (l.map = a), s.push(l));
  }
  return s;
}, Uv = function(e, i) {
  !e.resolvedUri && e.uri && (e.resolvedUri = Hi(i, e.uri)), e.key && !e.key.resolvedUri && (e.key.resolvedUri = Hi(i, e.key.uri)), e.map && !e.map.resolvedUri && (e.map.resolvedUri = Hi(i, e.map.uri)), e.map && e.map.key && !e.map.key.resolvedUri && (e.map.key.resolvedUri = Hi(i, e.map.key.uri)), e.parts && e.parts.length && e.parts.forEach(function(n) {
    n.resolvedUri || (n.resolvedUri = Hi(i, n.uri));
  }), e.preloadHints && e.preloadHints.length && e.preloadHints.forEach(function(n) {
    n.resolvedUri || (n.resolvedUri = Hi(i, n.uri));
  });
}, Fv = function(e) {
  var i = e.segments || [], n = e.preloadSegment;
  if (n && n.parts && n.parts.length) {
    if (n.preloadHints) {
      for (var t = 0; t < n.preloadHints.length; t++)
        if (n.preloadHints[t].type === "MAP")
          return i;
    }
    n.duration = e.targetDuration, n.preload = !0, i.push(n);
  }
  return i;
}, jv = function(e, i) {
  return e === i || e.segments && i.segments && e.segments.length === i.segments.length && e.endList === i.endList && e.mediaSequence === i.mediaSequence && e.preloadSegment === i.preloadSegment;
}, Ac = function(e, i, n) {
  n === void 0 && (n = jv);
  var t = Fo(e, {}), r = t.playlists[i.id];
  if (!r || n(r, i))
    return null;
  i.segments = Fv(i);
  var s = Fo(r, i);
  if (s.preloadSegment && !i.preloadSegment && delete s.preloadSegment, r.segments) {
    if (i.skip) {
      i.segments = i.segments || [];
      for (var a = 0; a < i.skip.skippedSegments; a++)
        i.segments.unshift({
          skipped: !0
        });
    }
    s.segments = mS(r.segments, i.segments, i.mediaSequence - r.mediaSequence);
  }
  s.segments.forEach(function(u) {
    Uv(u, s.resolvedUri);
  });
  for (var o = 0; o < t.playlists.length; o++)
    t.playlists[o].id === i.id && (t.playlists[o] = s);
  return t.playlists[i.id] = s, t.playlists[i.uri] = s, ws(e, function(u, l, d, p) {
    if (u.playlists)
      for (var h = 0; h < u.playlists.length; h++)
        i.id === u.playlists[h].id && (u.playlists[h] = s);
  }), t;
}, Ic = function(e, i) {
  var n = e.segments || [], t = n[n.length - 1], r = t && t.parts && t.parts[t.parts.length - 1], s = r && r.duration || t && t.duration;
  return i && s ? s * 1e3 : (e.partTargetDuration || e.targetDuration || 10) * 500;
}, Jr = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    var a;
    if (s === void 0 && (s = {}), a = e.call(this) || this, !t)
      throw new Error("A non-empty playlist URL or object is required");
    a.logger_ = zi("PlaylistLoader");
    var o = s, u = o.withCredentials, l = u === void 0 ? !1 : u, d = o.handleManifestRedirects, p = d === void 0 ? !1 : d;
    a.src = t, a.vhs_ = r, a.withCredentials = l, a.handleManifestRedirects = p;
    var h = r.options_;
    return a.customTagParsers = h && h.customTagParsers || [], a.customTagMappers = h && h.customTagMappers || [], a.experimentalLLHLS = h && h.experimentalLLHLS || !1, G.browser.IE_VERSION && (a.experimentalLLHLS = !1), a.state = "HAVE_NOTHING", a.handleMediaupdatetimeout_ = a.handleMediaupdatetimeout_.bind(Ge(a)), a.on("mediaupdatetimeout", a.handleMediaupdatetimeout_), a;
  }
  var n = i.prototype;
  return n.handleMediaupdatetimeout_ = function() {
    var t = this;
    if (this.state === "HAVE_METADATA") {
      var r = this.media(), s = Hi(this.master.uri, r.uri);
      this.experimentalLLHLS && (s = pS(s, r)), this.state = "HAVE_CURRENT_METADATA", this.request = this.vhs_.xhr({
        uri: s,
        withCredentials: this.withCredentials
      }, function(a, o) {
        if (t.request) {
          if (a)
            return t.playlistRequestError(t.request, t.media(), "HAVE_METADATA");
          t.haveMetadata({
            playlistString: t.request.responseText,
            url: t.media().uri,
            id: t.media().id
          });
        }
      });
    }
  }, n.playlistRequestError = function(t, r, s) {
    var a = r.uri, o = r.id;
    this.request = null, s && (this.state = s), this.error = {
      playlist: this.master.playlists[o],
      status: t.status,
      message: "HLS playlist request error at URL: " + a + ".",
      responseText: t.responseText,
      code: t.status >= 500 ? 4 : 2
    }, this.trigger("error");
  }, n.parseManifest_ = function(t) {
    var r = this, s = t.url, a = t.manifestString;
    return uS({
      onwarn: function(o) {
        var u = o.message;
        return r.logger_("m3u8-parser warn for " + s + ": " + u);
      },
      oninfo: function(o) {
        var u = o.message;
        return r.logger_("m3u8-parser info for " + s + ": " + u);
      },
      manifestString: a,
      customTagParsers: this.customTagParsers,
      customTagMappers: this.customTagMappers,
      experimentalLLHLS: this.experimentalLLHLS
    });
  }, n.haveMetadata = function(t) {
    var r = t.playlistString, s = t.playlistObject, a = t.url, o = t.id;
    this.request = null, this.state = "HAVE_METADATA";
    var u = s || this.parseManifest_({
      url: a,
      manifestString: r
    });
    u.lastRequest = Date.now(), Mv({
      playlist: u,
      uri: a,
      id: o
    });
    var l = Ac(this.master, u);
    this.targetDuration = u.partTargetDuration || u.targetDuration, this.pendingMedia_ = null, l ? (this.master = l, this.media_ = this.master.playlists[o]) : this.trigger("playlistunchanged"), this.updateMediaUpdateTimeout_(Ic(this.media(), !!l)), this.trigger("loadedplaylist");
  }, n.dispose = function() {
    this.trigger("dispose"), this.stopRequest(), q.clearTimeout(this.mediaUpdateTimeout), q.clearTimeout(this.finalRenditionTimeout), this.off();
  }, n.stopRequest = function() {
    if (this.request) {
      var t = this.request;
      this.request = null, t.onreadystatechange = null, t.abort();
    }
  }, n.media = function(t, r) {
    var s = this;
    if (!t)
      return this.media_;
    if (this.state === "HAVE_NOTHING")
      throw new Error("Cannot switch media playlist from " + this.state);
    if (typeof t == "string") {
      if (!this.master.playlists[t])
        throw new Error("Unknown playlist URI: " + t);
      t = this.master.playlists[t];
    }
    if (q.clearTimeout(this.finalRenditionTimeout), r) {
      var a = (t.partTargetDuration || t.targetDuration) / 2 * 1e3 || 5e3;
      this.finalRenditionTimeout = q.setTimeout(this.media.bind(this, t, !1), a);
      return;
    }
    var o = this.state, u = !this.media_ || t.id !== this.media_.id, l = this.master.playlists[t.id];
    if (l && l.endList || t.endList && t.segments.length) {
      this.request && (this.request.onreadystatechange = null, this.request.abort(), this.request = null), this.state = "HAVE_METADATA", this.media_ = t, u && (this.trigger("mediachanging"), o === "HAVE_MASTER" ? this.trigger("loadedmetadata") : this.trigger("mediachange"));
      return;
    }
    if (this.updateMediaUpdateTimeout_(Ic(t, !0)), !!u) {
      if (this.state = "SWITCHING_MEDIA", this.request) {
        if (t.resolvedUri === this.request.url)
          return;
        this.request.onreadystatechange = null, this.request.abort(), this.request = null;
      }
      this.media_ && this.trigger("mediachanging"), this.pendingMedia_ = t, this.request = this.vhs_.xhr({
        uri: t.resolvedUri,
        withCredentials: this.withCredentials
      }, function(d, p) {
        if (s.request) {
          if (t.lastRequest = Date.now(), t.resolvedUri = Uo(s.handleManifestRedirects, t.resolvedUri, p), d)
            return s.playlistRequestError(s.request, t, o);
          s.haveMetadata({
            playlistString: p.responseText,
            url: t.uri,
            id: t.id
          }), o === "HAVE_MASTER" ? s.trigger("loadedmetadata") : s.trigger("mediachange");
        }
      });
    }
  }, n.pause = function() {
    this.mediaUpdateTimeout && (q.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null), this.stopRequest(), this.state === "HAVE_NOTHING" && (this.started = !1), this.state === "SWITCHING_MEDIA" ? this.media_ ? this.state = "HAVE_METADATA" : this.state = "HAVE_MASTER" : this.state === "HAVE_CURRENT_METADATA" && (this.state = "HAVE_METADATA");
  }, n.load = function(t) {
    var r = this;
    this.mediaUpdateTimeout && (q.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null);
    var s = this.media();
    if (t) {
      var a = s ? (s.partTargetDuration || s.targetDuration) / 2 * 1e3 : 5e3;
      this.mediaUpdateTimeout = q.setTimeout(function() {
        r.mediaUpdateTimeout = null, r.load();
      }, a);
      return;
    }
    if (!this.started) {
      this.start();
      return;
    }
    s && !s.endList ? this.trigger("mediaupdatetimeout") : this.trigger("loadedplaylist");
  }, n.updateMediaUpdateTimeout_ = function(t) {
    var r = this;
    this.mediaUpdateTimeout && (q.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null), !(!this.media() || this.media().endList) && (this.mediaUpdateTimeout = q.setTimeout(function() {
      r.mediaUpdateTimeout = null, r.trigger("mediaupdatetimeout"), r.updateMediaUpdateTimeout_(t);
    }, t));
  }, n.start = function() {
    var t = this;
    if (this.started = !0, typeof this.src == "object") {
      this.src.uri || (this.src.uri = q.location.href), this.src.resolvedUri = this.src.uri, setTimeout(function() {
        t.setupInitialPlaylist(t.src);
      }, 0);
      return;
    }
    this.request = this.vhs_.xhr({
      uri: this.src,
      withCredentials: this.withCredentials
    }, function(r, s) {
      if (t.request) {
        if (t.request = null, r)
          return t.error = {
            status: s.status,
            message: "HLS playlist request error at URL: " + t.src + ".",
            responseText: s.responseText,
            code: 2
          }, t.state === "HAVE_NOTHING" && (t.started = !1), t.trigger("error");
        t.src = Uo(t.handleManifestRedirects, t.src, s);
        var a = t.parseManifest_({
          manifestString: s.responseText,
          url: t.src
        });
        t.setupInitialPlaylist(a);
      }
    });
  }, n.srcUri = function() {
    return typeof this.src == "string" ? this.src : this.src.uri;
  }, n.setupInitialPlaylist = function(t) {
    if (this.state = "HAVE_MASTER", t.playlists) {
      this.master = t, Bv(this.master, this.srcUri()), t.playlists.forEach(function(s) {
        s.segments = Fv(s), s.segments.forEach(function(a) {
          Uv(a, s.resolvedUri);
        });
      }), this.trigger("loadedplaylist"), this.request || this.media(this.master.playlists[0]);
      return;
    }
    var r = this.srcUri() || q.location.href;
    this.master = dS(t, r), this.haveMetadata({
      playlistObject: t,
      url: r,
      id: this.master.playlists[0].id
    }), this.trigger("loadedmetadata");
  }, i;
}(hS), gS = G.xhr, vS = G.mergeOptions, Dc = function(e, i, n, t) {
  var r = e.responseType === "arraybuffer" ? e.response : e.responseText;
  !i && r && (e.responseTime = Date.now(), e.roundTripTime = e.responseTime - e.requestTime, e.bytesReceived = r.byteLength || r.length, e.bandwidth || (e.bandwidth = Math.floor(e.bytesReceived / e.roundTripTime * 8 * 1e3))), n.headers && (e.responseHeaders = n.headers), i && i.code === "ETIMEDOUT" && (e.timedout = !0), !i && !e.aborted && n.statusCode !== 200 && n.statusCode !== 206 && n.statusCode !== 0 && (i = new Error("XHR Failed with a response of: " + (e && (r || e.responseText)))), t(i, e);
}, qv = function() {
  var e = function i(n, t) {
    n = vS({
      timeout: 45e3
    }, n);
    var r = i.beforeRequest || G.Vhs.xhr.beforeRequest;
    if (r && typeof r == "function") {
      var s = r(n);
      s && (n = s);
    }
    var a = G.Vhs.xhr.original === !0 ? gS : G.Vhs.xhr, o = a(n, function(l, d) {
      return Dc(o, l, d, t);
    }), u = o.abort;
    return o.abort = function() {
      return o.aborted = !0, u.apply(o, arguments);
    }, o.uri = n.uri, o.requestTime = Date.now(), o;
  };
  return e.original = !0, e;
}, yS = function(e) {
  var i, n = e.offset;
  return typeof e.offset == "bigint" || typeof e.length == "bigint" ? i = q.BigInt(e.offset) + q.BigInt(e.length) - q.BigInt(1) : i = e.offset + e.length - 1, "bytes=" + n + "-" + i;
}, xc = function(e) {
  var i = {};
  return e.byterange && (i.Range = yS(e.byterange)), i;
}, _S = function(e, i) {
  return e.start(i) + "-" + e.end(i);
}, bS = function(e, i) {
  var n = e.toString(16);
  return "00".substring(0, 2 - n.length) + n + (i % 2 ? " " : "");
}, TS = function(e) {
  return e >= 32 && e < 126 ? String.fromCharCode(e) : ".";
}, Vv = function(e) {
  var i = {};
  return Object.keys(e).forEach(function(n) {
    var t = e[n];
    Cm(t) ? i[n] = {
      bytes: t.buffer,
      byteOffset: t.byteOffset,
      byteLength: t.byteLength
    } : i[n] = t;
  }), i;
}, jo = function(e) {
  var i = e.byterange || {
    length: 1 / 0,
    offset: 0
  };
  return [i.length, i.offset, e.resolvedUri].join(",");
}, Hv = function(e) {
  return e.resolvedUri;
}, Wv = function(e) {
  for (var i = Array.prototype.slice.call(e), n = 16, t = "", r, s, a = 0; a < i.length / n; a++)
    r = i.slice(a * n, a * n + n).map(bS).join(""), s = i.slice(a * n, a * n + n).map(TS).join(""), t += r + " " + s + `
`;
  return t;
}, ES = function(e) {
  var i = e.bytes;
  return Wv(i);
}, SS = function(e) {
  var i = "", n;
  for (n = 0; n < e.length; n++)
    i += _S(e, n) + " ";
  return i;
}, wS = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  createTransferableMessage: Vv,
  initSegmentId: jo,
  segmentKeyId: Hv,
  hexDump: Wv,
  tagDump: ES,
  textRanges: SS
}), Gv = 0.25, kS = function(e, i) {
  if (!i.dateTimeObject)
    return null;
  var n = i.videoTimingInfo.transmuxerPrependedSeconds, t = i.videoTimingInfo.transmuxedPresentationStart, r = t + n, s = e - r;
  return new Date(i.dateTimeObject.getTime() + s * 1e3);
}, CS = function(e) {
  return e.transmuxedPresentationEnd - e.transmuxedPresentationStart - e.transmuxerPrependedSeconds;
}, AS = function(e, i) {
  var n;
  try {
    n = new Date(e);
  } catch {
    return null;
  }
  if (!i || !i.segments || i.segments.length === 0)
    return null;
  var t = i.segments[0];
  if (n < t.dateTimeObject)
    return null;
  for (var r = 0; r < i.segments.length - 1; r++) {
    t = i.segments[r];
    var s = i.segments[r + 1].dateTimeObject;
    if (n < s)
      break;
  }
  var a = i.segments[i.segments.length - 1], o = a.dateTimeObject, u = a.videoTimingInfo ? CS(a.videoTimingInfo) : a.duration + a.duration * Gv, l = new Date(o.getTime() + u * 1e3);
  return n > l ? null : (n > o && (t = a), {
    segment: t,
    estimatedStart: t.videoTimingInfo ? t.videoTimingInfo.transmuxedPresentationStart : bi.duration(i, i.mediaSequence + i.segments.indexOf(t)),
    type: t.videoTimingInfo ? "accurate" : "estimate"
  });
}, IS = function(e, i) {
  if (!i || !i.segments || i.segments.length === 0)
    return null;
  for (var n = 0, t, r = 0; r < i.segments.length && (t = i.segments[r], n = t.videoTimingInfo ? t.videoTimingInfo.transmuxedPresentationEnd : n + t.duration, !(e <= n)); r++)
    ;
  var s = i.segments[i.segments.length - 1];
  if (s.videoTimingInfo && s.videoTimingInfo.transmuxedPresentationEnd < e)
    return null;
  if (e > n) {
    if (e > n + s.duration * Gv)
      return null;
    t = s;
  }
  return {
    segment: t,
    estimatedStart: t.videoTimingInfo ? t.videoTimingInfo.transmuxedPresentationStart : n - t.duration,
    type: t.videoTimingInfo ? "accurate" : "estimate"
  };
}, DS = function(e, i) {
  var n, t;
  try {
    n = new Date(e), t = new Date(i);
  } catch {
  }
  var r = n.getTime(), s = t.getTime();
  return (s - r) / 1e3;
}, xS = function(e) {
  if (!e.segments || e.segments.length === 0)
    return !1;
  for (var i = 0; i < e.segments.length; i++) {
    var n = e.segments[i];
    if (!n.dateTimeObject)
      return !1;
  }
  return !0;
}, PS = function(e) {
  var i = e.playlist, n = e.time, t = n === void 0 ? void 0 : n, r = e.callback;
  if (!r)
    throw new Error("getProgramTime: callback must be provided");
  if (!i || t === void 0)
    return r({
      message: "getProgramTime: playlist and time must be provided"
    });
  var s = IS(t, i);
  if (!s)
    return r({
      message: "valid programTime was not found"
    });
  if (s.type === "estimate")
    return r({
      message: "Accurate programTime could not be determined. Please seek to e.seekTime and try again",
      seekTime: s.estimatedStart
    });
  var a = {
    mediaSeconds: t
  }, o = kS(t, s.segment);
  return o && (a.programDateTime = o.toISOString()), r(null, a);
}, LS = function e(i) {
  var n = i.programTime, t = i.playlist, r = i.retryCount, s = r === void 0 ? 2 : r, a = i.seekTo, o = i.pauseAfterSeek, u = o === void 0 ? !0 : o, l = i.tech, d = i.callback;
  if (!d)
    throw new Error("seekToProgramTime: callback must be provided");
  if (typeof n > "u" || !t || !a)
    return d({
      message: "seekToProgramTime: programTime, seekTo and playlist must be provided"
    });
  if (!t.endList && !l.hasStarted_)
    return d({
      message: "player must be playing a live stream to start buffering"
    });
  if (!xS(t))
    return d({
      message: "programDateTime tags must be provided in the manifest " + t.resolvedUri
    });
  var p = AS(n, t);
  if (!p)
    return d({
      message: n + " was not found in the stream"
    });
  var h = p.segment, m = DS(h.dateTimeObject, n);
  if (p.type === "estimate") {
    if (s === 0)
      return d({
        message: n + " is not buffered yet. Try again"
      });
    a(p.estimatedStart + m), l.one("seeked", function() {
      e({
        programTime: n,
        playlist: t,
        retryCount: s - 1,
        seekTo: a,
        pauseAfterSeek: u,
        tech: l,
        callback: d
      });
    });
    return;
  }
  var y = h.start + m, T = function() {
    return d(null, l.currentTime());
  };
  l.one("seeked", T), u && l.pause(), a(y);
}, cl = function(e, i) {
  if (e.readyState === 4)
    return i();
}, OS = function(e, i, n) {
  var t = [], r, s = !1, a = function(d, p, h, m) {
    return p.abort(), s = !0, n(d, p, h, m);
  }, o = function(d, p) {
    if (!s) {
      if (d)
        return a(d, p, "", t);
      var h = p.responseText.substring(t && t.byteLength || 0, p.responseText.length);
      if (t = Rb(t, Am(h, !0)), r = r || zs(t), t.length < 10 || r && t.length < r + 2)
        return cl(p, function() {
          return a(d, p, "", t);
        });
      var m = ld(t);
      return m === "ts" && t.length < 188 ? cl(p, function() {
        return a(d, p, "", t);
      }) : !m && t.length < 376 ? cl(p, function() {
        return a(d, p, "", t);
      }) : a(null, p, m, t);
    }
  }, u = {
    uri: e,
    beforeSend: function(d) {
      d.overrideMimeType("text/plain; charset=x-user-defined"), d.addEventListener("progress", function(p) {
        return p.total, p.loaded, Dc(d, null, {
          statusCode: d.status
        }, o);
      });
    }
  }, l = i(u, function(d, p) {
    return Dc(l, d, p, o);
  });
  return l;
}, NS = G.EventTarget, Kv = G.mergeOptions, Op = function(e, i) {
  if (!jv(e, i) || e.sidx && i.sidx && (e.sidx.offset !== i.sidx.offset || e.sidx.length !== i.sidx.length) || !e.sidx && i.sidx || e.sidx && !i.sidx || e.segments && !i.segments || !e.segments && i.segments)
    return !1;
  if (!e.segments && !i.segments)
    return !0;
  for (var n = 0; n < e.segments.length; n++) {
    var t = e.segments[n], r = i.segments[n];
    if (t.uri !== r.uri)
      return !1;
    if (!(!t.byterange && !r.byterange)) {
      var s = t.byterange, a = r.byterange;
      if (s && !a || !s && a || s.offset !== a.offset || s.length !== a.length)
        return !1;
    }
  }
  return !0;
}, RS = function(e, i, n, t) {
  var r = t.attributes.NAME || n;
  return "placeholder-uri-" + e + "-" + i + "-" + r;
}, MS = function(e) {
  var i = e.masterXml, n = e.srcUrl, t = e.clientOffset, r = e.sidxMapping, s = e.previousManifest, a = e0(i, {
    manifestUri: n,
    clientOffset: t,
    sidxMapping: r,
    previousManifest: s
  });
  return Bv(a, n, RS), a;
}, BS = function(e, i) {
  ws(e, function(n, t, r, s) {
    s in i.mediaGroups[t][r] || delete e.mediaGroups[t][r][s];
  });
}, US = function(e, i, n) {
  for (var t = !0, r = Kv(e, {
    duration: i.duration,
    minimumUpdatePeriod: i.minimumUpdatePeriod,
    timelineStarts: i.timelineStarts
  }), s = 0; s < i.playlists.length; s++) {
    var a = i.playlists[s];
    if (a.sidx) {
      var o = iu(a.sidx);
      n && n[o] && n[o].sidx && sd(a, n[o].sidx, a.sidx.resolvedUri);
    }
    var u = Ac(r, a, Op);
    u && (r = u, t = !1);
  }
  return ws(i, function(l, d, p, h) {
    if (l.playlists && l.playlists.length) {
      var m = l.playlists[0].id, y = Ac(r, l.playlists[0], Op);
      y && (r = y, h in r.mediaGroups[d][p] || (r.mediaGroups[d][p][h] = l), r.mediaGroups[d][p][h].playlists[0] = r.playlists[m], t = !1);
    }
  }), BS(r, i), i.minimumUpdatePeriod !== e.minimumUpdatePeriod && (t = !1), t ? null : r;
}, FS = function(e, i) {
  var n = !e.map && !i.map, t = n || !!(e.map && i.map && e.map.byterange.offset === i.map.byterange.offset && e.map.byterange.length === i.map.byterange.length);
  return t && e.uri === i.uri && e.byterange.offset === i.byterange.offset && e.byterange.length === i.byterange.length;
}, Np = function(e, i) {
  var n = {};
  for (var t in e) {
    var r = e[t], s = r.sidx;
    if (s) {
      var a = iu(s);
      if (!i[a])
        break;
      var o = i[a].sidxInfo;
      FS(o, s) && (n[a] = i[a]);
    }
  }
  return n;
}, jS = function(e, i) {
  var n = Np(e.playlists, i), t = n;
  return ws(e, function(r, s, a, o) {
    if (r.playlists && r.playlists.length) {
      var u = r.playlists;
      t = Kv(t, Np(u, i));
    }
  }), t;
}, Pc = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s, a) {
    var o;
    s === void 0 && (s = {}), o = e.call(this) || this, o.masterPlaylistLoader_ = a || Ge(o), a || (o.isMaster_ = !0);
    var u = s, l = u.withCredentials, d = l === void 0 ? !1 : l, p = u.handleManifestRedirects, h = p === void 0 ? !1 : p;
    if (o.vhs_ = r, o.withCredentials = d, o.handleManifestRedirects = h, !t)
      throw new Error("A non-empty playlist URL or object is required");
    return o.on("minimumUpdatePeriod", function() {
      o.refreshXml_();
    }), o.on("mediaupdatetimeout", function() {
      o.refreshMedia_(o.media().id);
    }), o.state = "HAVE_NOTHING", o.loadedPlaylists_ = {}, o.logger_ = zi("DashPlaylistLoader"), o.isMaster_ ? (o.masterPlaylistLoader_.srcUrl = t, o.masterPlaylistLoader_.sidxMapping_ = {}) : o.childPlaylist_ = t, o;
  }
  var n = i.prototype;
  return n.requestErrored_ = function(t, r, s) {
    if (!this.request)
      return !0;
    if (this.request = null, t)
      return this.error = typeof t == "object" && !(t instanceof Error) ? t : {
        status: r.status,
        message: "DASH request error at URL: " + r.uri,
        response: r.response,
        code: 2
      }, s && (this.state = s), this.trigger("error"), !0;
  }, n.addSidxSegments_ = function(t, r, s) {
    var a = this, o = t.sidx && iu(t.sidx);
    if (!t.sidx || !o || this.masterPlaylistLoader_.sidxMapping_[o]) {
      this.mediaRequest_ = q.setTimeout(function() {
        return s(!1);
      }, 0);
      return;
    }
    var u = Uo(this.handleManifestRedirects, t.sidx.resolvedUri), l = function(d, p) {
      if (!a.requestErrored_(d, p, r)) {
        var h = a.masterPlaylistLoader_.sidxMapping_, m;
        try {
          m = s0(Re(p.response).subarray(8));
        } catch (y) {
          a.requestErrored_(y, p, r);
          return;
        }
        return h[o] = {
          sidxInfo: t.sidx,
          sidx: m
        }, sd(t, m, t.sidx.resolvedUri), s(!0);
      }
    };
    this.request = OS(u, this.vhs_.xhr, function(d, p, h, m) {
      if (d)
        return l(d, p);
      if (!h || h !== "mp4")
        return l({
          status: p.status,
          message: "Unsupported " + (h || "unknown") + " container type for sidx segment at URL: " + u,
          response: "",
          playlist: t,
          internal: !0,
          blacklistDuration: 1 / 0,
          code: 2
        }, p);
      var y = t.sidx.byterange, T = y.offset, b = y.length;
      if (m.length >= b + T)
        return l(d, {
          response: m.subarray(T, T + b),
          status: p.status,
          uri: p.uri
        });
      a.request = a.vhs_.xhr({
        uri: u,
        responseType: "arraybuffer",
        headers: xc({
          byterange: t.sidx.byterange
        })
      }, l);
    });
  }, n.dispose = function() {
    this.trigger("dispose"), this.stopRequest(), this.loadedPlaylists_ = {}, q.clearTimeout(this.minimumUpdatePeriodTimeout_), q.clearTimeout(this.mediaRequest_), q.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null, this.mediaRequest_ = null, this.minimumUpdatePeriodTimeout_ = null, this.masterPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.masterPlaylistLoader_.createMupOnMedia_), this.masterPlaylistLoader_.createMupOnMedia_ = null), this.off();
  }, n.hasPendingRequest = function() {
    return this.request || this.mediaRequest_;
  }, n.stopRequest = function() {
    if (this.request) {
      var t = this.request;
      this.request = null, t.onreadystatechange = null, t.abort();
    }
  }, n.media = function(t) {
    var r = this;
    if (!t)
      return this.media_;
    if (this.state === "HAVE_NOTHING")
      throw new Error("Cannot switch media playlist from " + this.state);
    var s = this.state;
    if (typeof t == "string") {
      if (!this.masterPlaylistLoader_.master.playlists[t])
        throw new Error("Unknown playlist URI: " + t);
      t = this.masterPlaylistLoader_.master.playlists[t];
    }
    var a = !this.media_ || t.id !== this.media_.id;
    if (a && this.loadedPlaylists_[t.id] && this.loadedPlaylists_[t.id].endList) {
      this.state = "HAVE_METADATA", this.media_ = t, a && (this.trigger("mediachanging"), this.trigger("mediachange"));
      return;
    }
    !a || (this.media_ && this.trigger("mediachanging"), this.addSidxSegments_(t, s, function(o) {
      r.haveMetadata({
        startingState: s,
        playlist: t
      });
    }));
  }, n.haveMetadata = function(t) {
    var r = t.startingState, s = t.playlist;
    this.state = "HAVE_METADATA", this.loadedPlaylists_[s.id] = s, this.mediaRequest_ = null, this.refreshMedia_(s.id), r === "HAVE_MASTER" ? this.trigger("loadedmetadata") : this.trigger("mediachange");
  }, n.pause = function() {
    this.masterPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.masterPlaylistLoader_.createMupOnMedia_), this.masterPlaylistLoader_.createMupOnMedia_ = null), this.stopRequest(), q.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null, this.isMaster_ && (q.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_), this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null), this.state === "HAVE_NOTHING" && (this.started = !1);
  }, n.load = function(t) {
    var r = this;
    q.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null;
    var s = this.media();
    if (t) {
      var a = s ? s.targetDuration / 2 * 1e3 : 5e3;
      this.mediaUpdateTimeout = q.setTimeout(function() {
        return r.load();
      }, a);
      return;
    }
    if (!this.started) {
      this.start();
      return;
    }
    s && !s.endList ? (this.isMaster_ && !this.minimumUpdatePeriodTimeout_ && (this.trigger("minimumUpdatePeriod"), this.updateMinimumUpdatePeriodTimeout_()), this.trigger("mediaupdatetimeout")) : this.trigger("loadedplaylist");
  }, n.start = function() {
    var t = this;
    if (this.started = !0, !this.isMaster_) {
      this.mediaRequest_ = q.setTimeout(function() {
        return t.haveMaster_();
      }, 0);
      return;
    }
    this.requestMaster_(function(r, s) {
      t.haveMaster_(), !t.hasPendingRequest() && !t.media_ && t.media(t.masterPlaylistLoader_.master.playlists[0]);
    });
  }, n.requestMaster_ = function(t) {
    var r = this;
    this.request = this.vhs_.xhr({
      uri: this.masterPlaylistLoader_.srcUrl,
      withCredentials: this.withCredentials
    }, function(s, a) {
      if (r.requestErrored_(s, a)) {
        r.state === "HAVE_NOTHING" && (r.started = !1);
        return;
      }
      var o = a.responseText !== r.masterPlaylistLoader_.masterXml_;
      if (r.masterPlaylistLoader_.masterXml_ = a.responseText, a.responseHeaders && a.responseHeaders.date ? r.masterLoaded_ = Date.parse(a.responseHeaders.date) : r.masterLoaded_ = Date.now(), r.masterPlaylistLoader_.srcUrl = Uo(r.handleManifestRedirects, r.masterPlaylistLoader_.srcUrl, a), o) {
        r.handleMaster_(), r.syncClientServerClock_(function() {
          return t(a, o);
        });
        return;
      }
      return t(a, o);
    });
  }, n.syncClientServerClock_ = function(t) {
    var r = this, s = t0(this.masterPlaylistLoader_.masterXml_);
    if (s === null)
      return this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now(), t();
    if (s.method === "DIRECT")
      return this.masterPlaylistLoader_.clientOffset_ = s.value - Date.now(), t();
    this.request = this.vhs_.xhr({
      uri: Hi(this.masterPlaylistLoader_.srcUrl, s.value),
      method: s.method,
      withCredentials: this.withCredentials
    }, function(a, o) {
      if (r.request) {
        if (a)
          return r.masterPlaylistLoader_.clientOffset_ = r.masterLoaded_ - Date.now(), t();
        var u;
        s.method === "HEAD" ? !o.responseHeaders || !o.responseHeaders.date ? u = r.masterLoaded_ : u = Date.parse(o.responseHeaders.date) : u = Date.parse(o.responseText), r.masterPlaylistLoader_.clientOffset_ = u - Date.now(), t();
      }
    });
  }, n.haveMaster_ = function() {
    this.state = "HAVE_MASTER", this.isMaster_ ? this.trigger("loadedplaylist") : this.media_ || this.media(this.childPlaylist_);
  }, n.handleMaster_ = function() {
    this.mediaRequest_ = null;
    var t = this.masterPlaylistLoader_.master, r = MS({
      masterXml: this.masterPlaylistLoader_.masterXml_,
      srcUrl: this.masterPlaylistLoader_.srcUrl,
      clientOffset: this.masterPlaylistLoader_.clientOffset_,
      sidxMapping: this.masterPlaylistLoader_.sidxMapping_,
      previousManifest: t
    });
    t && (r = US(t, r, this.masterPlaylistLoader_.sidxMapping_)), this.masterPlaylistLoader_.master = r || t;
    var s = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];
    return s && s !== this.masterPlaylistLoader_.srcUrl && (this.masterPlaylistLoader_.srcUrl = s), (!t || r && r.minimumUpdatePeriod !== t.minimumUpdatePeriod) && this.updateMinimumUpdatePeriodTimeout_(), !!r;
  }, n.updateMinimumUpdatePeriodTimeout_ = function() {
    var t = this.masterPlaylistLoader_;
    t.createMupOnMedia_ && (t.off("loadedmetadata", t.createMupOnMedia_), t.createMupOnMedia_ = null), t.minimumUpdatePeriodTimeout_ && (q.clearTimeout(t.minimumUpdatePeriodTimeout_), t.minimumUpdatePeriodTimeout_ = null);
    var r = t.master && t.master.minimumUpdatePeriod;
    if (r === 0 && (t.media() ? r = t.media().targetDuration * 1e3 : (t.createMupOnMedia_ = t.updateMinimumUpdatePeriodTimeout_, t.one("loadedmetadata", t.createMupOnMedia_))), typeof r != "number" || r <= 0) {
      r < 0 && this.logger_("found invalid minimumUpdatePeriod of " + r + ", not setting a timeout");
      return;
    }
    this.createMUPTimeout_(r);
  }, n.createMUPTimeout_ = function(t) {
    var r = this.masterPlaylistLoader_;
    r.minimumUpdatePeriodTimeout_ = q.setTimeout(function() {
      r.minimumUpdatePeriodTimeout_ = null, r.trigger("minimumUpdatePeriod"), r.createMUPTimeout_(t);
    }, t);
  }, n.refreshXml_ = function() {
    var t = this;
    this.requestMaster_(function(r, s) {
      !s || (t.media_ && (t.media_ = t.masterPlaylistLoader_.master.playlists[t.media_.id]), t.masterPlaylistLoader_.sidxMapping_ = jS(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.sidxMapping_), t.addSidxSegments_(t.media(), t.state, function(a) {
        t.refreshMedia_(t.media().id);
      }));
    });
  }, n.refreshMedia_ = function(t) {
    var r = this;
    if (!t)
      throw new Error("refreshMedia_ must take a media id");
    this.media_ && this.isMaster_ && this.handleMaster_();
    var s = this.masterPlaylistLoader_.master.playlists, a = !this.media_ || this.media_ !== s[t];
    if (a ? this.media_ = s[t] : this.trigger("playlistunchanged"), !this.mediaUpdateTimeout) {
      var o = function u() {
        r.media().endList || (r.mediaUpdateTimeout = q.setTimeout(function() {
          r.trigger("mediaupdatetimeout"), u();
        }, Ic(r.media(), !!a)));
      };
      o();
    }
    this.trigger("loadedplaylist");
  }, i;
}(NS), Kt = {
  GOAL_BUFFER_LENGTH: 30,
  MAX_GOAL_BUFFER_LENGTH: 60,
  BACK_BUFFER_LENGTH: 30,
  GOAL_BUFFER_LENGTH_RATE: 1,
  INITIAL_BANDWIDTH: 4194304,
  BANDWIDTH_VARIANCE: 1.2,
  BUFFER_LOW_WATER_LINE: 0,
  MAX_BUFFER_LOW_WATER_LINE: 30,
  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,
  BUFFER_LOW_WATER_LINE_RATE: 1,
  BUFFER_HIGH_WATER_LINE: 30
}, qS = function(e) {
  for (var i = new Uint8Array(new ArrayBuffer(e.length)), n = 0; n < e.length; n++)
    i[n] = e.charCodeAt(n);
  return i.buffer;
}, zv = function(e) {
  return e.on = e.addEventListener, e.off = e.removeEventListener, e;
}, VS = function(e) {
  try {
    return URL.createObjectURL(new Blob([e], {
      type: "application/javascript"
    }));
  } catch {
    var i = new BlobBuilder();
    return i.append(e), URL.createObjectURL(i.getBlob());
  }
}, Xv = function(e) {
  return function() {
    var i = VS(e), n = zv(new Worker(i));
    n.objURL = i;
    var t = n.terminate;
    return n.on = n.addEventListener, n.off = n.removeEventListener, n.terminate = function() {
      return URL.revokeObjectURL(i), t.call(this);
    }, n;
  };
}, Qv = function(e) {
  return "var browserWorkerPolyFill = " + zv.toString() + `;
browserWorkerPolyFill(self);
` + e;
}, Jv = function(e) {
  return e.toString().replace(/^function.+?{/, "").slice(0, -1);
}, HS = Qv(Jv(function() {
  var e = function() {
    this.init = function() {
      var c = {};
      this.on = function(f, v) {
        c[f] || (c[f] = []), c[f] = c[f].concat(v);
      }, this.off = function(f, v) {
        var g;
        return c[f] ? (g = c[f].indexOf(v), c[f] = c[f].slice(), c[f].splice(g, 1), g > -1) : !1;
      }, this.trigger = function(f) {
        var v, g, _, S;
        if (v = c[f], !!v)
          if (arguments.length === 2)
            for (_ = v.length, g = 0; g < _; ++g)
              v[g].call(this, arguments[1]);
          else {
            for (S = [], g = arguments.length, g = 1; g < arguments.length; ++g)
              S.push(arguments[g]);
            for (_ = v.length, g = 0; g < _; ++g)
              v[g].apply(this, S);
          }
      }, this.dispose = function() {
        c = {};
      };
    };
  };
  e.prototype.pipe = function(c) {
    return this.on("data", function(f) {
      c.push(f);
    }), this.on("done", function(f) {
      c.flush(f);
    }), this.on("partialdone", function(f) {
      c.partialFlush(f);
    }), this.on("endedtimeline", function(f) {
      c.endTimeline(f);
    }), this.on("reset", function(f) {
      c.reset(f);
    }), c;
  }, e.prototype.push = function(c) {
    this.trigger("data", c);
  }, e.prototype.flush = function(c) {
    this.trigger("done", c);
  }, e.prototype.partialFlush = function(c) {
    this.trigger("partialdone", c);
  }, e.prototype.endTimeline = function(c) {
    this.trigger("endedtimeline", c);
  }, e.prototype.reset = function(c) {
    this.trigger("reset", c);
  };
  var i = e, n = Math.pow(2, 32), t = function(c) {
    var f = new DataView(c.buffer, c.byteOffset, c.byteLength), v;
    return f.getBigUint64 ? (v = f.getBigUint64(0), v < Number.MAX_SAFE_INTEGER ? Number(v) : v) : f.getUint32(0) * n + f.getUint32(4);
  }, r = {
    getUint64: t,
    MAX_UINT32: n
  }, s = r.MAX_UINT32, a, o, u, l, d, p, h, m, y, T, b, I, B, M, A, x, P, j, H, D, O, W, X, ie, K, Z, te, ue, be, he, at, pe, le, fe, Pe, re;
  (function() {
    var c;
    if (X = {
      avc1: [],
      avcC: [],
      btrt: [],
      dinf: [],
      dref: [],
      esds: [],
      ftyp: [],
      hdlr: [],
      mdat: [],
      mdhd: [],
      mdia: [],
      mfhd: [],
      minf: [],
      moof: [],
      moov: [],
      mp4a: [],
      mvex: [],
      mvhd: [],
      pasp: [],
      sdtp: [],
      smhd: [],
      stbl: [],
      stco: [],
      stsc: [],
      stsd: [],
      stsz: [],
      stts: [],
      styp: [],
      tfdt: [],
      tfhd: [],
      traf: [],
      trak: [],
      trun: [],
      trex: [],
      tkhd: [],
      vmhd: []
    }, !(typeof Uint8Array > "u")) {
      for (c in X)
        X.hasOwnProperty(c) && (X[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]);
      ie = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]), Z = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]), K = new Uint8Array([0, 0, 0, 1]), te = new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        118,
        105,
        100,
        101,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        86,
        105,
        100,
        101,
        111,
        72,
        97,
        110,
        100,
        108,
        101,
        114,
        0
      ]), ue = new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        115,
        111,
        117,
        110,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        83,
        111,
        117,
        110,
        100,
        72,
        97,
        110,
        100,
        108,
        101,
        114,
        0
      ]), be = {
        video: te,
        audio: ue
      }, pe = new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        12,
        117,
        114,
        108,
        32,
        0,
        0,
        0,
        1
      ]), at = new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]), le = new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]), fe = le, Pe = new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]), re = le, he = new Uint8Array([
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ]);
    }
  })(), a = function(c) {
    var f = [], v = 0, g, _, S;
    for (g = 1; g < arguments.length; g++)
      f.push(arguments[g]);
    for (g = f.length; g--; )
      v += f[g].byteLength;
    for (_ = new Uint8Array(v + 8), S = new DataView(_.buffer, _.byteOffset, _.byteLength), S.setUint32(0, _.byteLength), _.set(c, 4), g = 0, v = 8; g < f.length; g++)
      _.set(f[g], v), v += f[g].byteLength;
    return _;
  }, o = function() {
    return a(X.dinf, a(X.dref, pe));
  }, u = function(c) {
    return a(X.esds, new Uint8Array([
      0,
      0,
      0,
      0,
      3,
      25,
      0,
      0,
      0,
      4,
      17,
      64,
      21,
      0,
      6,
      0,
      0,
      0,
      218,
      192,
      0,
      0,
      218,
      192,
      5,
      2,
      c.audioobjecttype << 3 | c.samplingfrequencyindex >>> 1,
      c.samplingfrequencyindex << 7 | c.channelcount << 3,
      6,
      1,
      2
    ]));
  }, l = function() {
    return a(X.ftyp, ie, K, ie, Z);
  }, x = function(c) {
    return a(X.hdlr, be[c]);
  }, d = function(c) {
    return a(X.mdat, c);
  }, A = function(c) {
    var f = new Uint8Array([
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      2,
      0,
      0,
      0,
      3,
      0,
      1,
      95,
      144,
      c.duration >>> 24 & 255,
      c.duration >>> 16 & 255,
      c.duration >>> 8 & 255,
      c.duration & 255,
      85,
      196,
      0,
      0
    ]);
    return c.samplerate && (f[12] = c.samplerate >>> 24 & 255, f[13] = c.samplerate >>> 16 & 255, f[14] = c.samplerate >>> 8 & 255, f[15] = c.samplerate & 255), a(X.mdhd, f);
  }, M = function(c) {
    return a(X.mdia, A(c), x(c.type), h(c));
  }, p = function(c) {
    return a(X.mfhd, new Uint8Array([
      0,
      0,
      0,
      0,
      (c & 4278190080) >> 24,
      (c & 16711680) >> 16,
      (c & 65280) >> 8,
      c & 255
    ]));
  }, h = function(c) {
    return a(X.minf, c.type === "video" ? a(X.vmhd, he) : a(X.smhd, at), o(), j(c));
  }, m = function(c, f) {
    for (var v = [], g = f.length; g--; )
      v[g] = D(f[g]);
    return a.apply(null, [X.moof, p(c)].concat(v));
  }, y = function(c) {
    for (var f = c.length, v = []; f--; )
      v[f] = I(c[f]);
    return a.apply(null, [X.moov, b(4294967295)].concat(v).concat(T(c)));
  }, T = function(c) {
    for (var f = c.length, v = []; f--; )
      v[f] = O(c[f]);
    return a.apply(null, [X.mvex].concat(v));
  }, b = function(c) {
    var f = new Uint8Array([
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      2,
      0,
      1,
      95,
      144,
      (c & 4278190080) >> 24,
      (c & 16711680) >> 16,
      (c & 65280) >> 8,
      c & 255,
      0,
      1,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      64,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      255,
      255,
      255,
      255
    ]);
    return a(X.mvhd, f);
  }, P = function(c) {
    var f = c.samples || [], v = new Uint8Array(4 + f.length), g, _;
    for (_ = 0; _ < f.length; _++)
      g = f[_].flags, v[_ + 4] = g.dependsOn << 4 | g.isDependedOn << 2 | g.hasRedundancy;
    return a(X.sdtp, v);
  }, j = function(c) {
    return a(X.stbl, H(c), a(X.stts, re), a(X.stsc, fe), a(X.stsz, Pe), a(X.stco, le));
  }, function() {
    var c, f;
    H = function(v) {
      return a(X.stsd, new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1
      ]), v.type === "video" ? c(v) : f(v));
    }, c = function(v) {
      var g = v.sps || [], _ = v.pps || [], S = [], L = [], R, F;
      for (R = 0; R < g.length; R++)
        S.push((g[R].byteLength & 65280) >>> 8), S.push(g[R].byteLength & 255), S = S.concat(Array.prototype.slice.call(g[R]));
      for (R = 0; R < _.length; R++)
        L.push((_[R].byteLength & 65280) >>> 8), L.push(_[R].byteLength & 255), L = L.concat(Array.prototype.slice.call(_[R]));
      if (F = [X.avc1, new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        (v.width & 65280) >> 8,
        v.width & 255,
        (v.height & 65280) >> 8,
        v.height & 255,
        0,
        72,
        0,
        0,
        0,
        72,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        19,
        118,
        105,
        100,
        101,
        111,
        106,
        115,
        45,
        99,
        111,
        110,
        116,
        114,
        105,
        98,
        45,
        104,
        108,
        115,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        24,
        17,
        17
      ]), a(X.avcC, new Uint8Array([
        1,
        v.profileIdc,
        v.profileCompatibility,
        v.levelIdc,
        255
      ].concat(
        [g.length],
        S,
        [_.length],
        L
      ))), a(X.btrt, new Uint8Array([
        0,
        28,
        156,
        128,
        0,
        45,
        198,
        192,
        0,
        45,
        198,
        192
      ]))], v.sarRatio) {
        var V = v.sarRatio[0], Y = v.sarRatio[1];
        F.push(a(X.pasp, new Uint8Array([(V & 4278190080) >> 24, (V & 16711680) >> 16, (V & 65280) >> 8, V & 255, (Y & 4278190080) >> 24, (Y & 16711680) >> 16, (Y & 65280) >> 8, Y & 255])));
      }
      return a.apply(null, F);
    }, f = function(v) {
      return a(X.mp4a, new Uint8Array([
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        (v.channelcount & 65280) >> 8,
        v.channelcount & 255,
        (v.samplesize & 65280) >> 8,
        v.samplesize & 255,
        0,
        0,
        0,
        0,
        (v.samplerate & 65280) >> 8,
        v.samplerate & 255,
        0,
        0
      ]), u(v));
    };
  }(), B = function(c) {
    var f = new Uint8Array([
      0,
      0,
      0,
      7,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      (c.id & 4278190080) >> 24,
      (c.id & 16711680) >> 16,
      (c.id & 65280) >> 8,
      c.id & 255,
      0,
      0,
      0,
      0,
      (c.duration & 4278190080) >> 24,
      (c.duration & 16711680) >> 16,
      (c.duration & 65280) >> 8,
      c.duration & 255,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      64,
      0,
      0,
      0,
      (c.width & 65280) >> 8,
      c.width & 255,
      0,
      0,
      (c.height & 65280) >> 8,
      c.height & 255,
      0,
      0
    ]);
    return a(X.tkhd, f);
  }, D = function(c) {
    var f, v, g, _, S, L, R;
    return f = a(X.tfhd, new Uint8Array([
      0,
      0,
      0,
      58,
      (c.id & 4278190080) >> 24,
      (c.id & 16711680) >> 16,
      (c.id & 65280) >> 8,
      c.id & 255,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0
    ])), L = Math.floor(c.baseMediaDecodeTime / s), R = Math.floor(c.baseMediaDecodeTime % s), v = a(X.tfdt, new Uint8Array([
      1,
      0,
      0,
      0,
      L >>> 24 & 255,
      L >>> 16 & 255,
      L >>> 8 & 255,
      L & 255,
      R >>> 24 & 255,
      R >>> 16 & 255,
      R >>> 8 & 255,
      R & 255
    ])), S = 32 + 20 + 8 + 16 + 8 + 8, c.type === "audio" ? (g = W(c, S), a(X.traf, f, v, g)) : (_ = P(c), g = W(c, _.length + S), a(X.traf, f, v, g, _));
  }, I = function(c) {
    return c.duration = c.duration || 4294967295, a(X.trak, B(c), M(c));
  }, O = function(c) {
    var f = new Uint8Array([
      0,
      0,
      0,
      0,
      (c.id & 4278190080) >> 24,
      (c.id & 16711680) >> 16,
      (c.id & 65280) >> 8,
      c.id & 255,
      0,
      0,
      0,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      0,
      1
    ]);
    return c.type !== "video" && (f[f.length - 1] = 0), a(X.trex, f);
  }, function() {
    var c, f, v;
    v = function(g, _) {
      var S = 0, L = 0, R = 0, F = 0;
      return g.length && (g[0].duration !== void 0 && (S = 1), g[0].size !== void 0 && (L = 2), g[0].flags !== void 0 && (R = 4), g[0].compositionTimeOffset !== void 0 && (F = 8)), [
        0,
        0,
        S | L | R | F,
        1,
        (g.length & 4278190080) >>> 24,
        (g.length & 16711680) >>> 16,
        (g.length & 65280) >>> 8,
        g.length & 255,
        (_ & 4278190080) >>> 24,
        (_ & 16711680) >>> 16,
        (_ & 65280) >>> 8,
        _ & 255
      ];
    }, f = function(g, _) {
      var S, L, R, F, V, Y;
      for (F = g.samples || [], _ += 8 + 12 + 16 * F.length, R = v(F, _), L = new Uint8Array(R.length + F.length * 16), L.set(R), S = R.length, Y = 0; Y < F.length; Y++)
        V = F[Y], L[S++] = (V.duration & 4278190080) >>> 24, L[S++] = (V.duration & 16711680) >>> 16, L[S++] = (V.duration & 65280) >>> 8, L[S++] = V.duration & 255, L[S++] = (V.size & 4278190080) >>> 24, L[S++] = (V.size & 16711680) >>> 16, L[S++] = (V.size & 65280) >>> 8, L[S++] = V.size & 255, L[S++] = V.flags.isLeading << 2 | V.flags.dependsOn, L[S++] = V.flags.isDependedOn << 6 | V.flags.hasRedundancy << 4 | V.flags.paddingValue << 1 | V.flags.isNonSyncSample, L[S++] = V.flags.degradationPriority & 240 << 8, L[S++] = V.flags.degradationPriority & 15, L[S++] = (V.compositionTimeOffset & 4278190080) >>> 24, L[S++] = (V.compositionTimeOffset & 16711680) >>> 16, L[S++] = (V.compositionTimeOffset & 65280) >>> 8, L[S++] = V.compositionTimeOffset & 255;
      return a(X.trun, L);
    }, c = function(g, _) {
      var S, L, R, F, V, Y;
      for (F = g.samples || [], _ += 8 + 12 + 8 * F.length, R = v(F, _), S = new Uint8Array(R.length + F.length * 8), S.set(R), L = R.length, Y = 0; Y < F.length; Y++)
        V = F[Y], S[L++] = (V.duration & 4278190080) >>> 24, S[L++] = (V.duration & 16711680) >>> 16, S[L++] = (V.duration & 65280) >>> 8, S[L++] = V.duration & 255, S[L++] = (V.size & 4278190080) >>> 24, S[L++] = (V.size & 16711680) >>> 16, S[L++] = (V.size & 65280) >>> 8, S[L++] = V.size & 255;
      return a(X.trun, S);
    }, W = function(g, _) {
      return g.type === "audio" ? c(g, _) : f(g, _);
    };
  }();
  var J = {
    ftyp: l,
    mdat: d,
    moof: m,
    moov: y,
    initSegment: function(c) {
      var f = l(), v = y(c), g;
      return g = new Uint8Array(f.byteLength + v.byteLength), g.set(f), g.set(v, f.byteLength), g;
    }
  }, _e = function(c) {
    var f, v, g = [], _ = [];
    for (_.byteLength = 0, _.nalCount = 0, _.duration = 0, g.byteLength = 0, f = 0; f < c.length; f++)
      v = c[f], v.nalUnitType === "access_unit_delimiter_rbsp" ? (g.length && (g.duration = v.dts - g.dts, _.byteLength += g.byteLength, _.nalCount += g.length, _.duration += g.duration, _.push(g)), g = [v], g.byteLength = v.data.byteLength, g.pts = v.pts, g.dts = v.dts) : (v.nalUnitType === "slice_layer_without_partitioning_rbsp_idr" && (g.keyFrame = !0), g.duration = v.dts - g.dts, g.byteLength += v.data.byteLength, g.push(v));
    return _.length && (!g.duration || g.duration <= 0) && (g.duration = _[_.length - 1].duration), _.byteLength += g.byteLength, _.nalCount += g.length, _.duration += g.duration, _.push(g), _;
  }, Ie = function(c) {
    var f, v, g = [], _ = [];
    for (g.byteLength = 0, g.nalCount = 0, g.duration = 0, g.pts = c[0].pts, g.dts = c[0].dts, _.byteLength = 0, _.nalCount = 0, _.duration = 0, _.pts = c[0].pts, _.dts = c[0].dts, f = 0; f < c.length; f++)
      v = c[f], v.keyFrame ? (g.length && (_.push(g), _.byteLength += g.byteLength, _.nalCount += g.nalCount, _.duration += g.duration), g = [v], g.nalCount = v.length, g.byteLength = v.byteLength, g.pts = v.pts, g.dts = v.dts, g.duration = v.duration) : (g.duration += v.duration, g.nalCount += v.length, g.byteLength += v.byteLength, g.push(v));
    return _.length && g.duration <= 0 && (g.duration = _[_.length - 1].duration), _.byteLength += g.byteLength, _.nalCount += g.nalCount, _.duration += g.duration, _.push(g), _;
  }, He = function(c) {
    var f;
    return !c[0][0].keyFrame && c.length > 1 && (f = c.shift(), c.byteLength -= f.byteLength, c.nalCount -= f.nalCount, c[0][0].dts = f.dts, c[0][0].pts = f.pts, c[0][0].duration += f.duration), c;
  }, Qe = function() {
    return {
      size: 0,
      flags: {
        isLeading: 0,
        dependsOn: 1,
        isDependedOn: 0,
        hasRedundancy: 0,
        degradationPriority: 0,
        isNonSyncSample: 1
      }
    };
  }, Ue = function(c, f) {
    var v = Qe();
    return v.dataOffset = f, v.compositionTimeOffset = c.pts - c.dts, v.duration = c.duration, v.size = 4 * c.length, v.size += c.byteLength, c.keyFrame && (v.flags.dependsOn = 2, v.flags.isNonSyncSample = 0), v;
  }, bt = function(c, f) {
    var v, g, _, S, L, R = f || 0, F = [];
    for (v = 0; v < c.length; v++)
      for (S = c[v], g = 0; g < S.length; g++)
        L = S[g], _ = Ue(L, R), R += _.size, F.push(_);
    return F;
  }, it = function(c) {
    var f, v, g, _, S, L, R = 0, F = c.byteLength, V = c.nalCount, Y = F + 4 * V, ee = new Uint8Array(Y), Ce = new DataView(ee.buffer);
    for (f = 0; f < c.length; f++)
      for (_ = c[f], v = 0; v < _.length; v++)
        for (S = _[v], g = 0; g < S.length; g++)
          L = S[g], Ce.setUint32(R, L.data.byteLength), R += 4, ee.set(L.data, R), R += L.data.byteLength;
    return ee;
  }, ne = function(c, f) {
    var v, g = f || 0, _ = [];
    return v = Ue(c, g), _.push(v), _;
  }, Fe = function(c) {
    var f, v, g = 0, _ = c.byteLength, S = c.length, L = _ + 4 * S, R = new Uint8Array(L), F = new DataView(R.buffer);
    for (f = 0; f < c.length; f++)
      v = c[f], F.setUint32(g, v.data.byteLength), g += 4, R.set(v.data, g), g += v.data.byteLength;
    return R;
  }, $e = {
    groupNalsIntoFrames: _e,
    groupFramesIntoGops: Ie,
    extendFirstKeyFrame: He,
    generateSampleTable: bt,
    concatenateNalData: it,
    generateSampleTableForFrame: ne,
    concatenateNalDataForFrame: Fe
  }, nt = [33, 16, 5, 32, 164, 27], Tt = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252], Ke = function(c) {
    for (var f = []; c--; )
      f.push(0);
    return f;
  }, Wt = function(c) {
    return Object.keys(c).reduce(function(f, v) {
      return f[v] = new Uint8Array(c[v].reduce(function(g, _) {
        return g.concat(_);
      }, [])), f;
    }, {});
  }, jt, gt = function() {
    if (!jt) {
      var c = {
        96e3: [nt, [227, 64], Ke(154), [56]],
        88200: [nt, [231], Ke(170), [56]],
        64e3: [nt, [248, 192], Ke(240), [56]],
        48e3: [nt, [255, 192], Ke(268), [55, 148, 128], Ke(54), [112]],
        44100: [nt, [255, 192], Ke(268), [55, 163, 128], Ke(84), [112]],
        32e3: [nt, [255, 192], Ke(268), [55, 234], Ke(226), [112]],
        24e3: [nt, [255, 192], Ke(268), [55, 255, 128], Ke(268), [111, 112], Ke(126), [224]],
        16e3: [nt, [255, 192], Ke(268), [55, 255, 128], Ke(268), [111, 255], Ke(269), [223, 108], Ke(195), [1, 192]],
        12e3: [Tt, Ke(268), [3, 127, 248], Ke(268), [6, 255, 240], Ke(268), [13, 255, 224], Ke(268), [27, 253, 128], Ke(259), [56]],
        11025: [Tt, Ke(268), [3, 127, 248], Ke(268), [6, 255, 240], Ke(268), [13, 255, 224], Ke(268), [27, 255, 192], Ke(268), [55, 175, 128], Ke(108), [112]],
        8e3: [Tt, Ke(268), [3, 121, 16], Ke(47), [7]]
      };
      jt = Wt(c);
    }
    return jt;
  }, Et = 9e4, vt, De, Oe, Me, Je, ei, Gt;
  vt = function(c) {
    return c * Et;
  }, De = function(c, f) {
    return c * f;
  }, Oe = function(c) {
    return c / Et;
  }, Me = function(c, f) {
    return c / f;
  }, Je = function(c, f) {
    return vt(Me(c, f));
  }, ei = function(c, f) {
    return De(Oe(c), f);
  }, Gt = function(c, f, v) {
    return Oe(v ? c : c - f);
  };
  var de = {
    ONE_SECOND_IN_TS: Et,
    secondsToVideoTs: vt,
    secondsToAudioTs: De,
    videoTsToSeconds: Oe,
    audioTsToSeconds: Me,
    audioTsToVideoTs: Je,
    videoTsToAudioTs: ei,
    metadataTsToSeconds: Gt
  }, ti = function(c) {
    var f, v, g = 0;
    for (f = 0; f < c.length; f++)
      v = c[f], g += v.data.byteLength;
    return g;
  }, Si = function(c, f, v, g) {
    var _, S = 0, L = 0, R = 0, F = 0, V, Y, ee;
    if (f.length && (_ = de.audioTsToVideoTs(c.baseMediaDecodeTime, c.samplerate), S = Math.ceil(de.ONE_SECOND_IN_TS / (c.samplerate / 1024)), v && g && (L = _ - Math.max(v, g), R = Math.floor(L / S), F = R * S), !(R < 1 || F > de.ONE_SECOND_IN_TS / 2))) {
      for (V = gt()[c.samplerate], V || (V = f[0].data), Y = 0; Y < R; Y++)
        ee = f[0], f.splice(0, 0, {
          data: V,
          dts: ee.dts - S,
          pts: ee.pts - S
        });
      return c.baseMediaDecodeTime -= Math.floor(de.videoTsToAudioTs(F, c.samplerate)), F;
    }
  }, On = function(c, f, v) {
    return f.minSegmentDts >= v ? c : (f.minSegmentDts = 1 / 0, c.filter(function(g) {
      return g.dts >= v ? (f.minSegmentDts = Math.min(f.minSegmentDts, g.dts), f.minSegmentPts = f.minSegmentDts, !0) : !1;
    }));
  }, br = function(c) {
    var f, v, g = [];
    for (f = 0; f < c.length; f++)
      v = c[f], g.push({
        size: v.data.byteLength,
        duration: 1024
      });
    return g;
  }, Aa = function(c) {
    var f, v, g = 0, _ = new Uint8Array(ti(c));
    for (f = 0; f < c.length; f++)
      v = c[f], _.set(v.data, g), g += v.data.byteLength;
    return _;
  }, Tr = {
    prefixWithSilence: Si,
    trimAdtsFramesByEarliestDts: On,
    generateSampleTable: br,
    concatenateFrameData: Aa
  }, Ia = de.ONE_SECOND_IN_TS, Da = function(c, f) {
    typeof f.pts == "number" && (c.timelineStartInfo.pts === void 0 && (c.timelineStartInfo.pts = f.pts), c.minSegmentPts === void 0 ? c.minSegmentPts = f.pts : c.minSegmentPts = Math.min(c.minSegmentPts, f.pts), c.maxSegmentPts === void 0 ? c.maxSegmentPts = f.pts : c.maxSegmentPts = Math.max(c.maxSegmentPts, f.pts)), typeof f.dts == "number" && (c.timelineStartInfo.dts === void 0 && (c.timelineStartInfo.dts = f.dts), c.minSegmentDts === void 0 ? c.minSegmentDts = f.dts : c.minSegmentDts = Math.min(c.minSegmentDts, f.dts), c.maxSegmentDts === void 0 ? c.maxSegmentDts = f.dts : c.maxSegmentDts = Math.max(c.maxSegmentDts, f.dts));
  }, ku = function(c) {
    delete c.minSegmentDts, delete c.maxSegmentDts, delete c.minSegmentPts, delete c.maxSegmentPts;
  }, xa = function(c, f) {
    var v, g, _ = c.minSegmentDts;
    return f || (_ -= c.timelineStartInfo.dts), v = c.timelineStartInfo.baseMediaDecodeTime, v += _, v = Math.max(0, v), c.type === "audio" && (g = c.samplerate / Ia, v *= g, v = Math.floor(v)), v;
  }, wi = {
    clearDtsInfo: ku,
    calculateTrackBaseMediaDecodeTime: xa,
    collectDtsInfo: Da
  }, Pa = 4, La = 128, Cu = function(c) {
    for (var f = 0, v = {
      payloadType: -1,
      payloadSize: 0
    }, g = 0, _ = 0; f < c.byteLength && c[f] !== La; ) {
      for (; c[f] === 255; )
        g += 255, f++;
      for (g += c[f++]; c[f] === 255; )
        _ += 255, f++;
      if (_ += c[f++], !v.payload && g === Pa) {
        var S = String.fromCharCode(c[f + 3], c[f + 4], c[f + 5], c[f + 6]);
        if (S === "GA94") {
          v.payloadType = g, v.payloadSize = _, v.payload = c.subarray(f, f + _);
          break;
        } else
          v.payload = void 0;
      }
      f += _, g = 0, _ = 0;
    }
    return v;
  }, Oa = function(c) {
    return c.payload[0] !== 181 || (c.payload[1] << 8 | c.payload[2]) !== 49 || String.fromCharCode(c.payload[3], c.payload[4], c.payload[5], c.payload[6]) !== "GA94" || c.payload[7] !== 3 ? null : c.payload.subarray(8, c.payload.length - 1);
  }, Au = function(c, f) {
    var v = [], g, _, S, L;
    if (!(f[0] & 64))
      return v;
    for (_ = f[0] & 31, g = 0; g < _; g++)
      S = g * 3, L = {
        type: f[S + 2] & 3,
        pts: c
      }, f[S + 2] & 4 && (L.ccData = f[S + 3] << 8 | f[S + 4], v.push(L));
    return v;
  }, Na = function(c) {
    for (var f = c.byteLength, v = [], g = 1, _, S; g < f - 2; )
      c[g] === 0 && c[g + 1] === 0 && c[g + 2] === 3 ? (v.push(g + 2), g += 2) : g++;
    if (v.length === 0)
      return c;
    _ = f - v.length, S = new Uint8Array(_);
    var L = 0;
    for (g = 0; g < _; L++, g++)
      L === v[0] && (L++, v.shift()), S[g] = c[L];
    return S;
  }, Hn = {
    parseSei: Cu,
    parseUserData: Oa,
    parseCaptionPackets: Au,
    discardEmulationPreventionBytes: Na,
    USER_DATA_REGISTERED_ITU_T_T35: Pa
  }, ii = function c(f) {
    f = f || {}, c.prototype.init.call(this), this.parse708captions_ = typeof f.parse708captions == "boolean" ? f.parse708captions : !0, this.captionPackets_ = [], this.ccStreams_ = [
      new ft(0, 0),
      new ft(0, 1),
      new ft(1, 0),
      new ft(1, 1)
    ], this.parse708captions_ && (this.cc708Stream_ = new ut({
      captionServices: f.captionServices
    })), this.reset(), this.ccStreams_.forEach(function(v) {
      v.on("data", this.trigger.bind(this, "data")), v.on("partialdone", this.trigger.bind(this, "partialdone")), v.on("done", this.trigger.bind(this, "done"));
    }, this), this.parse708captions_ && (this.cc708Stream_.on("data", this.trigger.bind(this, "data")), this.cc708Stream_.on("partialdone", this.trigger.bind(this, "partialdone")), this.cc708Stream_.on("done", this.trigger.bind(this, "done")));
  };
  ii.prototype = new i(), ii.prototype.push = function(c) {
    var f, v, g;
    if (c.nalUnitType === "sei_rbsp" && (f = Hn.parseSei(c.escapedRBSP), !!f.payload && f.payloadType === Hn.USER_DATA_REGISTERED_ITU_T_T35 && (v = Hn.parseUserData(f), !!v))) {
      if (c.dts < this.latestDts_) {
        this.ignoreNextEqualDts_ = !0;
        return;
      } else if (c.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
        this.numSameDts_--, this.numSameDts_ || (this.ignoreNextEqualDts_ = !1);
        return;
      }
      g = Hn.parseCaptionPackets(c.pts, v), this.captionPackets_ = this.captionPackets_.concat(g), this.latestDts_ !== c.dts && (this.numSameDts_ = 0), this.numSameDts_++, this.latestDts_ = c.dts;
    }
  }, ii.prototype.flushCCStreams = function(c) {
    this.ccStreams_.forEach(function(f) {
      return c === "flush" ? f.flush() : f.partialFlush();
    }, this);
  }, ii.prototype.flushStream = function(c) {
    if (!this.captionPackets_.length) {
      this.flushCCStreams(c);
      return;
    }
    this.captionPackets_.forEach(function(f, v) {
      f.presortIndex = v;
    }), this.captionPackets_.sort(function(f, v) {
      return f.pts === v.pts ? f.presortIndex - v.presortIndex : f.pts - v.pts;
    }), this.captionPackets_.forEach(function(f) {
      f.type < 2 ? this.dispatchCea608Packet(f) : this.dispatchCea708Packet(f);
    }, this), this.captionPackets_.length = 0, this.flushCCStreams(c);
  }, ii.prototype.flush = function() {
    return this.flushStream("flush");
  }, ii.prototype.partialFlush = function() {
    return this.flushStream("partialFlush");
  }, ii.prototype.reset = function() {
    this.latestDts_ = null, this.ignoreNextEqualDts_ = !1, this.numSameDts_ = 0, this.activeCea608Channel_ = [null, null], this.ccStreams_.forEach(function(c) {
      c.reset();
    });
  }, ii.prototype.dispatchCea608Packet = function(c) {
    this.setsTextOrXDSActive(c) ? this.activeCea608Channel_[c.type] = null : this.setsChannel1Active(c) ? this.activeCea608Channel_[c.type] = 0 : this.setsChannel2Active(c) && (this.activeCea608Channel_[c.type] = 1), this.activeCea608Channel_[c.type] !== null && this.ccStreams_[(c.type << 1) + this.activeCea608Channel_[c.type]].push(c);
  }, ii.prototype.setsChannel1Active = function(c) {
    return (c.ccData & 30720) === 4096;
  }, ii.prototype.setsChannel2Active = function(c) {
    return (c.ccData & 30720) === 6144;
  }, ii.prototype.setsTextOrXDSActive = function(c) {
    return (c.ccData & 28928) === 256 || (c.ccData & 30974) === 4138 || (c.ccData & 30974) === 6186;
  }, ii.prototype.dispatchCea708Packet = function(c) {
    this.parse708captions_ && this.cc708Stream_.push(c);
  };
  var Ra = {
    127: 9834,
    4128: 32,
    4129: 160,
    4133: 8230,
    4138: 352,
    4140: 338,
    4144: 9608,
    4145: 8216,
    4146: 8217,
    4147: 8220,
    4148: 8221,
    4149: 8226,
    4153: 8482,
    4154: 353,
    4156: 339,
    4157: 8480,
    4159: 376,
    4214: 8539,
    4215: 8540,
    4216: 8541,
    4217: 8542,
    4218: 9168,
    4219: 9124,
    4220: 9123,
    4221: 9135,
    4222: 9126,
    4223: 9121,
    4256: 12600
  }, Ma = function(c) {
    var f = Ra[c] || c;
    return c & 4096 && c === f ? "" : String.fromCharCode(f);
  }, Wn = function(c) {
    return 32 <= c && c <= 127 || 160 <= c && c <= 255;
  }, Bi = function(c) {
    this.windowNum = c, this.reset();
  };
  Bi.prototype.reset = function() {
    this.clearText(), this.pendingNewLine = !1, this.winAttr = {}, this.penAttr = {}, this.penLoc = {}, this.penColor = {}, this.visible = 0, this.rowLock = 0, this.columnLock = 0, this.priority = 0, this.relativePositioning = 0, this.anchorVertical = 0, this.anchorHorizontal = 0, this.anchorPoint = 0, this.rowCount = 1, this.virtualRowCount = this.rowCount + 1, this.columnCount = 41, this.windowStyle = 0, this.penStyle = 0;
  }, Bi.prototype.getText = function() {
    return this.rows.join(`
`);
  }, Bi.prototype.clearText = function() {
    this.rows = [""], this.rowIdx = 0;
  }, Bi.prototype.newLine = function(c) {
    for (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow == "function" && this.beforeRowOverflow(c), this.rows.length > 0 && (this.rows.push(""), this.rowIdx++); this.rows.length > this.virtualRowCount; )
      this.rows.shift(), this.rowIdx--;
  }, Bi.prototype.isEmpty = function() {
    return this.rows.length === 0 ? !0 : this.rows.length === 1 ? this.rows[0] === "" : !1;
  }, Bi.prototype.addText = function(c) {
    this.rows[this.rowIdx] += c;
  }, Bi.prototype.backspace = function() {
    if (!this.isEmpty()) {
      var c = this.rows[this.rowIdx];
      this.rows[this.rowIdx] = c.substr(0, c.length - 1);
    }
  };
  var Er = function(c, f, v) {
    this.serviceNum = c, this.text = "", this.currentWindow = new Bi(-1), this.windows = [], this.stream = v, typeof f == "string" && this.createTextDecoder(f);
  };
  Er.prototype.init = function(c, f) {
    this.startPts = c;
    for (var v = 0; v < 8; v++)
      this.windows[v] = new Bi(v), typeof f == "function" && (this.windows[v].beforeRowOverflow = f);
  }, Er.prototype.setCurrentWindow = function(c) {
    this.currentWindow = this.windows[c];
  }, Er.prototype.createTextDecoder = function(c) {
    if (typeof TextDecoder > "u")
      this.stream.trigger("log", {
        level: "warn",
        message: "The `encoding` option is unsupported without TextDecoder support"
      });
    else
      try {
        this.textDecoder_ = new TextDecoder(c);
      } catch (f) {
        this.stream.trigger("log", {
          level: "warn",
          message: "TextDecoder could not be created with " + c + " encoding. " + f
        });
      }
  };
  var ut = function c(f) {
    f = f || {}, c.prototype.init.call(this);
    var v = this, g = f.captionServices || {}, _ = {}, S;
    Object.keys(g).forEach(function(L) {
      S = g[L], /^SERVICE/.test(L) && (_[L] = S.encoding);
    }), this.serviceEncodings = _, this.current708Packet = null, this.services = {}, this.push = function(L) {
      L.type === 3 ? (v.new708Packet(), v.add708Bytes(L)) : (v.current708Packet === null && v.new708Packet(), v.add708Bytes(L));
    };
  };
  ut.prototype = new i(), ut.prototype.new708Packet = function() {
    this.current708Packet !== null && this.push708Packet(), this.current708Packet = {
      data: [],
      ptsVals: []
    };
  }, ut.prototype.add708Bytes = function(c) {
    var f = c.ccData, v = f >>> 8, g = f & 255;
    this.current708Packet.ptsVals.push(c.pts), this.current708Packet.data.push(v), this.current708Packet.data.push(g);
  }, ut.prototype.push708Packet = function() {
    var c = this.current708Packet, f = c.data, v = null, g = null, _ = 0, S = f[_++];
    for (c.seq = S >> 6, c.sizeCode = S & 63; _ < f.length; _++)
      S = f[_++], v = S >> 5, g = S & 31, v === 7 && g > 0 && (S = f[_++], v = S), this.pushServiceBlock(v, _, g), g > 0 && (_ += g - 1);
  }, ut.prototype.pushServiceBlock = function(c, f, v) {
    var g, _ = f, S = this.current708Packet.data, L = this.services[c];
    for (L || (L = this.initService(c, _)); _ < f + v && _ < S.length; _++)
      g = S[_], Wn(g) ? _ = this.handleText(_, L) : g === 24 ? _ = this.multiByteCharacter(_, L) : g === 16 ? _ = this.extendedCommands(_, L) : 128 <= g && g <= 135 ? _ = this.setCurrentWindow(_, L) : 152 <= g && g <= 159 ? _ = this.defineWindow(_, L) : g === 136 ? _ = this.clearWindows(_, L) : g === 140 ? _ = this.deleteWindows(_, L) : g === 137 ? _ = this.displayWindows(_, L) : g === 138 ? _ = this.hideWindows(_, L) : g === 139 ? _ = this.toggleWindows(_, L) : g === 151 ? _ = this.setWindowAttributes(_, L) : g === 144 ? _ = this.setPenAttributes(_, L) : g === 145 ? _ = this.setPenColor(_, L) : g === 146 ? _ = this.setPenLocation(_, L) : g === 143 ? L = this.reset(_, L) : g === 8 ? L.currentWindow.backspace() : g === 12 ? L.currentWindow.clearText() : g === 13 ? L.currentWindow.pendingNewLine = !0 : g === 14 ? L.currentWindow.clearText() : g === 141 && _++;
  }, ut.prototype.extendedCommands = function(c, f) {
    var v = this.current708Packet.data, g = v[++c];
    return Wn(g) && (c = this.handleText(c, f, {
      isExtended: !0
    })), c;
  }, ut.prototype.getPts = function(c) {
    return this.current708Packet.ptsVals[Math.floor(c / 2)];
  }, ut.prototype.initService = function(c, f) {
    var g = "SERVICE" + c, v = this, g, _;
    return g in this.serviceEncodings && (_ = this.serviceEncodings[g]), this.services[c] = new Er(c, _, v), this.services[c].init(this.getPts(f), function(S) {
      v.flushDisplayed(S, v.services[c]);
    }), this.services[c];
  }, ut.prototype.handleText = function(c, f, v) {
    var g = v && v.isExtended, _ = v && v.isMultiByte, S = this.current708Packet.data, L = g ? 4096 : 0, R = S[c], F = S[c + 1], V = f.currentWindow, Y, ee;
    return f.textDecoder_ && !g ? (_ ? (ee = [R, F], c++) : ee = [R], Y = f.textDecoder_.decode(new Uint8Array(ee))) : Y = Ma(L | R), V.pendingNewLine && !V.isEmpty() && V.newLine(this.getPts(c)), V.pendingNewLine = !1, V.addText(Y), c;
  }, ut.prototype.multiByteCharacter = function(c, f) {
    var v = this.current708Packet.data, g = v[c + 1], _ = v[c + 2];
    return Wn(g) && Wn(_) && (c = this.handleText(++c, f, {
      isMultiByte: !0
    })), c;
  }, ut.prototype.setCurrentWindow = function(c, f) {
    var v = this.current708Packet.data, g = v[c], _ = g & 7;
    return f.setCurrentWindow(_), c;
  }, ut.prototype.defineWindow = function(c, f) {
    var v = this.current708Packet.data, g = v[c], _ = g & 7;
    f.setCurrentWindow(_);
    var S = f.currentWindow;
    return g = v[++c], S.visible = (g & 32) >> 5, S.rowLock = (g & 16) >> 4, S.columnLock = (g & 8) >> 3, S.priority = g & 7, g = v[++c], S.relativePositioning = (g & 128) >> 7, S.anchorVertical = g & 127, g = v[++c], S.anchorHorizontal = g, g = v[++c], S.anchorPoint = (g & 240) >> 4, S.rowCount = g & 15, g = v[++c], S.columnCount = g & 63, g = v[++c], S.windowStyle = (g & 56) >> 3, S.penStyle = g & 7, S.virtualRowCount = S.rowCount + 1, c;
  }, ut.prototype.setWindowAttributes = function(c, f) {
    var v = this.current708Packet.data, g = v[c], _ = f.currentWindow.winAttr;
    return g = v[++c], _.fillOpacity = (g & 192) >> 6, _.fillRed = (g & 48) >> 4, _.fillGreen = (g & 12) >> 2, _.fillBlue = g & 3, g = v[++c], _.borderType = (g & 192) >> 6, _.borderRed = (g & 48) >> 4, _.borderGreen = (g & 12) >> 2, _.borderBlue = g & 3, g = v[++c], _.borderType += (g & 128) >> 5, _.wordWrap = (g & 64) >> 6, _.printDirection = (g & 48) >> 4, _.scrollDirection = (g & 12) >> 2, _.justify = g & 3, g = v[++c], _.effectSpeed = (g & 240) >> 4, _.effectDirection = (g & 12) >> 2, _.displayEffect = g & 3, c;
  }, ut.prototype.flushDisplayed = function(c, f) {
    for (var v = [], g = 0; g < 8; g++)
      f.windows[g].visible && !f.windows[g].isEmpty() && v.push(f.windows[g].getText());
    f.endPts = c, f.text = v.join(`

`), this.pushCaption(f), f.startPts = c;
  }, ut.prototype.pushCaption = function(c) {
    c.text !== "" && (this.trigger("data", {
      startPts: c.startPts,
      endPts: c.endPts,
      text: c.text,
      stream: "cc708_" + c.serviceNum
    }), c.text = "", c.startPts = c.endPts);
  }, ut.prototype.displayWindows = function(c, f) {
    var v = this.current708Packet.data, g = v[++c], _ = this.getPts(c);
    this.flushDisplayed(_, f);
    for (var S = 0; S < 8; S++)
      g & 1 << S && (f.windows[S].visible = 1);
    return c;
  }, ut.prototype.hideWindows = function(c, f) {
    var v = this.current708Packet.data, g = v[++c], _ = this.getPts(c);
    this.flushDisplayed(_, f);
    for (var S = 0; S < 8; S++)
      g & 1 << S && (f.windows[S].visible = 0);
    return c;
  }, ut.prototype.toggleWindows = function(c, f) {
    var v = this.current708Packet.data, g = v[++c], _ = this.getPts(c);
    this.flushDisplayed(_, f);
    for (var S = 0; S < 8; S++)
      g & 1 << S && (f.windows[S].visible ^= 1);
    return c;
  }, ut.prototype.clearWindows = function(c, f) {
    var v = this.current708Packet.data, g = v[++c], _ = this.getPts(c);
    this.flushDisplayed(_, f);
    for (var S = 0; S < 8; S++)
      g & 1 << S && f.windows[S].clearText();
    return c;
  }, ut.prototype.deleteWindows = function(c, f) {
    var v = this.current708Packet.data, g = v[++c], _ = this.getPts(c);
    this.flushDisplayed(_, f);
    for (var S = 0; S < 8; S++)
      g & 1 << S && f.windows[S].reset();
    return c;
  }, ut.prototype.setPenAttributes = function(c, f) {
    var v = this.current708Packet.data, g = v[c], _ = f.currentWindow.penAttr;
    return g = v[++c], _.textTag = (g & 240) >> 4, _.offset = (g & 12) >> 2, _.penSize = g & 3, g = v[++c], _.italics = (g & 128) >> 7, _.underline = (g & 64) >> 6, _.edgeType = (g & 56) >> 3, _.fontStyle = g & 7, c;
  }, ut.prototype.setPenColor = function(c, f) {
    var v = this.current708Packet.data, g = v[c], _ = f.currentWindow.penColor;
    return g = v[++c], _.fgOpacity = (g & 192) >> 6, _.fgRed = (g & 48) >> 4, _.fgGreen = (g & 12) >> 2, _.fgBlue = g & 3, g = v[++c], _.bgOpacity = (g & 192) >> 6, _.bgRed = (g & 48) >> 4, _.bgGreen = (g & 12) >> 2, _.bgBlue = g & 3, g = v[++c], _.edgeRed = (g & 48) >> 4, _.edgeGreen = (g & 12) >> 2, _.edgeBlue = g & 3, c;
  }, ut.prototype.setPenLocation = function(c, f) {
    var v = this.current708Packet.data, g = v[c], _ = f.currentWindow.penLoc;
    return f.currentWindow.pendingNewLine = !0, g = v[++c], _.row = g & 15, g = v[++c], _.column = g & 63, c;
  }, ut.prototype.reset = function(c, f) {
    var v = this.getPts(c);
    return this.flushDisplayed(v, f), this.initService(f.serviceNum, c);
  };
  var Ba = {
    42: 225,
    92: 233,
    94: 237,
    95: 243,
    96: 250,
    123: 231,
    124: 247,
    125: 209,
    126: 241,
    127: 9608,
    304: 174,
    305: 176,
    306: 189,
    307: 191,
    308: 8482,
    309: 162,
    310: 163,
    311: 9834,
    312: 224,
    313: 160,
    314: 232,
    315: 226,
    316: 234,
    317: 238,
    318: 244,
    319: 251,
    544: 193,
    545: 201,
    546: 211,
    547: 218,
    548: 220,
    549: 252,
    550: 8216,
    551: 161,
    552: 42,
    553: 39,
    554: 8212,
    555: 169,
    556: 8480,
    557: 8226,
    558: 8220,
    559: 8221,
    560: 192,
    561: 194,
    562: 199,
    563: 200,
    564: 202,
    565: 203,
    566: 235,
    567: 206,
    568: 207,
    569: 239,
    570: 212,
    571: 217,
    572: 249,
    573: 219,
    574: 171,
    575: 187,
    800: 195,
    801: 227,
    802: 205,
    803: 204,
    804: 236,
    805: 210,
    806: 242,
    807: 213,
    808: 245,
    809: 123,
    810: 125,
    811: 92,
    812: 94,
    813: 95,
    814: 124,
    815: 126,
    816: 196,
    817: 228,
    818: 214,
    819: 246,
    820: 223,
    821: 165,
    822: 164,
    823: 9474,
    824: 197,
    825: 229,
    826: 216,
    827: 248,
    828: 9484,
    829: 9488,
    830: 9492,
    831: 9496
  }, Sr = function(c) {
    return c === null ? "" : (c = Ba[c] || c, String.fromCharCode(c));
  }, wr = 14, Ua = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152], Qi = function() {
    for (var c = [], f = wr + 1; f--; )
      c.push("");
    return c;
  }, ft = function c(f, v) {
    c.prototype.init.call(this), this.field_ = f || 0, this.dataChannel_ = v || 0, this.name_ = "CC" + ((this.field_ << 1 | this.dataChannel_) + 1), this.setConstants(), this.reset(), this.push = function(g) {
      var _, S, L, R, F;
      if (_ = g.ccData & 32639, _ === this.lastControlCode_) {
        this.lastControlCode_ = null;
        return;
      }
      if ((_ & 61440) === 4096 ? this.lastControlCode_ = _ : _ !== this.PADDING_ && (this.lastControlCode_ = null), L = _ >>> 8, R = _ & 255, _ !== this.PADDING_)
        if (_ === this.RESUME_CAPTION_LOADING_)
          this.mode_ = "popOn";
        else if (_ === this.END_OF_CAPTION_)
          this.mode_ = "popOn", this.clearFormatting(g.pts), this.flushDisplayed(g.pts), S = this.displayed_, this.displayed_ = this.nonDisplayed_, this.nonDisplayed_ = S, this.startPts_ = g.pts;
        else if (_ === this.ROLL_UP_2_ROWS_)
          this.rollUpRows_ = 2, this.setRollUp(g.pts);
        else if (_ === this.ROLL_UP_3_ROWS_)
          this.rollUpRows_ = 3, this.setRollUp(g.pts);
        else if (_ === this.ROLL_UP_4_ROWS_)
          this.rollUpRows_ = 4, this.setRollUp(g.pts);
        else if (_ === this.CARRIAGE_RETURN_)
          this.clearFormatting(g.pts), this.flushDisplayed(g.pts), this.shiftRowsUp_(), this.startPts_ = g.pts;
        else if (_ === this.BACKSPACE_)
          this.mode_ === "popOn" ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);
        else if (_ === this.ERASE_DISPLAYED_MEMORY_)
          this.flushDisplayed(g.pts), this.displayed_ = Qi();
        else if (_ === this.ERASE_NON_DISPLAYED_MEMORY_)
          this.nonDisplayed_ = Qi();
        else if (_ === this.RESUME_DIRECT_CAPTIONING_)
          this.mode_ !== "paintOn" && (this.flushDisplayed(g.pts), this.displayed_ = Qi()), this.mode_ = "paintOn", this.startPts_ = g.pts;
        else if (this.isSpecialCharacter(L, R))
          L = (L & 3) << 8, F = Sr(L | R), this[this.mode_](g.pts, F), this.column_++;
        else if (this.isExtCharacter(L, R))
          this.mode_ === "popOn" ? this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1) : this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1), L = (L & 3) << 8, F = Sr(L | R), this[this.mode_](g.pts, F), this.column_++;
        else if (this.isMidRowCode(L, R))
          this.clearFormatting(g.pts), this[this.mode_](g.pts, " "), this.column_++, (R & 14) === 14 && this.addFormatting(g.pts, ["i"]), (R & 1) === 1 && this.addFormatting(g.pts, ["u"]);
        else if (this.isOffsetControlCode(L, R))
          this.column_ += R & 3;
        else if (this.isPAC(L, R)) {
          var V = Ua.indexOf(_ & 7968);
          this.mode_ === "rollUp" && (V - this.rollUpRows_ + 1 < 0 && (V = this.rollUpRows_ - 1), this.setRollUp(g.pts, V)), V !== this.row_ && (this.clearFormatting(g.pts), this.row_ = V), R & 1 && this.formatting_.indexOf("u") === -1 && this.addFormatting(g.pts, ["u"]), (_ & 16) === 16 && (this.column_ = ((_ & 14) >> 1) * 4), this.isColorPAC(R) && (R & 14) === 14 && this.addFormatting(g.pts, ["i"]);
        } else
          this.isNormalChar(L) && (R === 0 && (R = null), F = Sr(L), F += Sr(R), this[this.mode_](g.pts, F), this.column_ += F.length);
    };
  };
  ft.prototype = new i(), ft.prototype.flushDisplayed = function(c) {
    var f = this.displayed_.map(function(v, g) {
      try {
        return v.trim();
      } catch {
        return this.trigger("log", {
          level: "warn",
          message: "Skipping a malformed 608 caption at index " + g + "."
        }), "";
      }
    }, this).join(`
`).replace(/^\n+|\n+$/g, "");
    f.length && this.trigger("data", {
      startPts: this.startPts_,
      endPts: c,
      text: f,
      stream: this.name_
    });
  }, ft.prototype.reset = function() {
    this.mode_ = "popOn", this.topRow_ = 0, this.startPts_ = 0, this.displayed_ = Qi(), this.nonDisplayed_ = Qi(), this.lastControlCode_ = null, this.column_ = 0, this.row_ = wr, this.rollUpRows_ = 2, this.formatting_ = [];
  }, ft.prototype.setConstants = function() {
    this.dataChannel_ === 0 ? (this.BASE_ = 16, this.EXT_ = 17, this.CONTROL_ = (20 | this.field_) << 8, this.OFFSET_ = 23) : this.dataChannel_ === 1 && (this.BASE_ = 24, this.EXT_ = 25, this.CONTROL_ = (28 | this.field_) << 8, this.OFFSET_ = 31), this.PADDING_ = 0, this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32, this.END_OF_CAPTION_ = this.CONTROL_ | 47, this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37, this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38, this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39, this.CARRIAGE_RETURN_ = this.CONTROL_ | 45, this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41, this.BACKSPACE_ = this.CONTROL_ | 33, this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44, this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46;
  }, ft.prototype.isSpecialCharacter = function(c, f) {
    return c === this.EXT_ && f >= 48 && f <= 63;
  }, ft.prototype.isExtCharacter = function(c, f) {
    return (c === this.EXT_ + 1 || c === this.EXT_ + 2) && f >= 32 && f <= 63;
  }, ft.prototype.isMidRowCode = function(c, f) {
    return c === this.EXT_ && f >= 32 && f <= 47;
  }, ft.prototype.isOffsetControlCode = function(c, f) {
    return c === this.OFFSET_ && f >= 33 && f <= 35;
  }, ft.prototype.isPAC = function(c, f) {
    return c >= this.BASE_ && c < this.BASE_ + 8 && f >= 64 && f <= 127;
  }, ft.prototype.isColorPAC = function(c) {
    return c >= 64 && c <= 79 || c >= 96 && c <= 127;
  }, ft.prototype.isNormalChar = function(c) {
    return c >= 32 && c <= 127;
  }, ft.prototype.setRollUp = function(c, f) {
    if (this.mode_ !== "rollUp" && (this.row_ = wr, this.mode_ = "rollUp", this.flushDisplayed(c), this.nonDisplayed_ = Qi(), this.displayed_ = Qi()), f !== void 0 && f !== this.row_)
      for (var v = 0; v < this.rollUpRows_; v++)
        this.displayed_[f - v] = this.displayed_[this.row_ - v], this.displayed_[this.row_ - v] = "";
    f === void 0 && (f = this.row_), this.topRow_ = f - this.rollUpRows_ + 1;
  }, ft.prototype.addFormatting = function(c, f) {
    this.formatting_ = this.formatting_.concat(f);
    var v = f.reduce(function(g, _) {
      return g + "<" + _ + ">";
    }, "");
    this[this.mode_](c, v);
  }, ft.prototype.clearFormatting = function(c) {
    if (this.formatting_.length) {
      var f = this.formatting_.reverse().reduce(function(v, g) {
        return v + "</" + g + ">";
      }, "");
      this.formatting_ = [], this[this.mode_](c, f);
    }
  }, ft.prototype.popOn = function(c, f) {
    var v = this.nonDisplayed_[this.row_];
    v += f, this.nonDisplayed_[this.row_] = v;
  }, ft.prototype.rollUp = function(c, f) {
    var v = this.displayed_[this.row_];
    v += f, this.displayed_[this.row_] = v;
  }, ft.prototype.shiftRowsUp_ = function() {
    var c;
    for (c = 0; c < this.topRow_; c++)
      this.displayed_[c] = "";
    for (c = this.row_ + 1; c < wr + 1; c++)
      this.displayed_[c] = "";
    for (c = this.topRow_; c < this.row_; c++)
      this.displayed_[c] = this.displayed_[c + 1];
    this.displayed_[this.row_] = "";
  }, ft.prototype.paintOn = function(c, f) {
    var v = this.displayed_[this.row_];
    v += f, this.displayed_[this.row_] = v;
  };
  var kr = {
    CaptionStream: ii,
    Cea608Stream: ft,
    Cea708Stream: ut
  }, qt = {
    H264_STREAM_TYPE: 27,
    ADTS_STREAM_TYPE: 15,
    METADATA_STREAM_TYPE: 21
  }, Iu = 8589934592, Ui = 4294967296, Fa = "shared", Cr = function(c, f) {
    var v = 1;
    for (c > f && (v = -1); Math.abs(f - c) > Ui; )
      c += v * Iu;
    return c;
  }, ja = function c(f) {
    var v, g;
    c.prototype.init.call(this), this.type_ = f || Fa, this.push = function(_) {
      this.type_ !== Fa && _.type !== this.type_ || (g === void 0 && (g = _.dts), _.dts = Cr(_.dts, g), _.pts = Cr(_.pts, g), v = _.dts, this.trigger("data", _));
    }, this.flush = function() {
      g = v, this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    }, this.discontinuity = function() {
      g = void 0, v = void 0;
    }, this.reset = function() {
      this.discontinuity(), this.trigger("reset");
    };
  };
  ja.prototype = new i();
  var As = {
    TimestampRolloverStream: ja,
    handleRollover: Cr
  }, Is = function(c, f, v) {
    var g, _ = "";
    for (g = f; g < v; g++)
      _ += "%" + ("00" + c[g].toString(16)).slice(-2);
    return _;
  }, Fi = function(c, f, v) {
    return decodeURIComponent(Is(c, f, v));
  }, Gn = function(c, f, v) {
    return unescape(Is(c, f, v));
  }, Ar = function(c) {
    return c[0] << 21 | c[1] << 14 | c[2] << 7 | c[3];
  }, qa = {
    TXXX: function(c) {
      var f;
      if (c.data[0] === 3) {
        for (f = 1; f < c.data.length; f++)
          if (c.data[f] === 0) {
            c.description = Fi(c.data, 1, f), c.value = Fi(c.data, f + 1, c.data.length).replace(/\0*$/, "");
            break;
          }
        c.data = c.value;
      }
    },
    WXXX: function(c) {
      var f;
      if (c.data[0] === 3) {
        for (f = 1; f < c.data.length; f++)
          if (c.data[f] === 0) {
            c.description = Fi(c.data, 1, f), c.url = Fi(c.data, f + 1, c.data.length);
            break;
          }
      }
    },
    PRIV: function(c) {
      var f;
      for (f = 0; f < c.data.length; f++)
        if (c.data[f] === 0) {
          c.owner = Gn(c.data, 0, f);
          break;
        }
      c.privateData = c.data.subarray(f + 1), c.data = c.privateData;
    }
  }, hn;
  hn = function(c) {
    var f = {
      descriptor: c && c.descriptor
    }, v = 0, g = [], _ = 0, S;
    if (hn.prototype.init.call(this), this.dispatchType = qt.METADATA_STREAM_TYPE.toString(16), f.descriptor)
      for (S = 0; S < f.descriptor.length; S++)
        this.dispatchType += ("00" + f.descriptor[S].toString(16)).slice(-2);
    this.push = function(L) {
      var R, F, V, Y, ee, Ce;
      if (L.type === "timed-metadata") {
        if (L.dataAlignmentIndicator && (_ = 0, g.length = 0), g.length === 0 && (L.data.length < 10 || L.data[0] !== "I".charCodeAt(0) || L.data[1] !== "D".charCodeAt(0) || L.data[2] !== "3".charCodeAt(0))) {
          this.trigger("log", {
            level: "warn",
            message: "Skipping unrecognized metadata packet"
          });
          return;
        }
        if (g.push(L), _ += L.data.byteLength, g.length === 1 && (v = Ar(L.data.subarray(6, 10)), v += 10), !(_ < v)) {
          for (R = {
            data: new Uint8Array(v),
            frames: [],
            pts: g[0].pts,
            dts: g[0].dts
          }, ee = 0; ee < v; )
            R.data.set(g[0].data.subarray(0, v - ee), ee), ee += g[0].data.byteLength, _ -= g[0].data.byteLength, g.shift();
          F = 10, R.data[5] & 64 && (F += 4, F += Ar(R.data.subarray(10, 14)), v -= Ar(R.data.subarray(16, 20)));
          do {
            if (V = Ar(R.data.subarray(F + 4, F + 8)), V < 1) {
              this.trigger("log", {
                level: "warn",
                message: "Malformed ID3 frame encountered. Skipping metadata parsing."
              });
              return;
            }
            if (Ce = String.fromCharCode(R.data[F], R.data[F + 1], R.data[F + 2], R.data[F + 3]), Y = {
              id: Ce,
              data: R.data.subarray(F + 10, F + V + 10)
            }, Y.key = Y.id, qa[Y.id] && (qa[Y.id](Y), Y.owner === "com.apple.streaming.transportStreamTimestamp")) {
              var oe = Y.data, je = (oe[3] & 1) << 30 | oe[4] << 22 | oe[5] << 14 | oe[6] << 6 | oe[7] >>> 2;
              je *= 4, je += oe[7] & 3, Y.timeStamp = je, R.pts === void 0 && R.dts === void 0 && (R.pts = Y.timeStamp, R.dts = Y.timeStamp), this.trigger("timestamp", Y);
            }
            R.frames.push(Y), F += 10, F += V;
          } while (F < v);
          this.trigger("data", R);
        }
      }
    };
  }, hn.prototype = new i();
  var Du = hn, xu = As.TimestampRolloverStream, Ir, Kn, zn, Nn = 188, Dr = 71;
  Ir = function() {
    var c = new Uint8Array(Nn), f = 0;
    Ir.prototype.init.call(this), this.push = function(v) {
      var g = 0, _ = Nn, S;
      for (f ? (S = new Uint8Array(v.byteLength + f), S.set(c.subarray(0, f)), S.set(v, f), f = 0) : S = v; _ < S.byteLength; ) {
        if (S[g] === Dr && S[_] === Dr) {
          this.trigger("data", S.subarray(g, _)), g += Nn, _ += Nn;
          continue;
        }
        g++, _++;
      }
      g < S.byteLength && (c.set(S.subarray(g), 0), f = S.byteLength - g);
    }, this.flush = function() {
      f === Nn && c[0] === Dr && (this.trigger("data", c), f = 0), this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    }, this.reset = function() {
      f = 0, this.trigger("reset");
    };
  }, Ir.prototype = new i(), Kn = function() {
    var c, f, v, g;
    Kn.prototype.init.call(this), g = this, this.packetsWaitingForPmt = [], this.programMapTable = void 0, c = function(_, S) {
      var L = 0;
      S.payloadUnitStartIndicator && (L += _[L] + 1), S.type === "pat" ? f(_.subarray(L), S) : v(_.subarray(L), S);
    }, f = function(_, S) {
      S.section_number = _[7], S.last_section_number = _[8], g.pmtPid = (_[10] & 31) << 8 | _[11], S.pmtPid = g.pmtPid;
    }, v = function(_, S) {
      var L, R, F, V;
      if (_[5] & 1) {
        for (g.programMapTable = {
          video: null,
          audio: null,
          "timed-metadata": {}
        }, L = (_[1] & 15) << 8 | _[2], R = 3 + L - 4, F = (_[10] & 15) << 8 | _[11], V = 12 + F; V < R; ) {
          var Y = _[V], ee = (_[V + 1] & 31) << 8 | _[V + 2];
          Y === qt.H264_STREAM_TYPE && g.programMapTable.video === null ? g.programMapTable.video = ee : Y === qt.ADTS_STREAM_TYPE && g.programMapTable.audio === null ? g.programMapTable.audio = ee : Y === qt.METADATA_STREAM_TYPE && (g.programMapTable["timed-metadata"][ee] = Y), V += ((_[V + 3] & 15) << 8 | _[V + 4]) + 5;
        }
        S.programMapTable = g.programMapTable;
      }
    }, this.push = function(_) {
      var S = {}, L = 4;
      if (S.payloadUnitStartIndicator = !!(_[1] & 64), S.pid = _[1] & 31, S.pid <<= 8, S.pid |= _[2], (_[3] & 48) >>> 4 > 1 && (L += _[L] + 1), S.pid === 0)
        S.type = "pat", c(_.subarray(L), S), this.trigger("data", S);
      else if (S.pid === this.pmtPid)
        for (S.type = "pmt", c(_.subarray(L), S), this.trigger("data", S); this.packetsWaitingForPmt.length; )
          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());
      else
        this.programMapTable === void 0 ? this.packetsWaitingForPmt.push([_, L, S]) : this.processPes_(_, L, S);
    }, this.processPes_ = function(_, S, L) {
      L.pid === this.programMapTable.video ? L.streamType = qt.H264_STREAM_TYPE : L.pid === this.programMapTable.audio ? L.streamType = qt.ADTS_STREAM_TYPE : L.streamType = this.programMapTable["timed-metadata"][L.pid], L.type = "pes", L.data = _.subarray(S), this.trigger("data", L);
    };
  }, Kn.prototype = new i(), Kn.STREAM_TYPES = {
    h264: 27,
    adts: 15
  }, zn = function() {
    var c = this, f = !1, v = {
      data: [],
      size: 0
    }, g = {
      data: [],
      size: 0
    }, _ = {
      data: [],
      size: 0
    }, S, L = function(F, V) {
      var Y, ee = F[0] << 16 | F[1] << 8 | F[2];
      V.data = new Uint8Array(), ee === 1 && (V.packetLength = 6 + (F[4] << 8 | F[5]), V.dataAlignmentIndicator = (F[6] & 4) !== 0, Y = F[7], Y & 192 && (V.pts = (F[9] & 14) << 27 | (F[10] & 255) << 20 | (F[11] & 254) << 12 | (F[12] & 255) << 5 | (F[13] & 254) >>> 3, V.pts *= 4, V.pts += (F[13] & 6) >>> 1, V.dts = V.pts, Y & 64 && (V.dts = (F[14] & 14) << 27 | (F[15] & 255) << 20 | (F[16] & 254) << 12 | (F[17] & 255) << 5 | (F[18] & 254) >>> 3, V.dts *= 4, V.dts += (F[18] & 6) >>> 1)), V.data = F.subarray(9 + F[8]));
    }, R = function(F, V, Y) {
      var ee = new Uint8Array(F.size), Ce = {
        type: V
      }, oe = 0, je = 0, We = !1, Ht;
      if (!(!F.data.length || F.size < 9)) {
        for (Ce.trackId = F.data[0].pid, oe = 0; oe < F.data.length; oe++)
          Ht = F.data[oe], ee.set(Ht.data, je), je += Ht.data.byteLength;
        L(ee, Ce), We = V === "video" || Ce.packetLength <= F.size, (Y || We) && (F.size = 0, F.data.length = 0), We && c.trigger("data", Ce);
      }
    };
    zn.prototype.init.call(this), this.push = function(F) {
      ({
        pat: function() {
        },
        pes: function() {
          var V, Y;
          switch (F.streamType) {
            case qt.H264_STREAM_TYPE:
              V = v, Y = "video";
              break;
            case qt.ADTS_STREAM_TYPE:
              V = g, Y = "audio";
              break;
            case qt.METADATA_STREAM_TYPE:
              V = _, Y = "timed-metadata";
              break;
            default:
              return;
          }
          F.payloadUnitStartIndicator && R(V, Y, !0), V.data.push(F), V.size += F.data.byteLength;
        },
        pmt: function() {
          var V = {
            type: "metadata",
            tracks: []
          };
          S = F.programMapTable, S.video !== null && V.tracks.push({
            timelineStartInfo: {
              baseMediaDecodeTime: 0
            },
            id: +S.video,
            codec: "avc",
            type: "video"
          }), S.audio !== null && V.tracks.push({
            timelineStartInfo: {
              baseMediaDecodeTime: 0
            },
            id: +S.audio,
            codec: "adts",
            type: "audio"
          }), f = !0, c.trigger("data", V);
        }
      })[F.type]();
    }, this.reset = function() {
      v.size = 0, v.data.length = 0, g.size = 0, g.data.length = 0, this.trigger("reset");
    }, this.flushStreams_ = function() {
      R(v, "video"), R(g, "audio"), R(_, "timed-metadata");
    }, this.flush = function() {
      if (!f && S) {
        var F = {
          type: "metadata",
          tracks: []
        };
        S.video !== null && F.tracks.push({
          timelineStartInfo: {
            baseMediaDecodeTime: 0
          },
          id: +S.video,
          codec: "avc",
          type: "video"
        }), S.audio !== null && F.tracks.push({
          timelineStartInfo: {
            baseMediaDecodeTime: 0
          },
          id: +S.audio,
          codec: "adts",
          type: "audio"
        }), c.trigger("data", F);
      }
      f = !1, this.flushStreams_(), this.trigger("done");
    };
  }, zn.prototype = new i();
  var Va = {
    PAT_PID: 0,
    MP2T_PACKET_LENGTH: Nn,
    TransportPacketStream: Ir,
    TransportParseStream: Kn,
    ElementaryStream: zn,
    TimestampRolloverStream: xu,
    CaptionStream: kr.CaptionStream,
    Cea608Stream: kr.Cea608Stream,
    Cea708Stream: kr.Cea708Stream,
    MetadataStream: Du
  };
  for (var Xn in qt)
    qt.hasOwnProperty(Xn) && (Va[Xn] = qt[Xn]);
  var xi = Va, Pu = de.ONE_SECOND_IN_TS, Rn, Ha = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
  Rn = function(c) {
    var f, v = 0;
    Rn.prototype.init.call(this), this.skipWarn_ = function(g, _) {
      this.trigger("log", {
        level: "warn",
        message: "adts skiping bytes " + g + " to " + _ + " in frame " + v + " outside syncword"
      });
    }, this.push = function(g) {
      var _ = 0, S, L, R, F, V;
      if (c || (v = 0), g.type === "audio") {
        f && f.length ? (R = f, f = new Uint8Array(R.byteLength + g.data.byteLength), f.set(R), f.set(g.data, R.byteLength)) : f = g.data;
        for (var Y; _ + 7 < f.length; ) {
          if (f[_] !== 255 || (f[_ + 1] & 246) !== 240) {
            typeof Y != "number" && (Y = _), _++;
            continue;
          }
          if (typeof Y == "number" && (this.skipWarn_(Y, _), Y = null), L = (~f[_ + 1] & 1) * 2, S = (f[_ + 3] & 3) << 11 | f[_ + 4] << 3 | (f[_ + 5] & 224) >> 5, F = ((f[_ + 6] & 3) + 1) * 1024, V = F * Pu / Ha[(f[_ + 2] & 60) >>> 2], f.byteLength - _ < S)
            break;
          this.trigger("data", {
            pts: g.pts + v * V,
            dts: g.dts + v * V,
            sampleCount: F,
            audioobjecttype: (f[_ + 2] >>> 6 & 3) + 1,
            channelcount: (f[_ + 2] & 1) << 2 | (f[_ + 3] & 192) >>> 6,
            samplerate: Ha[(f[_ + 2] & 60) >>> 2],
            samplingfrequencyindex: (f[_ + 2] & 60) >>> 2,
            samplesize: 16,
            data: f.subarray(_ + 7 + L, _ + S)
          }), v++, _ += S;
        }
        typeof Y == "number" && (this.skipWarn_(Y, _), Y = null), f = f.subarray(_);
      }
    }, this.flush = function() {
      v = 0, this.trigger("done");
    }, this.reset = function() {
      f = void 0, this.trigger("reset");
    }, this.endTimeline = function() {
      f = void 0, this.trigger("endedtimeline");
    };
  }, Rn.prototype = new i();
  var Pt = Rn, Qn;
  Qn = function(c) {
    var f = c.byteLength, v = 0, g = 0;
    this.length = function() {
      return 8 * f;
    }, this.bitsAvailable = function() {
      return 8 * f + g;
    }, this.loadWord = function() {
      var _ = c.byteLength - f, S = new Uint8Array(4), L = Math.min(4, f);
      if (L === 0)
        throw new Error("no bytes available");
      S.set(c.subarray(_, _ + L)), v = new DataView(S.buffer).getUint32(0), g = L * 8, f -= L;
    }, this.skipBits = function(_) {
      var S;
      g > _ ? (v <<= _, g -= _) : (_ -= g, S = Math.floor(_ / 8), _ -= S * 8, f -= S, this.loadWord(), v <<= _, g -= _);
    }, this.readBits = function(_) {
      var S = Math.min(g, _), L = v >>> 32 - S;
      return g -= S, g > 0 ? v <<= S : f > 0 && this.loadWord(), S = _ - S, S > 0 ? L << S | this.readBits(S) : L;
    }, this.skipLeadingZeros = function() {
      var _;
      for (_ = 0; _ < g; ++_)
        if (v & 2147483648 >>> _)
          return v <<= _, g -= _, _;
      return this.loadWord(), _ + this.skipLeadingZeros();
    }, this.skipUnsignedExpGolomb = function() {
      this.skipBits(1 + this.skipLeadingZeros());
    }, this.skipExpGolomb = function() {
      this.skipBits(1 + this.skipLeadingZeros());
    }, this.readUnsignedExpGolomb = function() {
      var _ = this.skipLeadingZeros();
      return this.readBits(_ + 1) - 1;
    }, this.readExpGolomb = function() {
      var _ = this.readUnsignedExpGolomb();
      return 1 & _ ? 1 + _ >>> 1 : -1 * (_ >>> 1);
    }, this.readBoolean = function() {
      return this.readBits(1) === 1;
    }, this.readUnsignedByte = function() {
      return this.readBits(8);
    }, this.loadWord();
  };
  var Lu = Qn, xr, Jn, Wa;
  Jn = function() {
    var c = 0, f, v;
    Jn.prototype.init.call(this), this.push = function(g) {
      var _;
      v ? (_ = new Uint8Array(v.byteLength + g.data.byteLength), _.set(v), _.set(g.data, v.byteLength), v = _) : v = g.data;
      for (var S = v.byteLength; c < S - 3; c++)
        if (v[c + 2] === 1) {
          f = c + 5;
          break;
        }
      for (; f < S; )
        switch (v[f]) {
          case 0:
            if (v[f - 1] !== 0) {
              f += 2;
              break;
            } else if (v[f - 2] !== 0) {
              f++;
              break;
            }
            c + 3 !== f - 2 && this.trigger("data", v.subarray(c + 3, f - 2));
            do
              f++;
            while (v[f] !== 1 && f < S);
            c = f - 2, f += 3;
            break;
          case 1:
            if (v[f - 1] !== 0 || v[f - 2] !== 0) {
              f += 3;
              break;
            }
            this.trigger("data", v.subarray(c + 3, f - 2)), c = f - 2, f += 3;
            break;
          default:
            f += 3;
            break;
        }
      v = v.subarray(c), f -= c, c = 0;
    }, this.reset = function() {
      v = null, c = 0, this.trigger("reset");
    }, this.flush = function() {
      v && v.byteLength > 3 && this.trigger("data", v.subarray(c + 3)), v = null, c = 0, this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    };
  }, Jn.prototype = new i(), Wa = {
    100: !0,
    110: !0,
    122: !0,
    244: !0,
    44: !0,
    83: !0,
    86: !0,
    118: !0,
    128: !0,
    138: !0,
    139: !0,
    134: !0
  }, xr = function() {
    var c = new Jn(), f, v, g, _, S, L, R;
    xr.prototype.init.call(this), f = this, this.push = function(F) {
      F.type === "video" && (v = F.trackId, g = F.pts, _ = F.dts, c.push(F));
    }, c.on("data", function(F) {
      var V = {
        trackId: v,
        pts: g,
        dts: _,
        data: F,
        nalUnitTypeCode: F[0] & 31
      };
      switch (V.nalUnitTypeCode) {
        case 5:
          V.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
          break;
        case 6:
          V.nalUnitType = "sei_rbsp", V.escapedRBSP = S(F.subarray(1));
          break;
        case 7:
          V.nalUnitType = "seq_parameter_set_rbsp", V.escapedRBSP = S(F.subarray(1)), V.config = L(V.escapedRBSP);
          break;
        case 8:
          V.nalUnitType = "pic_parameter_set_rbsp";
          break;
        case 9:
          V.nalUnitType = "access_unit_delimiter_rbsp";
          break;
      }
      f.trigger("data", V);
    }), c.on("done", function() {
      f.trigger("done");
    }), c.on("partialdone", function() {
      f.trigger("partialdone");
    }), c.on("reset", function() {
      f.trigger("reset");
    }), c.on("endedtimeline", function() {
      f.trigger("endedtimeline");
    }), this.flush = function() {
      c.flush();
    }, this.partialFlush = function() {
      c.partialFlush();
    }, this.reset = function() {
      c.reset();
    }, this.endTimeline = function() {
      c.endTimeline();
    }, R = function(F, V) {
      var Y = 8, ee = 8, Ce, oe;
      for (Ce = 0; Ce < F; Ce++)
        ee !== 0 && (oe = V.readExpGolomb(), ee = (Y + oe + 256) % 256), Y = ee === 0 ? Y : ee;
    }, S = function(F) {
      for (var V = F.byteLength, Y = [], ee = 1, Ce, oe; ee < V - 2; )
        F[ee] === 0 && F[ee + 1] === 0 && F[ee + 2] === 3 ? (Y.push(ee + 2), ee += 2) : ee++;
      if (Y.length === 0)
        return F;
      Ce = V - Y.length, oe = new Uint8Array(Ce);
      var je = 0;
      for (ee = 0; ee < Ce; je++, ee++)
        je === Y[0] && (je++, Y.shift()), oe[ee] = F[je];
      return oe;
    }, L = function(F) {
      var V = 0, Y = 0, ee = 0, Ce = 0, oe, je, We, Ht, Li, rr, yh, _h, bh, Vu, Th, Lt = [1, 1], Eh, sr;
      if (oe = new Lu(F), je = oe.readUnsignedByte(), Ht = oe.readUnsignedByte(), We = oe.readUnsignedByte(), oe.skipUnsignedExpGolomb(), Wa[je] && (Li = oe.readUnsignedExpGolomb(), Li === 3 && oe.skipBits(1), oe.skipUnsignedExpGolomb(), oe.skipUnsignedExpGolomb(), oe.skipBits(1), oe.readBoolean()))
        for (Th = Li !== 3 ? 8 : 12, sr = 0; sr < Th; sr++)
          oe.readBoolean() && (sr < 6 ? R(16, oe) : R(64, oe));
      if (oe.skipUnsignedExpGolomb(), rr = oe.readUnsignedExpGolomb(), rr === 0)
        oe.readUnsignedExpGolomb();
      else if (rr === 1)
        for (oe.skipBits(1), oe.skipExpGolomb(), oe.skipExpGolomb(), yh = oe.readUnsignedExpGolomb(), sr = 0; sr < yh; sr++)
          oe.skipExpGolomb();
      if (oe.skipUnsignedExpGolomb(), oe.skipBits(1), _h = oe.readUnsignedExpGolomb(), bh = oe.readUnsignedExpGolomb(), Vu = oe.readBits(1), Vu === 0 && oe.skipBits(1), oe.skipBits(1), oe.readBoolean() && (V = oe.readUnsignedExpGolomb(), Y = oe.readUnsignedExpGolomb(), ee = oe.readUnsignedExpGolomb(), Ce = oe.readUnsignedExpGolomb()), oe.readBoolean() && oe.readBoolean()) {
        switch (Eh = oe.readUnsignedByte(), Eh) {
          case 1:
            Lt = [1, 1];
            break;
          case 2:
            Lt = [12, 11];
            break;
          case 3:
            Lt = [10, 11];
            break;
          case 4:
            Lt = [16, 11];
            break;
          case 5:
            Lt = [40, 33];
            break;
          case 6:
            Lt = [24, 11];
            break;
          case 7:
            Lt = [20, 11];
            break;
          case 8:
            Lt = [32, 11];
            break;
          case 9:
            Lt = [80, 33];
            break;
          case 10:
            Lt = [18, 11];
            break;
          case 11:
            Lt = [15, 11];
            break;
          case 12:
            Lt = [64, 33];
            break;
          case 13:
            Lt = [160, 99];
            break;
          case 14:
            Lt = [4, 3];
            break;
          case 15:
            Lt = [3, 2];
            break;
          case 16:
            Lt = [2, 1];
            break;
          case 255: {
            Lt = [oe.readUnsignedByte() << 8 | oe.readUnsignedByte(), oe.readUnsignedByte() << 8 | oe.readUnsignedByte()];
            break;
          }
        }
        Lt && Lt[0] / Lt[1];
      }
      return {
        profileIdc: je,
        levelIdc: We,
        profileCompatibility: Ht,
        width: (_h + 1) * 16 - V * 2 - Y * 2,
        height: (2 - Vu) * (bh + 1) * 16 - ee * 2 - Ce * 2,
        sarRatio: Lt
      };
    };
  }, xr.prototype = new i();
  var Yn = {
    H264Stream: xr,
    NalByteStream: Jn
  }, Ds = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], xs = function(c, f) {
    var v = c[f + 6] << 21 | c[f + 7] << 14 | c[f + 8] << 7 | c[f + 9], g = c[f + 5], _ = (g & 16) >> 4;
    return v = v >= 0 ? v : 0, _ ? v + 20 : v + 10;
  }, Ga = function c(f, v) {
    return f.length - v < 10 || f[v] !== "I".charCodeAt(0) || f[v + 1] !== "D".charCodeAt(0) || f[v + 2] !== "3".charCodeAt(0) ? v : (v += xs(f, v), c(f, v));
  }, Mn = function(c) {
    var f = Ga(c, 0);
    return c.length >= f + 2 && (c[f] & 255) === 255 && (c[f + 1] & 240) === 240 && (c[f + 1] & 22) === 16;
  }, Ka = function(c) {
    return c[0] << 21 | c[1] << 14 | c[2] << 7 | c[3];
  }, Ou = function(c, f, v) {
    var g, _ = "";
    for (g = f; g < v; g++)
      _ += "%" + ("00" + c[g].toString(16)).slice(-2);
    return _;
  }, Pr = function(c, f, v) {
    return unescape(Ou(c, f, v));
  }, Ps = function(c, f) {
    var v = (c[f + 5] & 224) >> 5, g = c[f + 4] << 3, _ = c[f + 3] & 3 << 11;
    return _ | g | v;
  }, za = function(c, f) {
    return c[f] === "I".charCodeAt(0) && c[f + 1] === "D".charCodeAt(0) && c[f + 2] === "3".charCodeAt(0) ? "timed-metadata" : c[f] & !0 && (c[f + 1] & 240) === 240 ? "audio" : null;
  }, Ls = function(c) {
    for (var f = 0; f + 5 < c.length; ) {
      if (c[f] !== 255 || (c[f + 1] & 246) !== 240) {
        f++;
        continue;
      }
      return Ds[(c[f + 2] & 60) >>> 2];
    }
    return null;
  }, Nu = function(c) {
    var f, v, g, _;
    f = 10, c[5] & 64 && (f += 4, f += Ka(c.subarray(10, 14)));
    do {
      if (v = Ka(c.subarray(f + 4, f + 8)), v < 1)
        return null;
      if (_ = String.fromCharCode(c[f], c[f + 1], c[f + 2], c[f + 3]), _ === "PRIV") {
        g = c.subarray(f + 10, f + v + 10);
        for (var S = 0; S < g.byteLength; S++)
          if (g[S] === 0) {
            var L = Pr(g, 0, S);
            if (L === "com.apple.streaming.transportStreamTimestamp") {
              var R = g.subarray(S + 1), F = (R[3] & 1) << 30 | R[4] << 22 | R[5] << 14 | R[6] << 6 | R[7] >>> 2;
              return F *= 4, F += R[7] & 3, F;
            }
            break;
          }
      }
      f += 10, f += v;
    } while (f < c.byteLength);
    return null;
  }, Lr = {
    isLikelyAacData: Mn,
    parseId3TagSize: xs,
    parseAdtsSize: Ps,
    parseType: za,
    parseSampleRate: Ls,
    parseAacTimestamp: Nu
  }, Or;
  Or = function() {
    var c = new Uint8Array(), f = 0;
    Or.prototype.init.call(this), this.setTimestamp = function(v) {
      f = v;
    }, this.push = function(v) {
      var g = 0, _ = 0, S, L, R, F;
      for (c.length ? (F = c.length, c = new Uint8Array(v.byteLength + F), c.set(c.subarray(0, F)), c.set(v, F)) : c = v; c.length - _ >= 3; ) {
        if (c[_] === "I".charCodeAt(0) && c[_ + 1] === "D".charCodeAt(0) && c[_ + 2] === "3".charCodeAt(0)) {
          if (c.length - _ < 10 || (g = Lr.parseId3TagSize(c, _), _ + g > c.length))
            break;
          L = {
            type: "timed-metadata",
            data: c.subarray(_, _ + g)
          }, this.trigger("data", L), _ += g;
          continue;
        } else if ((c[_] & 255) === 255 && (c[_ + 1] & 240) === 240) {
          if (c.length - _ < 7 || (g = Lr.parseAdtsSize(c, _), _ + g > c.length))
            break;
          R = {
            type: "audio",
            data: c.subarray(_, _ + g),
            pts: f,
            dts: f
          }, this.trigger("data", R), _ += g;
          continue;
        }
        _++;
      }
      S = c.length - _, S > 0 ? c = c.subarray(_) : c = new Uint8Array();
    }, this.reset = function() {
      c = new Uint8Array(), this.trigger("reset");
    }, this.endTimeline = function() {
      c = new Uint8Array(), this.trigger("endedtimeline");
    };
  }, Or.prototype = new i();
  var Ru = Or, Mu = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"], Os = Mu, Bu = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility", "sarRatio"], Nr = Bu, gi = Yn.H264Stream, $n = Lr.isLikelyAacData, Uu = de.ONE_SECOND_IN_TS, Zn, k, E, C, w = function(c, f) {
    f.stream = c, this.trigger("log", f);
  }, N = function(c, f) {
    for (var v = Object.keys(f), g = 0; g < v.length; g++) {
      var _ = v[g];
      _ === "headOfPipeline" || !f[_].on || f[_].on("log", w.bind(c, _));
    }
  }, z = function(c, f) {
    var v;
    if (c.length !== f.length)
      return !1;
    for (v = 0; v < c.length; v++)
      if (c[v] !== f[v])
        return !1;
    return !0;
  }, U = function(c, f, v, g, _, S) {
    var L = v - f, R = g - f, F = _ - v;
    return {
      start: {
        dts: c,
        pts: c + L
      },
      end: {
        dts: c + R,
        pts: c + F
      },
      prependedContentDuration: S,
      baseMediaDecodeTime: c
    };
  };
  k = function(c, f) {
    var v = [], g, _ = 0, S = 0, L = 1 / 0;
    f = f || {}, g = f.firstSequenceNumber || 0, k.prototype.init.call(this), this.push = function(R) {
      wi.collectDtsInfo(c, R), c && Os.forEach(function(F) {
        c[F] = R[F];
      }), v.push(R);
    }, this.setEarliestDts = function(R) {
      _ = R;
    }, this.setVideoBaseMediaDecodeTime = function(R) {
      L = R;
    }, this.setAudioAppendStart = function(R) {
      S = R;
    }, this.flush = function() {
      var R, F, V, Y, ee, Ce, oe;
      if (v.length === 0) {
        this.trigger("done", "AudioSegmentStream");
        return;
      }
      R = Tr.trimAdtsFramesByEarliestDts(v, c, _), c.baseMediaDecodeTime = wi.calculateTrackBaseMediaDecodeTime(c, f.keepOriginalTimestamps), oe = Tr.prefixWithSilence(c, R, S, L), c.samples = Tr.generateSampleTable(R), V = J.mdat(Tr.concatenateFrameData(R)), v = [], F = J.moof(g, [c]), Y = new Uint8Array(F.byteLength + V.byteLength), g++, Y.set(F), Y.set(V, F.byteLength), wi.clearDtsInfo(c), ee = Math.ceil(Uu * 1024 / c.samplerate), R.length && (Ce = R.length * ee, this.trigger("segmentTimingInfo", U(
        de.audioTsToVideoTs(c.baseMediaDecodeTime, c.samplerate),
        R[0].dts,
        R[0].pts,
        R[0].dts + Ce,
        R[0].pts + Ce,
        oe || 0
      )), this.trigger("timingInfo", {
        start: R[0].pts,
        end: R[0].pts + Ce
      })), this.trigger("data", {
        track: c,
        boxes: Y
      }), this.trigger("done", "AudioSegmentStream");
    }, this.reset = function() {
      wi.clearDtsInfo(c), v = [], this.trigger("reset");
    };
  }, k.prototype = new i(), Zn = function(c, f) {
    var v, g = [], _ = [], S, L;
    f = f || {}, v = f.firstSequenceNumber || 0, Zn.prototype.init.call(this), delete c.minPTS, this.gopCache_ = [], this.push = function(R) {
      wi.collectDtsInfo(c, R), R.nalUnitType === "seq_parameter_set_rbsp" && !S && (S = R.config, c.sps = [R.data], Nr.forEach(function(F) {
        c[F] = S[F];
      }, this)), R.nalUnitType === "pic_parameter_set_rbsp" && !L && (L = R.data, c.pps = [R.data]), g.push(R);
    }, this.flush = function() {
      for (var R, F, V, Y, ee, Ce, oe = 0, je, We; g.length && g[0].nalUnitType !== "access_unit_delimiter_rbsp"; )
        g.shift();
      if (g.length === 0) {
        this.resetStream_(), this.trigger("done", "VideoSegmentStream");
        return;
      }
      if (R = $e.groupNalsIntoFrames(g), V = $e.groupFramesIntoGops(R), V[0][0].keyFrame || (F = this.getGopForFusion_(g[0], c), F ? (oe = F.duration, V.unshift(F), V.byteLength += F.byteLength, V.nalCount += F.nalCount, V.pts = F.pts, V.dts = F.dts, V.duration += F.duration) : V = $e.extendFirstKeyFrame(V)), _.length) {
        var Ht;
        if (f.alignGopsAtEnd ? Ht = this.alignGopsAtEnd_(V) : Ht = this.alignGopsAtStart_(V), !Ht) {
          this.gopCache_.unshift({
            gop: V.pop(),
            pps: c.pps,
            sps: c.sps
          }), this.gopCache_.length = Math.min(6, this.gopCache_.length), g = [], this.resetStream_(), this.trigger("done", "VideoSegmentStream");
          return;
        }
        wi.clearDtsInfo(c), V = Ht;
      }
      wi.collectDtsInfo(c, V), c.samples = $e.generateSampleTable(V), ee = J.mdat($e.concatenateNalData(V)), c.baseMediaDecodeTime = wi.calculateTrackBaseMediaDecodeTime(c, f.keepOriginalTimestamps), this.trigger("processedGopsInfo", V.map(function(Li) {
        return {
          pts: Li.pts,
          dts: Li.dts,
          byteLength: Li.byteLength
        };
      })), je = V[0], We = V[V.length - 1], this.trigger("segmentTimingInfo", U(c.baseMediaDecodeTime, je.dts, je.pts, We.dts + We.duration, We.pts + We.duration, oe)), this.trigger("timingInfo", {
        start: V[0].pts,
        end: V[V.length - 1].pts + V[V.length - 1].duration
      }), this.gopCache_.unshift({
        gop: V.pop(),
        pps: c.pps,
        sps: c.sps
      }), this.gopCache_.length = Math.min(6, this.gopCache_.length), g = [], this.trigger("baseMediaDecodeTime", c.baseMediaDecodeTime), this.trigger("timelineStartInfo", c.timelineStartInfo), Y = J.moof(v, [c]), Ce = new Uint8Array(Y.byteLength + ee.byteLength), v++, Ce.set(Y), Ce.set(ee, Y.byteLength), this.trigger("data", {
        track: c,
        boxes: Ce
      }), this.resetStream_(), this.trigger("done", "VideoSegmentStream");
    }, this.reset = function() {
      this.resetStream_(), g = [], this.gopCache_.length = 0, _.length = 0, this.trigger("reset");
    }, this.resetStream_ = function() {
      wi.clearDtsInfo(c), S = void 0, L = void 0;
    }, this.getGopForFusion_ = function(R) {
      var F = 45e3, V = 1e4, Y = 1 / 0, ee, Ce, oe, je, We;
      for (We = 0; We < this.gopCache_.length; We++)
        je = this.gopCache_[We], oe = je.gop, !(!(c.pps && z(c.pps[0], je.pps[0])) || !(c.sps && z(c.sps[0], je.sps[0]))) && (oe.dts < c.timelineStartInfo.dts || (ee = R.dts - oe.dts - oe.duration, ee >= -V && ee <= F && (!Ce || Y > ee) && (Ce = je, Y = ee)));
      return Ce ? Ce.gop : null;
    }, this.alignGopsAtStart_ = function(R) {
      var F, V, Y, ee, Ce, oe, je, We;
      for (Ce = R.byteLength, oe = R.nalCount, je = R.duration, F = V = 0; F < _.length && V < R.length && (Y = _[F], ee = R[V], Y.pts !== ee.pts); ) {
        if (ee.pts > Y.pts) {
          F++;
          continue;
        }
        V++, Ce -= ee.byteLength, oe -= ee.nalCount, je -= ee.duration;
      }
      return V === 0 ? R : V === R.length ? null : (We = R.slice(V), We.byteLength = Ce, We.duration = je, We.nalCount = oe, We.pts = We[0].pts, We.dts = We[0].dts, We);
    }, this.alignGopsAtEnd_ = function(R) {
      var F, V, Y, ee, Ce, oe;
      for (F = _.length - 1, V = R.length - 1, Ce = null, oe = !1; F >= 0 && V >= 0; ) {
        if (Y = _[F], ee = R[V], Y.pts === ee.pts) {
          oe = !0;
          break;
        }
        if (Y.pts > ee.pts) {
          F--;
          continue;
        }
        F === _.length - 1 && (Ce = V), V--;
      }
      if (!oe && Ce === null)
        return null;
      var je;
      if (oe ? je = V : je = Ce, je === 0)
        return R;
      var We = R.slice(je), Ht = We.reduce(function(Li, rr) {
        return Li.byteLength += rr.byteLength, Li.duration += rr.duration, Li.nalCount += rr.nalCount, Li;
      }, {
        byteLength: 0,
        duration: 0,
        nalCount: 0
      });
      return We.byteLength = Ht.byteLength, We.duration = Ht.duration, We.nalCount = Ht.nalCount, We.pts = We[0].pts, We.dts = We[0].dts, We;
    }, this.alignGopsWith = function(R) {
      _ = R;
    };
  }, Zn.prototype = new i(), C = function(c, f) {
    this.numberOfTracks = 0, this.metadataStream = f, c = c || {}, typeof c.remux < "u" ? this.remuxTracks = !!c.remux : this.remuxTracks = !0, typeof c.keepOriginalTimestamps == "boolean" ? this.keepOriginalTimestamps = c.keepOriginalTimestamps : this.keepOriginalTimestamps = !1, this.pendingTracks = [], this.videoTrack = null, this.pendingBoxes = [], this.pendingCaptions = [], this.pendingMetadata = [], this.pendingBytes = 0, this.emittedTracks = 0, C.prototype.init.call(this), this.push = function(v) {
      if (v.text)
        return this.pendingCaptions.push(v);
      if (v.frames)
        return this.pendingMetadata.push(v);
      this.pendingTracks.push(v.track), this.pendingBytes += v.boxes.byteLength, v.track.type === "video" && (this.videoTrack = v.track, this.pendingBoxes.push(v.boxes)), v.track.type === "audio" && (this.audioTrack = v.track, this.pendingBoxes.unshift(v.boxes));
    };
  }, C.prototype = new i(), C.prototype.flush = function(c) {
    var f = 0, v = {
      captions: [],
      captionStreams: {},
      metadata: [],
      info: {}
    }, g, _, S, L = 0, R;
    if (this.pendingTracks.length < this.numberOfTracks) {
      if (c !== "VideoSegmentStream" && c !== "AudioSegmentStream" || this.remuxTracks)
        return;
      if (this.pendingTracks.length === 0) {
        this.emittedTracks++, this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0);
        return;
      }
    }
    if (this.videoTrack ? (L = this.videoTrack.timelineStartInfo.pts, Nr.forEach(function(F) {
      v.info[F] = this.videoTrack[F];
    }, this)) : this.audioTrack && (L = this.audioTrack.timelineStartInfo.pts, Os.forEach(function(F) {
      v.info[F] = this.audioTrack[F];
    }, this)), this.videoTrack || this.audioTrack) {
      for (this.pendingTracks.length === 1 ? v.type = this.pendingTracks[0].type : v.type = "combined", this.emittedTracks += this.pendingTracks.length, S = J.initSegment(this.pendingTracks), v.initSegment = new Uint8Array(S.byteLength), v.initSegment.set(S), v.data = new Uint8Array(this.pendingBytes), R = 0; R < this.pendingBoxes.length; R++)
        v.data.set(this.pendingBoxes[R], f), f += this.pendingBoxes[R].byteLength;
      for (R = 0; R < this.pendingCaptions.length; R++)
        g = this.pendingCaptions[R], g.startTime = de.metadataTsToSeconds(g.startPts, L, this.keepOriginalTimestamps), g.endTime = de.metadataTsToSeconds(g.endPts, L, this.keepOriginalTimestamps), v.captionStreams[g.stream] = !0, v.captions.push(g);
      for (R = 0; R < this.pendingMetadata.length; R++)
        _ = this.pendingMetadata[R], _.cueTime = de.metadataTsToSeconds(_.pts, L, this.keepOriginalTimestamps), v.metadata.push(_);
      for (v.metadata.dispatchType = this.metadataStream.dispatchType, this.pendingTracks.length = 0, this.videoTrack = null, this.pendingBoxes.length = 0, this.pendingCaptions.length = 0, this.pendingBytes = 0, this.pendingMetadata.length = 0, this.trigger("data", v), R = 0; R < v.captions.length; R++)
        g = v.captions[R], this.trigger("caption", g);
      for (R = 0; R < v.metadata.length; R++)
        _ = v.metadata[R], this.trigger("id3Frame", _);
    }
    this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0);
  }, C.prototype.setRemux = function(c) {
    this.remuxTracks = c;
  }, E = function(c) {
    var f = this, v = !0, g, _;
    E.prototype.init.call(this), c = c || {}, this.baseMediaDecodeTime = c.baseMediaDecodeTime || 0, this.transmuxPipeline_ = {}, this.setupAacPipeline = function() {
      var S = {};
      this.transmuxPipeline_ = S, S.type = "aac", S.metadataStream = new xi.MetadataStream(), S.aacStream = new Ru(), S.audioTimestampRolloverStream = new xi.TimestampRolloverStream("audio"), S.timedMetadataTimestampRolloverStream = new xi.TimestampRolloverStream("timed-metadata"), S.adtsStream = new Pt(), S.coalesceStream = new C(c, S.metadataStream), S.headOfPipeline = S.aacStream, S.aacStream.pipe(S.audioTimestampRolloverStream).pipe(S.adtsStream), S.aacStream.pipe(S.timedMetadataTimestampRolloverStream).pipe(S.metadataStream).pipe(S.coalesceStream), S.metadataStream.on("timestamp", function(L) {
        S.aacStream.setTimestamp(L.timeStamp);
      }), S.aacStream.on("data", function(L) {
        L.type !== "timed-metadata" && L.type !== "audio" || S.audioSegmentStream || (_ = _ || {
          timelineStartInfo: {
            baseMediaDecodeTime: f.baseMediaDecodeTime
          },
          codec: "adts",
          type: "audio"
        }, S.coalesceStream.numberOfTracks++, S.audioSegmentStream = new k(_, c), S.audioSegmentStream.on("log", f.getLogTrigger_("audioSegmentStream")), S.audioSegmentStream.on("timingInfo", f.trigger.bind(f, "audioTimingInfo")), S.adtsStream.pipe(S.audioSegmentStream).pipe(S.coalesceStream), f.trigger("trackinfo", {
          hasAudio: !!_,
          hasVideo: !!g
        }));
      }), S.coalesceStream.on("data", this.trigger.bind(this, "data")), S.coalesceStream.on("done", this.trigger.bind(this, "done")), N(this, S);
    }, this.setupTsPipeline = function() {
      var S = {};
      this.transmuxPipeline_ = S, S.type = "ts", S.metadataStream = new xi.MetadataStream(), S.packetStream = new xi.TransportPacketStream(), S.parseStream = new xi.TransportParseStream(), S.elementaryStream = new xi.ElementaryStream(), S.timestampRolloverStream = new xi.TimestampRolloverStream(), S.adtsStream = new Pt(), S.h264Stream = new gi(), S.captionStream = new xi.CaptionStream(c), S.coalesceStream = new C(c, S.metadataStream), S.headOfPipeline = S.packetStream, S.packetStream.pipe(S.parseStream).pipe(S.elementaryStream).pipe(S.timestampRolloverStream), S.timestampRolloverStream.pipe(S.h264Stream), S.timestampRolloverStream.pipe(S.adtsStream), S.timestampRolloverStream.pipe(S.metadataStream).pipe(S.coalesceStream), S.h264Stream.pipe(S.captionStream).pipe(S.coalesceStream), S.elementaryStream.on("data", function(L) {
        var R;
        if (L.type === "metadata") {
          for (R = L.tracks.length; R--; )
            !g && L.tracks[R].type === "video" ? (g = L.tracks[R], g.timelineStartInfo.baseMediaDecodeTime = f.baseMediaDecodeTime) : !_ && L.tracks[R].type === "audio" && (_ = L.tracks[R], _.timelineStartInfo.baseMediaDecodeTime = f.baseMediaDecodeTime);
          g && !S.videoSegmentStream && (S.coalesceStream.numberOfTracks++, S.videoSegmentStream = new Zn(g, c), S.videoSegmentStream.on("log", f.getLogTrigger_("videoSegmentStream")), S.videoSegmentStream.on("timelineStartInfo", function(F) {
            _ && !c.keepOriginalTimestamps && (_.timelineStartInfo = F, S.audioSegmentStream.setEarliestDts(F.dts - f.baseMediaDecodeTime));
          }), S.videoSegmentStream.on("processedGopsInfo", f.trigger.bind(f, "gopInfo")), S.videoSegmentStream.on("segmentTimingInfo", f.trigger.bind(f, "videoSegmentTimingInfo")), S.videoSegmentStream.on("baseMediaDecodeTime", function(F) {
            _ && S.audioSegmentStream.setVideoBaseMediaDecodeTime(F);
          }), S.videoSegmentStream.on("timingInfo", f.trigger.bind(f, "videoTimingInfo")), S.h264Stream.pipe(S.videoSegmentStream).pipe(S.coalesceStream)), _ && !S.audioSegmentStream && (S.coalesceStream.numberOfTracks++, S.audioSegmentStream = new k(_, c), S.audioSegmentStream.on("log", f.getLogTrigger_("audioSegmentStream")), S.audioSegmentStream.on("timingInfo", f.trigger.bind(f, "audioTimingInfo")), S.audioSegmentStream.on("segmentTimingInfo", f.trigger.bind(f, "audioSegmentTimingInfo")), S.adtsStream.pipe(S.audioSegmentStream).pipe(S.coalesceStream)), f.trigger("trackinfo", {
            hasAudio: !!_,
            hasVideo: !!g
          });
        }
      }), S.coalesceStream.on("data", this.trigger.bind(this, "data")), S.coalesceStream.on("id3Frame", function(L) {
        L.dispatchType = S.metadataStream.dispatchType, f.trigger("id3Frame", L);
      }), S.coalesceStream.on("caption", this.trigger.bind(this, "caption")), S.coalesceStream.on("done", this.trigger.bind(this, "done")), N(this, S);
    }, this.setBaseMediaDecodeTime = function(S) {
      var L = this.transmuxPipeline_;
      c.keepOriginalTimestamps || (this.baseMediaDecodeTime = S), _ && (_.timelineStartInfo.dts = void 0, _.timelineStartInfo.pts = void 0, wi.clearDtsInfo(_), L.audioTimestampRolloverStream && L.audioTimestampRolloverStream.discontinuity()), g && (L.videoSegmentStream && (L.videoSegmentStream.gopCache_ = []), g.timelineStartInfo.dts = void 0, g.timelineStartInfo.pts = void 0, wi.clearDtsInfo(g), L.captionStream.reset()), L.timestampRolloverStream && L.timestampRolloverStream.discontinuity();
    }, this.setAudioAppendStart = function(S) {
      _ && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(S);
    }, this.setRemux = function(S) {
      var L = this.transmuxPipeline_;
      c.remux = S, L && L.coalesceStream && L.coalesceStream.setRemux(S);
    }, this.alignGopsWith = function(S) {
      g && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(S);
    }, this.getLogTrigger_ = function(S) {
      var L = this;
      return function(R) {
        R.stream = S, L.trigger("log", R);
      };
    }, this.push = function(S) {
      if (v) {
        var L = $n(S);
        L && this.transmuxPipeline_.type !== "aac" ? this.setupAacPipeline() : !L && this.transmuxPipeline_.type !== "ts" && this.setupTsPipeline(), v = !1;
      }
      this.transmuxPipeline_.headOfPipeline.push(S);
    }, this.flush = function() {
      v = !0, this.transmuxPipeline_.headOfPipeline.flush();
    }, this.endTimeline = function() {
      this.transmuxPipeline_.headOfPipeline.endTimeline();
    }, this.reset = function() {
      this.transmuxPipeline_.headOfPipeline && this.transmuxPipeline_.headOfPipeline.reset();
    }, this.resetCaptions = function() {
      this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset();
    };
  }, E.prototype = new i();
  var $ = {
    Transmuxer: E,
    VideoSegmentStream: Zn,
    AudioSegmentStream: k,
    AUDIO_PROPERTIES: Os,
    VIDEO_PROPERTIES: Nr,
    generateSegmentTimingInfo: U
  }, Q = function(c) {
    return c >>> 0;
  }, ae = function(c) {
    return ("00" + c.toString(16)).slice(-2);
  }, we = {
    toUnsigned: Q,
    toHexString: ae
  }, Le = function(c) {
    var f = "";
    return f += String.fromCharCode(c[0]), f += String.fromCharCode(c[1]), f += String.fromCharCode(c[2]), f += String.fromCharCode(c[3]), f;
  }, ke = Le, ve = we.toUnsigned, Ae = function c(f, v) {
    var g = [], _, S, L, R, F;
    if (!v.length)
      return null;
    for (_ = 0; _ < f.byteLength; )
      S = ve(f[_] << 24 | f[_ + 1] << 16 | f[_ + 2] << 8 | f[_ + 3]), L = ke(f.subarray(_ + 4, _ + 8)), R = S > 1 ? _ + S : f.byteLength, L === v[0] && (v.length === 1 ? g.push(f.subarray(_ + 8, R)) : (F = c(f.subarray(_ + 8, R), v.slice(1)), F.length && (g = g.concat(F)))), _ = R;
    return g;
  }, ge = Ae, ot = we.toUnsigned, et = r.getUint64, yt = function(c) {
    var f = {
      version: c[0],
      flags: new Uint8Array(c.subarray(1, 4))
    };
    return f.version === 1 ? f.baseMediaDecodeTime = et(c.subarray(4)) : f.baseMediaDecodeTime = ot(c[4] << 24 | c[5] << 16 | c[6] << 8 | c[7]), f;
  }, Xe = yt, rt = function(c) {
    return {
      isLeading: (c[0] & 12) >>> 2,
      dependsOn: c[0] & 3,
      isDependedOn: (c[1] & 192) >>> 6,
      hasRedundancy: (c[1] & 48) >>> 4,
      paddingValue: (c[1] & 14) >>> 1,
      isNonSyncSample: c[1] & 1,
      degradationPriority: c[2] << 8 | c[3]
    };
  }, St = rt, Ve = function(c) {
    var f = {
      version: c[0],
      flags: new Uint8Array(c.subarray(1, 4)),
      samples: []
    }, v = new DataView(c.buffer, c.byteOffset, c.byteLength), g = f.flags[2] & 1, _ = f.flags[2] & 4, S = f.flags[1] & 1, L = f.flags[1] & 2, R = f.flags[1] & 4, F = f.flags[1] & 8, V = v.getUint32(4), Y = 8, ee;
    for (g && (f.dataOffset = v.getInt32(Y), Y += 4), _ && V && (ee = {
      flags: St(c.subarray(Y, Y + 4))
    }, Y += 4, S && (ee.duration = v.getUint32(Y), Y += 4), L && (ee.size = v.getUint32(Y), Y += 4), F && (f.version === 1 ? ee.compositionTimeOffset = v.getInt32(Y) : ee.compositionTimeOffset = v.getUint32(Y), Y += 4), f.samples.push(ee), V--); V--; )
      ee = {}, S && (ee.duration = v.getUint32(Y), Y += 4), L && (ee.size = v.getUint32(Y), Y += 4), R && (ee.flags = St(c.subarray(Y, Y + 4)), Y += 4), F && (f.version === 1 ? ee.compositionTimeOffset = v.getInt32(Y) : ee.compositionTimeOffset = v.getUint32(Y), Y += 4), f.samples.push(ee);
    return f;
  }, Te = Ve, Ne = function(c) {
    var f = new DataView(c.buffer, c.byteOffset, c.byteLength), v = {
      version: c[0],
      flags: new Uint8Array(c.subarray(1, 4)),
      trackId: f.getUint32(4)
    }, g = v.flags[2] & 1, _ = v.flags[2] & 2, S = v.flags[2] & 8, L = v.flags[2] & 16, R = v.flags[2] & 32, F = v.flags[0] & 65536, V = v.flags[0] & 131072, Y;
    return Y = 8, g && (Y += 4, v.baseDataOffset = f.getUint32(12), Y += 4), _ && (v.sampleDescriptionIndex = f.getUint32(Y), Y += 4), S && (v.defaultSampleDuration = f.getUint32(Y), Y += 4), L && (v.defaultSampleSize = f.getUint32(Y), Y += 4), R && (v.defaultSampleFlags = f.getUint32(Y)), F && (v.durationIsEmpty = !0), !g && V && (v.baseDataOffsetIsMoof = !0), v;
  }, Ee = Ne, Be = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, ht;
  typeof window < "u" ? ht = window : typeof Be < "u" ? ht = Be : typeof self < "u" ? ht = self : ht = {};
  var _t = ht, ni = Hn.discardEmulationPreventionBytes, Vt = kr.CaptionStream, Yt = function(c, f) {
    for (var v = c, g = 0; g < f.length; g++) {
      var _ = f[g];
      if (v < _.size)
        return _;
      v -= _.size;
    }
    return null;
  }, Mt = function(c, f, v) {
    var g = new DataView(c.buffer, c.byteOffset, c.byteLength), _ = {
      logs: [],
      seiNals: []
    }, S, L, R, F;
    for (L = 0; L + 4 < c.length; L += R)
      if (R = g.getUint32(L), L += 4, !(R <= 0))
        switch (c[L] & 31) {
          case 6:
            var V = c.subarray(L + 1, L + 1 + R), Y = Yt(L, f);
            if (S = {
              nalUnitType: "sei_rbsp",
              size: R,
              data: V,
              escapedRBSP: ni(V),
              trackId: v
            }, Y)
              S.pts = Y.pts, S.dts = Y.dts, F = Y;
            else if (F)
              S.pts = F.pts, S.dts = F.dts;
            else {
              _.logs.push({
                level: "warn",
                message: "We've encountered a nal unit without data at " + L + " for trackId " + v + ". See mux.js#223."
              });
              break;
            }
            _.seiNals.push(S);
            break;
        }
    return _;
  }, Bt = function(c, f, v) {
    var g = f, _ = v.defaultSampleDuration || 0, S = v.defaultSampleSize || 0, L = v.trackId, R = [];
    return c.forEach(function(F) {
      var V = Te(F), Y = V.samples;
      Y.forEach(function(ee) {
        ee.duration === void 0 && (ee.duration = _), ee.size === void 0 && (ee.size = S), ee.trackId = L, ee.dts = g, ee.compositionTimeOffset === void 0 && (ee.compositionTimeOffset = 0), typeof g == "bigint" ? (ee.pts = g + _t.BigInt(ee.compositionTimeOffset), g += _t.BigInt(ee.duration)) : (ee.pts = g + ee.compositionTimeOffset, g += ee.duration);
      }), R = R.concat(Y);
    }), R;
  }, Ji = function(c, f) {
    var v = ge(c, ["moof", "traf"]), g = ge(c, ["mdat"]), _ = {}, S = [];
    return g.forEach(function(L, R) {
      var F = v[R];
      S.push({
        mdat: L,
        traf: F
      });
    }), S.forEach(function(L) {
      var R = L.mdat, F = L.traf, V = ge(F, ["tfhd"]), Y = Ee(V[0]), ee = Y.trackId, Ce = ge(F, ["tfdt"]), oe = Ce.length > 0 ? Xe(Ce[0]).baseMediaDecodeTime : 0, je = ge(F, ["trun"]), We, Ht;
      f === ee && je.length > 0 && (We = Bt(je, oe, Y), Ht = Mt(R, We, ee), _[ee] || (_[ee] = {
        seiNals: [],
        logs: []
      }), _[ee].seiNals = _[ee].seiNals.concat(Ht.seiNals), _[ee].logs = _[ee].logs.concat(Ht.logs));
    }), _;
  }, pn = function(c, f, v) {
    var g;
    if (f === null)
      return null;
    g = Ji(c, f);
    var _ = g[f] || {};
    return {
      seiNals: _.seiNals,
      logs: _.logs,
      timescale: v
    };
  }, vi = function() {
    var c = !1, f, v, g, _, S, L;
    this.isInitialized = function() {
      return c;
    }, this.init = function(R) {
      f = new Vt(), c = !0, L = R ? R.isPartial : !1, f.on("data", function(F) {
        F.startTime = F.startPts / _, F.endTime = F.endPts / _, S.captions.push(F), S.captionStreams[F.stream] = !0;
      }), f.on("log", function(F) {
        S.logs.push(F);
      });
    }, this.isNewInit = function(R, F) {
      return R && R.length === 0 || F && typeof F == "object" && Object.keys(F).length === 0 ? !1 : g !== R[0] || _ !== F[g];
    }, this.parse = function(R, F, V) {
      var Y;
      if (this.isInitialized()) {
        if (!F || !V)
          return null;
        if (this.isNewInit(F, V))
          g = F[0], _ = V[g];
        else if (g === null || !_)
          return v.push(R), null;
      } else
        return null;
      for (; v.length > 0; ) {
        var ee = v.shift();
        this.parse(ee, F, V);
      }
      return Y = pn(R, g, _), Y && Y.logs && (S.logs = S.logs.concat(Y.logs)), Y === null || !Y.seiNals ? S.logs.length ? {
        logs: S.logs,
        captions: [],
        captionStreams: []
      } : null : (this.pushNals(Y.seiNals), this.flushStream(), S);
    }, this.pushNals = function(R) {
      if (!this.isInitialized() || !R || R.length === 0)
        return null;
      R.forEach(function(F) {
        f.push(F);
      });
    }, this.flushStream = function() {
      if (!this.isInitialized())
        return null;
      L ? f.partialFlush() : f.flush();
    }, this.clearParsedCaptions = function() {
      S.captions = [], S.captionStreams = {}, S.logs = [];
    }, this.resetCaptionStream = function() {
      if (!this.isInitialized())
        return null;
      f.reset();
    }, this.clearAllCaptions = function() {
      this.clearParsedCaptions(), this.resetCaptionStream();
    }, this.reset = function() {
      v = [], g = null, _ = null, S ? this.clearParsedCaptions() : S = {
        captions: [],
        captionStreams: {},
        logs: []
      }, this.resetCaptionStream();
    }, this.reset();
  }, Pi = vi, Yi = we.toUnsigned, er = we.toHexString, Fu = r.getUint64, Ns, Rs, tr, ir, ph, ju;
  Ns = function(c) {
    var f = {}, v = ge(c, ["moov", "trak"]);
    return v.reduce(function(g, _) {
      var S, L, R, F, V;
      return S = ge(_, ["tkhd"])[0], !S || (L = S[0], R = L === 0 ? 12 : 20, F = Yi(S[R] << 24 | S[R + 1] << 16 | S[R + 2] << 8 | S[R + 3]), V = ge(_, ["mdia", "mdhd"])[0], !V) ? null : (L = V[0], R = L === 0 ? 12 : 20, g[F] = Yi(V[R] << 24 | V[R + 1] << 16 | V[R + 2] << 8 | V[R + 3]), g);
    }, f);
  }, Rs = function(c, f) {
    var v;
    v = ge(f, ["moof", "traf"]);
    var g = v.reduce(function(_, S) {
      var L = ge(S, ["tfhd"])[0], R = Yi(L[4] << 24 | L[5] << 16 | L[6] << 8 | L[7]), F = c[R] || 9e4, V = ge(S, ["tfdt"])[0], Y = new DataView(V.buffer, V.byteOffset, V.byteLength), ee;
      V[0] === 1 ? ee = Fu(V.subarray(4, 12)) : ee = Y.getUint32(4);
      var Ce;
      return typeof ee == "bigint" ? Ce = ee / _t.BigInt(F) : typeof ee == "number" && !isNaN(ee) && (Ce = ee / F), Ce < Number.MAX_SAFE_INTEGER && (Ce = Number(Ce)), Ce < _ && (_ = Ce), _;
    }, 1 / 0);
    return typeof g == "bigint" || isFinite(g) ? g : 0;
  }, tr = function(c, f) {
    var v = ge(f, ["moof", "traf"]), g = 0, _ = 0, S;
    if (v && v.length) {
      var L = ge(v[0], ["tfhd"])[0], R = ge(v[0], ["trun"])[0], F = ge(v[0], ["tfdt"])[0];
      if (L) {
        var V = Ee(L);
        S = V.trackId;
      }
      if (F) {
        var Y = Xe(F);
        g = Y.baseMediaDecodeTime;
      }
      if (R) {
        var ee = Te(R);
        ee.samples && ee.samples.length && (_ = ee.samples[0].compositionTimeOffset || 0);
      }
    }
    var Ce = c[S] || 9e4;
    typeof g == "bigint" && (_ = _t.BigInt(_), Ce = _t.BigInt(Ce));
    var oe = (g + _) / Ce;
    return typeof oe == "bigint" && oe < Number.MAX_SAFE_INTEGER && (oe = Number(oe)), oe;
  }, ir = function(c) {
    var f = ge(c, ["moov", "trak"]), v = [];
    return f.forEach(function(g) {
      var _ = ge(g, ["mdia", "hdlr"]), S = ge(g, ["tkhd"]);
      _.forEach(function(L, R) {
        var F = ke(L.subarray(8, 12)), V = S[R], Y, ee, Ce;
        F === "vide" && (Y = new DataView(V.buffer, V.byteOffset, V.byteLength), ee = Y.getUint8(0), Ce = ee === 0 ? Y.getUint32(12) : Y.getUint32(20), v.push(Ce));
      });
    }), v;
  }, ju = function(c) {
    var f = c[0], v = f === 0 ? 12 : 20;
    return Yi(c[v] << 24 | c[v + 1] << 16 | c[v + 2] << 8 | c[v + 3]);
  }, ph = function(c) {
    var f = ge(c, ["moov", "trak"]), v = [];
    return f.forEach(function(g) {
      var _ = {}, S = ge(g, ["tkhd"])[0], L, R;
      S && (L = new DataView(S.buffer, S.byteOffset, S.byteLength), R = L.getUint8(0), _.id = R === 0 ? L.getUint32(12) : L.getUint32(20));
      var F = ge(g, ["mdia", "hdlr"])[0];
      if (F) {
        var V = ke(F.subarray(8, 12));
        V === "vide" ? _.type = "video" : V === "soun" ? _.type = "audio" : _.type = V;
      }
      var Y = ge(g, ["mdia", "minf", "stbl", "stsd"])[0];
      if (Y) {
        var ee = Y.subarray(8);
        _.codec = ke(ee.subarray(4, 8));
        var Ce = ge(ee, [_.codec])[0], oe, je;
        Ce && (/^[asm]vc[1-9]$/i.test(_.codec) ? (oe = Ce.subarray(78), je = ke(oe.subarray(4, 8)), je === "avcC" && oe.length > 11 ? (_.codec += ".", _.codec += er(oe[9]), _.codec += er(oe[10]), _.codec += er(oe[11])) : _.codec = "avc1.4d400d") : /^mp4[a,v]$/i.test(_.codec) ? (oe = Ce.subarray(28), je = ke(oe.subarray(4, 8)), je === "esds" && oe.length > 20 && oe[19] !== 0 ? (_.codec += "." + er(oe[19]), _.codec += "." + er(oe[20] >>> 2 & 63).replace(/^0/, "")) : _.codec = "mp4a.40.2") : _.codec = _.codec.toLowerCase());
      }
      var We = ge(g, ["mdia", "mdhd"])[0];
      We && (_.timescale = ju(We)), v.push(_);
    }), v;
  };
  var fh = {
    findBox: ge,
    parseType: ke,
    timescale: Ns,
    startTime: Rs,
    compositionStartTime: tr,
    videoTrackIds: ir,
    tracks: ph,
    getTimescaleFromMediaHeader: ju
  }, mh = function(c) {
    var f = c[1] & 31;
    return f <<= 8, f |= c[2], f;
  }, Xa = function(c) {
    return !!(c[1] & 64);
  }, Qa = function(c) {
    var f = 0;
    return (c[3] & 48) >>> 4 > 1 && (f += c[4] + 1), f;
  }, r_ = function(c, f) {
    var v = mh(c);
    return v === 0 ? "pat" : v === f ? "pmt" : f ? "pes" : null;
  }, s_ = function(c) {
    var f = Xa(c), v = 4 + Qa(c);
    return f && (v += c[v] + 1), (c[v + 10] & 31) << 8 | c[v + 11];
  }, a_ = function(c) {
    var f = {}, v = Xa(c), g = 4 + Qa(c);
    if (v && (g += c[g] + 1), !!(c[g + 5] & 1)) {
      var _, S, L;
      _ = (c[g + 1] & 15) << 8 | c[g + 2], S = 3 + _ - 4, L = (c[g + 10] & 15) << 8 | c[g + 11];
      for (var R = 12 + L; R < S; ) {
        var F = g + R;
        f[(c[F + 1] & 31) << 8 | c[F + 2]] = c[F], R += ((c[F + 3] & 15) << 8 | c[F + 4]) + 5;
      }
      return f;
    }
  }, o_ = function(c, f) {
    var v = mh(c), g = f[v];
    switch (g) {
      case qt.H264_STREAM_TYPE:
        return "video";
      case qt.ADTS_STREAM_TYPE:
        return "audio";
      case qt.METADATA_STREAM_TYPE:
        return "timed-metadata";
      default:
        return null;
    }
  }, u_ = function(c) {
    var f = Xa(c);
    if (!f)
      return null;
    var v = 4 + Qa(c);
    if (v >= c.byteLength)
      return null;
    var g = null, _;
    return _ = c[v + 7], _ & 192 && (g = {}, g.pts = (c[v + 9] & 14) << 27 | (c[v + 10] & 255) << 20 | (c[v + 11] & 254) << 12 | (c[v + 12] & 255) << 5 | (c[v + 13] & 254) >>> 3, g.pts *= 4, g.pts += (c[v + 13] & 6) >>> 1, g.dts = g.pts, _ & 64 && (g.dts = (c[v + 14] & 14) << 27 | (c[v + 15] & 255) << 20 | (c[v + 16] & 254) << 12 | (c[v + 17] & 255) << 5 | (c[v + 18] & 254) >>> 3, g.dts *= 4, g.dts += (c[v + 18] & 6) >>> 1)), g;
  }, qu = function(c) {
    switch (c) {
      case 5:
        return "slice_layer_without_partitioning_rbsp_idr";
      case 6:
        return "sei_rbsp";
      case 7:
        return "seq_parameter_set_rbsp";
      case 8:
        return "pic_parameter_set_rbsp";
      case 9:
        return "access_unit_delimiter_rbsp";
      default:
        return null;
    }
  }, l_ = function(c) {
    for (var f = 4 + Qa(c), v = c.subarray(f), g = 0, _ = 0, S = !1, L; _ < v.byteLength - 3; _++)
      if (v[_ + 2] === 1) {
        g = _ + 5;
        break;
      }
    for (; g < v.byteLength; )
      switch (v[g]) {
        case 0:
          if (v[g - 1] !== 0) {
            g += 2;
            break;
          } else if (v[g - 2] !== 0) {
            g++;
            break;
          }
          _ + 3 !== g - 2 && (L = qu(v[_ + 3] & 31), L === "slice_layer_without_partitioning_rbsp_idr" && (S = !0));
          do
            g++;
          while (v[g] !== 1 && g < v.length);
          _ = g - 2, g += 3;
          break;
        case 1:
          if (v[g - 1] !== 0 || v[g - 2] !== 0) {
            g += 3;
            break;
          }
          L = qu(v[_ + 3] & 31), L === "slice_layer_without_partitioning_rbsp_idr" && (S = !0), _ = g - 2, g += 3;
          break;
        default:
          g += 3;
          break;
      }
    return v = v.subarray(_), g -= _, _ = 0, v && v.byteLength > 3 && (L = qu(v[_ + 3] & 31), L === "slice_layer_without_partitioning_rbsp_idr" && (S = !0)), S;
  }, c_ = {
    parseType: r_,
    parsePat: s_,
    parsePmt: a_,
    parsePayloadUnitStartIndicator: Xa,
    parsePesType: o_,
    parsePesTime: u_,
    videoPacketContainsKeyFrame: l_
  }, Rr = As.handleRollover, lt = {};
  lt.ts = c_, lt.aac = Lr;
  var nr = de.ONE_SECOND_IN_TS, oi = 188, $i = 71, d_ = function(c, f) {
    for (var v = 0, g = oi, _, S; g < c.byteLength; ) {
      if (c[v] === $i && c[g] === $i) {
        switch (_ = c.subarray(v, g), S = lt.ts.parseType(_, f.pid), S) {
          case "pat":
            f.pid = lt.ts.parsePat(_);
            break;
          case "pmt":
            var L = lt.ts.parsePmt(_);
            f.table = f.table || {}, Object.keys(L).forEach(function(R) {
              f.table[R] = L[R];
            });
            break;
        }
        v += oi, g += oi;
        continue;
      }
      v++, g++;
    }
  }, gh = function(c, f, v) {
    for (var g = 0, _ = oi, S, L, R, F, V, Y = !1; _ <= c.byteLength; ) {
      if (c[g] === $i && (c[_] === $i || _ === c.byteLength)) {
        switch (S = c.subarray(g, _), L = lt.ts.parseType(S, f.pid), L) {
          case "pes":
            R = lt.ts.parsePesType(S, f.table), F = lt.ts.parsePayloadUnitStartIndicator(S), R === "audio" && F && (V = lt.ts.parsePesTime(S), V && (V.type = "audio", v.audio.push(V), Y = !0));
            break;
        }
        if (Y)
          break;
        g += oi, _ += oi;
        continue;
      }
      g++, _++;
    }
    for (_ = c.byteLength, g = _ - oi, Y = !1; g >= 0; ) {
      if (c[g] === $i && (c[_] === $i || _ === c.byteLength)) {
        switch (S = c.subarray(g, _), L = lt.ts.parseType(S, f.pid), L) {
          case "pes":
            R = lt.ts.parsePesType(S, f.table), F = lt.ts.parsePayloadUnitStartIndicator(S), R === "audio" && F && (V = lt.ts.parsePesTime(S), V && (V.type = "audio", v.audio.push(V), Y = !0));
            break;
        }
        if (Y)
          break;
        g -= oi, _ -= oi;
        continue;
      }
      g--, _--;
    }
  }, h_ = function(c, f, v) {
    for (var g = 0, _ = oi, S, L, R, F, V, Y, ee, Ce, oe = !1, je = {
      data: [],
      size: 0
    }; _ < c.byteLength; ) {
      if (c[g] === $i && c[_] === $i) {
        switch (S = c.subarray(g, _), L = lt.ts.parseType(S, f.pid), L) {
          case "pes":
            if (R = lt.ts.parsePesType(S, f.table), F = lt.ts.parsePayloadUnitStartIndicator(S), R === "video" && (F && !oe && (V = lt.ts.parsePesTime(S), V && (V.type = "video", v.video.push(V), oe = !0)), !v.firstKeyFrame)) {
              if (F && je.size !== 0) {
                for (Y = new Uint8Array(je.size), ee = 0; je.data.length; )
                  Ce = je.data.shift(), Y.set(Ce, ee), ee += Ce.byteLength;
                if (lt.ts.videoPacketContainsKeyFrame(Y)) {
                  var We = lt.ts.parsePesTime(Y);
                  We ? (v.firstKeyFrame = We, v.firstKeyFrame.type = "video") : console.warn("Failed to extract PTS/DTS from PES at first keyframe. This could be an unusual TS segment, or else mux.js did not parse your TS segment correctly. If you know your TS segments do contain PTS/DTS on keyframes please file a bug report! You can try ffprobe to double check for yourself.");
                }
                je.size = 0;
              }
              je.data.push(S), je.size += S.byteLength;
            }
            break;
        }
        if (oe && v.firstKeyFrame)
          break;
        g += oi, _ += oi;
        continue;
      }
      g++, _++;
    }
    for (_ = c.byteLength, g = _ - oi, oe = !1; g >= 0; ) {
      if (c[g] === $i && c[_] === $i) {
        switch (S = c.subarray(g, _), L = lt.ts.parseType(S, f.pid), L) {
          case "pes":
            R = lt.ts.parsePesType(S, f.table), F = lt.ts.parsePayloadUnitStartIndicator(S), R === "video" && F && (V = lt.ts.parsePesTime(S), V && (V.type = "video", v.video.push(V), oe = !0));
            break;
        }
        if (oe)
          break;
        g -= oi, _ -= oi;
        continue;
      }
      g--, _--;
    }
  }, p_ = function(c, f) {
    if (c.audio && c.audio.length) {
      var v = f;
      (typeof v > "u" || isNaN(v)) && (v = c.audio[0].dts), c.audio.forEach(function(S) {
        S.dts = Rr(S.dts, v), S.pts = Rr(S.pts, v), S.dtsTime = S.dts / nr, S.ptsTime = S.pts / nr;
      });
    }
    if (c.video && c.video.length) {
      var g = f;
      if ((typeof g > "u" || isNaN(g)) && (g = c.video[0].dts), c.video.forEach(function(S) {
        S.dts = Rr(S.dts, g), S.pts = Rr(S.pts, g), S.dtsTime = S.dts / nr, S.ptsTime = S.pts / nr;
      }), c.firstKeyFrame) {
        var _ = c.firstKeyFrame;
        _.dts = Rr(_.dts, g), _.pts = Rr(_.pts, g), _.dtsTime = _.dts / nr, _.ptsTime = _.pts / nr;
      }
    }
  }, f_ = function(c) {
    for (var f = !1, v = 0, g = null, _ = null, S = 0, L = 0, R; c.length - L >= 3; ) {
      var F = lt.aac.parseType(c, L);
      switch (F) {
        case "timed-metadata":
          if (c.length - L < 10) {
            f = !0;
            break;
          }
          if (S = lt.aac.parseId3TagSize(c, L), S > c.length) {
            f = !0;
            break;
          }
          _ === null && (R = c.subarray(L, L + S), _ = lt.aac.parseAacTimestamp(R)), L += S;
          break;
        case "audio":
          if (c.length - L < 7) {
            f = !0;
            break;
          }
          if (S = lt.aac.parseAdtsSize(c, L), S > c.length) {
            f = !0;
            break;
          }
          g === null && (R = c.subarray(L, L + S), g = lt.aac.parseSampleRate(R)), v++, L += S;
          break;
        default:
          L++;
          break;
      }
      if (f)
        return null;
    }
    if (g === null || _ === null)
      return null;
    var V = nr / g, Y = {
      audio: [{
        type: "audio",
        dts: _,
        pts: _
      }, {
        type: "audio",
        dts: _ + v * 1024 * V,
        pts: _ + v * 1024 * V
      }]
    };
    return Y;
  }, m_ = function(c) {
    var f = {
      pid: null,
      table: null
    }, v = {};
    d_(c, f);
    for (var g in f.table)
      if (f.table.hasOwnProperty(g)) {
        var _ = f.table[g];
        switch (_) {
          case qt.H264_STREAM_TYPE:
            v.video = [], h_(c, f, v), v.video.length === 0 && delete v.video;
            break;
          case qt.ADTS_STREAM_TYPE:
            v.audio = [], gh(c, f, v), v.audio.length === 0 && delete v.audio;
            break;
        }
      }
    return v;
  }, g_ = function(c, f) {
    var v = lt.aac.isLikelyAacData(c), g;
    return v ? g = f_(c) : g = m_(c), !g || !g.audio && !g.video ? null : (p_(g, f), g);
  }, v_ = {
    inspect: g_,
    parseAudioPes_: gh
  }, y_ = function(c, f) {
    f.on("data", function(v) {
      var g = v.initSegment;
      v.initSegment = {
        data: g.buffer,
        byteOffset: g.byteOffset,
        byteLength: g.byteLength
      };
      var _ = v.data;
      v.data = _.buffer, c.postMessage({
        action: "data",
        segment: v,
        byteOffset: _.byteOffset,
        byteLength: _.byteLength
      }, [v.data]);
    }), f.on("done", function(v) {
      c.postMessage({
        action: "done"
      });
    }), f.on("gopInfo", function(v) {
      c.postMessage({
        action: "gopInfo",
        gopInfo: v
      });
    }), f.on("videoSegmentTimingInfo", function(v) {
      var g = {
        start: {
          decode: de.videoTsToSeconds(v.start.dts),
          presentation: de.videoTsToSeconds(v.start.pts)
        },
        end: {
          decode: de.videoTsToSeconds(v.end.dts),
          presentation: de.videoTsToSeconds(v.end.pts)
        },
        baseMediaDecodeTime: de.videoTsToSeconds(v.baseMediaDecodeTime)
      };
      v.prependedContentDuration && (g.prependedContentDuration = de.videoTsToSeconds(v.prependedContentDuration)), c.postMessage({
        action: "videoSegmentTimingInfo",
        videoSegmentTimingInfo: g
      });
    }), f.on("audioSegmentTimingInfo", function(v) {
      var g = {
        start: {
          decode: de.videoTsToSeconds(v.start.dts),
          presentation: de.videoTsToSeconds(v.start.pts)
        },
        end: {
          decode: de.videoTsToSeconds(v.end.dts),
          presentation: de.videoTsToSeconds(v.end.pts)
        },
        baseMediaDecodeTime: de.videoTsToSeconds(v.baseMediaDecodeTime)
      };
      v.prependedContentDuration && (g.prependedContentDuration = de.videoTsToSeconds(v.prependedContentDuration)), c.postMessage({
        action: "audioSegmentTimingInfo",
        audioSegmentTimingInfo: g
      });
    }), f.on("id3Frame", function(v) {
      c.postMessage({
        action: "id3Frame",
        id3Frame: v
      });
    }), f.on("caption", function(v) {
      c.postMessage({
        action: "caption",
        caption: v
      });
    }), f.on("trackinfo", function(v) {
      c.postMessage({
        action: "trackinfo",
        trackInfo: v
      });
    }), f.on("audioTimingInfo", function(v) {
      c.postMessage({
        action: "audioTimingInfo",
        audioTimingInfo: {
          start: de.videoTsToSeconds(v.start),
          end: de.videoTsToSeconds(v.end)
        }
      });
    }), f.on("videoTimingInfo", function(v) {
      c.postMessage({
        action: "videoTimingInfo",
        videoTimingInfo: {
          start: de.videoTsToSeconds(v.start),
          end: de.videoTsToSeconds(v.end)
        }
      });
    }), f.on("log", function(v) {
      c.postMessage({
        action: "log",
        log: v
      });
    });
  }, vh = /* @__PURE__ */ function() {
    function c(v, g) {
      this.options = g || {}, this.self = v, this.init();
    }
    var f = c.prototype;
    return f.init = function() {
      this.transmuxer && this.transmuxer.dispose(), this.transmuxer = new $.Transmuxer(this.options), y_(this.self, this.transmuxer);
    }, f.pushMp4Captions = function(v) {
      this.captionParser || (this.captionParser = new Pi(), this.captionParser.init());
      var g = new Uint8Array(v.data, v.byteOffset, v.byteLength), _ = this.captionParser.parse(g, v.trackIds, v.timescales);
      this.self.postMessage({
        action: "mp4Captions",
        captions: _ && _.captions || [],
        logs: _ && _.logs || [],
        data: g.buffer
      }, [g.buffer]);
    }, f.probeMp4StartTime = function(v) {
      var g = v.timescales, _ = v.data, S = fh.startTime(g, _);
      this.self.postMessage({
        action: "probeMp4StartTime",
        startTime: S,
        data: _
      }, [_.buffer]);
    }, f.probeMp4Tracks = function(v) {
      var g = v.data, _ = fh.tracks(g);
      this.self.postMessage({
        action: "probeMp4Tracks",
        tracks: _,
        data: g
      }, [g.buffer]);
    }, f.probeTs = function(v) {
      var g = v.data, _ = v.baseStartTime, S = typeof _ == "number" && !isNaN(_) ? _ * de.ONE_SECOND_IN_TS : void 0, L = v_.inspect(g, S), R = null;
      L && (R = {
        hasVideo: L.video && L.video.length === 2 || !1,
        hasAudio: L.audio && L.audio.length === 2 || !1
      }, R.hasVideo && (R.videoStart = L.video[0].ptsTime), R.hasAudio && (R.audioStart = L.audio[0].ptsTime)), this.self.postMessage({
        action: "probeTs",
        result: R,
        data: g
      }, [g.buffer]);
    }, f.clearAllMp4Captions = function() {
      this.captionParser && this.captionParser.clearAllCaptions();
    }, f.clearParsedMp4Captions = function() {
      this.captionParser && this.captionParser.clearParsedCaptions();
    }, f.push = function(v) {
      var g = new Uint8Array(v.data, v.byteOffset, v.byteLength);
      this.transmuxer.push(g);
    }, f.reset = function() {
      this.transmuxer.reset();
    }, f.setTimestampOffset = function(v) {
      var g = v.timestampOffset || 0;
      this.transmuxer.setBaseMediaDecodeTime(Math.round(de.secondsToVideoTs(g)));
    }, f.setAudioAppendStart = function(v) {
      this.transmuxer.setAudioAppendStart(Math.ceil(de.secondsToVideoTs(v.appendStart)));
    }, f.setRemux = function(v) {
      this.transmuxer.setRemux(v.remux);
    }, f.flush = function(v) {
      this.transmuxer.flush(), self.postMessage({
        action: "done",
        type: "transmuxed"
      });
    }, f.endTimeline = function() {
      this.transmuxer.endTimeline(), self.postMessage({
        action: "endedtimeline",
        type: "transmuxed"
      });
    }, f.alignGopsWith = function(v) {
      this.transmuxer.alignGopsWith(v.gopsToAlignWith.slice());
    }, c;
  }();
  self.onmessage = function(c) {
    if (c.data.action === "init" && c.data.options) {
      this.messageHandlers = new vh(self, c.data.options);
      return;
    }
    this.messageHandlers || (this.messageHandlers = new vh(self)), c.data && c.data.action && c.data.action !== "init" && this.messageHandlers[c.data.action] && this.messageHandlers[c.data.action](c.data);
  };
})), WS = Xv(HS), GS = function(e, i, n) {
  var t = e.data.segment, r = t.type, s = t.initSegment, a = t.captions, o = t.captionStreams, u = t.metadata, l = t.videoFrameDtsTime, d = t.videoFramePtsTime;
  i.buffer.push({
    captions: a,
    captionStreams: o,
    metadata: u
  });
  var p = e.data.segment.boxes || {
    data: e.data.segment.data
  }, h = {
    type: r,
    data: new Uint8Array(p.data, p.data.byteOffset, p.data.byteLength),
    initSegment: new Uint8Array(s.data, s.byteOffset, s.byteLength)
  };
  typeof l < "u" && (h.videoFrameDtsTime = l), typeof d < "u" && (h.videoFramePtsTime = d), n(h);
}, KS = function(e) {
  var i = e.transmuxedData, n = e.callback;
  i.buffer = [], n(i);
}, zS = function(e, i) {
  i.gopInfo = e.data.gopInfo;
}, Yv = function(e) {
  var i = e.transmuxer, n = e.bytes, t = e.audioAppendStart, r = e.gopsToAlignWith, s = e.remux, a = e.onData, o = e.onTrackInfo, u = e.onAudioTimingInfo, l = e.onVideoTimingInfo, d = e.onVideoSegmentTimingInfo, p = e.onAudioSegmentTimingInfo, h = e.onId3, m = e.onCaptions, y = e.onDone, T = e.onEndedTimeline, b = e.onTransmuxerLog, I = e.isEndOfTimeline, B = {
    buffer: []
  }, M = I, A = function(j) {
    i.currentTransmux === e && (j.data.action === "data" && GS(j, B, a), j.data.action === "trackinfo" && o(j.data.trackInfo), j.data.action === "gopInfo" && zS(j, B), j.data.action === "audioTimingInfo" && u(j.data.audioTimingInfo), j.data.action === "videoTimingInfo" && l(j.data.videoTimingInfo), j.data.action === "videoSegmentTimingInfo" && d(j.data.videoSegmentTimingInfo), j.data.action === "audioSegmentTimingInfo" && p(j.data.audioSegmentTimingInfo), j.data.action === "id3Frame" && h([j.data.id3Frame], j.data.id3Frame.dispatchType), j.data.action === "caption" && m(j.data.caption), j.data.action === "endedtimeline" && (M = !1, T()), j.data.action === "log" && b(j.data.log), j.data.type === "transmuxed" && (M || (i.onmessage = null, KS({
      transmuxedData: B,
      callback: y
    }), $v(i))));
  };
  if (i.onmessage = A, t && i.postMessage({
    action: "setAudioAppendStart",
    appendStart: t
  }), Array.isArray(r) && i.postMessage({
    action: "alignGopsWith",
    gopsToAlignWith: r
  }), typeof s < "u" && i.postMessage({
    action: "setRemux",
    remux: s
  }), n.byteLength) {
    var x = n instanceof ArrayBuffer ? n : n.buffer, P = n instanceof ArrayBuffer ? 0 : n.byteOffset;
    i.postMessage({
      action: "push",
      data: x,
      byteOffset: P,
      byteLength: n.byteLength
    }, [x]);
  }
  I && i.postMessage({
    action: "endTimeline"
  }), i.postMessage({
    action: "flush"
  });
}, $v = function(e) {
  e.currentTransmux = null, e.transmuxQueue.length && (e.currentTransmux = e.transmuxQueue.shift(), typeof e.currentTransmux == "function" ? e.currentTransmux() : Yv(e.currentTransmux));
}, Rp = function(e, i) {
  e.postMessage({
    action: i
  }), $v(e);
}, Zv = function(e, i) {
  if (!i.currentTransmux) {
    i.currentTransmux = e, Rp(i, e);
    return;
  }
  i.transmuxQueue.push(Rp.bind(null, i, e));
}, XS = function(e) {
  Zv("reset", e);
}, QS = function(e) {
  Zv("endTimeline", e);
}, ey = function(e) {
  if (!e.transmuxer.currentTransmux) {
    e.transmuxer.currentTransmux = e, Yv(e);
    return;
  }
  e.transmuxer.transmuxQueue.push(e);
}, JS = function(e) {
  var i = new WS();
  i.currentTransmux = null, i.transmuxQueue = [];
  var n = i.terminate;
  return i.terminate = function() {
    return i.currentTransmux = null, i.transmuxQueue.length = 0, n.call(i);
  }, i.postMessage({
    action: "init",
    options: e
  }), i;
}, dl = {
  reset: XS,
  endTimeline: QS,
  transmux: ey,
  createTransmuxer: JS
}, qo = function(e) {
  var i = e.transmuxer, n = e.endAction || e.action, t = e.callback, r = Mi({}, e, {
    endAction: null,
    transmuxer: null,
    callback: null
  }), s = function u(l) {
    l.data.action === n && (i.removeEventListener("message", u), l.data.data && (l.data.data = new Uint8Array(l.data.data, e.byteOffset || 0, e.byteLength || l.data.data.byteLength), e.data && (e.data = l.data.data)), t(l.data));
  };
  if (i.addEventListener("message", s), e.data) {
    var a = e.data instanceof ArrayBuffer;
    r.byteOffset = a ? 0 : e.data.byteOffset, r.byteLength = e.data.byteLength;
    var o = [a ? e.data : e.data.buffer];
    i.postMessage(r, o);
  } else
    i.postMessage(r);
}, sn = {
  FAILURE: 2,
  TIMEOUT: -101,
  ABORTED: -102
}, Lc = function(e) {
  e.forEach(function(i) {
    i.abort();
  });
}, YS = function(e) {
  return {
    bandwidth: e.bandwidth,
    bytesReceived: e.bytesReceived || 0,
    roundTripTime: e.roundTripTime || 0
  };
}, $S = function(e) {
  var i = e.target, n = Date.now() - i.requestTime, t = {
    bandwidth: 1 / 0,
    bytesReceived: 0,
    roundTripTime: n || 0
  };
  return t.bytesReceived = e.loaded, t.bandwidth = Math.floor(t.bytesReceived / t.roundTripTime * 8 * 1e3), t;
}, Xd = function(e, i) {
  return i.timedout ? {
    status: i.status,
    message: "HLS request timed-out at URL: " + i.uri,
    code: sn.TIMEOUT,
    xhr: i
  } : i.aborted ? {
    status: i.status,
    message: "HLS request aborted at URL: " + i.uri,
    code: sn.ABORTED,
    xhr: i
  } : e ? {
    status: i.status,
    message: "HLS request errored at URL: " + i.uri,
    code: sn.FAILURE,
    xhr: i
  } : i.responseType === "arraybuffer" && i.response.byteLength === 0 ? {
    status: i.status,
    message: "Empty HLS response at URL: " + i.uri,
    code: sn.FAILURE,
    xhr: i
  } : null;
}, Mp = function(e, i, n) {
  return function(t, r) {
    var s = r.response, a = Xd(t, r);
    if (a)
      return n(a, e);
    if (s.byteLength !== 16)
      return n({
        status: r.status,
        message: "Invalid HLS key at URL: " + r.uri,
        code: sn.FAILURE,
        xhr: r
      }, e);
    for (var o = new DataView(s), u = new Uint32Array([o.getUint32(0), o.getUint32(4), o.getUint32(8), o.getUint32(12)]), l = 0; l < i.length; l++)
      i[l].bytes = u;
    return n(null, e);
  };
}, ty = function(e, i) {
  var n = ld(e.map.bytes);
  if (n !== "mp4") {
    var t = e.map.resolvedUri || e.map.uri;
    return i({
      internal: !0,
      message: "Found unsupported " + (n || "unknown") + " container for initialization segment at URL: " + t,
      code: sn.FAILURE
    });
  }
  qo({
    action: "probeMp4Tracks",
    data: e.map.bytes,
    transmuxer: e.transmuxer,
    callback: function(r) {
      var s = r.tracks, a = r.data;
      return e.map.bytes = a, s.forEach(function(o) {
        e.map.tracks = e.map.tracks || {}, !e.map.tracks[o.type] && (e.map.tracks[o.type] = o, typeof o.id == "number" && o.timescale && (e.map.timescales = e.map.timescales || {}, e.map.timescales[o.id] = o.timescale));
      }), i(null);
    }
  });
}, ZS = function(e) {
  var i = e.segment, n = e.finishProcessingFn;
  return function(t, r) {
    var s = Xd(t, r);
    if (s)
      return n(s, i);
    var a = new Uint8Array(r.response);
    if (i.map.key)
      return i.map.encryptedBytes = a, n(null, i);
    i.map.bytes = a, ty(i, function(o) {
      if (o)
        return o.xhr = r, o.status = r.status, n(o, i);
      n(null, i);
    });
  };
}, ew = function(e) {
  var i = e.segment, n = e.finishProcessingFn, t = e.responseType;
  return function(r, s) {
    var a = Xd(r, s);
    if (a)
      return n(a, i);
    var o = t === "arraybuffer" || !s.responseText ? s.response : qS(s.responseText.substring(i.lastReachedChar || 0));
    return i.stats = YS(s), i.key ? i.encryptedBytes = new Uint8Array(o) : i.bytes = new Uint8Array(o), n(null, i);
  };
}, tw = function(e) {
  var i = e.segment, n = e.bytes, t = e.trackInfoFn, r = e.timingInfoFn, s = e.videoSegmentTimingInfoFn, a = e.audioSegmentTimingInfoFn, o = e.id3Fn, u = e.captionsFn, l = e.isEndOfTimeline, d = e.endedTimelineFn, p = e.dataFn, h = e.doneFn, m = e.onTransmuxerLog, y = i.map && i.map.tracks || {}, T = !!(y.audio && y.video), b = r.bind(null, i, "audio", "start"), I = r.bind(null, i, "audio", "end"), B = r.bind(null, i, "video", "start"), M = r.bind(null, i, "video", "end"), A = function() {
    return ey({
      bytes: n,
      transmuxer: i.transmuxer,
      audioAppendStart: i.audioAppendStart,
      gopsToAlignWith: i.gopsToAlignWith,
      remux: T,
      onData: function(x) {
        x.type = x.type === "combined" ? "video" : x.type, p(i, x);
      },
      onTrackInfo: function(x) {
        t && (T && (x.isMuxed = !0), t(i, x));
      },
      onAudioTimingInfo: function(x) {
        b && typeof x.start < "u" && (b(x.start), b = null), I && typeof x.end < "u" && I(x.end);
      },
      onVideoTimingInfo: function(x) {
        B && typeof x.start < "u" && (B(x.start), B = null), M && typeof x.end < "u" && M(x.end);
      },
      onVideoSegmentTimingInfo: function(x) {
        s(x);
      },
      onAudioSegmentTimingInfo: function(x) {
        a(x);
      },
      onId3: function(x, P) {
        o(i, x, P);
      },
      onCaptions: function(x) {
        u(i, [x]);
      },
      isEndOfTimeline: l,
      onEndedTimeline: function() {
        d();
      },
      onTransmuxerLog: m,
      onDone: function(x) {
        !h || (x.type = x.type === "combined" ? "video" : x.type, h(null, i, x));
      }
    });
  };
  qo({
    action: "probeTs",
    transmuxer: i.transmuxer,
    data: n,
    baseStartTime: i.baseStartTime,
    callback: function(x) {
      i.bytes = n = x.data;
      var P = x.result;
      P && (t(i, {
        hasAudio: P.hasAudio,
        hasVideo: P.hasVideo,
        isMuxed: T
      }), t = null, P.hasAudio && !T && b(P.audioStart), P.hasVideo && B(P.videoStart), b = null, B = null), A();
    }
  });
}, iy = function(e) {
  var i = e.segment, n = e.bytes, t = e.trackInfoFn, r = e.timingInfoFn, s = e.videoSegmentTimingInfoFn, a = e.audioSegmentTimingInfoFn, o = e.id3Fn, u = e.captionsFn, l = e.isEndOfTimeline, d = e.endedTimelineFn, p = e.dataFn, h = e.doneFn, m = e.onTransmuxerLog, y = new Uint8Array(n);
  if (b0(y)) {
    i.isFmp4 = !0;
    var T = i.map.tracks, b = {
      isFmp4: !0,
      hasVideo: !!T.video,
      hasAudio: !!T.audio
    };
    T.audio && T.audio.codec && T.audio.codec !== "enca" && (b.audioCodec = T.audio.codec), T.video && T.video.codec && T.video.codec !== "encv" && (b.videoCodec = T.video.codec), T.video && T.audio && (b.isMuxed = !0), t(i, b);
    var I = function(B) {
      p(i, {
        data: y,
        type: b.hasAudio && !b.isMuxed ? "audio" : "video"
      }), B && B.length && u(i, B), h(null, i, {});
    };
    qo({
      action: "probeMp4StartTime",
      timescales: i.map.timescales,
      data: y,
      transmuxer: i.transmuxer,
      callback: function(B) {
        var M = B.data, A = B.startTime;
        if (n = M.buffer, i.bytes = y = M, b.hasAudio && !b.isMuxed && r(i, "audio", "start", A), b.hasVideo && r(i, "video", "start", A), !T.video || !M.byteLength || !i.transmuxer) {
          I();
          return;
        }
        qo({
          action: "pushMp4Captions",
          endAction: "mp4Captions",
          transmuxer: i.transmuxer,
          data: y,
          timescales: i.map.timescales,
          trackIds: [T.video.id],
          callback: function(x) {
            n = x.data.buffer, i.bytes = y = x.data, x.logs.forEach(function(P) {
              m(G.mergeOptions(P, {
                stream: "mp4CaptionParser"
              }));
            }), I(x.captions);
          }
        });
      }
    });
    return;
  }
  if (!i.transmuxer) {
    h(null, i, {});
    return;
  }
  if (typeof i.container > "u" && (i.container = ld(y)), i.container !== "ts" && i.container !== "aac") {
    t(i, {
      hasAudio: !1,
      hasVideo: !1
    }), h(null, i, {});
    return;
  }
  tw({
    segment: i,
    bytes: n,
    trackInfoFn: t,
    timingInfoFn: r,
    videoSegmentTimingInfoFn: s,
    audioSegmentTimingInfoFn: a,
    id3Fn: o,
    captionsFn: u,
    isEndOfTimeline: l,
    endedTimelineFn: d,
    dataFn: p,
    doneFn: h,
    onTransmuxerLog: m
  });
}, ny = function(e, i) {
  var n = e.id, t = e.key, r = e.encryptedBytes, s = e.decryptionWorker, a = function u(l) {
    if (l.data.source === n) {
      s.removeEventListener("message", u);
      var d = l.data.decrypted;
      i(new Uint8Array(d.bytes, d.byteOffset, d.byteLength));
    }
  };
  s.addEventListener("message", a);
  var o;
  t.bytes.slice ? o = t.bytes.slice() : o = new Uint32Array(Array.prototype.slice.call(t.bytes)), s.postMessage(Vv({
    source: n,
    encrypted: r,
    key: o,
    iv: t.iv
  }), [r.buffer, o.buffer]);
}, iw = function(e) {
  var i = e.decryptionWorker, n = e.segment, t = e.trackInfoFn, r = e.timingInfoFn, s = e.videoSegmentTimingInfoFn, a = e.audioSegmentTimingInfoFn, o = e.id3Fn, u = e.captionsFn, l = e.isEndOfTimeline, d = e.endedTimelineFn, p = e.dataFn, h = e.doneFn, m = e.onTransmuxerLog;
  ny({
    id: n.requestId,
    key: n.key,
    encryptedBytes: n.encryptedBytes,
    decryptionWorker: i
  }, function(y) {
    n.bytes = y, iy({
      segment: n,
      bytes: n.bytes,
      trackInfoFn: t,
      timingInfoFn: r,
      videoSegmentTimingInfoFn: s,
      audioSegmentTimingInfoFn: a,
      id3Fn: o,
      captionsFn: u,
      isEndOfTimeline: l,
      endedTimelineFn: d,
      dataFn: p,
      doneFn: h,
      onTransmuxerLog: m
    });
  });
}, nw = function(e) {
  var i = e.activeXhrs, n = e.decryptionWorker, t = e.trackInfoFn, r = e.timingInfoFn, s = e.videoSegmentTimingInfoFn, a = e.audioSegmentTimingInfoFn, o = e.id3Fn, u = e.captionsFn, l = e.isEndOfTimeline, d = e.endedTimelineFn, p = e.dataFn, h = e.doneFn, m = e.onTransmuxerLog, y = 0, T = !1;
  return function(b, I) {
    if (!T) {
      if (b)
        return T = !0, Lc(i), h(b, I);
      if (y += 1, y === i.length) {
        var B = function() {
          if (I.encryptedBytes)
            return iw({
              decryptionWorker: n,
              segment: I,
              trackInfoFn: t,
              timingInfoFn: r,
              videoSegmentTimingInfoFn: s,
              audioSegmentTimingInfoFn: a,
              id3Fn: o,
              captionsFn: u,
              isEndOfTimeline: l,
              endedTimelineFn: d,
              dataFn: p,
              doneFn: h,
              onTransmuxerLog: m
            });
          iy({
            segment: I,
            bytes: I.bytes,
            trackInfoFn: t,
            timingInfoFn: r,
            videoSegmentTimingInfoFn: s,
            audioSegmentTimingInfoFn: a,
            id3Fn: o,
            captionsFn: u,
            isEndOfTimeline: l,
            endedTimelineFn: d,
            dataFn: p,
            doneFn: h,
            onTransmuxerLog: m
          });
        };
        if (I.endOfAllRequests = Date.now(), I.map && I.map.encryptedBytes && !I.map.bytes)
          return ny({
            decryptionWorker: n,
            id: I.requestId + "-init",
            encryptedBytes: I.map.encryptedBytes,
            key: I.map.key
          }, function(M) {
            I.map.bytes = M, ty(I, function(A) {
              if (A)
                return Lc(i), h(A, I);
              B();
            });
          });
        B();
      }
    }
  };
}, rw = function(e) {
  var i = e.loadendState, n = e.abortFn;
  return function(t) {
    var r = t.target;
    r.aborted && n && !i.calledAbortFn && (n(), i.calledAbortFn = !0);
  };
}, sw = function(e) {
  var i = e.segment, n = e.progressFn;
  return e.trackInfoFn, e.timingInfoFn, e.videoSegmentTimingInfoFn, e.audioSegmentTimingInfoFn, e.id3Fn, e.captionsFn, e.isEndOfTimeline, e.endedTimelineFn, e.dataFn, function(t) {
    var r = t.target;
    if (!r.aborted)
      return i.stats = G.mergeOptions(i.stats, $S(t)), !i.stats.firstBytesReceivedAt && i.stats.bytesReceived && (i.stats.firstBytesReceivedAt = Date.now()), n(t, i);
  };
}, aw = function(e) {
  var i = e.xhr, n = e.xhrOptions, t = e.decryptionWorker, r = e.segment, s = e.abortFn, a = e.progressFn, o = e.trackInfoFn, u = e.timingInfoFn, l = e.videoSegmentTimingInfoFn, d = e.audioSegmentTimingInfoFn, p = e.id3Fn, h = e.captionsFn, m = e.isEndOfTimeline, y = e.endedTimelineFn, T = e.dataFn, b = e.doneFn, I = e.onTransmuxerLog, B = [], M = nw({
    activeXhrs: B,
    decryptionWorker: t,
    trackInfoFn: o,
    timingInfoFn: u,
    videoSegmentTimingInfoFn: l,
    audioSegmentTimingInfoFn: d,
    id3Fn: p,
    captionsFn: h,
    isEndOfTimeline: m,
    endedTimelineFn: y,
    dataFn: T,
    doneFn: b,
    onTransmuxerLog: I
  });
  if (r.key && !r.key.bytes) {
    var A = [r.key];
    r.map && !r.map.bytes && r.map.key && r.map.key.resolvedUri === r.key.resolvedUri && A.push(r.map.key);
    var x = G.mergeOptions(n, {
      uri: r.key.resolvedUri,
      responseType: "arraybuffer"
    }), P = Mp(r, A, M), j = i(x, P);
    B.push(j);
  }
  if (r.map && !r.map.bytes) {
    var H = r.map.key && (!r.key || r.key.resolvedUri !== r.map.key.resolvedUri);
    if (H) {
      var D = G.mergeOptions(n, {
        uri: r.map.key.resolvedUri,
        responseType: "arraybuffer"
      }), O = Mp(r, [r.map.key], M), W = i(D, O);
      B.push(W);
    }
    var X = G.mergeOptions(n, {
      uri: r.map.resolvedUri,
      responseType: "arraybuffer",
      headers: xc(r.map)
    }), ie = ZS({
      segment: r,
      finishProcessingFn: M
    }), K = i(X, ie);
    B.push(K);
  }
  var Z = G.mergeOptions(n, {
    uri: r.part && r.part.resolvedUri || r.resolvedUri,
    responseType: "arraybuffer",
    headers: xc(r)
  }), te = ew({
    segment: r,
    finishProcessingFn: M,
    responseType: Z.responseType
  }), ue = i(Z, te);
  ue.addEventListener("progress", sw({
    segment: r,
    progressFn: a,
    trackInfoFn: o,
    timingInfoFn: u,
    videoSegmentTimingInfoFn: l,
    audioSegmentTimingInfoFn: d,
    id3Fn: p,
    captionsFn: h,
    isEndOfTimeline: m,
    endedTimelineFn: y,
    dataFn: T
  })), B.push(ue);
  var be = {};
  return B.forEach(function(he) {
    he.addEventListener("loadend", rw({
      loadendState: be,
      abortFn: s
    }));
  }), function() {
    return Lc(B);
  };
}, ow = zi("CodecUtils"), uw = function(e) {
  var i = e.attributes || {};
  if (i.CODECS)
    return en(i.CODECS);
}, ry = function(e, i) {
  var n = i.attributes || {};
  return e && e.mediaGroups && e.mediaGroups.AUDIO && n.AUDIO && e.mediaGroups.AUDIO[n.AUDIO];
}, lw = function(e, i) {
  if (!ry(e, i))
    return !0;
  var n = i.attributes || {}, t = e.mediaGroups.AUDIO[n.AUDIO];
  for (var r in t)
    if (!t[r].uri && !t[r].playlists)
      return !0;
  return !1;
}, Vo = function(e) {
  var i = {};
  return e.forEach(function(n) {
    var t = n.mediaType, r = n.type, s = n.details;
    i[t] = i[t] || [], i[t].push(Sm("" + r + s));
  }), Object.keys(i).forEach(function(n) {
    if (i[n].length > 1) {
      ow("multiple " + n + " codecs found as attributes: " + i[n].join(", ") + ". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs."), i[n] = null;
      return;
    }
    i[n] = i[n][0];
  }), i;
}, Bp = function(e) {
  var i = 0;
  return e.audio && i++, e.video && i++, i;
}, ia = function(e, i) {
  var n = i.attributes || {}, t = Vo(uw(i) || []);
  if (ry(e, i) && !t.audio && !lw(e, i)) {
    var r = Vo(kb(e, n.AUDIO) || []);
    r.audio && (t.audio = r.audio);
  }
  return t;
}, so = zi("PlaylistSelector"), Up = function(e) {
  if (!(!e || !e.playlist)) {
    var i = e.playlist;
    return JSON.stringify({
      id: i.id,
      bandwidth: e.bandwidth,
      width: e.width,
      height: e.height,
      codecs: i.attributes && i.attributes.CODECS || ""
    });
  }
}, Ho = function(e, i) {
  if (!e)
    return "";
  var n = q.getComputedStyle(e);
  return n ? n[i] : "";
}, ts = function(e, i) {
  var n = e.slice();
  e.sort(function(t, r) {
    var s = i(t, r);
    return s === 0 ? n.indexOf(t) - n.indexOf(r) : s;
  });
}, Qd = function(e, i) {
  var n, t;
  return e.attributes.BANDWIDTH && (n = e.attributes.BANDWIDTH), n = n || q.Number.MAX_VALUE, i.attributes.BANDWIDTH && (t = i.attributes.BANDWIDTH), t = t || q.Number.MAX_VALUE, n - t;
}, cw = function(e, i) {
  var n, t;
  return e.attributes.RESOLUTION && e.attributes.RESOLUTION.width && (n = e.attributes.RESOLUTION.width), n = n || q.Number.MAX_VALUE, i.attributes.RESOLUTION && i.attributes.RESOLUTION.width && (t = i.attributes.RESOLUTION.width), t = t || q.Number.MAX_VALUE, n === t && e.attributes.BANDWIDTH && i.attributes.BANDWIDTH ? e.attributes.BANDWIDTH - i.attributes.BANDWIDTH : n - t;
}, sy = function(e, i, n, t, r, s) {
  if (e) {
    var a = {
      bandwidth: i,
      width: n,
      height: t,
      limitRenditionByPlayerDimensions: r
    }, o = e.playlists;
    bi.isAudioOnly(e) && (o = s.getAudioTrackPlaylists_(), a.audioOnly = !0);
    var u = o.map(function(D) {
      var O, W = D.attributes && D.attributes.RESOLUTION && D.attributes.RESOLUTION.width, X = D.attributes && D.attributes.RESOLUTION && D.attributes.RESOLUTION.height;
      return O = D.attributes && D.attributes.BANDWIDTH, O = O || q.Number.MAX_VALUE, {
        bandwidth: O,
        width: W,
        height: X,
        playlist: D
      };
    });
    ts(u, function(D, O) {
      return D.bandwidth - O.bandwidth;
    }), u = u.filter(function(D) {
      return !bi.isIncompatible(D.playlist);
    });
    var l = u.filter(function(D) {
      return bi.isEnabled(D.playlist);
    });
    l.length || (l = u.filter(function(D) {
      return !bi.isDisabled(D.playlist);
    }));
    var d = l.filter(function(D) {
      return D.bandwidth * Kt.BANDWIDTH_VARIANCE < i;
    }), p = d[d.length - 1], h = d.filter(function(D) {
      return D.bandwidth === p.bandwidth;
    })[0];
    if (r === !1) {
      var m = h || l[0] || u[0];
      if (m && m.playlist) {
        var y = "sortedPlaylistReps";
        return h && (y = "bandwidthBestRep"), l[0] && (y = "enabledPlaylistReps"), so("choosing " + Up(m) + " using " + y + " with options", a), m.playlist;
      }
      return so("could not choose a playlist with options", a), null;
    }
    var T = d.filter(function(D) {
      return D.width && D.height;
    });
    ts(T, function(D, O) {
      return D.width - O.width;
    });
    var b = T.filter(function(D) {
      return D.width === n && D.height === t;
    });
    p = b[b.length - 1];
    var I = b.filter(function(D) {
      return D.bandwidth === p.bandwidth;
    })[0], B, M, A;
    I || (B = T.filter(function(D) {
      return D.width > n || D.height > t;
    }), M = B.filter(function(D) {
      return D.width === B[0].width && D.height === B[0].height;
    }), p = M[M.length - 1], A = M.filter(function(D) {
      return D.bandwidth === p.bandwidth;
    })[0]);
    var x;
    if (s.experimentalLeastPixelDiffSelector) {
      var P = T.map(function(D) {
        return D.pixelDiff = Math.abs(D.width - n) + Math.abs(D.height - t), D;
      });
      ts(P, function(D, O) {
        return D.pixelDiff === O.pixelDiff ? O.bandwidth - D.bandwidth : D.pixelDiff - O.pixelDiff;
      }), x = P[0];
    }
    var j = x || A || I || h || l[0] || u[0];
    if (j && j.playlist) {
      var H = "sortedPlaylistReps";
      return x ? H = "leastPixelDiffRep" : A ? H = "resolutionPlusOneRep" : I ? H = "resolutionBestRep" : h ? H = "bandwidthBestRep" : l[0] && (H = "enabledPlaylistReps"), so("choosing " + Up(j) + " using " + H + " with options", a), j.playlist;
    }
    return so("could not choose a playlist with options", a), null;
  }
}, Fp = function() {
  var e = this.useDevicePixelRatio && q.devicePixelRatio || 1;
  return sy(this.playlists.master, this.systemBandwidth, parseInt(Ho(this.tech_.el(), "width"), 10) * e, parseInt(Ho(this.tech_.el(), "height"), 10) * e, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);
}, dw = function(e) {
  var i = -1, n = -1;
  if (e < 0 || e > 1)
    throw new Error("Moving average bandwidth decay must be between 0 and 1.");
  return function() {
    var t = this.useDevicePixelRatio && q.devicePixelRatio || 1;
    return i < 0 && (i = this.systemBandwidth, n = this.systemBandwidth), this.systemBandwidth > 0 && this.systemBandwidth !== n && (i = e * this.systemBandwidth + (1 - e) * i, n = this.systemBandwidth), sy(this.playlists.master, i, parseInt(Ho(this.tech_.el(), "width"), 10) * t, parseInt(Ho(this.tech_.el(), "height"), 10) * t, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);
  };
}, hw = function(e) {
  var i = e.master, n = e.currentTime, t = e.bandwidth, r = e.duration, s = e.segmentDuration, a = e.timeUntilRebuffer, o = e.currentTimeline, u = e.syncController, l = i.playlists.filter(function(y) {
    return !bi.isIncompatible(y);
  }), d = l.filter(bi.isEnabled);
  d.length || (d = l.filter(function(y) {
    return !bi.isDisabled(y);
  }));
  var p = d.filter(bi.hasAttribute.bind(null, "BANDWIDTH")), h = p.map(function(y) {
    var T = u.getSyncPoint(y, r, o, n), b = T ? 1 : 2, I = bi.estimateSegmentRequestTime(s, t, y), B = I * b - a;
    return {
      playlist: y,
      rebufferingImpact: B
    };
  }), m = h.filter(function(y) {
    return y.rebufferingImpact <= 0;
  });
  return ts(m, function(y, T) {
    return Qd(T.playlist, y.playlist);
  }), m.length ? m[0] : (ts(h, function(y, T) {
    return y.rebufferingImpact - T.rebufferingImpact;
  }), h[0] || null);
}, pw = function() {
  var e = this, i = this.playlists.master.playlists.filter(bi.isEnabled);
  ts(i, function(t, r) {
    return Qd(t, r);
  });
  var n = i.filter(function(t) {
    return !!ia(e.playlists.master, t).video;
  });
  return n[0] || null;
}, fw = function(e) {
  var i = 0, n;
  return e.bytes && (n = new Uint8Array(e.bytes), e.segments.forEach(function(t) {
    n.set(t, i), i += t.byteLength;
  })), n;
}, mw = function(e, i, n) {
  if (!e[n]) {
    i.trigger({
      type: "usage",
      name: "vhs-608"
    }), i.trigger({
      type: "usage",
      name: "hls-608"
    });
    var t = n;
    /^cc708_/.test(n) && (t = "SERVICE" + n.split("_")[1]);
    var r = i.textTracks().getTrackById(t);
    if (r)
      e[n] = r;
    else {
      var s = i.options_.vhs && i.options_.vhs.captionServices || {}, a = n, o = n, u = !1, l = s[t];
      l && (a = l.label, o = l.language, u = l.default), e[n] = i.addRemoteTextTrack({
        kind: "captions",
        id: t,
        default: u,
        label: a,
        language: o
      }, !1).track;
    }
  }
}, gw = function(e) {
  var i = e.inbandTextTracks, n = e.captionArray, t = e.timestampOffset;
  if (n) {
    var r = q.WebKitDataCue || q.VTTCue;
    n.forEach(function(s) {
      var a = s.stream;
      i[a].addCue(new r(s.startTime + t, s.endTime + t, s.text));
    });
  }
}, vw = function(e) {
  Object.defineProperties(e.frame, {
    id: {
      get: function() {
        return G.log.warn("cue.frame.id is deprecated. Use cue.value.key instead."), e.value.key;
      }
    },
    value: {
      get: function() {
        return G.log.warn("cue.frame.value is deprecated. Use cue.value.data instead."), e.value.data;
      }
    },
    privateData: {
      get: function() {
        return G.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead."), e.value.data;
      }
    }
  });
}, yw = function(e) {
  var i = e.inbandTextTracks, n = e.metadataArray, t = e.timestampOffset, r = e.videoDuration;
  if (n) {
    var s = q.WebKitDataCue || q.VTTCue, a = i.metadataTrack_;
    if (a && (n.forEach(function(h) {
      var m = h.cueTime + t;
      typeof m != "number" || q.isNaN(m) || m < 0 || !(m < 1 / 0) || h.frames.forEach(function(y) {
        var T = new s(m, m, y.value || y.url || y.data || "");
        T.frame = y, T.value = y, vw(T), a.addCue(T);
      });
    }), !(!a.cues || !a.cues.length))) {
      for (var o = a.cues, u = [], l = 0; l < o.length; l++)
        o[l] && u.push(o[l]);
      var d = u.reduce(function(h, m) {
        var y = h[m.startTime] || [];
        return y.push(m), h[m.startTime] = y, h;
      }, {}), p = Object.keys(d).sort(function(h, m) {
        return Number(h) - Number(m);
      });
      p.forEach(function(h, m) {
        var y = d[h], T = Number(p[m + 1]) || r;
        y.forEach(function(b) {
          b.endTime = T;
        });
      });
    }
  }
}, _w = function(e, i, n) {
  e.metadataTrack_ || (e.metadataTrack_ = n.addRemoteTextTrack({
    kind: "metadata",
    label: "Timed Metadata"
  }, !1).track, e.metadataTrack_.inBandMetadataTrackDispatchType = i);
}, Qs = function(e, i, n) {
  var t, r;
  if (n && n.cues)
    for (t = n.cues.length; t--; )
      r = n.cues[t], r.startTime >= e && r.endTime <= i && n.removeCue(r);
}, bw = function(e) {
  var i = e.cues;
  if (i)
    for (var n = 0; n < i.length; n++) {
      for (var t = [], r = 0, s = 0; s < i.length; s++)
        i[n].startTime === i[s].startTime && i[n].endTime === i[s].endTime && i[n].text === i[s].text && (r++, r > 1 && t.push(i[s]));
      t.length && t.forEach(function(a) {
        return e.removeCue(a);
      });
    }
}, Tw = function(e, i, n) {
  if (typeof i > "u" || i === null || !e.length)
    return [];
  var t = Math.ceil((i - n + 3) * Io.ONE_SECOND_IN_TS), r;
  for (r = 0; r < e.length && !(e[r].pts > t); r++)
    ;
  return e.slice(r);
}, Ew = function(e, i, n) {
  if (!i.length)
    return e;
  if (n)
    return i.slice();
  var t = i[0].pts, r = 0;
  for (r; r < e.length && !(e[r].pts >= t); r++)
    ;
  return e.slice(0, r).concat(i);
}, Sw = function(e, i, n, t) {
  for (var r = Math.ceil((i - t) * Io.ONE_SECOND_IN_TS), s = Math.ceil((n - t) * Io.ONE_SECOND_IN_TS), a = e.slice(), o = e.length; o-- && !(e[o].pts <= s); )
    ;
  if (o === -1)
    return a;
  for (var u = o + 1; u-- && !(e[u].pts <= r); )
    ;
  return u = Math.max(u, 0), a.splice(u, o - u + 1), a;
}, ww = function(e, i) {
  if (!e && !i || !e && i || e && !i)
    return !1;
  if (e === i)
    return !0;
  var n = Object.keys(e).sort(), t = Object.keys(i).sort();
  if (n.length !== t.length)
    return !1;
  for (var r = 0; r < n.length; r++) {
    var s = n[r];
    if (s !== t[r] || e[s] !== i[s])
      return !1;
  }
  return !0;
}, ay = 22, kw = function(e, i, n) {
  i = i || [];
  for (var t = [], r = 0, s = 0; s < i.length; s++) {
    var a = i[s];
    if (e === a.timeline && (t.push(s), r += a.duration, r > n))
      return s;
  }
  return t.length === 0 ? 0 : t[t.length - 1];
}, Vs = 1, Cw = 500, jp = function(e) {
  return typeof e == "number" && isFinite(e);
}, ao = 1 / 60, Aw = function(e, i, n) {
  return e !== "main" || !i || !n ? null : !n.hasAudio && !n.hasVideo ? "Neither audio nor video found in segment." : i.hasVideo && !n.hasVideo ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest." : !i.hasVideo && n.hasVideo ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest." : null;
}, Iw = function(e, i, n) {
  var t = i - Kt.BACK_BUFFER_LENGTH;
  e.length && (t = Math.max(t, e.start(0)));
  var r = i - n;
  return Math.min(r, t);
}, Hr = function(e) {
  var i = e.startOfSegment, n = e.duration, t = e.segment, r = e.part, s = e.playlist, a = s.mediaSequence, o = s.id, u = s.segments, l = u === void 0 ? [] : u, d = e.mediaIndex, p = e.partIndex, h = e.timeline, m = l.length - 1, y = "mediaIndex/partIndex increment";
  e.getMediaInfoForTime ? y = "getMediaInfoForTime (" + e.getMediaInfoForTime + ")" : e.isSyncRequest && (y = "getSyncSegmentCandidate (isSyncRequest)"), e.independent && (y += " with independent " + e.independent);
  var T = typeof p == "number", b = e.segment.uri ? "segment" : "pre-segment", I = T ? Iv({
    preloadSegment: t
  }) - 1 : 0;
  return b + " [" + (a + d) + "/" + (a + m) + "]" + (T ? " part [" + p + "/" + I + "]" : "") + (" segment start/end [" + t.start + " => " + t.end + "]") + (T ? " part start/end [" + r.start + " => " + r.end + "]" : "") + (" startOfSegment [" + i + "]") + (" duration [" + n + "]") + (" timeline [" + h + "]") + (" selected by [" + y + "]") + (" playlist [" + o + "]");
}, qp = function(e) {
  return e + "TimingInfo";
}, Dw = function(e) {
  var i = e.segmentTimeline, n = e.currentTimeline, t = e.startOfSegment, r = e.buffered, s = e.overrideCheck;
  return !s && i === n ? null : i < n ? t : r.length ? r.end(r.length - 1) : t;
}, Vp = function(e) {
  var i = e.timelineChangeController, n = e.currentTimeline, t = e.segmentTimeline, r = e.loaderType, s = e.audioDisabled;
  if (n === t)
    return !1;
  if (r === "audio") {
    var a = i.lastTimelineChange({
      type: "main"
    });
    return !a || a.to !== t;
  }
  if (r === "main" && s) {
    var o = i.pendingTimelineChange({
      type: "audio"
    });
    return !(o && o.to === t);
  }
  return !1;
}, xw = function(e) {
  var i = 0;
  return ["video", "audio"].forEach(function(n) {
    var t = e[n + "TimingInfo"];
    if (t) {
      var r = t.start, s = t.end, a;
      typeof r == "bigint" || typeof s == "bigint" ? a = q.BigInt(s) - q.BigInt(r) : typeof r == "number" && typeof s == "number" && (a = s - r), typeof a < "u" && a > i && (i = a);
    }
  }), typeof i == "bigint" && i < Number.MAX_SAFE_INTEGER && (i = Number(i)), i;
}, Hp = function(e) {
  var i = e.segmentDuration, n = e.maxDuration;
  return i ? Math.round(i) > n + jn : !1;
}, Pw = function(e, i) {
  if (i !== "hls")
    return null;
  var n = xw({
    audioTimingInfo: e.audioTimingInfo,
    videoTimingInfo: e.videoTimingInfo
  });
  if (!n)
    return null;
  var t = e.playlist.targetDuration, r = Hp({
    segmentDuration: n,
    maxDuration: t * 2
  }), s = Hp({
    segmentDuration: n,
    maxDuration: t
  }), a = "Segment with index " + e.mediaIndex + " " + ("from playlist " + e.playlist.id + " ") + ("has a duration of " + n + " ") + ("when the reported duration is " + e.duration + " ") + ("and the target duration is " + t + ". ") + "For HLS content, a duration in excess of the target duration may result in playback issues. See the HLS specification section on EXT-X-TARGETDURATION for more details: https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1";
  return r || s ? {
    severity: r ? "warn" : "info",
    message: a
  } : null;
}, Oc = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    if (s = e.call(this) || this, !t)
      throw new TypeError("Initialization settings are required");
    if (typeof t.currentTime != "function")
      throw new TypeError("No currentTime getter specified");
    if (!t.mediaSource)
      throw new TypeError("No MediaSource specified");
    return s.bandwidth = t.bandwidth, s.throughput = {
      rate: 0,
      count: 0
    }, s.roundTrip = NaN, s.resetStats_(), s.mediaIndex = null, s.partIndex = null, s.hasPlayed_ = t.hasPlayed, s.currentTime_ = t.currentTime, s.seekable_ = t.seekable, s.seeking_ = t.seeking, s.duration_ = t.duration, s.mediaSource_ = t.mediaSource, s.vhs_ = t.vhs, s.loaderType_ = t.loaderType, s.currentMediaInfo_ = void 0, s.startingMediaInfo_ = void 0, s.segmentMetadataTrack_ = t.segmentMetadataTrack, s.goalBufferLength_ = t.goalBufferLength, s.sourceType_ = t.sourceType, s.sourceUpdater_ = t.sourceUpdater, s.inbandTextTracks_ = t.inbandTextTracks, s.state_ = "INIT", s.timelineChangeController_ = t.timelineChangeController, s.shouldSaveSegmentTimingInfo_ = !0, s.parse708captions_ = t.parse708captions, s.useDtsForTimestampOffset_ = t.useDtsForTimestampOffset, s.captionServices_ = t.captionServices, s.experimentalExactManifestTimings = t.experimentalExactManifestTimings, s.checkBufferTimeout_ = null, s.error_ = void 0, s.currentTimeline_ = -1, s.pendingSegment_ = null, s.xhrOptions_ = null, s.pendingSegments_ = [], s.audioDisabled_ = !1, s.isPendingTimestampOffset_ = !1, s.gopBuffer_ = [], s.timeMapping_ = 0, s.safeAppend_ = G.browser.IE_VERSION >= 11, s.appendInitSegment_ = {
      audio: !0,
      video: !0
    }, s.playlistOfLastInitSegment_ = {
      audio: null,
      video: null
    }, s.callQueue_ = [], s.loadQueue_ = [], s.metadataQueue_ = {
      id3: [],
      caption: []
    }, s.waitingOnRemove_ = !1, s.quotaExceededErrorRetryTimeout_ = null, s.activeInitSegmentId_ = null, s.initSegments_ = {}, s.cacheEncryptionKeys_ = t.cacheEncryptionKeys, s.keyCache_ = {}, s.decrypter_ = t.decrypter, s.syncController_ = t.syncController, s.syncPoint_ = {
      segmentIndex: 0,
      time: 0
    }, s.transmuxer_ = s.createTransmuxer_(), s.triggerSyncInfoUpdate_ = function() {
      return s.trigger("syncinfoupdate");
    }, s.syncController_.on("syncinfoupdate", s.triggerSyncInfoUpdate_), s.mediaSource_.addEventListener("sourceopen", function() {
      s.isEndOfStream_() || (s.ended_ = !1);
    }), s.fetchAtBuffer_ = !1, s.logger_ = zi("SegmentLoader[" + s.loaderType_ + "]"), Object.defineProperty(Ge(s), "state", {
      get: function() {
        return this.state_;
      },
      set: function(a) {
        a !== this.state_ && (this.logger_(this.state_ + " -> " + a), this.state_ = a, this.trigger("statechange"));
      }
    }), s.sourceUpdater_.on("ready", function() {
      s.hasEnoughInfoToAppend_() && s.processCallQueue_();
    }), s.loaderType_ === "main" && s.timelineChangeController_.on("pendingtimelinechange", function() {
      s.hasEnoughInfoToAppend_() && s.processCallQueue_();
    }), s.loaderType_ === "audio" && s.timelineChangeController_.on("timelinechange", function() {
      s.hasEnoughInfoToLoad_() && s.processLoadQueue_(), s.hasEnoughInfoToAppend_() && s.processCallQueue_();
    }), s;
  }
  var n = i.prototype;
  return n.createTransmuxer_ = function() {
    return dl.createTransmuxer({
      remux: !1,
      alignGopsAtEnd: this.safeAppend_,
      keepOriginalTimestamps: !0,
      parse708captions: this.parse708captions_,
      captionServices: this.captionServices_
    });
  }, n.resetStats_ = function() {
    this.mediaBytesTransferred = 0, this.mediaRequests = 0, this.mediaRequestsAborted = 0, this.mediaRequestsTimedout = 0, this.mediaRequestsErrored = 0, this.mediaTransferDuration = 0, this.mediaSecondsLoaded = 0, this.mediaAppends = 0;
  }, n.dispose = function() {
    this.trigger("dispose"), this.state = "DISPOSED", this.pause(), this.abort_(), this.transmuxer_ && this.transmuxer_.terminate(), this.resetStats_(), this.checkBufferTimeout_ && q.clearTimeout(this.checkBufferTimeout_), this.syncController_ && this.triggerSyncInfoUpdate_ && this.syncController_.off("syncinfoupdate", this.triggerSyncInfoUpdate_), this.off();
  }, n.setAudio = function(t) {
    this.audioDisabled_ = !t, t ? this.appendInitSegment_.audio = !0 : this.sourceUpdater_.removeAudio(0, this.duration_());
  }, n.abort = function() {
    if (this.state !== "WAITING") {
      this.pendingSegment_ && (this.pendingSegment_ = null);
      return;
    }
    this.abort_(), this.state = "READY", this.paused() || this.monitorBuffer_();
  }, n.abort_ = function() {
    this.pendingSegment_ && this.pendingSegment_.abortRequests && this.pendingSegment_.abortRequests(), this.pendingSegment_ = null, this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [], this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_), this.waitingOnRemove_ = !1, q.clearTimeout(this.quotaExceededErrorRetryTimeout_), this.quotaExceededErrorRetryTimeout_ = null;
  }, n.checkForAbort_ = function(t) {
    return this.state === "APPENDING" && !this.pendingSegment_ ? (this.state = "READY", !0) : !this.pendingSegment_ || this.pendingSegment_.requestId !== t;
  }, n.error = function(t) {
    return typeof t < "u" && (this.logger_("error occurred:", t), this.error_ = t), this.pendingSegment_ = null, this.error_;
  }, n.endOfStream = function() {
    this.ended_ = !0, this.transmuxer_ && dl.reset(this.transmuxer_), this.gopBuffer_.length = 0, this.pause(), this.trigger("ended");
  }, n.buffered_ = function() {
    var t = this.getMediaInfo_();
    if (!this.sourceUpdater_ || !t)
      return G.createTimeRanges();
    if (this.loaderType_ === "main") {
      var r = t.hasAudio, s = t.hasVideo, a = t.isMuxed;
      if (s && r && !this.audioDisabled_ && !a)
        return this.sourceUpdater_.buffered();
      if (s)
        return this.sourceUpdater_.videoBuffered();
    }
    return this.sourceUpdater_.audioBuffered();
  }, n.initSegmentForMap = function(t, r) {
    if (r === void 0 && (r = !1), !t)
      return null;
    var s = jo(t), a = this.initSegments_[s];
    return r && !a && t.bytes && (this.initSegments_[s] = a = {
      resolvedUri: t.resolvedUri,
      byterange: t.byterange,
      bytes: t.bytes,
      tracks: t.tracks,
      timescales: t.timescales
    }), a || t;
  }, n.segmentKey = function(t, r) {
    if (r === void 0 && (r = !1), !t)
      return null;
    var s = Hv(t), a = this.keyCache_[s];
    this.cacheEncryptionKeys_ && r && !a && t.bytes && (this.keyCache_[s] = a = {
      resolvedUri: t.resolvedUri,
      bytes: t.bytes
    });
    var o = {
      resolvedUri: (a || t).resolvedUri
    };
    return a && (o.bytes = a.bytes), o;
  }, n.couldBeginLoading_ = function() {
    return this.playlist_ && !this.paused();
  }, n.load = function() {
    if (this.monitorBuffer_(), !!this.playlist_) {
      if (this.state === "INIT" && this.couldBeginLoading_())
        return this.init_();
      !this.couldBeginLoading_() || this.state !== "READY" && this.state !== "INIT" || (this.state = "READY");
    }
  }, n.init_ = function() {
    return this.state = "READY", this.resetEverything(), this.monitorBuffer_();
  }, n.playlist = function(t, r) {
    if (r === void 0 && (r = {}), !!t) {
      var s = this.playlist_, a = this.pendingSegment_;
      this.playlist_ = t, this.xhrOptions_ = r, this.state === "INIT" && (t.syncInfo = {
        mediaSequence: t.mediaSequence,
        time: 0
      }, this.loaderType_ === "main" && this.syncController_.setDateTimeMappingForStart(t));
      var o = null;
      if (s && (s.id ? o = s.id : s.uri && (o = s.uri)), this.logger_("playlist update [" + o + " => " + (t.id || t.uri) + "]"), this.trigger("syncinfoupdate"), this.state === "INIT" && this.couldBeginLoading_())
        return this.init_();
      if (!s || s.uri !== t.uri) {
        this.mediaIndex !== null && (t.endList ? this.resyncLoader() : this.resetLoader()), this.currentMediaInfo_ = void 0, this.trigger("playlistupdate");
        return;
      }
      var u = t.mediaSequence - s.mediaSequence;
      if (this.logger_("live window shift [" + u + "]"), this.mediaIndex !== null)
        if (this.mediaIndex -= u, this.mediaIndex < 0)
          this.mediaIndex = null, this.partIndex = null;
        else {
          var l = this.playlist_.segments[this.mediaIndex];
          if (this.partIndex && (!l.parts || !l.parts.length || !l.parts[this.partIndex])) {
            var d = this.mediaIndex;
            this.logger_("currently processing part (index " + this.partIndex + ") no longer exists."), this.resetLoader(), this.mediaIndex = d;
          }
        }
      a && (a.mediaIndex -= u, a.mediaIndex < 0 ? (a.mediaIndex = null, a.partIndex = null) : (a.mediaIndex >= 0 && (a.segment = t.segments[a.mediaIndex]), a.partIndex >= 0 && a.segment.parts && (a.part = a.segment.parts[a.partIndex]))), this.syncController_.saveExpiredSegmentInfo(s, t);
    }
  }, n.pause = function() {
    this.checkBufferTimeout_ && (q.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = null);
  }, n.paused = function() {
    return this.checkBufferTimeout_ === null;
  }, n.resetEverything = function(t) {
    this.ended_ = !1, this.activeInitSegmentId_ = null, this.appendInitSegment_ = {
      audio: !0,
      video: !0
    }, this.resetLoader(), this.remove(0, 1 / 0, t), this.transmuxer_ && (this.transmuxer_.postMessage({
      action: "clearAllMp4Captions"
    }), this.transmuxer_.postMessage({
      action: "reset"
    }));
  }, n.resetLoader = function() {
    this.fetchAtBuffer_ = !1, this.resyncLoader();
  }, n.resyncLoader = function() {
    this.transmuxer_ && dl.reset(this.transmuxer_), this.mediaIndex = null, this.partIndex = null, this.syncPoint_ = null, this.isPendingTimestampOffset_ = !1, this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [], this.abort(), this.transmuxer_ && this.transmuxer_.postMessage({
      action: "clearParsedMp4Captions"
    });
  }, n.remove = function(t, r, s, a) {
    if (s === void 0 && (s = function() {
    }), a === void 0 && (a = !1), r === 1 / 0 && (r = this.duration_()), r <= t) {
      this.logger_("skipping remove because end ${end} is <= start ${start}");
      return;
    }
    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {
      this.logger_("skipping remove because no source updater or starting media info");
      return;
    }
    var o = 1, u = function() {
      o--, o === 0 && s();
    };
    (a || !this.audioDisabled_) && (o++, this.sourceUpdater_.removeAudio(t, r, u)), (a || this.loaderType_ === "main") && (this.gopBuffer_ = Sw(this.gopBuffer_, t, r, this.timeMapping_), o++, this.sourceUpdater_.removeVideo(t, r, u));
    for (var l in this.inbandTextTracks_)
      Qs(t, r, this.inbandTextTracks_[l]);
    Qs(t, r, this.segmentMetadataTrack_), u();
  }, n.monitorBuffer_ = function() {
    this.checkBufferTimeout_ && q.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = q.setTimeout(this.monitorBufferTick_.bind(this), 1);
  }, n.monitorBufferTick_ = function() {
    this.state === "READY" && this.fillBuffer_(), this.checkBufferTimeout_ && q.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = q.setTimeout(this.monitorBufferTick_.bind(this), Cw);
  }, n.fillBuffer_ = function() {
    if (!this.sourceUpdater_.updating()) {
      var t = this.chooseNextRequest_();
      !t || (typeof t.timestampOffset == "number" && (this.isPendingTimestampOffset_ = !1, this.timelineChangeController_.pendingTimelineChange({
        type: this.loaderType_,
        from: this.currentTimeline_,
        to: t.timeline
      })), this.loadSegment_(t));
    }
  }, n.isEndOfStream_ = function(t, r, s) {
    if (t === void 0 && (t = this.mediaIndex), r === void 0 && (r = this.playlist_), s === void 0 && (s = this.partIndex), !r || !this.mediaSource_)
      return !1;
    var a = typeof t == "number" && r.segments[t], o = t + 1 === r.segments.length, u = !a || !a.parts || s + 1 === a.parts.length;
    return r.endList && this.mediaSource_.readyState === "open" && o && u;
  }, n.chooseNextRequest_ = function() {
    var t = this.buffered_(), r = xp(t) || 0, s = Hd(t, this.currentTime_()), a = !this.hasPlayed_() && s >= 1, o = s >= this.goalBufferLength_(), u = this.playlist_.segments;
    if (!u.length || a || o)
      return null;
    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());
    var l = {
      partIndex: null,
      mediaIndex: null,
      startOfSegment: null,
      playlist: this.playlist_,
      isSyncRequest: !this.syncPoint_
    };
    if (l.isSyncRequest)
      l.mediaIndex = kw(this.currentTimeline_, u, r);
    else if (this.mediaIndex !== null) {
      var d = u[this.mediaIndex], p = typeof this.partIndex == "number" ? this.partIndex : -1;
      l.startOfSegment = d.end ? d.end : r, d.parts && d.parts[p + 1] ? (l.mediaIndex = this.mediaIndex, l.partIndex = p + 1) : l.mediaIndex = this.mediaIndex + 1;
    } else {
      var h = bi.getMediaInfoForTime({
        experimentalExactManifestTimings: this.experimentalExactManifestTimings,
        playlist: this.playlist_,
        currentTime: this.fetchAtBuffer_ ? r : this.currentTime_(),
        startingPartIndex: this.syncPoint_.partIndex,
        startingSegmentIndex: this.syncPoint_.segmentIndex,
        startTime: this.syncPoint_.time
      }), m = h.segmentIndex, y = h.startTime, T = h.partIndex;
      l.getMediaInfoForTime = this.fetchAtBuffer_ ? "bufferedEnd " + r : "currentTime " + this.currentTime_(), l.mediaIndex = m, l.startOfSegment = y, l.partIndex = T;
    }
    var b = u[l.mediaIndex], I = b && typeof l.partIndex == "number" && b.parts && b.parts[l.partIndex];
    if (!b || typeof l.partIndex == "number" && !I)
      return null;
    if (typeof l.partIndex != "number" && b.parts && (l.partIndex = 0, I = b.parts[0]), !s && I && !I.independent)
      if (l.partIndex === 0) {
        var B = u[l.mediaIndex - 1], M = B.parts && B.parts.length && B.parts[B.parts.length - 1];
        M && M.independent && (l.mediaIndex -= 1, l.partIndex = B.parts.length - 1, l.independent = "previous segment");
      } else
        b.parts[l.partIndex - 1].independent && (l.partIndex -= 1, l.independent = "previous part");
    var A = this.mediaSource_ && this.mediaSource_.readyState === "ended";
    return l.mediaIndex >= u.length - 1 && A && !this.seeking_() ? null : this.generateSegmentInfo_(l);
  }, n.generateSegmentInfo_ = function(t) {
    var r = t.independent, s = t.playlist, a = t.mediaIndex, o = t.startOfSegment, u = t.isSyncRequest, l = t.partIndex, d = t.forceTimestampOffset, p = t.getMediaInfoForTime, h = s.segments[a], m = typeof l == "number" && h.parts[l], y = {
      requestId: "segment-loader-" + Math.random(),
      uri: m && m.resolvedUri || h.resolvedUri,
      mediaIndex: a,
      partIndex: m ? l : null,
      isSyncRequest: u,
      startOfSegment: o,
      playlist: s,
      bytes: null,
      encryptedBytes: null,
      timestampOffset: null,
      timeline: h.timeline,
      duration: m && m.duration || h.duration,
      segment: h,
      part: m,
      byteLength: 0,
      transmuxer: this.transmuxer_,
      getMediaInfoForTime: p,
      independent: r
    }, T = typeof d < "u" ? d : this.isPendingTimestampOffset_;
    y.timestampOffset = this.timestampOffsetForSegment_({
      segmentTimeline: h.timeline,
      currentTimeline: this.currentTimeline_,
      startOfSegment: o,
      buffered: this.buffered_(),
      overrideCheck: T
    });
    var b = xp(this.sourceUpdater_.audioBuffered());
    return typeof b == "number" && (y.audioAppendStart = b - this.sourceUpdater_.audioTimestampOffset()), this.sourceUpdater_.videoBuffered().length && (y.gopsToAlignWith = Tw(
      this.gopBuffer_,
      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(),
      this.timeMapping_
    )), y;
  }, n.timestampOffsetForSegment_ = function(t) {
    return Dw(t);
  }, n.earlyAbortWhenNeeded_ = function(t) {
    if (!(this.vhs_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) && !(Date.now() - (t.firstBytesReceivedAt || Date.now()) < 1e3)) {
      var r = this.currentTime_(), s = t.bandwidth, a = this.pendingSegment_.duration, o = bi.estimateSegmentRequestTime(a, s, this.playlist_, t.bytesReceived), u = $E(this.buffered_(), r, this.vhs_.tech_.playbackRate()) - 1;
      if (!(o <= u)) {
        var l = hw({
          master: this.vhs_.playlists.master,
          currentTime: r,
          bandwidth: s,
          duration: this.duration_(),
          segmentDuration: a,
          timeUntilRebuffer: u,
          currentTimeline: this.currentTimeline_,
          syncController: this.syncController_
        });
        if (l) {
          var d = o - u, p = d - l.rebufferingImpact, h = 0.5;
          u <= jn && (h = 1), !(!l.playlist || l.playlist.uri === this.playlist_.uri || p < h) && (this.bandwidth = l.playlist.attributes.BANDWIDTH * Kt.BANDWIDTH_VARIANCE + 1, this.trigger("earlyabort"));
        }
      }
    }
  }, n.handleAbort_ = function(t) {
    this.logger_("Aborting " + Hr(t)), this.mediaRequestsAborted += 1;
  }, n.handleProgress_ = function(t, r) {
    this.earlyAbortWhenNeeded_(r.stats), !this.checkForAbort_(r.requestId) && this.trigger("progress");
  }, n.handleTrackInfo_ = function(t, r) {
    this.earlyAbortWhenNeeded_(t.stats), !this.checkForAbort_(t.requestId) && (this.checkForIllegalMediaSwitch(r) || (r = r || {}, ww(this.currentMediaInfo_, r) || (this.appendInitSegment_ = {
      audio: !0,
      video: !0
    }, this.startingMediaInfo_ = r, this.currentMediaInfo_ = r, this.logger_("trackinfo update", r), this.trigger("trackinfo")), !this.checkForAbort_(t.requestId) && (this.pendingSegment_.trackInfo = r, this.hasEnoughInfoToAppend_() && this.processCallQueue_())));
  }, n.handleTimingInfo_ = function(t, r, s, a) {
    if (this.earlyAbortWhenNeeded_(t.stats), !this.checkForAbort_(t.requestId)) {
      var o = this.pendingSegment_, u = qp(r);
      o[u] = o[u] || {}, o[u][s] = a, this.logger_("timinginfo: " + r + " - " + s + " - " + a), this.hasEnoughInfoToAppend_() && this.processCallQueue_();
    }
  }, n.handleCaptions_ = function(t, r) {
    var s = this;
    if (this.earlyAbortWhenNeeded_(t.stats), !this.checkForAbort_(t.requestId)) {
      if (r.length === 0) {
        this.logger_("SegmentLoader received no captions from a caption event");
        return;
      }
      var a = this.pendingSegment_;
      if (!a.hasAppendedData_) {
        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, t, r));
        return;
      }
      var o = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(), u = {};
      r.forEach(function(l) {
        u[l.stream] = u[l.stream] || {
          startTime: 1 / 0,
          captions: [],
          endTime: 0
        };
        var d = u[l.stream];
        d.startTime = Math.min(d.startTime, l.startTime + o), d.endTime = Math.max(d.endTime, l.endTime + o), d.captions.push(l);
      }), Object.keys(u).forEach(function(l) {
        var d = u[l], p = d.startTime, h = d.endTime, m = d.captions, y = s.inbandTextTracks_;
        s.logger_("adding cues from " + p + " -> " + h + " for " + l), mw(y, s.vhs_.tech_, l), Qs(p, h, y[l]), gw({
          captionArray: m,
          inbandTextTracks: y,
          timestampOffset: o
        });
      }), this.transmuxer_ && this.transmuxer_.postMessage({
        action: "clearParsedMp4Captions"
      });
    }
  }, n.handleId3_ = function(t, r, s) {
    if (this.earlyAbortWhenNeeded_(t.stats), !this.checkForAbort_(t.requestId)) {
      var a = this.pendingSegment_;
      if (!a.hasAppendedData_) {
        this.metadataQueue_.id3.push(this.handleId3_.bind(this, t, r, s));
        return;
      }
      var o = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();
      _w(this.inbandTextTracks_, s, this.vhs_.tech_), yw({
        inbandTextTracks: this.inbandTextTracks_,
        metadataArray: r,
        timestampOffset: o,
        videoDuration: this.duration_()
      });
    }
  }, n.processMetadataQueue_ = function() {
    this.metadataQueue_.id3.forEach(function(t) {
      return t();
    }), this.metadataQueue_.caption.forEach(function(t) {
      return t();
    }), this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [];
  }, n.processCallQueue_ = function() {
    var t = this.callQueue_;
    this.callQueue_ = [], t.forEach(function(r) {
      return r();
    });
  }, n.processLoadQueue_ = function() {
    var t = this.loadQueue_;
    this.loadQueue_ = [], t.forEach(function(r) {
      return r();
    });
  }, n.hasEnoughInfoToLoad_ = function() {
    if (this.loaderType_ !== "audio")
      return !0;
    var t = this.pendingSegment_;
    return t ? this.getCurrentMediaInfo_() ? !Vp({
      timelineChangeController: this.timelineChangeController_,
      currentTimeline: this.currentTimeline_,
      segmentTimeline: t.timeline,
      loaderType: this.loaderType_,
      audioDisabled: this.audioDisabled_
    }) : !0 : !1;
  }, n.getCurrentMediaInfo_ = function(t) {
    return t === void 0 && (t = this.pendingSegment_), t && t.trackInfo || this.currentMediaInfo_;
  }, n.getMediaInfo_ = function(t) {
    return t === void 0 && (t = this.pendingSegment_), this.getCurrentMediaInfo_(t) || this.startingMediaInfo_;
  }, n.getPendingSegmentPlaylist = function() {
    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;
  }, n.hasEnoughInfoToAppend_ = function() {
    if (!this.sourceUpdater_.ready() || this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_)
      return !1;
    var t = this.pendingSegment_, r = this.getCurrentMediaInfo_();
    if (!t || !r)
      return !1;
    var s = r.hasAudio, a = r.hasVideo, o = r.isMuxed;
    return !(a && !t.videoTimingInfo || s && !this.audioDisabled_ && !o && !t.audioTimingInfo || Vp({
      timelineChangeController: this.timelineChangeController_,
      currentTimeline: this.currentTimeline_,
      segmentTimeline: t.timeline,
      loaderType: this.loaderType_,
      audioDisabled: this.audioDisabled_
    }));
  }, n.handleData_ = function(t, r) {
    if (this.earlyAbortWhenNeeded_(t.stats), !this.checkForAbort_(t.requestId)) {
      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {
        this.callQueue_.push(this.handleData_.bind(this, t, r));
        return;
      }
      var s = this.pendingSegment_;
      if (this.setTimeMapping_(s.timeline), this.updateMediaSecondsLoaded_(s.part || s.segment), this.mediaSource_.readyState !== "closed") {
        if (t.map && (t.map = this.initSegmentForMap(t.map, !0), s.segment.map = t.map), t.key && this.segmentKey(t.key, !0), s.isFmp4 = t.isFmp4, s.timingInfo = s.timingInfo || {}, s.isFmp4)
          this.trigger("fmp4"), s.timingInfo.start = s[qp(r.type)].start;
        else {
          var a = this.getCurrentMediaInfo_(), o = this.loaderType_ === "main" && a && a.hasVideo, u;
          o && (u = s.videoTimingInfo.start), s.timingInfo.start = this.trueSegmentStart_({
            currentStart: s.timingInfo.start,
            playlist: s.playlist,
            mediaIndex: s.mediaIndex,
            currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),
            useVideoTimingInfo: o,
            firstVideoFrameTimeForData: u,
            videoTimingInfo: s.videoTimingInfo,
            audioTimingInfo: s.audioTimingInfo
          });
        }
        if (this.updateAppendInitSegmentStatus(s, r.type), this.updateSourceBufferTimestampOffset_(s), s.isSyncRequest) {
          this.updateTimingInfoEnd_(s), this.syncController_.saveSegmentTimingInfo({
            segmentInfo: s,
            shouldSaveTimelineMapping: this.loaderType_ === "main"
          });
          var l = this.chooseNextRequest_();
          if (l.mediaIndex !== s.mediaIndex || l.partIndex !== s.partIndex) {
            this.logger_("sync segment was incorrect, not appending");
            return;
          }
          this.logger_("sync segment was correct, appending");
        }
        s.hasAppendedData_ = !0, this.processMetadataQueue_(), this.appendData_(s, r);
      }
    }
  }, n.updateAppendInitSegmentStatus = function(t, r) {
    this.loaderType_ === "main" && typeof t.timestampOffset == "number" && !t.changedTimestampOffset && (this.appendInitSegment_ = {
      audio: !0,
      video: !0
    }), this.playlistOfLastInitSegment_[r] !== t.playlist && (this.appendInitSegment_[r] = !0);
  }, n.getInitSegmentAndUpdateState_ = function(t) {
    var r = t.type, s = t.initSegment, a = t.map, o = t.playlist;
    if (a) {
      var u = jo(a);
      if (this.activeInitSegmentId_ === u)
        return null;
      s = this.initSegmentForMap(a, !0).bytes, this.activeInitSegmentId_ = u;
    }
    return s && this.appendInitSegment_[r] ? (this.playlistOfLastInitSegment_[r] = o, this.appendInitSegment_[r] = !1, this.activeInitSegmentId_ = null, s) : null;
  }, n.handleQuotaExceededError_ = function(t, r) {
    var s = this, a = t.segmentInfo, o = t.type, u = t.bytes, l = this.sourceUpdater_.audioBuffered(), d = this.sourceUpdater_.videoBuffered();
    l.length > 1 && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: " + dr(l).join(", ")), d.length > 1 && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: " + dr(d).join(", "));
    var p = l.length ? l.start(0) : 0, h = l.length ? l.end(l.length - 1) : 0, m = d.length ? d.start(0) : 0, y = d.length ? d.end(d.length - 1) : 0;
    if (h - p <= Vs && y - m <= Vs) {
      this.logger_("On QUOTA_EXCEEDED_ERR, single segment too large to append to buffer, triggering an error. " + ("Appended byte length: " + u.byteLength + ", ") + ("audio buffer: " + dr(l).join(", ") + ", ") + ("video buffer: " + dr(d).join(", ") + ", ")), this.error({
        message: "Quota exceeded error with append of a single segment of content",
        excludeUntil: 1 / 0
      }), this.trigger("error");
      return;
    }
    this.waitingOnRemove_ = !0, this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {
      segmentInfo: a,
      type: o,
      bytes: u
    }));
    var T = this.currentTime_(), b = T - Vs;
    this.logger_("On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to " + b), this.remove(0, b, function() {
      s.logger_("On QUOTA_EXCEEDED_ERR, retrying append in " + Vs + "s"), s.waitingOnRemove_ = !1, s.quotaExceededErrorRetryTimeout_ = q.setTimeout(function() {
        s.logger_("On QUOTA_EXCEEDED_ERR, re-processing call queue"), s.quotaExceededErrorRetryTimeout_ = null, s.processCallQueue_();
      }, Vs * 1e3);
    }, !0);
  }, n.handleAppendError_ = function(t, r) {
    var s = t.segmentInfo, a = t.type, o = t.bytes;
    if (r) {
      if (r.code === ay) {
        this.handleQuotaExceededError_({
          segmentInfo: s,
          type: a,
          bytes: o
        });
        return;
      }
      this.logger_("Received non QUOTA_EXCEEDED_ERR on append", r), this.error(a + " append of " + o.length + "b failed for segment " + ("#" + s.mediaIndex + " in playlist " + s.playlist.id)), this.trigger("appenderror");
    }
  }, n.appendToSourceBuffer_ = function(t) {
    var r = t.segmentInfo, s = t.type, a = t.initSegment, o = t.data, u = t.bytes;
    if (!u) {
      var l = [o], d = o.byteLength;
      a && (l.unshift(a), d += a.byteLength), u = fw({
        bytes: d,
        segments: l
      });
    }
    this.sourceUpdater_.appendBuffer({
      segmentInfo: r,
      type: s,
      bytes: u
    }, this.handleAppendError_.bind(this, {
      segmentInfo: r,
      type: s,
      bytes: u
    }));
  }, n.handleSegmentTimingInfo_ = function(t, r, s) {
    if (!(!this.pendingSegment_ || r !== this.pendingSegment_.requestId)) {
      var a = this.pendingSegment_.segment, o = t + "TimingInfo";
      a[o] || (a[o] = {}), a[o].transmuxerPrependedSeconds = s.prependedContentDuration || 0, a[o].transmuxedPresentationStart = s.start.presentation, a[o].transmuxedDecodeStart = s.start.decode, a[o].transmuxedPresentationEnd = s.end.presentation, a[o].transmuxedDecodeEnd = s.end.decode, a[o].baseMediaDecodeTime = s.baseMediaDecodeTime;
    }
  }, n.appendData_ = function(t, r) {
    var s = r.type, a = r.data;
    if (!(!a || !a.byteLength) && !(s === "audio" && this.audioDisabled_)) {
      var o = this.getInitSegmentAndUpdateState_({
        type: s,
        initSegment: r.initSegment,
        playlist: t.playlist,
        map: t.isFmp4 ? t.segment.map : null
      });
      this.appendToSourceBuffer_({
        segmentInfo: t,
        type: s,
        initSegment: o,
        data: a
      });
    }
  }, n.loadSegment_ = function(t) {
    var r = this;
    if (this.state = "WAITING", this.pendingSegment_ = t, this.trimBackBuffer_(t), typeof t.timestampOffset == "number" && this.transmuxer_ && this.transmuxer_.postMessage({
      action: "clearAllMp4Captions"
    }), !this.hasEnoughInfoToLoad_()) {
      this.loadQueue_.push(function() {
        var s = Mi({}, t, {
          forceTimestampOffset: !0
        });
        Mi(t, r.generateSegmentInfo_(s)), r.isPendingTimestampOffset_ = !1, r.updateTransmuxerAndRequestSegment_(t);
      });
      return;
    }
    this.updateTransmuxerAndRequestSegment_(t);
  }, n.updateTransmuxerAndRequestSegment_ = function(t) {
    var r = this;
    this.shouldUpdateTransmuxerTimestampOffset_(t.timestampOffset) && (this.gopBuffer_.length = 0, t.gopsToAlignWith = [], this.timeMapping_ = 0, this.transmuxer_.postMessage({
      action: "reset"
    }), this.transmuxer_.postMessage({
      action: "setTimestampOffset",
      timestampOffset: t.timestampOffset
    }));
    var s = this.createSimplifiedSegmentObj_(t), a = this.isEndOfStream_(t.mediaIndex, t.playlist, t.partIndex), o = this.mediaIndex !== null, u = t.timeline !== this.currentTimeline_ && t.timeline > 0, l = a || o && u;
    this.logger_("Requesting " + Hr(t)), s.map && !s.map.bytes && (this.logger_("going to request init segment."), this.appendInitSegment_ = {
      video: !0,
      audio: !0
    }), t.abortRequests = aw({
      xhr: this.vhs_.xhr,
      xhrOptions: this.xhrOptions_,
      decryptionWorker: this.decrypter_,
      segment: s,
      abortFn: this.handleAbort_.bind(this, t),
      progressFn: this.handleProgress_.bind(this),
      trackInfoFn: this.handleTrackInfo_.bind(this),
      timingInfoFn: this.handleTimingInfo_.bind(this),
      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "video", t.requestId),
      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "audio", t.requestId),
      captionsFn: this.handleCaptions_.bind(this),
      isEndOfTimeline: l,
      endedTimelineFn: function() {
        r.logger_("received endedtimeline callback");
      },
      id3Fn: this.handleId3_.bind(this),
      dataFn: this.handleData_.bind(this),
      doneFn: this.segmentRequestFinished_.bind(this),
      onTransmuxerLog: function(d) {
        var p = d.message, h = d.level, m = d.stream;
        r.logger_(Hr(t) + " logged from transmuxer stream " + m + " as a " + h + ": " + p);
      }
    });
  }, n.trimBackBuffer_ = function(t) {
    var r = Iw(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
    r > 0 && this.remove(0, r);
  }, n.createSimplifiedSegmentObj_ = function(t) {
    var r = t.segment, s = t.part, a = {
      resolvedUri: s ? s.resolvedUri : r.resolvedUri,
      byterange: s ? s.byterange : r.byterange,
      requestId: t.requestId,
      transmuxer: t.transmuxer,
      audioAppendStart: t.audioAppendStart,
      gopsToAlignWith: t.gopsToAlignWith,
      part: t.part
    }, o = t.playlist.segments[t.mediaIndex - 1];
    if (o && o.timeline === r.timeline && (o.videoTimingInfo ? a.baseStartTime = o.videoTimingInfo.transmuxedDecodeEnd : o.audioTimingInfo && (a.baseStartTime = o.audioTimingInfo.transmuxedDecodeEnd)), r.key) {
      var u = r.key.iv || new Uint32Array([0, 0, 0, t.mediaIndex + t.playlist.mediaSequence]);
      a.key = this.segmentKey(r.key), a.key.iv = u;
    }
    return r.map && (a.map = this.initSegmentForMap(r.map)), a;
  }, n.saveTransferStats_ = function(t) {
    this.mediaRequests += 1, t && (this.mediaBytesTransferred += t.bytesReceived, this.mediaTransferDuration += t.roundTripTime);
  }, n.saveBandwidthRelatedStats_ = function(t, r) {
    if (this.pendingSegment_.byteLength = r.bytesReceived, t < ao) {
      this.logger_("Ignoring segment's bandwidth because its duration of " + t + (" is less than the min to record " + ao));
      return;
    }
    this.bandwidth = r.bandwidth, this.roundTrip = r.roundTripTime;
  }, n.handleTimeout_ = function() {
    this.mediaRequestsTimedout += 1, this.bandwidth = 1, this.roundTrip = NaN, this.trigger("bandwidthupdate"), this.trigger("timeout");
  }, n.segmentRequestFinished_ = function(t, r, s) {
    if (this.callQueue_.length) {
      this.callQueue_.push(this.segmentRequestFinished_.bind(this, t, r, s));
      return;
    }
    if (this.saveTransferStats_(r.stats), !!this.pendingSegment_ && r.requestId === this.pendingSegment_.requestId) {
      if (t) {
        if (this.pendingSegment_ = null, this.state = "READY", t.code === sn.ABORTED)
          return;
        if (this.pause(), t.code === sn.TIMEOUT) {
          this.handleTimeout_();
          return;
        }
        this.mediaRequestsErrored += 1, this.error(t), this.trigger("error");
        return;
      }
      var a = this.pendingSegment_;
      this.saveBandwidthRelatedStats_(a.duration, r.stats), a.endOfAllRequests = r.endOfAllRequests, s.gopInfo && (this.gopBuffer_ = Ew(this.gopBuffer_, s.gopInfo, this.safeAppend_)), this.state = "APPENDING", this.trigger("appending"), this.waitForAppendsToComplete_(a);
    }
  }, n.setTimeMapping_ = function(t) {
    var r = this.syncController_.mappingForTimeline(t);
    r !== null && (this.timeMapping_ = r);
  }, n.updateMediaSecondsLoaded_ = function(t) {
    typeof t.start == "number" && typeof t.end == "number" ? this.mediaSecondsLoaded += t.end - t.start : this.mediaSecondsLoaded += t.duration;
  }, n.shouldUpdateTransmuxerTimestampOffset_ = function(t) {
    return t === null ? !1 : this.loaderType_ === "main" && t !== this.sourceUpdater_.videoTimestampOffset() || !this.audioDisabled_ && t !== this.sourceUpdater_.audioTimestampOffset();
  }, n.trueSegmentStart_ = function(t) {
    var r = t.currentStart, s = t.playlist, a = t.mediaIndex, o = t.firstVideoFrameTimeForData, u = t.currentVideoTimestampOffset, l = t.useVideoTimingInfo, d = t.videoTimingInfo, p = t.audioTimingInfo;
    if (typeof r < "u")
      return r;
    if (!l)
      return p.start;
    var h = s.segments[a - 1];
    return a === 0 || !h || typeof h.start > "u" || h.end !== o + u ? o : d.start;
  }, n.waitForAppendsToComplete_ = function(t) {
    var r = this.getCurrentMediaInfo_(t);
    if (!r) {
      this.error({
        message: "No starting media returned, likely due to an unsupported media format.",
        blacklistDuration: 1 / 0
      }), this.trigger("error");
      return;
    }
    var s = r.hasAudio, a = r.hasVideo, o = r.isMuxed, u = this.loaderType_ === "main" && a, l = !this.audioDisabled_ && s && !o;
    if (t.waitingOnAppends = 0, !t.hasAppendedData_) {
      !t.timingInfo && typeof t.timestampOffset == "number" && (this.isPendingTimestampOffset_ = !0), t.timingInfo = {
        start: 0
      }, t.waitingOnAppends++, this.isPendingTimestampOffset_ || (this.updateSourceBufferTimestampOffset_(t), this.processMetadataQueue_()), this.checkAppendsDone_(t);
      return;
    }
    u && t.waitingOnAppends++, l && t.waitingOnAppends++, u && this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, t)), l && this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, t));
  }, n.checkAppendsDone_ = function(t) {
    this.checkForAbort_(t.requestId) || (t.waitingOnAppends--, t.waitingOnAppends === 0 && this.handleAppendsDone_());
  }, n.checkForIllegalMediaSwitch = function(t) {
    var r = Aw(this.loaderType_, this.getCurrentMediaInfo_(), t);
    return r ? (this.error({
      message: r,
      blacklistDuration: 1 / 0
    }), this.trigger("error"), !0) : !1;
  }, n.updateSourceBufferTimestampOffset_ = function(t) {
    if (!(t.timestampOffset === null || typeof t.timingInfo.start != "number" || t.changedTimestampOffset || this.loaderType_ !== "main")) {
      var r = !1;
      t.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({
        videoTimingInfo: t.segment.videoTimingInfo,
        audioTimingInfo: t.segment.audioTimingInfo,
        timingInfo: t.timingInfo
      }), t.changedTimestampOffset = !0, t.timestampOffset !== this.sourceUpdater_.videoTimestampOffset() && (this.sourceUpdater_.videoTimestampOffset(t.timestampOffset), r = !0), t.timestampOffset !== this.sourceUpdater_.audioTimestampOffset() && (this.sourceUpdater_.audioTimestampOffset(t.timestampOffset), r = !0), r && this.trigger("timestampoffset");
    }
  }, n.getSegmentStartTimeForTimestampOffsetCalculation_ = function(t) {
    var r = t.videoTimingInfo, s = t.audioTimingInfo, a = t.timingInfo;
    return this.useDtsForTimestampOffset_ ? r && typeof r.transmuxedDecodeStart == "number" ? r.transmuxedDecodeStart : s && typeof s.transmuxedDecodeStart == "number" ? s.transmuxedDecodeStart : a.start : a.start;
  }, n.updateTimingInfoEnd_ = function(t) {
    t.timingInfo = t.timingInfo || {};
    var r = this.getMediaInfo_(), s = this.loaderType_ === "main" && r && r.hasVideo, a = s && t.videoTimingInfo ? t.videoTimingInfo : t.audioTimingInfo;
    !a || (t.timingInfo.end = typeof a.end == "number" ? a.end : a.start + t.duration);
  }, n.handleAppendsDone_ = function() {
    if (this.pendingSegment_ && this.trigger("appendsdone"), !this.pendingSegment_) {
      this.state = "READY", this.paused() || this.monitorBuffer_();
      return;
    }
    var t = this.pendingSegment_;
    this.updateTimingInfoEnd_(t), this.shouldSaveSegmentTimingInfo_ && this.syncController_.saveSegmentTimingInfo({
      segmentInfo: t,
      shouldSaveTimelineMapping: this.loaderType_ === "main"
    });
    var r = Pw(t, this.sourceType_);
    if (r && (r.severity === "warn" ? G.log.warn(r.message) : this.logger_(r.message)), this.recordThroughput_(t), this.pendingSegment_ = null, this.state = "READY", t.isSyncRequest && (this.trigger("syncinfoupdate"), !t.hasAppendedData_)) {
      this.logger_("Throwing away un-appended sync request " + Hr(t));
      return;
    }
    this.logger_("Appended " + Hr(t)), this.addSegmentMetadataCue_(t), this.fetchAtBuffer_ = !0, this.currentTimeline_ !== t.timeline && (this.timelineChangeController_.lastTimelineChange({
      type: this.loaderType_,
      from: this.currentTimeline_,
      to: t.timeline
    }), this.loaderType_ === "main" && !this.audioDisabled_ && this.timelineChangeController_.lastTimelineChange({
      type: "audio",
      from: this.currentTimeline_,
      to: t.timeline
    })), this.currentTimeline_ = t.timeline, this.trigger("syncinfoupdate");
    var s = t.segment, a = t.part, o = s.end && this.currentTime_() - s.end > t.playlist.targetDuration * 3, u = a && a.end && this.currentTime_() - a.end > t.playlist.partTargetDuration * 3;
    if (o || u) {
      this.logger_("bad " + (o ? "segment" : "part") + " " + Hr(t)), this.resetEverything();
      return;
    }
    var l = this.mediaIndex !== null;
    l && this.trigger("bandwidthupdate"), this.trigger("progress"), this.mediaIndex = t.mediaIndex, this.partIndex = t.partIndex, this.isEndOfStream_(t.mediaIndex, t.playlist, t.partIndex) && this.endOfStream(), this.trigger("appended"), t.hasAppendedData_ && this.mediaAppends++, this.paused() || this.monitorBuffer_();
  }, n.recordThroughput_ = function(t) {
    if (t.duration < ao) {
      this.logger_("Ignoring segment's throughput because its duration of " + t.duration + (" is less than the min to record " + ao));
      return;
    }
    var r = this.throughput.rate, s = Date.now() - t.endOfAllRequests + 1, a = Math.floor(t.byteLength / s * 8 * 1e3);
    this.throughput.rate += (a - r) / ++this.throughput.count;
  }, n.addSegmentMetadataCue_ = function(t) {
    if (this.segmentMetadataTrack_) {
      var r = t.segment, s = r.start, a = r.end;
      if (!(!jp(s) || !jp(a))) {
        Qs(s, a, this.segmentMetadataTrack_);
        var o = q.WebKitDataCue || q.VTTCue, u = {
          custom: r.custom,
          dateTimeObject: r.dateTimeObject,
          dateTimeString: r.dateTimeString,
          bandwidth: t.playlist.attributes.BANDWIDTH,
          resolution: t.playlist.attributes.RESOLUTION,
          codecs: t.playlist.attributes.CODECS,
          byteLength: t.byteLength,
          uri: t.uri,
          timeline: t.timeline,
          playlist: t.playlist.id,
          start: s,
          end: a
        }, l = JSON.stringify(u), d = new o(s, a, l);
        d.value = u, this.segmentMetadataTrack_.addCue(d);
      }
    }
  }, i;
}(G.EventTarget);
function yn() {
}
var oy = function(e) {
  return typeof e != "string" ? e : e.replace(/./, function(i) {
    return i.toUpperCase();
  });
}, Lw = ["video", "audio"], Nc = function(e, i) {
  var n = i[e + "Buffer"];
  return n && n.updating || i.queuePending[e];
}, Ow = function(e, i) {
  for (var n = 0; n < i.length; n++) {
    var t = i[n];
    if (t.type === "mediaSource")
      return null;
    if (t.type === e)
      return n;
  }
  return null;
}, Jd = function e(i, n) {
  if (n.queue.length !== 0) {
    var t = 0, r = n.queue[t];
    if (r.type === "mediaSource") {
      !n.updating() && n.mediaSource.readyState !== "closed" && (n.queue.shift(), r.action(n), r.doneFn && r.doneFn(), e("audio", n), e("video", n));
      return;
    }
    if (i !== "mediaSource" && !(!n.ready() || n.mediaSource.readyState === "closed" || Nc(i, n))) {
      if (r.type !== i) {
        if (t = Ow(i, n.queue), t === null)
          return;
        r = n.queue[t];
      }
      if (n.queue.splice(t, 1), n.queuePending[i] = r, r.action(i, n), !r.doneFn) {
        n.queuePending[i] = null, e(i, n);
        return;
      }
    }
  }
}, uy = function(e, i) {
  var n = i[e + "Buffer"], t = oy(e);
  !n || (n.removeEventListener("updateend", i["on" + t + "UpdateEnd_"]), n.removeEventListener("error", i["on" + t + "Error_"]), i.codecs[e] = null, i[e + "Buffer"] = null);
}, tn = function(e, i) {
  return e && i && Array.prototype.indexOf.call(e.sourceBuffers, i) !== -1;
}, ki = {
  appendBuffer: function(e, i, n) {
    return function(t, r) {
      var s = r[t + "Buffer"];
      if (tn(r.mediaSource, s)) {
        r.logger_("Appending segment " + i.mediaIndex + "'s " + e.length + " bytes to " + t + "Buffer");
        try {
          s.appendBuffer(e);
        } catch (a) {
          r.logger_("Error with code " + a.code + " " + (a.code === ay ? "(QUOTA_EXCEEDED_ERR) " : "") + ("when appending segment " + i.mediaIndex + " to " + t + "Buffer")), r.queuePending[t] = null, n(a);
        }
      }
    };
  },
  remove: function(e, i) {
    return function(n, t) {
      var r = t[n + "Buffer"];
      if (tn(t.mediaSource, r)) {
        t.logger_("Removing " + e + " to " + i + " from " + n + "Buffer");
        try {
          r.remove(e, i);
        } catch {
          t.logger_("Remove " + e + " to " + i + " from " + n + "Buffer failed");
        }
      }
    };
  },
  timestampOffset: function(e) {
    return function(i, n) {
      var t = n[i + "Buffer"];
      !tn(n.mediaSource, t) || (n.logger_("Setting " + i + "timestampOffset to " + e), t.timestampOffset = e);
    };
  },
  callback: function(e) {
    return function(i, n) {
      e();
    };
  },
  endOfStream: function(e) {
    return function(i) {
      if (i.mediaSource.readyState === "open") {
        i.logger_("Calling mediaSource endOfStream(" + (e || "") + ")");
        try {
          i.mediaSource.endOfStream(e);
        } catch (n) {
          G.log.warn("Failed to call media source endOfStream", n);
        }
      }
    };
  },
  duration: function(e) {
    return function(i) {
      i.logger_("Setting mediaSource duration to " + e);
      try {
        i.mediaSource.duration = e;
      } catch (n) {
        G.log.warn("Failed to set media source duration", n);
      }
    };
  },
  abort: function() {
    return function(e, i) {
      if (i.mediaSource.readyState === "open") {
        var n = i[e + "Buffer"];
        if (tn(i.mediaSource, n)) {
          i.logger_("calling abort on " + e + "Buffer");
          try {
            n.abort();
          } catch (t) {
            G.log.warn("Failed to abort on " + e + "Buffer", t);
          }
        }
      }
    };
  },
  addSourceBuffer: function(e, i) {
    return function(n) {
      var t = oy(e), r = sa(i);
      n.logger_("Adding " + e + "Buffer with codec " + i + " to mediaSource");
      var s = n.mediaSource.addSourceBuffer(r);
      s.addEventListener("updateend", n["on" + t + "UpdateEnd_"]), s.addEventListener("error", n["on" + t + "Error_"]), n.codecs[e] = i, n[e + "Buffer"] = s;
    };
  },
  removeSourceBuffer: function(e) {
    return function(i) {
      var n = i[e + "Buffer"];
      if (uy(e, i), !!tn(i.mediaSource, n)) {
        i.logger_("Removing " + e + "Buffer with codec " + i.codecs[e] + " from mediaSource");
        try {
          i.mediaSource.removeSourceBuffer(n);
        } catch (t) {
          G.log.warn("Failed to removeSourceBuffer " + e + "Buffer", t);
        }
      }
    };
  },
  changeType: function(e) {
    return function(i, n) {
      var t = n[i + "Buffer"], r = sa(e);
      !tn(n.mediaSource, t) || n.codecs[i] !== e && (n.logger_("changing " + i + "Buffer codec from " + n.codecs[i] + " to " + e), t.changeType(r), n.codecs[i] = e);
    };
  }
}, Ci = function(e) {
  var i = e.type, n = e.sourceUpdater, t = e.action, r = e.doneFn, s = e.name;
  n.queue.push({
    type: i,
    action: t,
    doneFn: r,
    name: s
  }), Jd(i, n);
}, Wp = function(e, i) {
  return function(n) {
    if (i.queuePending[e]) {
      var t = i.queuePending[e].doneFn;
      i.queuePending[e] = null, t && t(i[e + "Error_"]);
    }
    Jd(e, i);
  };
}, ly = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    return r = e.call(this) || this, r.mediaSource = t, r.sourceopenListener_ = function() {
      return Jd("mediaSource", Ge(r));
    }, r.mediaSource.addEventListener("sourceopen", r.sourceopenListener_), r.logger_ = zi("SourceUpdater"), r.audioTimestampOffset_ = 0, r.videoTimestampOffset_ = 0, r.queue = [], r.queuePending = {
      audio: null,
      video: null
    }, r.delayedAudioAppendQueue_ = [], r.videoAppendQueued_ = !1, r.codecs = {}, r.onVideoUpdateEnd_ = Wp("video", Ge(r)), r.onAudioUpdateEnd_ = Wp("audio", Ge(r)), r.onVideoError_ = function(s) {
      r.videoError_ = s;
    }, r.onAudioError_ = function(s) {
      r.audioError_ = s;
    }, r.createdSourceBuffers_ = !1, r.initializedEme_ = !1, r.triggeredReady_ = !1, r;
  }
  var n = i.prototype;
  return n.initializedEme = function() {
    this.initializedEme_ = !0, this.triggerReady();
  }, n.hasCreatedSourceBuffers = function() {
    return this.createdSourceBuffers_;
  }, n.hasInitializedAnyEme = function() {
    return this.initializedEme_;
  }, n.ready = function() {
    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();
  }, n.createSourceBuffers = function(t) {
    this.hasCreatedSourceBuffers() || (this.addOrChangeSourceBuffers(t), this.createdSourceBuffers_ = !0, this.trigger("createdsourcebuffers"), this.triggerReady());
  }, n.triggerReady = function() {
    this.ready() && !this.triggeredReady_ && (this.triggeredReady_ = !0, this.trigger("ready"));
  }, n.addSourceBuffer = function(t, r) {
    Ci({
      type: "mediaSource",
      sourceUpdater: this,
      action: ki.addSourceBuffer(t, r),
      name: "addSourceBuffer"
    });
  }, n.abort = function(t) {
    Ci({
      type: t,
      sourceUpdater: this,
      action: ki.abort(t),
      name: "abort"
    });
  }, n.removeSourceBuffer = function(t) {
    if (!this.canRemoveSourceBuffer()) {
      G.log.error("removeSourceBuffer is not supported!");
      return;
    }
    Ci({
      type: "mediaSource",
      sourceUpdater: this,
      action: ki.removeSourceBuffer(t),
      name: "removeSourceBuffer"
    });
  }, n.canRemoveSourceBuffer = function() {
    return !G.browser.IE_VERSION && !G.browser.IS_FIREFOX && q.MediaSource && q.MediaSource.prototype && typeof q.MediaSource.prototype.removeSourceBuffer == "function";
  }, i.canChangeType = function() {
    return q.SourceBuffer && q.SourceBuffer.prototype && typeof q.SourceBuffer.prototype.changeType == "function";
  }, n.canChangeType = function() {
    return this.constructor.canChangeType();
  }, n.changeType = function(t, r) {
    if (!this.canChangeType()) {
      G.log.error("changeType is not supported!");
      return;
    }
    Ci({
      type: t,
      sourceUpdater: this,
      action: ki.changeType(r),
      name: "changeType"
    });
  }, n.addOrChangeSourceBuffers = function(t) {
    var r = this;
    if (!t || typeof t != "object" || Object.keys(t).length === 0)
      throw new Error("Cannot addOrChangeSourceBuffers to undefined codecs");
    Object.keys(t).forEach(function(s) {
      var a = t[s];
      if (!r.hasCreatedSourceBuffers())
        return r.addSourceBuffer(s, a);
      r.canChangeType() && r.changeType(s, a);
    });
  }, n.appendBuffer = function(t, r) {
    var s = this, a = t.segmentInfo, o = t.type, u = t.bytes;
    if (this.processedAppend_ = !0, o === "audio" && this.videoBuffer && !this.videoAppendQueued_) {
      this.delayedAudioAppendQueue_.push([t, r]), this.logger_("delayed audio append of " + u.length + " until video append");
      return;
    }
    var l = r;
    if (Ci({
      type: o,
      sourceUpdater: this,
      action: ki.appendBuffer(u, a || {
        mediaIndex: -1
      }, l),
      doneFn: r,
      name: "appendBuffer"
    }), o === "video") {
      if (this.videoAppendQueued_ = !0, !this.delayedAudioAppendQueue_.length)
        return;
      var d = this.delayedAudioAppendQueue_.slice();
      this.logger_("queuing delayed audio " + d.length + " appendBuffers"), this.delayedAudioAppendQueue_.length = 0, d.forEach(function(p) {
        s.appendBuffer.apply(s, p);
      });
    }
  }, n.audioBuffered = function() {
    return tn(this.mediaSource, this.audioBuffer) && this.audioBuffer.buffered ? this.audioBuffer.buffered : G.createTimeRange();
  }, n.videoBuffered = function() {
    return tn(this.mediaSource, this.videoBuffer) && this.videoBuffer.buffered ? this.videoBuffer.buffered : G.createTimeRange();
  }, n.buffered = function() {
    var t = tn(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null, r = tn(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;
    return r && !t ? this.audioBuffered() : t && !r ? this.videoBuffered() : YE(this.audioBuffered(), this.videoBuffered());
  }, n.setDuration = function(t, r) {
    r === void 0 && (r = yn), Ci({
      type: "mediaSource",
      sourceUpdater: this,
      action: ki.duration(t),
      name: "duration",
      doneFn: r
    });
  }, n.endOfStream = function(t, r) {
    t === void 0 && (t = null), r === void 0 && (r = yn), typeof t != "string" && (t = void 0), Ci({
      type: "mediaSource",
      sourceUpdater: this,
      action: ki.endOfStream(t),
      name: "endOfStream",
      doneFn: r
    });
  }, n.removeAudio = function(t, r, s) {
    if (s === void 0 && (s = yn), !this.audioBuffered().length || this.audioBuffered().end(0) === 0) {
      s();
      return;
    }
    Ci({
      type: "audio",
      sourceUpdater: this,
      action: ki.remove(t, r),
      doneFn: s,
      name: "remove"
    });
  }, n.removeVideo = function(t, r, s) {
    if (s === void 0 && (s = yn), !this.videoBuffered().length || this.videoBuffered().end(0) === 0) {
      s();
      return;
    }
    Ci({
      type: "video",
      sourceUpdater: this,
      action: ki.remove(t, r),
      doneFn: s,
      name: "remove"
    });
  }, n.updating = function() {
    return !!(Nc("audio", this) || Nc("video", this));
  }, n.audioTimestampOffset = function(t) {
    return typeof t < "u" && this.audioBuffer && this.audioTimestampOffset_ !== t && (Ci({
      type: "audio",
      sourceUpdater: this,
      action: ki.timestampOffset(t),
      name: "timestampOffset"
    }), this.audioTimestampOffset_ = t), this.audioTimestampOffset_;
  }, n.videoTimestampOffset = function(t) {
    return typeof t < "u" && this.videoBuffer && this.videoTimestampOffset !== t && (Ci({
      type: "video",
      sourceUpdater: this,
      action: ki.timestampOffset(t),
      name: "timestampOffset"
    }), this.videoTimestampOffset_ = t), this.videoTimestampOffset_;
  }, n.audioQueueCallback = function(t) {
    !this.audioBuffer || Ci({
      type: "audio",
      sourceUpdater: this,
      action: ki.callback(t),
      name: "callback"
    });
  }, n.videoQueueCallback = function(t) {
    !this.videoBuffer || Ci({
      type: "video",
      sourceUpdater: this,
      action: ki.callback(t),
      name: "callback"
    });
  }, n.dispose = function() {
    var t = this;
    this.trigger("dispose"), Lw.forEach(function(r) {
      t.abort(r), t.canRemoveSourceBuffer() ? t.removeSourceBuffer(r) : t[r + "QueueCallback"](function() {
        return uy(r, t);
      });
    }), this.videoAppendQueued_ = !1, this.delayedAudioAppendQueue_.length = 0, this.sourceopenListener_ && this.mediaSource.removeEventListener("sourceopen", this.sourceopenListener_), this.off();
  }, i;
}(G.EventTarget), Gp = function(e) {
  return decodeURIComponent(escape(String.fromCharCode.apply(null, e)));
}, Kp = new Uint8Array(`

`.split("").map(function(e) {
  return e.charCodeAt(0);
})), Nw = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    return e.call(this, "Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.") || this;
  }
  return i;
}(/* @__PURE__ */ mc(Error)), Rw = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r) {
    var s;
    return r === void 0 && (r = {}), s = e.call(this, t, r) || this, s.mediaSource_ = null, s.subtitlesTrack_ = null, s.loaderType_ = "subtitle", s.featuresNativeTextTracks_ = t.featuresNativeTextTracks, s.loadVttJs = t.loadVttJs, s.shouldSaveSegmentTimingInfo_ = !1, s;
  }
  var n = i.prototype;
  return n.createTransmuxer_ = function() {
    return null;
  }, n.buffered_ = function() {
    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length)
      return G.createTimeRanges();
    var t = this.subtitlesTrack_.cues, r = t[0].startTime, s = t[t.length - 1].startTime;
    return G.createTimeRanges([[r, s]]);
  }, n.initSegmentForMap = function(t, r) {
    if (r === void 0 && (r = !1), !t)
      return null;
    var s = jo(t), a = this.initSegments_[s];
    if (r && !a && t.bytes) {
      var o = Kp.byteLength + t.bytes.byteLength, u = new Uint8Array(o);
      u.set(t.bytes), u.set(Kp, t.bytes.byteLength), this.initSegments_[s] = a = {
        resolvedUri: t.resolvedUri,
        byterange: t.byterange,
        bytes: u
      };
    }
    return a || t;
  }, n.couldBeginLoading_ = function() {
    return this.playlist_ && this.subtitlesTrack_ && !this.paused();
  }, n.init_ = function() {
    return this.state = "READY", this.resetEverything(), this.monitorBuffer_();
  }, n.track = function(t) {
    return typeof t > "u" ? this.subtitlesTrack_ : (this.subtitlesTrack_ = t, this.state === "INIT" && this.couldBeginLoading_() && this.init_(), this.subtitlesTrack_);
  }, n.remove = function(t, r) {
    Qs(t, r, this.subtitlesTrack_);
  }, n.fillBuffer_ = function() {
    var t = this, r = this.chooseNextRequest_();
    if (r) {
      if (this.syncController_.timestampOffsetForTimeline(r.timeline) === null) {
        var s = function() {
          t.state = "READY", t.paused() || t.monitorBuffer_();
        };
        this.syncController_.one("timestampoffset", s), this.state = "WAITING_ON_TIMELINE";
        return;
      }
      this.loadSegment_(r);
    }
  }, n.timestampOffsetForSegment_ = function() {
    return null;
  }, n.chooseNextRequest_ = function() {
    return this.skipEmptySegments_(e.prototype.chooseNextRequest_.call(this));
  }, n.skipEmptySegments_ = function(t) {
    for (; t && t.segment.empty; ) {
      if (t.mediaIndex + 1 >= t.playlist.segments.length) {
        t = null;
        break;
      }
      t = this.generateSegmentInfo_({
        playlist: t.playlist,
        mediaIndex: t.mediaIndex + 1,
        startOfSegment: t.startOfSegment + t.duration,
        isSyncRequest: t.isSyncRequest
      });
    }
    return t;
  }, n.stopForError = function(t) {
    this.error(t), this.state = "READY", this.pause(), this.trigger("error");
  }, n.segmentRequestFinished_ = function(t, r, s) {
    var a = this;
    if (!this.subtitlesTrack_) {
      this.state = "READY";
      return;
    }
    if (this.saveTransferStats_(r.stats), !this.pendingSegment_) {
      this.state = "READY", this.mediaRequestsAborted += 1;
      return;
    }
    if (t) {
      t.code === sn.TIMEOUT && this.handleTimeout_(), t.code === sn.ABORTED ? this.mediaRequestsAborted += 1 : this.mediaRequestsErrored += 1, this.stopForError(t);
      return;
    }
    var o = this.pendingSegment_;
    this.saveBandwidthRelatedStats_(o.duration, r.stats), r.key && this.segmentKey(r.key, !0), this.state = "APPENDING", this.trigger("appending");
    var u = o.segment;
    if (u.map && (u.map.bytes = r.map.bytes), o.bytes = r.bytes, typeof q.WebVTT != "function" && typeof this.loadVttJs == "function") {
      this.state = "WAITING_ON_VTTJS", this.loadVttJs().then(function() {
        return a.segmentRequestFinished_(t, r, s);
      }, function() {
        return a.stopForError({
          message: "Error loading vtt.js"
        });
      });
      return;
    }
    u.requested = !0;
    try {
      this.parseVTTCues_(o);
    } catch (l) {
      this.stopForError({
        message: l.message
      });
      return;
    }
    if (this.updateTimeMapping_(o, this.syncController_.timelines[o.timeline], this.playlist_), o.cues.length ? o.timingInfo = {
      start: o.cues[0].startTime,
      end: o.cues[o.cues.length - 1].endTime
    } : o.timingInfo = {
      start: o.startOfSegment,
      end: o.startOfSegment + o.duration
    }, o.isSyncRequest) {
      this.trigger("syncinfoupdate"), this.pendingSegment_ = null, this.state = "READY";
      return;
    }
    o.byteLength = o.bytes.byteLength, this.mediaSecondsLoaded += u.duration, o.cues.forEach(function(l) {
      a.subtitlesTrack_.addCue(a.featuresNativeTextTracks_ ? new q.VTTCue(l.startTime, l.endTime, l.text) : l);
    }), bw(this.subtitlesTrack_), this.handleAppendsDone_();
  }, n.handleData_ = function() {
  }, n.updateTimingInfoEnd_ = function() {
  }, n.parseVTTCues_ = function(t) {
    var r, s = !1;
    if (typeof q.WebVTT != "function")
      throw new Nw();
    typeof q.TextDecoder == "function" ? r = new q.TextDecoder("utf8") : (r = q.WebVTT.StringDecoder(), s = !0);
    var a = new q.WebVTT.Parser(q, q.vttjs, r);
    if (t.cues = [], t.timestampmap = {
      MPEGTS: 0,
      LOCAL: 0
    }, a.oncue = t.cues.push.bind(t.cues), a.ontimestampmap = function(l) {
      t.timestampmap = l;
    }, a.onparsingerror = function(l) {
      G.log.warn("Error encountered when parsing cues: " + l.message);
    }, t.segment.map) {
      var o = t.segment.map.bytes;
      s && (o = Gp(o)), a.parse(o);
    }
    var u = t.bytes;
    s && (u = Gp(u)), a.parse(u), a.flush();
  }, n.updateTimeMapping_ = function(t, r, s) {
    var a = t.segment;
    if (r) {
      if (!t.cues.length) {
        a.empty = !0;
        return;
      }
      var o = t.timestampmap, u = o.MPEGTS / Io.ONE_SECOND_IN_TS - 0 + r.mapping;
      if (t.cues.forEach(function(p) {
        p.startTime += u, p.endTime += u;
      }), !s.syncInfo) {
        var l = t.cues[0].startTime, d = t.cues[t.cues.length - 1].startTime;
        s.syncInfo = {
          mediaSequence: s.mediaSequence + t.mediaIndex,
          time: Math.min(l, d - a.duration)
        };
      }
    }
  }, i;
}(Oc), Mw = function(e, i) {
  for (var n = e.cues, t = 0; t < n.length; t++) {
    var r = n[t];
    if (i >= r.adStartTime && i <= r.adEndTime)
      return r;
  }
  return null;
}, Bw = function(e, i, n) {
  if (n === void 0 && (n = 0), !!e.segments)
    for (var t = n, r, s = 0; s < e.segments.length; s++) {
      var a = e.segments[s];
      if (r || (r = Mw(i, t + a.duration / 2)), r) {
        if ("cueIn" in a) {
          r.endTime = t, r.adEndTime = t, t += a.duration, r = null;
          continue;
        }
        if (t < r.endTime) {
          t += a.duration;
          continue;
        }
        r.endTime += a.duration;
      } else if ("cueOut" in a && (r = new q.VTTCue(t, t + a.duration, a.cueOut), r.adStartTime = t, r.adEndTime = t + parseFloat(a.cueOut), i.addCue(r)), "cueOutCont" in a) {
        var o = a.cueOutCont.split("/").map(parseFloat), u = o[0], l = o[1];
        r = new q.VTTCue(t, t + a.duration, ""), r.adStartTime = t - u, r.adEndTime = r.adStartTime + l, i.addCue(r);
      }
      t += a.duration;
    }
}, Uw = 86400, zp = [
  {
    name: "VOD",
    run: function(e, i, n, t, r) {
      if (n !== 1 / 0) {
        var s = {
          time: 0,
          segmentIndex: 0,
          partIndex: null
        };
        return s;
      }
      return null;
    }
  },
  {
    name: "ProgramDateTime",
    run: function(e, i, n, t, r) {
      if (!Object.keys(e.timelineToDatetimeMappings).length)
        return null;
      var s = null, a = null, o = kc(i);
      r = r || 0;
      for (var u = 0; u < o.length; u++) {
        var l = i.endList || r === 0 ? u : o.length - (u + 1), d = o[l], p = d.segment, h = e.timelineToDatetimeMappings[p.timeline];
        if (!(!h || !p.dateTimeObject)) {
          var m = p.dateTimeObject.getTime() / 1e3, y = m + h;
          if (p.parts && typeof d.partIndex == "number")
            for (var T = 0; T < d.partIndex; T++)
              y += p.parts[T].duration;
          var b = Math.abs(r - y);
          if (a !== null && (b === 0 || a < b))
            break;
          a = b, s = {
            time: y,
            segmentIndex: d.segmentIndex,
            partIndex: d.partIndex
          };
        }
      }
      return s;
    }
  },
  {
    name: "Segment",
    run: function(e, i, n, t, r) {
      var s = null, a = null;
      r = r || 0;
      for (var o = kc(i), u = 0; u < o.length; u++) {
        var l = i.endList || r === 0 ? u : o.length - (u + 1), d = o[l], p = d.segment, h = d.part && d.part.start || p && p.start;
        if (p.timeline === t && typeof h < "u") {
          var m = Math.abs(r - h);
          if (a !== null && a < m)
            break;
          (!s || a === null || a >= m) && (a = m, s = {
            time: h,
            segmentIndex: d.segmentIndex,
            partIndex: d.partIndex
          });
        }
      }
      return s;
    }
  },
  {
    name: "Discontinuity",
    run: function(e, i, n, t, r) {
      var s = null;
      if (r = r || 0, i.discontinuityStarts && i.discontinuityStarts.length)
        for (var a = null, o = 0; o < i.discontinuityStarts.length; o++) {
          var u = i.discontinuityStarts[o], l = i.discontinuitySequence + o + 1, d = e.discontinuities[l];
          if (d) {
            var p = Math.abs(r - d.time);
            if (a !== null && a < p)
              break;
            (!s || a === null || a >= p) && (a = p, s = {
              time: d.time,
              segmentIndex: u,
              partIndex: null
            });
          }
        }
      return s;
    }
  },
  {
    name: "Playlist",
    run: function(e, i, n, t, r) {
      if (i.syncInfo) {
        var s = {
          time: i.syncInfo.time,
          segmentIndex: i.syncInfo.mediaSequence - i.mediaSequence,
          partIndex: null
        };
        return s;
      }
      return null;
    }
  }
], Fw = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    return r = e.call(this) || this, r.timelines = [], r.discontinuities = [], r.timelineToDatetimeMappings = {}, r.logger_ = zi("SyncController"), r;
  }
  var n = i.prototype;
  return n.getSyncPoint = function(t, r, s, a) {
    var o = this.runStrategies_(t, r, s, a);
    return o.length ? this.selectSyncPoint_(o, {
      key: "time",
      value: a
    }) : null;
  }, n.getExpiredTime = function(t, r) {
    if (!t || !t.segments)
      return null;
    var s = this.runStrategies_(t, r, t.discontinuitySequence, 0);
    if (!s.length)
      return null;
    var a = this.selectSyncPoint_(s, {
      key: "segmentIndex",
      value: 0
    });
    return a.segmentIndex > 0 && (a.time *= -1), Math.abs(a.time + ta({
      defaultDuration: t.targetDuration,
      durationList: t.segments,
      startIndex: a.segmentIndex,
      endIndex: 0
    }));
  }, n.runStrategies_ = function(t, r, s, a) {
    for (var o = [], u = 0; u < zp.length; u++) {
      var l = zp[u], d = l.run(this, t, r, s, a);
      d && (d.strategy = l.name, o.push({
        strategy: l.name,
        syncPoint: d
      }));
    }
    return o;
  }, n.selectSyncPoint_ = function(t, r) {
    for (var s = t[0].syncPoint, a = Math.abs(t[0].syncPoint[r.key] - r.value), o = t[0].strategy, u = 1; u < t.length; u++) {
      var l = Math.abs(t[u].syncPoint[r.key] - r.value);
      l < a && (a = l, s = t[u].syncPoint, o = t[u].strategy);
    }
    return this.logger_("syncPoint for [" + r.key + ": " + r.value + "] chosen with strategy" + (" [" + o + "]: [time:" + s.time + ",") + (" segmentIndex:" + s.segmentIndex) + (typeof s.partIndex == "number" ? ",partIndex:" + s.partIndex : "") + "]"), s;
  }, n.saveExpiredSegmentInfo = function(t, r) {
    var s = r.mediaSequence - t.mediaSequence;
    if (s > Uw) {
      G.log.warn("Not saving expired segment info. Media sequence gap " + s + " is too large.");
      return;
    }
    for (var a = s - 1; a >= 0; a--) {
      var o = t.segments[a];
      if (o && typeof o.start < "u") {
        r.syncInfo = {
          mediaSequence: t.mediaSequence + a,
          time: o.start
        }, this.logger_("playlist refresh sync: [time:" + r.syncInfo.time + "," + (" mediaSequence: " + r.syncInfo.mediaSequence + "]")), this.trigger("syncinfoupdate");
        break;
      }
    }
  }, n.setDateTimeMappingForStart = function(t) {
    if (this.timelineToDatetimeMappings = {}, t.segments && t.segments.length && t.segments[0].dateTimeObject) {
      var r = t.segments[0], s = r.dateTimeObject.getTime() / 1e3;
      this.timelineToDatetimeMappings[r.timeline] = -s;
    }
  }, n.saveSegmentTimingInfo = function(t) {
    var r = t.segmentInfo, s = t.shouldSaveTimelineMapping, a = this.calculateSegmentTimeMapping_(r, r.timingInfo, s), o = r.segment;
    a && (this.saveDiscontinuitySyncInfo_(r), r.playlist.syncInfo || (r.playlist.syncInfo = {
      mediaSequence: r.playlist.mediaSequence + r.mediaIndex,
      time: o.start
    }));
    var u = o.dateTimeObject;
    o.discontinuity && s && u && (this.timelineToDatetimeMappings[o.timeline] = -(u.getTime() / 1e3));
  }, n.timestampOffsetForTimeline = function(t) {
    return typeof this.timelines[t] > "u" ? null : this.timelines[t].time;
  }, n.mappingForTimeline = function(t) {
    return typeof this.timelines[t] > "u" ? null : this.timelines[t].mapping;
  }, n.calculateSegmentTimeMapping_ = function(t, r, s) {
    var a = t.segment, o = t.part, u = this.timelines[t.timeline], l, d;
    if (typeof t.timestampOffset == "number")
      u = {
        time: t.startOfSegment,
        mapping: t.startOfSegment - r.start
      }, s && (this.timelines[t.timeline] = u, this.trigger("timestampoffset"), this.logger_("time mapping for timeline " + t.timeline + ": " + ("[time: " + u.time + "] [mapping: " + u.mapping + "]"))), l = t.startOfSegment, d = r.end + u.mapping;
    else if (u)
      l = r.start + u.mapping, d = r.end + u.mapping;
    else
      return !1;
    return o && (o.start = l, o.end = d), (!a.start || l < a.start) && (a.start = l), a.end = d, !0;
  }, n.saveDiscontinuitySyncInfo_ = function(t) {
    var r = t.playlist, s = t.segment;
    if (s.discontinuity)
      this.discontinuities[s.timeline] = {
        time: s.start,
        accuracy: 0
      };
    else if (r.discontinuityStarts && r.discontinuityStarts.length)
      for (var a = 0; a < r.discontinuityStarts.length; a++) {
        var o = r.discontinuityStarts[a], u = r.discontinuitySequence + a + 1, l = o - t.mediaIndex, d = Math.abs(l);
        if (!this.discontinuities[u] || this.discontinuities[u].accuracy > d) {
          var p = void 0;
          l < 0 ? p = s.start - ta({
            defaultDuration: r.targetDuration,
            durationList: r.segments,
            startIndex: t.mediaIndex,
            endIndex: o
          }) : p = s.end + ta({
            defaultDuration: r.targetDuration,
            durationList: r.segments,
            startIndex: t.mediaIndex + 1,
            endIndex: o
          }), this.discontinuities[u] = {
            time: p,
            accuracy: d
          };
        }
      }
  }, n.dispose = function() {
    this.trigger("dispose"), this.off();
  }, i;
}(G.EventTarget), jw = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i() {
    var t;
    return t = e.call(this) || this, t.pendingTimelineChanges_ = {}, t.lastTimelineChanges_ = {}, t;
  }
  var n = i.prototype;
  return n.clearPendingTimelineChange = function(t) {
    this.pendingTimelineChanges_[t] = null, this.trigger("pendingtimelinechange");
  }, n.pendingTimelineChange = function(t) {
    var r = t.type, s = t.from, a = t.to;
    return typeof s == "number" && typeof a == "number" && (this.pendingTimelineChanges_[r] = {
      type: r,
      from: s,
      to: a
    }, this.trigger("pendingtimelinechange")), this.pendingTimelineChanges_[r];
  }, n.lastTimelineChange = function(t) {
    var r = t.type, s = t.from, a = t.to;
    return typeof s == "number" && typeof a == "number" && (this.lastTimelineChanges_[r] = {
      type: r,
      from: s,
      to: a
    }, delete this.pendingTimelineChanges_[r], this.trigger("timelinechange")), this.lastTimelineChanges_[r];
  }, n.dispose = function() {
    this.trigger("dispose"), this.pendingTimelineChanges_ = {}, this.lastTimelineChanges_ = {}, this.off();
  }, i;
}(G.EventTarget), qw = Qv(Jv(function() {
  var e = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
  function i(A, x, P) {
    return P = {
      path: x,
      exports: {},
      require: function(j, H) {
        return n(j, H ?? P.path);
      }
    }, A(P, P.exports), P.exports;
  }
  function n() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
  }
  var t = i(function(A) {
    function x(j, H) {
      for (var D = 0; D < H.length; D++) {
        var O = H[D];
        O.enumerable = O.enumerable || !1, O.configurable = !0, "value" in O && (O.writable = !0), Object.defineProperty(j, O.key, O);
      }
    }
    function P(j, H, D) {
      return H && x(j.prototype, H), D && x(j, D), j;
    }
    A.exports = P, A.exports.default = A.exports, A.exports.__esModule = !0;
  }), r = i(function(A) {
    function x(P, j) {
      return A.exports = x = Object.setPrototypeOf || function(H, D) {
        return H.__proto__ = D, H;
      }, A.exports.default = A.exports, A.exports.__esModule = !0, x(P, j);
    }
    A.exports = x, A.exports.default = A.exports, A.exports.__esModule = !0;
  }), s = i(function(A) {
    function x(P, j) {
      P.prototype = Object.create(j.prototype), P.prototype.constructor = P, r(P, j);
    }
    A.exports = x, A.exports.default = A.exports, A.exports.__esModule = !0;
  }), a = /* @__PURE__ */ function() {
    function A() {
      this.listeners = {};
    }
    var x = A.prototype;
    return x.on = function(P, j) {
      this.listeners[P] || (this.listeners[P] = []), this.listeners[P].push(j);
    }, x.off = function(P, j) {
      if (!this.listeners[P])
        return !1;
      var H = this.listeners[P].indexOf(j);
      return this.listeners[P] = this.listeners[P].slice(0), this.listeners[P].splice(H, 1), H > -1;
    }, x.trigger = function(P) {
      var j = this.listeners[P];
      if (j)
        if (arguments.length === 2)
          for (var H = j.length, D = 0; D < H; ++D)
            j[D].call(this, arguments[1]);
        else
          for (var O = Array.prototype.slice.call(arguments, 1), W = j.length, X = 0; X < W; ++X)
            j[X].apply(this, O);
    }, x.dispose = function() {
      this.listeners = {};
    }, x.pipe = function(P) {
      this.on("data", function(j) {
        P.push(j);
      });
    }, A;
  }();
  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */
  function o(A) {
    return A.subarray(0, A.byteLength - A[A.byteLength - 1]);
  }
  /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */
  var u = function() {
    var A = [[[], [], [], [], []], [[], [], [], [], []]], x = A[0], P = A[1], j = x[4], H = P[4], D, O, W, X = [], ie = [], K, Z, te, ue, be, he;
    for (D = 0; D < 256; D++)
      ie[(X[D] = D << 1 ^ (D >> 7) * 283) ^ D] = D;
    for (O = W = 0; !j[O]; O ^= K || 1, W = ie[W] || 1)
      for (ue = W ^ W << 1 ^ W << 2 ^ W << 3 ^ W << 4, ue = ue >> 8 ^ ue & 255 ^ 99, j[O] = ue, H[ue] = O, te = X[Z = X[K = X[O]]], he = te * 16843009 ^ Z * 65537 ^ K * 257 ^ O * 16843008, be = X[ue] * 257 ^ ue * 16843008, D = 0; D < 4; D++)
        x[D][O] = be = be << 24 ^ be >>> 8, P[D][ue] = he = he << 24 ^ he >>> 8;
    for (D = 0; D < 5; D++)
      x[D] = x[D].slice(0), P[D] = P[D].slice(0);
    return A;
  }, l = null, d = /* @__PURE__ */ function() {
    function A(P) {
      l || (l = u()), this._tables = [[l[0][0].slice(), l[0][1].slice(), l[0][2].slice(), l[0][3].slice(), l[0][4].slice()], [l[1][0].slice(), l[1][1].slice(), l[1][2].slice(), l[1][3].slice(), l[1][4].slice()]];
      var j, H, D, O = this._tables[0][4], W = this._tables[1], X = P.length, ie = 1;
      if (X !== 4 && X !== 6 && X !== 8)
        throw new Error("Invalid aes key size");
      var K = P.slice(0), Z = [];
      for (this._key = [K, Z], j = X; j < 4 * X + 28; j++)
        D = K[j - 1], (j % X === 0 || X === 8 && j % X === 4) && (D = O[D >>> 24] << 24 ^ O[D >> 16 & 255] << 16 ^ O[D >> 8 & 255] << 8 ^ O[D & 255], j % X === 0 && (D = D << 8 ^ D >>> 24 ^ ie << 24, ie = ie << 1 ^ (ie >> 7) * 283)), K[j] = K[j - X] ^ D;
      for (H = 0; j; H++, j--)
        D = K[H & 3 ? j : j - 4], j <= 4 || H < 4 ? Z[H] = D : Z[H] = W[0][O[D >>> 24]] ^ W[1][O[D >> 16 & 255]] ^ W[2][O[D >> 8 & 255]] ^ W[3][O[D & 255]];
    }
    var x = A.prototype;
    return x.decrypt = function(P, j, H, D, O, W) {
      var X = this._key[1], ie = P ^ X[0], K = D ^ X[1], Z = H ^ X[2], te = j ^ X[3], ue, be, he, at = X.length / 4 - 2, pe, le = 4, fe = this._tables[1], Pe = fe[0], re = fe[1], J = fe[2], _e = fe[3], Ie = fe[4];
      for (pe = 0; pe < at; pe++)
        ue = Pe[ie >>> 24] ^ re[K >> 16 & 255] ^ J[Z >> 8 & 255] ^ _e[te & 255] ^ X[le], be = Pe[K >>> 24] ^ re[Z >> 16 & 255] ^ J[te >> 8 & 255] ^ _e[ie & 255] ^ X[le + 1], he = Pe[Z >>> 24] ^ re[te >> 16 & 255] ^ J[ie >> 8 & 255] ^ _e[K & 255] ^ X[le + 2], te = Pe[te >>> 24] ^ re[ie >> 16 & 255] ^ J[K >> 8 & 255] ^ _e[Z & 255] ^ X[le + 3], le += 4, ie = ue, K = be, Z = he;
      for (pe = 0; pe < 4; pe++)
        O[(3 & -pe) + W] = Ie[ie >>> 24] << 24 ^ Ie[K >> 16 & 255] << 16 ^ Ie[Z >> 8 & 255] << 8 ^ Ie[te & 255] ^ X[le++], ue = ie, ie = K, K = Z, Z = te, te = ue;
    }, A;
  }(), p = /* @__PURE__ */ function(A) {
    s(x, A);
    function x() {
      var j;
      return j = A.call(this, a) || this, j.jobs = [], j.delay = 1, j.timeout_ = null, j;
    }
    var P = x.prototype;
    return P.processJob_ = function() {
      this.jobs.shift()(), this.jobs.length ? this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay) : this.timeout_ = null;
    }, P.push = function(j) {
      this.jobs.push(j), this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay));
    }, x;
  }(a), h = function(A) {
    return A << 24 | (A & 65280) << 8 | (A & 16711680) >> 8 | A >>> 24;
  }, m = function(A, x, P) {
    var j = new Int32Array(A.buffer, A.byteOffset, A.byteLength >> 2), H = new d(Array.prototype.slice.call(x)), D = new Uint8Array(A.byteLength), O = new Int32Array(D.buffer), W, X, ie, K, Z, te, ue, be, he;
    for (W = P[0], X = P[1], ie = P[2], K = P[3], he = 0; he < j.length; he += 4)
      Z = h(j[he]), te = h(j[he + 1]), ue = h(j[he + 2]), be = h(j[he + 3]), H.decrypt(Z, te, ue, be, O, he), O[he] = h(O[he] ^ W), O[he + 1] = h(O[he + 1] ^ X), O[he + 2] = h(O[he + 2] ^ ie), O[he + 3] = h(O[he + 3] ^ K), W = Z, X = te, ie = ue, K = be;
    return D;
  }, y = /* @__PURE__ */ function() {
    function A(P, j, H, D) {
      var O = A.STEP, W = new Int32Array(P.buffer), X = new Uint8Array(P.byteLength), ie = 0;
      for (this.asyncStream_ = new p(), this.asyncStream_.push(this.decryptChunk_(W.subarray(ie, ie + O), j, H, X)), ie = O; ie < W.length; ie += O)
        H = new Uint32Array([h(W[ie - 4]), h(W[ie - 3]), h(W[ie - 2]), h(W[ie - 1])]), this.asyncStream_.push(this.decryptChunk_(W.subarray(ie, ie + O), j, H, X));
      this.asyncStream_.push(function() {
        D(null, o(X));
      });
    }
    var x = A.prototype;
    return x.decryptChunk_ = function(P, j, H, D) {
      return function() {
        var O = m(P, j, H);
        D.set(O, P.byteOffset);
      };
    }, t(A, null, [{
      key: "STEP",
      get: function() {
        return 32e3;
      }
    }]), A;
  }(), T;
  typeof window < "u" ? T = window : typeof e < "u" ? T = e : typeof self < "u" ? T = self : T = {};
  var b = T, I = function(A) {
    return ArrayBuffer.isView === "function" ? ArrayBuffer.isView(A) : A && A.buffer instanceof ArrayBuffer;
  }, B = b.BigInt || Number;
  B("0x1"), B("0x100"), B("0x10000"), B("0x1000000"), B("0x100000000"), B("0x10000000000"), B("0x1000000000000"), B("0x100000000000000"), B("0x10000000000000000");
  var M = function(A) {
    var x = {};
    return Object.keys(A).forEach(function(P) {
      var j = A[P];
      I(j) ? x[P] = {
        bytes: j.buffer,
        byteOffset: j.byteOffset,
        byteLength: j.byteLength
      } : x[P] = j;
    }), x;
  };
  self.onmessage = function(A) {
    var x = A.data, P = new Uint8Array(x.encrypted.bytes, x.encrypted.byteOffset, x.encrypted.byteLength), j = new Uint32Array(x.key.bytes, x.key.byteOffset, x.key.byteLength / 4), H = new Uint32Array(x.iv.bytes, x.iv.byteOffset, x.iv.byteLength / 4);
    new y(P, j, H, function(D, O) {
      self.postMessage(M({
        source: x.source,
        decrypted: O
      }), [O.buffer]);
    });
  };
})), Vw = Xv(qw), Hw = function(e) {
  var i = e.default ? "main" : "alternative";
  return e.characteristics && e.characteristics.indexOf("public.accessibility.describes-video") >= 0 && (i = "main-desc"), i;
}, Wo = function(e, i) {
  e.abort(), e.pause(), i && i.activePlaylistLoader && (i.activePlaylistLoader.pause(), i.activePlaylistLoader = null);
}, Rc = function(e, i) {
  i.activePlaylistLoader = e, e.load();
}, Ww = function(e, i) {
  return function() {
    var n = i.segmentLoaders, t = n[e], r = n.main, s = i.mediaTypes[e], a = s.activeTrack(), o = s.getActiveGroup(), u = s.activePlaylistLoader, l = s.lastGroup_;
    if (!(o && l && o.id === l.id) && (s.lastGroup_ = o, s.lastTrack_ = a, Wo(t, s), !(!o || o.isMasterPlaylist))) {
      if (!o.playlistLoader) {
        u && r.resetEverything();
        return;
      }
      t.resyncLoader(), Rc(o.playlistLoader, s);
    }
  };
}, Gw = function(e, i) {
  return function() {
    var n = i.segmentLoaders[e], t = i.mediaTypes[e];
    t.lastGroup_ = null, n.abort(), n.pause();
  };
}, Kw = function(e, i) {
  return function() {
    var n = i.masterPlaylistLoader, t = i.segmentLoaders, r = t[e], s = t.main, a = i.mediaTypes[e], o = a.activeTrack(), u = a.getActiveGroup(), l = a.activePlaylistLoader, d = a.lastTrack_;
    if (!(d && o && d.id === o.id) && (a.lastGroup_ = u, a.lastTrack_ = o, Wo(r, a), !!u)) {
      if (u.isMasterPlaylist) {
        if (!o || !d || o.id === d.id)
          return;
        var p = i.vhs.masterPlaylistController_, h = p.selectPlaylist();
        if (p.media() === h)
          return;
        a.logger_("track change. Switching master audio from " + d.id + " to " + o.id), n.pause(), s.resetEverything(), p.fastQualityChange_(h);
        return;
      }
      if (e === "AUDIO") {
        if (!u.playlistLoader) {
          s.setAudio(!0), s.resetEverything();
          return;
        }
        r.setAudio(!0), s.setAudio(!1);
      }
      if (l === u.playlistLoader) {
        Rc(u.playlistLoader, a);
        return;
      }
      r.track && r.track(o), r.resetEverything(), Rc(u.playlistLoader, a);
    }
  };
}, Go = {
  AUDIO: function(e, i) {
    return function() {
      var n = i.segmentLoaders[e], t = i.mediaTypes[e], r = i.blacklistCurrentPlaylist;
      Wo(n, t);
      var s = t.activeTrack(), a = t.activeGroup(), o = (a.filter(function(d) {
        return d.default;
      })[0] || a[0]).id, u = t.tracks[o];
      if (s === u) {
        r({
          message: "Problem encountered loading the default audio track."
        });
        return;
      }
      G.log.warn("Problem encountered loading the alternate audio track.Switching back to default.");
      for (var l in t.tracks)
        t.tracks[l].enabled = t.tracks[l] === u;
      t.onTrackChanged();
    };
  },
  SUBTITLES: function(e, i) {
    return function() {
      var n = i.segmentLoaders[e], t = i.mediaTypes[e];
      G.log.warn("Problem encountered loading the subtitle track.Disabling subtitle track."), Wo(n, t);
      var r = t.activeTrack();
      r && (r.mode = "disabled"), t.onTrackChanged();
    };
  }
}, Xp = {
  AUDIO: function(e, i, n) {
    if (i) {
      var t = n.tech, r = n.requestOptions, s = n.segmentLoaders[e];
      i.on("loadedmetadata", function() {
        var a = i.media();
        s.playlist(a, r), (!t.paused() || a.endList && t.preload() !== "none") && s.load();
      }), i.on("loadedplaylist", function() {
        s.playlist(i.media(), r), t.paused() || s.load();
      }), i.on("error", Go[e](e, n));
    }
  },
  SUBTITLES: function(e, i, n) {
    var t = n.tech, r = n.requestOptions, s = n.segmentLoaders[e], a = n.mediaTypes[e];
    i.on("loadedmetadata", function() {
      var o = i.media();
      s.playlist(o, r), s.track(a.activeTrack()), (!t.paused() || o.endList && t.preload() !== "none") && s.load();
    }), i.on("loadedplaylist", function() {
      s.playlist(i.media(), r), t.paused() || s.load();
    }), i.on("error", Go[e](e, n));
  }
}, zw = {
  AUDIO: function(e, i) {
    var n = i.vhs, t = i.sourceType, r = i.segmentLoaders[e], s = i.requestOptions, a = i.master.mediaGroups, o = i.mediaTypes[e], u = o.groups, l = o.tracks, d = o.logger_, p = i.masterPlaylistLoader, h = Ca(p.master);
    (!a[e] || Object.keys(a[e]).length === 0) && (a[e] = {
      main: {
        default: {
          default: !0
        }
      }
    }, h && (a[e].main.default.playlists = p.master.playlists));
    for (var m in a[e]) {
      u[m] || (u[m] = []);
      for (var y in a[e][m]) {
        var T = a[e][m][y], b = void 0;
        if (h ? (d("AUDIO group '" + m + "' label '" + y + "' is a master playlist"), T.isMasterPlaylist = !0, b = null) : t === "vhs-json" && T.playlists ? b = new Jr(T.playlists[0], n, s) : T.resolvedUri ? b = new Jr(T.resolvedUri, n, s) : T.playlists && t === "dash" ? b = new Pc(T.playlists[0], n, s, p) : b = null, T = G.mergeOptions({
          id: y,
          playlistLoader: b
        }, T), Xp[e](e, T.playlistLoader, i), u[m].push(T), typeof l[y] > "u") {
          var I = new G.AudioTrack({
            id: y,
            kind: Hw(T),
            enabled: !1,
            language: T.language,
            default: T.default,
            label: y
          });
          l[y] = I;
        }
      }
    }
    r.on("error", Go[e](e, i));
  },
  SUBTITLES: function(e, i) {
    var n = i.tech, t = i.vhs, r = i.sourceType, s = i.segmentLoaders[e], a = i.requestOptions, o = i.master.mediaGroups, u = i.mediaTypes[e], l = u.groups, d = u.tracks, p = i.masterPlaylistLoader;
    for (var h in o[e]) {
      l[h] || (l[h] = []);
      for (var m in o[e][h])
        if (!o[e][h][m].forced) {
          var y = o[e][h][m], T = void 0;
          if (r === "hls")
            T = new Jr(y.resolvedUri, t, a);
          else if (r === "dash") {
            var b = y.playlists.filter(function(B) {
              return B.excludeUntil !== 1 / 0;
            });
            if (!b.length)
              return;
            T = new Pc(y.playlists[0], t, a, p);
          } else
            r === "vhs-json" && (T = new Jr(
              y.playlists ? y.playlists[0] : y.resolvedUri,
              t,
              a
            ));
          if (y = G.mergeOptions({
            id: m,
            playlistLoader: T
          }, y), Xp[e](e, y.playlistLoader, i), l[h].push(y), typeof d[m] > "u") {
            var I = n.addRemoteTextTrack({
              id: m,
              kind: "subtitles",
              default: y.default && y.autoselect,
              language: y.language,
              label: m
            }, !1).track;
            d[m] = I;
          }
        }
    }
    s.on("error", Go[e](e, i));
  },
  "CLOSED-CAPTIONS": function(e, i) {
    var n = i.tech, t = i.master.mediaGroups, r = i.mediaTypes[e], s = r.groups, a = r.tracks;
    for (var o in t[e]) {
      s[o] || (s[o] = []);
      for (var u in t[e][o]) {
        var l = t[e][o][u];
        if (/^(?:CC|SERVICE)/.test(l.instreamId)) {
          var d = n.options_.vhs && n.options_.vhs.captionServices || {}, p = {
            label: u,
            language: l.language,
            instreamId: l.instreamId,
            default: l.default && l.autoselect
          };
          if (d[p.instreamId] && (p = G.mergeOptions(p, d[p.instreamId])), p.default === void 0 && delete p.default, s[o].push(G.mergeOptions({
            id: u
          }, l)), typeof a[u] > "u") {
            var h = n.addRemoteTextTrack({
              id: p.instreamId,
              kind: "captions",
              default: p.default,
              language: p.language,
              label: p.label
            }, !1).track;
            a[u] = h;
          }
        }
      }
    }
  }
}, Xw = function e(i, n) {
  for (var t = 0; t < i.length; t++)
    if (Kd(n, i[t]) || i[t].playlists && e(i[t].playlists, n))
      return !0;
  return !1;
}, Qw = function(e, i) {
  return function(n) {
    var t = i.masterPlaylistLoader, r = i.mediaTypes[e].groups, s = t.media();
    if (!s)
      return null;
    var a = null;
    s.attributes[e] && (a = r[s.attributes[e]]);
    var o = Object.keys(r);
    if (!a)
      if (e === "AUDIO" && o.length > 1 && Ca(i.master))
        for (var u = 0; u < o.length; u++) {
          var l = r[o[u]];
          if (Xw(l, s)) {
            a = l;
            break;
          }
        }
      else
        r.main ? a = r.main : o.length === 1 && (a = r[o[0]]);
    return typeof n > "u" ? a : n === null || !a ? null : a.filter(function(d) {
      return d.id === n.id;
    })[0] || null;
  };
}, Jw = {
  AUDIO: function(e, i) {
    return function() {
      var n = i.mediaTypes[e].tracks;
      for (var t in n)
        if (n[t].enabled)
          return n[t];
      return null;
    };
  },
  SUBTITLES: function(e, i) {
    return function() {
      var n = i.mediaTypes[e].tracks;
      for (var t in n)
        if (n[t].mode === "showing" || n[t].mode === "hidden")
          return n[t];
      return null;
    };
  }
}, Yw = function(e, i) {
  var n = i.mediaTypes;
  return function() {
    var t = n[e].activeTrack();
    return t ? n[e].activeGroup(t) : null;
  };
}, $w = function(e) {
  ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(m) {
    zw[m](m, e);
  });
  var i = e.mediaTypes, n = e.masterPlaylistLoader, t = e.tech, r = e.vhs, s = e.segmentLoaders, a = s.AUDIO, o = s.main;
  ["AUDIO", "SUBTITLES"].forEach(function(m) {
    i[m].activeGroup = Qw(m, e), i[m].activeTrack = Jw[m](m, e), i[m].onGroupChanged = Ww(m, e), i[m].onGroupChanging = Gw(m, e), i[m].onTrackChanged = Kw(m, e), i[m].getActiveGroup = Yw(m, e);
  });
  var u = i.AUDIO.activeGroup();
  if (u) {
    var l = (u.filter(function(m) {
      return m.default;
    })[0] || u[0]).id;
    i.AUDIO.tracks[l].enabled = !0, i.AUDIO.onGroupChanged(), i.AUDIO.onTrackChanged();
    var d = i.AUDIO.getActiveGroup();
    d.playlistLoader ? (o.setAudio(!1), a.setAudio(!0)) : o.setAudio(!0);
  }
  n.on("mediachange", function() {
    ["AUDIO", "SUBTITLES"].forEach(function(m) {
      return i[m].onGroupChanged();
    });
  }), n.on("mediachanging", function() {
    ["AUDIO", "SUBTITLES"].forEach(function(m) {
      return i[m].onGroupChanging();
    });
  });
  var p = function() {
    i.AUDIO.onTrackChanged(), t.trigger({
      type: "usage",
      name: "vhs-audio-change"
    }), t.trigger({
      type: "usage",
      name: "hls-audio-change"
    });
  };
  t.audioTracks().addEventListener("change", p), t.remoteTextTracks().addEventListener("change", i.SUBTITLES.onTrackChanged), r.on("dispose", function() {
    t.audioTracks().removeEventListener("change", p), t.remoteTextTracks().removeEventListener("change", i.SUBTITLES.onTrackChanged);
  }), t.clearTracks("audio");
  for (var h in i.AUDIO.tracks)
    t.audioTracks().addTrack(i.AUDIO.tracks[h]);
}, Zw = function() {
  var e = {};
  return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach(function(i) {
    e[i] = {
      groups: {},
      tracks: {},
      activePlaylistLoader: null,
      activeGroup: yn,
      activeTrack: yn,
      getActiveGroup: yn,
      onGroupChanged: yn,
      onTrackChanged: yn,
      lastTrack_: null,
      logger_: zi("MediaGroups[" + i + "]")
    };
  }), e;
}, e1 = 60 * 2, fn, t1 = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred", "mediaAppends"], i1 = function(e) {
  return this.audioSegmentLoader_[e] + this.mainSegmentLoader_[e];
}, n1 = function(e) {
  var i = e.currentPlaylist, n = e.buffered, t = e.currentTime, r = e.nextPlaylist, s = e.bufferLowWaterLine, a = e.bufferHighWaterLine, o = e.duration, u = e.experimentalBufferBasedABR, l = e.log;
  if (!r)
    return G.log.warn("We received no playlist to switch to. Please check your stream."), !1;
  var d = "allowing switch " + (i && i.id || "null") + " -> " + r.id;
  if (!i)
    return l(d + " as current playlist is not set"), !0;
  if (r.id === i.id)
    return !1;
  var p = !!Qr(n, t).length;
  if (!i.endList)
    return !p && typeof i.partTargetDuration == "number" ? (l("not " + d + " as current playlist is live llhls, but currentTime isn't in buffered."), !1) : (l(d + " as current playlist is live"), !0);
  var h = Hd(n, t), m = u ? Kt.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Kt.MAX_BUFFER_LOW_WATER_LINE;
  if (o < m)
    return l(d + " as duration < max low water line (" + o + " < " + m + ")"), !0;
  var y = r.attributes.BANDWIDTH, T = i.attributes.BANDWIDTH;
  if (y < T && (!u || h < a)) {
    var b = d + " as next bandwidth < current bandwidth (" + y + " < " + T + ")";
    return u && (b += " and forwardBuffer < bufferHighWaterLine (" + h + " < " + a + ")"), l(b), !0;
  }
  if ((!u || y > T) && h >= s) {
    var I = d + " as forwardBuffer >= bufferLowWaterLine (" + h + " >= " + s + ")";
    return u && (I += " and next bandwidth > current bandwidth (" + y + " > " + T + ")"), l(I), !0;
  }
  return l("not " + d + " as no switching criteria met"), !1;
}, r1 = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t) {
    var r;
    r = e.call(this) || this;
    var s = t.src, a = t.handleManifestRedirects, o = t.withCredentials, u = t.tech, l = t.bandwidth, d = t.externVhs, p = t.useCueTags, h = t.blacklistDuration, m = t.enableLowInitialPlaylist, y = t.sourceType, T = t.cacheEncryptionKeys, b = t.experimentalBufferBasedABR, I = t.experimentalLeastPixelDiffSelector, B = t.captionServices;
    if (!s)
      throw new Error("A non-empty playlist URL or JSON manifest string is required");
    var M = t.maxPlaylistRetries;
    (M === null || typeof M > "u") && (M = 1 / 0), fn = d, r.experimentalBufferBasedABR = !!b, r.experimentalLeastPixelDiffSelector = !!I, r.withCredentials = o, r.tech_ = u, r.vhs_ = u.vhs, r.sourceType_ = y, r.useCueTags_ = p, r.blacklistDuration = h, r.maxPlaylistRetries = M, r.enableLowInitialPlaylist = m, r.useCueTags_ && (r.cueTagsTrack_ = r.tech_.addTextTrack("metadata", "ad-cues"), r.cueTagsTrack_.inBandMetadataTrackDispatchType = ""), r.requestOptions_ = {
      withCredentials: o,
      handleManifestRedirects: a,
      maxPlaylistRetries: M,
      timeout: null
    }, r.on("error", r.pauseLoading), r.mediaTypes_ = Zw(), r.mediaSource = new q.MediaSource(), r.handleDurationChange_ = r.handleDurationChange_.bind(Ge(r)), r.handleSourceOpen_ = r.handleSourceOpen_.bind(Ge(r)), r.handleSourceEnded_ = r.handleSourceEnded_.bind(Ge(r)), r.mediaSource.addEventListener("durationchange", r.handleDurationChange_), r.mediaSource.addEventListener("sourceopen", r.handleSourceOpen_), r.mediaSource.addEventListener("sourceended", r.handleSourceEnded_), r.seekable_ = G.createTimeRanges(), r.hasPlayed_ = !1, r.syncController_ = new Fw(t), r.segmentMetadataTrack_ = u.addRemoteTextTrack({
      kind: "metadata",
      label: "segment-metadata"
    }, !1).track, r.decrypter_ = new Vw(), r.sourceUpdater_ = new ly(r.mediaSource), r.inbandTextTracks_ = {}, r.timelineChangeController_ = new jw();
    var A = {
      vhs: r.vhs_,
      parse708captions: t.parse708captions,
      useDtsForTimestampOffset: t.useDtsForTimestampOffset,
      captionServices: B,
      mediaSource: r.mediaSource,
      currentTime: r.tech_.currentTime.bind(r.tech_),
      seekable: function() {
        return r.seekable();
      },
      seeking: function() {
        return r.tech_.seeking();
      },
      duration: function() {
        return r.duration();
      },
      hasPlayed: function() {
        return r.hasPlayed_;
      },
      goalBufferLength: function() {
        return r.goalBufferLength();
      },
      bandwidth: l,
      syncController: r.syncController_,
      decrypter: r.decrypter_,
      sourceType: r.sourceType_,
      inbandTextTracks: r.inbandTextTracks_,
      cacheEncryptionKeys: T,
      sourceUpdater: r.sourceUpdater_,
      timelineChangeController: r.timelineChangeController_,
      experimentalExactManifestTimings: t.experimentalExactManifestTimings
    };
    r.masterPlaylistLoader_ = r.sourceType_ === "dash" ? new Pc(s, r.vhs_, r.requestOptions_) : new Jr(s, r.vhs_, r.requestOptions_), r.setupMasterPlaylistLoaderListeners_(), r.mainSegmentLoader_ = new Oc(G.mergeOptions(A, {
      segmentMetadataTrack: r.segmentMetadataTrack_,
      loaderType: "main"
    }), t), r.audioSegmentLoader_ = new Oc(G.mergeOptions(A, {
      loaderType: "audio"
    }), t), r.subtitleSegmentLoader_ = new Rw(G.mergeOptions(A, {
      loaderType: "vtt",
      featuresNativeTextTracks: r.tech_.featuresNativeTextTracks,
      loadVttJs: function() {
        return new Promise(function(P, j) {
          function H() {
            u.off("vttjserror", D), P();
          }
          function D() {
            u.off("vttjsloaded", H), j();
          }
          u.one("vttjsloaded", H), u.one("vttjserror", D), u.addWebVttScript_();
        });
      }
    }), t), r.setupSegmentLoaderListeners_(), r.experimentalBufferBasedABR && (r.masterPlaylistLoader_.one("loadedplaylist", function() {
      return r.startABRTimer_();
    }), r.tech_.on("pause", function() {
      return r.stopABRTimer_();
    }), r.tech_.on("play", function() {
      return r.startABRTimer_();
    })), t1.forEach(function(P) {
      r[P + "_"] = i1.bind(Ge(r), P);
    }), r.logger_ = zi("MPC"), r.triggeredFmp4Usage = !1, r.tech_.preload() === "none" ? (r.loadOnPlay_ = function() {
      r.loadOnPlay_ = null, r.masterPlaylistLoader_.load();
    }, r.tech_.one("play", r.loadOnPlay_)) : r.masterPlaylistLoader_.load(), r.timeToLoadedData__ = -1, r.mainAppendsToLoadedData__ = -1, r.audioAppendsToLoadedData__ = -1;
    var x = r.tech_.preload() === "none" ? "play" : "loadstart";
    return r.tech_.one(x, function() {
      var P = Date.now();
      r.tech_.one("loadeddata", function() {
        r.timeToLoadedData__ = Date.now() - P, r.mainAppendsToLoadedData__ = r.mainSegmentLoader_.mediaAppends, r.audioAppendsToLoadedData__ = r.audioSegmentLoader_.mediaAppends;
      });
    }), r;
  }
  var n = i.prototype;
  return n.mainAppendsToLoadedData_ = function() {
    return this.mainAppendsToLoadedData__;
  }, n.audioAppendsToLoadedData_ = function() {
    return this.audioAppendsToLoadedData__;
  }, n.appendsToLoadedData_ = function() {
    var t = this.mainAppendsToLoadedData_(), r = this.audioAppendsToLoadedData_();
    return t === -1 || r === -1 ? -1 : t + r;
  }, n.timeToLoadedData_ = function() {
    return this.timeToLoadedData__;
  }, n.checkABR_ = function(t) {
    t === void 0 && (t = "abr");
    var r = this.selectPlaylist();
    r && this.shouldSwitchToMedia_(r) && this.switchMedia_(r, t);
  }, n.switchMedia_ = function(t, r, s) {
    var a = this.media(), o = a && (a.id || a.uri), u = t.id || t.uri;
    o && o !== u && (this.logger_("switch media " + o + " -> " + u + " from " + r), this.tech_.trigger({
      type: "usage",
      name: "vhs-rendition-change-" + r
    })), this.masterPlaylistLoader_.media(t, s);
  }, n.startABRTimer_ = function() {
    var t = this;
    this.stopABRTimer_(), this.abrTimer_ = q.setInterval(function() {
      return t.checkABR_();
    }, 250);
  }, n.stopABRTimer_ = function() {
    this.tech_.scrubbing && this.tech_.scrubbing() || (q.clearInterval(this.abrTimer_), this.abrTimer_ = null);
  }, n.getAudioTrackPlaylists_ = function() {
    var t = this.master(), r = t && t.playlists || [];
    if (!t || !t.mediaGroups || !t.mediaGroups.AUDIO)
      return r;
    var s = t.mediaGroups.AUDIO, a = Object.keys(s), o;
    if (Object.keys(this.mediaTypes_.AUDIO.groups).length)
      o = this.mediaTypes_.AUDIO.activeTrack();
    else {
      var u = s.main || a.length && s[a[0]];
      for (var l in u)
        if (u[l].default) {
          o = {
            label: l
          };
          break;
        }
    }
    if (!o)
      return r;
    var d = [];
    for (var p in s)
      if (s[p][o.label]) {
        var h = s[p][o.label];
        if (h.playlists && h.playlists.length)
          d.push.apply(d, h.playlists);
        else if (h.uri)
          d.push(h);
        else if (t.playlists.length)
          for (var m = 0; m < t.playlists.length; m++) {
            var y = t.playlists[m];
            y.attributes && y.attributes.AUDIO && y.attributes.AUDIO === p && d.push(y);
          }
      }
    return d.length ? d : r;
  }, n.setupMasterPlaylistLoaderListeners_ = function() {
    var t = this;
    this.masterPlaylistLoader_.on("loadedmetadata", function() {
      var r = t.masterPlaylistLoader_.media(), s = r.targetDuration * 1.5 * 1e3;
      Cc(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media()) ? t.requestOptions_.timeout = 0 : t.requestOptions_.timeout = s, r.endList && t.tech_.preload() !== "none" && (t.mainSegmentLoader_.playlist(r, t.requestOptions_), t.mainSegmentLoader_.load()), $w({
        sourceType: t.sourceType_,
        segmentLoaders: {
          AUDIO: t.audioSegmentLoader_,
          SUBTITLES: t.subtitleSegmentLoader_,
          main: t.mainSegmentLoader_
        },
        tech: t.tech_,
        requestOptions: t.requestOptions_,
        masterPlaylistLoader: t.masterPlaylistLoader_,
        vhs: t.vhs_,
        master: t.master(),
        mediaTypes: t.mediaTypes_,
        blacklistCurrentPlaylist: t.blacklistCurrentPlaylist.bind(t)
      }), t.triggerPresenceUsage_(t.master(), r), t.setupFirstPlay(), !t.mediaTypes_.AUDIO.activePlaylistLoader || t.mediaTypes_.AUDIO.activePlaylistLoader.media() ? t.trigger("selectedinitialmedia") : t.mediaTypes_.AUDIO.activePlaylistLoader.one("loadedmetadata", function() {
        t.trigger("selectedinitialmedia");
      });
    }), this.masterPlaylistLoader_.on("loadedplaylist", function() {
      t.loadOnPlay_ && t.tech_.off("play", t.loadOnPlay_);
      var r = t.masterPlaylistLoader_.media();
      if (!r) {
        t.excludeUnsupportedVariants_();
        var s;
        if (t.enableLowInitialPlaylist && (s = t.selectInitialPlaylist()), s || (s = t.selectPlaylist()), !s || !t.shouldSwitchToMedia_(s))
          return;
        t.initialMedia_ = s, t.switchMedia_(t.initialMedia_, "initial");
        var a = t.sourceType_ === "vhs-json" && t.initialMedia_.segments;
        if (!a)
          return;
        r = t.initialMedia_;
      }
      t.handleUpdatedMediaPlaylist(r);
    }), this.masterPlaylistLoader_.on("error", function() {
      t.blacklistCurrentPlaylist(t.masterPlaylistLoader_.error);
    }), this.masterPlaylistLoader_.on("mediachanging", function() {
      t.mainSegmentLoader_.abort(), t.mainSegmentLoader_.pause();
    }), this.masterPlaylistLoader_.on("mediachange", function() {
      var r = t.masterPlaylistLoader_.media(), s = r.targetDuration * 1.5 * 1e3;
      Cc(t.masterPlaylistLoader_.master, t.masterPlaylistLoader_.media()) ? t.requestOptions_.timeout = 0 : t.requestOptions_.timeout = s, t.masterPlaylistLoader_.load(), t.mainSegmentLoader_.playlist(r, t.requestOptions_), t.mainSegmentLoader_.load(), t.tech_.trigger({
        type: "mediachange",
        bubbles: !0
      });
    }), this.masterPlaylistLoader_.on("playlistunchanged", function() {
      var r = t.masterPlaylistLoader_.media();
      if (r.lastExcludeReason_ !== "playlist-unchanged") {
        var s = t.stuckAtPlaylistEnd_(r);
        s && (t.blacklistCurrentPlaylist({
          message: "Playlist no longer updating.",
          reason: "playlist-unchanged"
        }), t.tech_.trigger("playliststuck"));
      }
    }), this.masterPlaylistLoader_.on("renditiondisabled", function() {
      t.tech_.trigger({
        type: "usage",
        name: "vhs-rendition-disabled"
      }), t.tech_.trigger({
        type: "usage",
        name: "hls-rendition-disabled"
      });
    }), this.masterPlaylistLoader_.on("renditionenabled", function() {
      t.tech_.trigger({
        type: "usage",
        name: "vhs-rendition-enabled"
      }), t.tech_.trigger({
        type: "usage",
        name: "hls-rendition-enabled"
      });
    });
  }, n.handleUpdatedMediaPlaylist = function(t) {
    this.useCueTags_ && this.updateAdCues_(t), this.mainSegmentLoader_.playlist(t, this.requestOptions_), this.updateDuration(!t.endList), this.tech_.paused() || (this.mainSegmentLoader_.load(), this.audioSegmentLoader_ && this.audioSegmentLoader_.load());
  }, n.triggerPresenceUsage_ = function(t, r) {
    var s = t.mediaGroups || {}, a = !0, o = Object.keys(s.AUDIO);
    for (var u in s.AUDIO)
      for (var l in s.AUDIO[u]) {
        var d = s.AUDIO[u][l];
        d.uri || (a = !1);
      }
    a && (this.tech_.trigger({
      type: "usage",
      name: "vhs-demuxed"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-demuxed"
    })), Object.keys(s.SUBTITLES).length && (this.tech_.trigger({
      type: "usage",
      name: "vhs-webvtt"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-webvtt"
    })), fn.Playlist.isAes(r) && (this.tech_.trigger({
      type: "usage",
      name: "vhs-aes"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-aes"
    })), o.length && Object.keys(s.AUDIO[o[0]]).length > 1 && (this.tech_.trigger({
      type: "usage",
      name: "vhs-alternate-audio"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-alternate-audio"
    })), this.useCueTags_ && (this.tech_.trigger({
      type: "usage",
      name: "vhs-playlist-cue-tags"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-playlist-cue-tags"
    }));
  }, n.shouldSwitchToMedia_ = function(t) {
    var r = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_, s = this.tech_.currentTime(), a = this.bufferLowWaterLine(), o = this.bufferHighWaterLine(), u = this.tech_.buffered();
    return n1({
      buffered: u,
      currentTime: s,
      currentPlaylist: r,
      nextPlaylist: t,
      bufferLowWaterLine: a,
      bufferHighWaterLine: o,
      duration: this.duration(),
      experimentalBufferBasedABR: this.experimentalBufferBasedABR,
      log: this.logger_
    });
  }, n.setupSegmentLoaderListeners_ = function() {
    var t = this;
    this.mainSegmentLoader_.on("bandwidthupdate", function() {
      t.checkABR_("bandwidthupdate"), t.tech_.trigger("bandwidthupdate");
    }), this.mainSegmentLoader_.on("timeout", function() {
      t.experimentalBufferBasedABR && t.mainSegmentLoader_.load();
    }), this.experimentalBufferBasedABR || this.mainSegmentLoader_.on("progress", function() {
      t.trigger("progress");
    }), this.mainSegmentLoader_.on("error", function() {
      t.blacklistCurrentPlaylist(t.mainSegmentLoader_.error());
    }), this.mainSegmentLoader_.on("appenderror", function() {
      t.error = t.mainSegmentLoader_.error_, t.trigger("error");
    }), this.mainSegmentLoader_.on("syncinfoupdate", function() {
      t.onSyncInfoUpdate_();
    }), this.mainSegmentLoader_.on("timestampoffset", function() {
      t.tech_.trigger({
        type: "usage",
        name: "vhs-timestamp-offset"
      }), t.tech_.trigger({
        type: "usage",
        name: "hls-timestamp-offset"
      });
    }), this.audioSegmentLoader_.on("syncinfoupdate", function() {
      t.onSyncInfoUpdate_();
    }), this.audioSegmentLoader_.on("appenderror", function() {
      t.error = t.audioSegmentLoader_.error_, t.trigger("error");
    }), this.mainSegmentLoader_.on("ended", function() {
      t.logger_("main segment loader ended"), t.onEndOfStream();
    }), this.mainSegmentLoader_.on("earlyabort", function(s) {
      t.experimentalBufferBasedABR || (t.delegateLoaders_("all", ["abort"]), t.blacklistCurrentPlaylist({
        message: "Aborted early because there isn't enough bandwidth to complete the request without rebuffering."
      }, e1));
    });
    var r = function() {
      if (!t.sourceUpdater_.hasCreatedSourceBuffers())
        return t.tryToCreateSourceBuffers_();
      var s = t.getCodecsOrExclude_();
      !s || t.sourceUpdater_.addOrChangeSourceBuffers(s);
    };
    this.mainSegmentLoader_.on("trackinfo", r), this.audioSegmentLoader_.on("trackinfo", r), this.mainSegmentLoader_.on("fmp4", function() {
      t.triggeredFmp4Usage || (t.tech_.trigger({
        type: "usage",
        name: "vhs-fmp4"
      }), t.tech_.trigger({
        type: "usage",
        name: "hls-fmp4"
      }), t.triggeredFmp4Usage = !0);
    }), this.audioSegmentLoader_.on("fmp4", function() {
      t.triggeredFmp4Usage || (t.tech_.trigger({
        type: "usage",
        name: "vhs-fmp4"
      }), t.tech_.trigger({
        type: "usage",
        name: "hls-fmp4"
      }), t.triggeredFmp4Usage = !0);
    }), this.audioSegmentLoader_.on("ended", function() {
      t.logger_("audioSegmentLoader ended"), t.onEndOfStream();
    });
  }, n.mediaSecondsLoaded_ = function() {
    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);
  }, n.load = function() {
    this.mainSegmentLoader_.load(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.load();
  }, n.smoothQualityChange_ = function(t) {
    t === void 0 && (t = this.selectPlaylist()), this.fastQualityChange_(t);
  }, n.fastQualityChange_ = function(t) {
    var r = this;
    if (t === void 0 && (t = this.selectPlaylist()), t === this.masterPlaylistLoader_.media()) {
      this.logger_("skipping fastQualityChange because new media is same as old");
      return;
    }
    this.switchMedia_(t, "fast-quality"), this.mainSegmentLoader_.resetEverything(function() {
      G.browser.IE_VERSION || G.browser.IS_EDGE ? r.tech_.setCurrentTime(r.tech_.currentTime() + 0.04) : r.tech_.setCurrentTime(r.tech_.currentTime());
    });
  }, n.play = function() {
    if (!this.setupFirstPlay()) {
      this.tech_.ended() && this.tech_.setCurrentTime(0), this.hasPlayed_ && this.load();
      var t = this.tech_.seekable();
      if (this.tech_.duration() === 1 / 0 && this.tech_.currentTime() < t.start(0))
        return this.tech_.setCurrentTime(t.end(t.length - 1));
    }
  }, n.setupFirstPlay = function() {
    var t = this, r = this.masterPlaylistLoader_.media();
    if (!r || this.tech_.paused() || this.hasPlayed_)
      return !1;
    if (!r.endList) {
      var s = this.seekable();
      if (!s.length)
        return !1;
      if (G.browser.IE_VERSION && this.tech_.readyState() === 0)
        return this.tech_.one("loadedmetadata", function() {
          t.trigger("firstplay"), t.tech_.setCurrentTime(s.end(0)), t.hasPlayed_ = !0;
        }), !1;
      this.trigger("firstplay"), this.tech_.setCurrentTime(s.end(0));
    }
    return this.hasPlayed_ = !0, this.load(), !0;
  }, n.handleSourceOpen_ = function() {
    if (this.tryToCreateSourceBuffers_(), this.tech_.autoplay()) {
      var t = this.tech_.play();
      typeof t < "u" && typeof t.then == "function" && t.then(null, function(r) {
      });
    }
    this.trigger("sourceopen");
  }, n.handleSourceEnded_ = function() {
    if (this.inbandTextTracks_.metadataTrack_) {
      var t = this.inbandTextTracks_.metadataTrack_.cues;
      if (!(!t || !t.length)) {
        var r = this.duration();
        t[t.length - 1].endTime = isNaN(r) || Math.abs(r) === 1 / 0 ? Number.MAX_VALUE : r;
      }
    }
  }, n.handleDurationChange_ = function() {
    this.tech_.trigger("durationchange");
  }, n.onEndOfStream = function() {
    var t = this.mainSegmentLoader_.ended_;
    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
      var r = this.mainSegmentLoader_.getCurrentMediaInfo_();
      !r || r.hasVideo ? t = t && this.audioSegmentLoader_.ended_ : t = this.audioSegmentLoader_.ended_;
    }
    !t || (this.stopABRTimer_(), this.sourceUpdater_.endOfStream());
  }, n.stuckAtPlaylistEnd_ = function(t) {
    var r = this.seekable();
    if (!r.length)
      return !1;
    var s = this.syncController_.getExpiredTime(t, this.duration());
    if (s === null)
      return !1;
    var a = fn.Playlist.playlistEnd(t, s), o = this.tech_.currentTime(), u = this.tech_.buffered();
    if (!u.length)
      return a - o <= rn;
    var l = u.end(u.length - 1);
    return l - o <= rn && a - l <= rn;
  }, n.blacklistCurrentPlaylist = function(t, r) {
    t === void 0 && (t = {});
    var s = t.playlist || this.masterPlaylistLoader_.media();
    if (r = r || t.blacklistDuration || this.blacklistDuration, !s) {
      this.error = t, this.mediaSource.readyState !== "open" ? this.trigger("error") : this.sourceUpdater_.endOfStream("network");
      return;
    }
    s.playlistErrors_++;
    var a = this.masterPlaylistLoader_.master.playlists, o = a.filter(mu), u = o.length === 1 && o[0] === s;
    if (a.length === 1 && r !== 1 / 0)
      return G.log.warn("Problem encountered with playlist " + s.id + ". Trying again since it is the only playlist."), this.tech_.trigger("retryplaylist"), this.masterPlaylistLoader_.load(u);
    if (u) {
      var l = !1;
      a.forEach(function(b) {
        if (b !== s) {
          var I = b.excludeUntil;
          typeof I < "u" && I !== 1 / 0 && (l = !0, delete b.excludeUntil);
        }
      }), l && (G.log.warn("Removing other playlists from the exclusion list because the last rendition is about to be excluded."), this.tech_.trigger("retryplaylist"));
    }
    var d;
    s.playlistErrors_ > this.maxPlaylistRetries ? d = 1 / 0 : d = Date.now() + r * 1e3, s.excludeUntil = d, t.reason && (s.lastExcludeReason_ = t.reason), this.tech_.trigger("blacklistplaylist"), this.tech_.trigger({
      type: "usage",
      name: "vhs-rendition-blacklisted"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-rendition-blacklisted"
    });
    var p = this.selectPlaylist();
    if (!p) {
      this.error = "Playback cannot continue. No available working or supported playlists.", this.trigger("error");
      return;
    }
    var h = t.internal ? this.logger_ : G.log.warn, m = t.message ? " " + t.message : "";
    h((t.internal ? "Internal problem" : "Problem") + " encountered with playlist " + s.id + "." + (m + " Switching to playlist " + p.id + ".")), p.attributes.AUDIO !== s.attributes.AUDIO && this.delegateLoaders_("audio", ["abort", "pause"]), p.attributes.SUBTITLES !== s.attributes.SUBTITLES && this.delegateLoaders_("subtitle", ["abort", "pause"]), this.delegateLoaders_("main", ["abort", "pause"]);
    var y = p.targetDuration / 2 * 1e3 || 5 * 1e3, T = typeof p.lastRequest == "number" && Date.now() - p.lastRequest <= y;
    return this.switchMedia_(p, "exclude", u || T);
  }, n.pauseLoading = function() {
    this.delegateLoaders_("all", ["abort", "pause"]), this.stopABRTimer_();
  }, n.delegateLoaders_ = function(t, r) {
    var s = this, a = [], o = t === "all";
    (o || t === "main") && a.push(this.masterPlaylistLoader_);
    var u = [];
    (o || t === "audio") && u.push("AUDIO"), (o || t === "subtitle") && (u.push("CLOSED-CAPTIONS"), u.push("SUBTITLES")), u.forEach(function(l) {
      var d = s.mediaTypes_[l] && s.mediaTypes_[l].activePlaylistLoader;
      d && a.push(d);
    }), ["main", "audio", "subtitle"].forEach(function(l) {
      var d = s[l + "SegmentLoader_"];
      d && (t === l || t === "all") && a.push(d);
    }), a.forEach(function(l) {
      return r.forEach(function(d) {
        typeof l[d] == "function" && l[d]();
      });
    });
  }, n.setCurrentTime = function(t) {
    var r = Qr(this.tech_.buffered(), t);
    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media()) || !this.masterPlaylistLoader_.media().segments)
      return 0;
    if (r && r.length)
      return t;
    this.mainSegmentLoader_.resetEverything(), this.mainSegmentLoader_.abort(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.resetEverything(), this.audioSegmentLoader_.abort()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.resetEverything(), this.subtitleSegmentLoader_.abort()), this.load();
  }, n.duration = function() {
    if (!this.masterPlaylistLoader_)
      return 0;
    var t = this.masterPlaylistLoader_.media();
    return t ? t.endList ? this.mediaSource ? this.mediaSource.duration : fn.Playlist.duration(t) : 1 / 0 : 0;
  }, n.seekable = function() {
    return this.seekable_;
  }, n.onSyncInfoUpdate_ = function() {
    var t;
    if (this.masterPlaylistLoader_) {
      var r = this.masterPlaylistLoader_.media();
      if (r) {
        var s = this.syncController_.getExpiredTime(r, this.duration());
        if (s !== null) {
          var a = this.masterPlaylistLoader_.master, o = fn.Playlist.seekable(r, s, fn.Playlist.liveEdgeDelay(a, r));
          if (o.length !== 0 && !(this.mediaTypes_.AUDIO.activePlaylistLoader && (r = this.mediaTypes_.AUDIO.activePlaylistLoader.media(), s = this.syncController_.getExpiredTime(r, this.duration()), s === null || (t = fn.Playlist.seekable(r, s, fn.Playlist.liveEdgeDelay(a, r)), t.length === 0)))) {
            var u, l;
            this.seekable_ && this.seekable_.length && (u = this.seekable_.end(0), l = this.seekable_.start(0)), t ? t.start(0) > o.end(0) || o.start(0) > t.end(0) ? this.seekable_ = o : this.seekable_ = G.createTimeRanges([[t.start(0) > o.start(0) ? t.start(0) : o.start(0), t.end(0) < o.end(0) ? t.end(0) : o.end(0)]]) : this.seekable_ = o, !(this.seekable_ && this.seekable_.length && this.seekable_.end(0) === u && this.seekable_.start(0) === l) && (this.logger_("seekable updated [" + Cv(this.seekable_) + "]"), this.tech_.trigger("seekablechanged"));
          }
        }
      }
    }
  }, n.updateDuration = function(t) {
    if (this.updateDuration_ && (this.mediaSource.removeEventListener("sourceopen", this.updateDuration_), this.updateDuration_ = null), this.mediaSource.readyState !== "open") {
      this.updateDuration_ = this.updateDuration.bind(this, t), this.mediaSource.addEventListener("sourceopen", this.updateDuration_);
      return;
    }
    if (t) {
      var r = this.seekable();
      if (!r.length)
        return;
      (isNaN(this.mediaSource.duration) || this.mediaSource.duration < r.end(r.length - 1)) && this.sourceUpdater_.setDuration(r.end(r.length - 1));
      return;
    }
    var s = this.tech_.buffered(), a = fn.Playlist.duration(this.masterPlaylistLoader_.media());
    s.length > 0 && (a = Math.max(a, s.end(s.length - 1))), this.mediaSource.duration !== a && this.sourceUpdater_.setDuration(a);
  }, n.dispose = function() {
    var t = this;
    this.trigger("dispose"), this.decrypter_.terminate(), this.masterPlaylistLoader_.dispose(), this.mainSegmentLoader_.dispose(), this.loadOnPlay_ && this.tech_.off("play", this.loadOnPlay_), ["AUDIO", "SUBTITLES"].forEach(function(r) {
      var s = t.mediaTypes_[r].groups;
      for (var a in s)
        s[a].forEach(function(o) {
          o.playlistLoader && o.playlistLoader.dispose();
        });
    }), this.audioSegmentLoader_.dispose(), this.subtitleSegmentLoader_.dispose(), this.sourceUpdater_.dispose(), this.timelineChangeController_.dispose(), this.stopABRTimer_(), this.updateDuration_ && this.mediaSource.removeEventListener("sourceopen", this.updateDuration_), this.mediaSource.removeEventListener("durationchange", this.handleDurationChange_), this.mediaSource.removeEventListener("sourceopen", this.handleSourceOpen_), this.mediaSource.removeEventListener("sourceended", this.handleSourceEnded_), this.off();
  }, n.master = function() {
    return this.masterPlaylistLoader_.master;
  }, n.media = function() {
    return this.masterPlaylistLoader_.media() || this.initialMedia_;
  }, n.areMediaTypesKnown_ = function() {
    var t = !!this.mediaTypes_.AUDIO.activePlaylistLoader, r = !!this.mainSegmentLoader_.getCurrentMediaInfo_(), s = t ? !!this.audioSegmentLoader_.getCurrentMediaInfo_() : !0;
    return !(!r || !s);
  }, n.getCodecsOrExclude_ = function() {
    var t = this, r = {
      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},
      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}
    }, s = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media();
    r.video = r.main;
    var a = ia(this.master(), s), o = {}, u = !!this.mediaTypes_.AUDIO.activePlaylistLoader;
    if (r.main.hasVideo && (o.video = a.video || r.main.videoCodec || Ab), r.main.isMuxed && (o.video += "," + (a.audio || r.main.audioCodec || Ph)), (r.main.hasAudio && !r.main.isMuxed || r.audio.hasAudio || u) && (o.audio = a.audio || r.main.audioCodec || r.audio.audioCodec || Ph, r.audio.isFmp4 = r.main.hasAudio && !r.main.isMuxed ? r.main.isFmp4 : r.audio.isFmp4), !o.audio && !o.video) {
      this.blacklistCurrentPlaylist({
        playlist: s,
        message: "Could not determine codecs for playlist.",
        blacklistDuration: 1 / 0
      });
      return;
    }
    var l = function(T, b) {
      return T ? ho(b) : zu(b);
    }, d = {}, p;
    if (["video", "audio"].forEach(function(T) {
      if (o.hasOwnProperty(T) && !l(r[T].isFmp4, o[T])) {
        var b = r[T].isFmp4 ? "browser" : "muxer";
        d[b] = d[b] || [], d[b].push(o[T]), T === "audio" && (p = b);
      }
    }), u && p && s.attributes.AUDIO) {
      var h = s.attributes.AUDIO;
      this.master().playlists.forEach(function(T) {
        var b = T.attributes && T.attributes.AUDIO;
        b === h && T !== s && (T.excludeUntil = 1 / 0);
      }), this.logger_("excluding audio group " + h + " as " + p + ' does not support codec(s): "' + o.audio + '"');
    }
    if (Object.keys(d).length) {
      var m = Object.keys(d).reduce(function(T, b) {
        return T && (T += ", "), T += b + ' does not support codec(s): "' + d[b].join(",") + '"', T;
      }, "") + ".";
      this.blacklistCurrentPlaylist({
        playlist: s,
        internal: !0,
        message: m,
        blacklistDuration: 1 / 0
      });
      return;
    }
    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {
      var y = [];
      if (["video", "audio"].forEach(function(T) {
        var b = (en(t.sourceUpdater_.codecs[T] || "")[0] || {}).type, I = (en(o[T] || "")[0] || {}).type;
        b && I && b.toLowerCase() !== I.toLowerCase() && y.push('"' + t.sourceUpdater_.codecs[T] + '" -> "' + o[T] + '"');
      }), y.length) {
        this.blacklistCurrentPlaylist({
          playlist: s,
          message: "Codec switching not supported: " + y.join(", ") + ".",
          blacklistDuration: 1 / 0,
          internal: !0
        });
        return;
      }
    }
    return o;
  }, n.tryToCreateSourceBuffers_ = function() {
    if (!(this.mediaSource.readyState !== "open" || this.sourceUpdater_.hasCreatedSourceBuffers()) && this.areMediaTypesKnown_()) {
      var t = this.getCodecsOrExclude_();
      if (t) {
        this.sourceUpdater_.createSourceBuffers(t);
        var r = [t.video, t.audio].filter(Boolean).join(",");
        this.excludeIncompatibleVariants_(r);
      }
    }
  }, n.excludeUnsupportedVariants_ = function() {
    var t = this, r = this.master().playlists, s = [];
    Object.keys(r).forEach(function(a) {
      var o = r[a];
      if (s.indexOf(o.id) === -1) {
        s.push(o.id);
        var u = ia(t.master, o), l = [];
        u.audio && !zu(u.audio) && !ho(u.audio) && l.push("audio codec " + u.audio), u.video && !zu(u.video) && !ho(u.video) && l.push("video codec " + u.video), u.text && u.text === "stpp.ttml.im1t" && l.push("text codec " + u.text), l.length && (o.excludeUntil = 1 / 0, t.logger_("excluding " + o.id + " for unsupported: " + l.join(", ")));
      }
    });
  }, n.excludeIncompatibleVariants_ = function(t) {
    var r = this, s = [], a = this.master().playlists, o = Vo(en(t)), u = Bp(o), l = o.video && en(o.video)[0] || null, d = o.audio && en(o.audio)[0] || null;
    Object.keys(a).forEach(function(p) {
      var h = a[p];
      if (!(s.indexOf(h.id) !== -1 || h.excludeUntil === 1 / 0)) {
        s.push(h.id);
        var m = [], y = ia(r.masterPlaylistLoader_.master, h), T = Bp(y);
        if (!(!y.audio && !y.video)) {
          if (T !== u && m.push('codec count "' + T + '" !== "' + u + '"'), !r.sourceUpdater_.canChangeType()) {
            var b = y.video && en(y.video)[0] || null, I = y.audio && en(y.audio)[0] || null;
            b && l && b.type.toLowerCase() !== l.type.toLowerCase() && m.push('video codec "' + b.type + '" !== "' + l.type + '"'), I && d && I.type.toLowerCase() !== d.type.toLowerCase() && m.push('audio codec "' + I.type + '" !== "' + d.type + '"');
          }
          m.length && (h.excludeUntil = 1 / 0, r.logger_("blacklisting " + h.id + ": " + m.join(" && ")));
        }
      }
    });
  }, n.updateAdCues_ = function(t) {
    var r = 0, s = this.seekable();
    s.length && (r = s.start(0)), Bw(t, this.cueTagsTrack_, r);
  }, n.goalBufferLength = function() {
    var t = this.tech_.currentTime(), r = Kt.GOAL_BUFFER_LENGTH, s = Kt.GOAL_BUFFER_LENGTH_RATE, a = Math.max(r, Kt.MAX_GOAL_BUFFER_LENGTH);
    return Math.min(r + t * s, a);
  }, n.bufferLowWaterLine = function() {
    var t = this.tech_.currentTime(), r = Kt.BUFFER_LOW_WATER_LINE, s = Kt.BUFFER_LOW_WATER_LINE_RATE, a = Math.max(r, Kt.MAX_BUFFER_LOW_WATER_LINE), o = Math.max(r, Kt.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);
    return Math.min(r + t * s, this.experimentalBufferBasedABR ? o : a);
  }, n.bufferHighWaterLine = function() {
    return Kt.BUFFER_HIGH_WATER_LINE;
  }, i;
}(G.EventTarget), s1 = function(e, i, n) {
  return function(t) {
    var r = e.master.playlists[i], s = Gd(r), a = mu(r);
    return typeof t > "u" ? a : (t ? delete r.disabled : r.disabled = !0, t !== a && !s && (n(), t ? e.trigger("renditionenabled") : e.trigger("renditiondisabled")), t);
  };
}, a1 = function(e, i, n) {
  var t = e.masterPlaylistController_, r = e.options_.smoothQualityChange, s = r ? "smooth" : "fast", a = t[s + "QualityChange_"].bind(t);
  if (i.attributes) {
    var o = i.attributes.RESOLUTION;
    this.width = o && o.width, this.height = o && o.height, this.bandwidth = i.attributes.BANDWIDTH, this.frameRate = i.attributes["FRAME-RATE"];
  }
  this.codecs = ia(t.master(), i), this.playlist = i, this.id = n, this.enabled = s1(e.playlists, i.id, a);
}, o1 = function(e) {
  e.representations = function() {
    var i = e.masterPlaylistController_.master(), n = Ca(i) ? e.masterPlaylistController_.getAudioTrackPlaylists_() : i.playlists;
    return n ? n.filter(function(t) {
      return !Gd(t);
    }).map(function(t, r) {
      return new a1(e, t, t.id);
    }) : [];
  };
}, Qp = ["seeking", "seeked", "pause", "playing", "error"], u1 = /* @__PURE__ */ function() {
  function e(n) {
    var t = this;
    this.masterPlaylistController_ = n.masterPlaylistController, this.tech_ = n.tech, this.seekable = n.seekable, this.allowSeeksWithinUnsafeLiveWindow = n.allowSeeksWithinUnsafeLiveWindow, this.liveRangeSafeTimeDelta = n.liveRangeSafeTimeDelta, this.media = n.media, this.consecutiveUpdates = 0, this.lastRecordedTime = null, this.timer_ = null, this.checkCurrentTimeTimeout_ = null, this.logger_ = zi("PlaybackWatcher"), this.logger_("initialize");
    var r = function() {
      return t.monitorCurrentTime_();
    }, s = function() {
      return t.monitorCurrentTime_();
    }, a = function() {
      return t.techWaiting_();
    }, o = function() {
      return t.cancelTimer_();
    }, u = this.masterPlaylistController_, l = ["main", "subtitle", "audio"], d = {};
    l.forEach(function(h) {
      d[h] = {
        reset: function() {
          return t.resetSegmentDownloads_(h);
        },
        updateend: function() {
          return t.checkSegmentDownloads_(h);
        }
      }, u[h + "SegmentLoader_"].on("appendsdone", d[h].updateend), u[h + "SegmentLoader_"].on("playlistupdate", d[h].reset), t.tech_.on(["seeked", "seeking"], d[h].reset);
    });
    var p = function(h) {
      ["main", "audio"].forEach(function(m) {
        u[m + "SegmentLoader_"][h]("appended", t.seekingAppendCheck_);
      });
    };
    this.seekingAppendCheck_ = function() {
      t.fixesBadSeeks_() && (t.consecutiveUpdates = 0, t.lastRecordedTime = t.tech_.currentTime(), p("off"));
    }, this.clearSeekingAppendCheck_ = function() {
      return p("off");
    }, this.watchForBadSeeking_ = function() {
      t.clearSeekingAppendCheck_(), p("on");
    }, this.tech_.on("seeked", this.clearSeekingAppendCheck_), this.tech_.on("seeking", this.watchForBadSeeking_), this.tech_.on("waiting", a), this.tech_.on(Qp, o), this.tech_.on("canplay", s), this.tech_.one("play", r), this.dispose = function() {
      t.clearSeekingAppendCheck_(), t.logger_("dispose"), t.tech_.off("waiting", a), t.tech_.off(Qp, o), t.tech_.off("canplay", s), t.tech_.off("play", r), t.tech_.off("seeking", t.watchForBadSeeking_), t.tech_.off("seeked", t.clearSeekingAppendCheck_), l.forEach(function(h) {
        u[h + "SegmentLoader_"].off("appendsdone", d[h].updateend), u[h + "SegmentLoader_"].off("playlistupdate", d[h].reset), t.tech_.off(["seeked", "seeking"], d[h].reset);
      }), t.checkCurrentTimeTimeout_ && q.clearTimeout(t.checkCurrentTimeTimeout_), t.cancelTimer_();
    };
  }
  var i = e.prototype;
  return i.monitorCurrentTime_ = function() {
    this.checkCurrentTime_(), this.checkCurrentTimeTimeout_ && q.clearTimeout(this.checkCurrentTimeTimeout_), this.checkCurrentTimeTimeout_ = q.setTimeout(this.monitorCurrentTime_.bind(this), 250);
  }, i.resetSegmentDownloads_ = function(n) {
    var t = this.masterPlaylistController_[n + "SegmentLoader_"];
    this[n + "StalledDownloads_"] > 0 && this.logger_("resetting possible stalled download count for " + n + " loader"), this[n + "StalledDownloads_"] = 0, this[n + "Buffered_"] = t.buffered_();
  }, i.checkSegmentDownloads_ = function(n) {
    var t = this.masterPlaylistController_, r = t[n + "SegmentLoader_"], s = r.buffered_(), a = ZE(this[n + "Buffered_"], s);
    if (this[n + "Buffered_"] = s, a) {
      this.resetSegmentDownloads_(n);
      return;
    }
    this[n + "StalledDownloads_"]++, this.logger_("found #" + this[n + "StalledDownloads_"] + " " + n + " appends that did not increase buffer (possible stalled download)", {
      playlistId: r.playlist_ && r.playlist_.id,
      buffered: dr(s)
    }), !(this[n + "StalledDownloads_"] < 10) && (this.logger_(n + " loader stalled download exclusion"), this.resetSegmentDownloads_(n), this.tech_.trigger({
      type: "usage",
      name: "vhs-" + n + "-download-exclusion"
    }), n !== "subtitle" && t.blacklistCurrentPlaylist({
      message: "Excessive " + n + " segment downloading detected."
    }, 1 / 0));
  }, i.checkCurrentTime_ = function() {
    if (!(this.tech_.paused() || this.tech_.seeking())) {
      var n = this.tech_.currentTime(), t = this.tech_.buffered();
      if (this.lastRecordedTime === n && (!t.length || n + rn >= t.end(t.length - 1)))
        return this.techWaiting_();
      this.consecutiveUpdates >= 5 && n === this.lastRecordedTime ? (this.consecutiveUpdates++, this.waiting_()) : n === this.lastRecordedTime ? this.consecutiveUpdates++ : (this.consecutiveUpdates = 0, this.lastRecordedTime = n);
    }
  }, i.cancelTimer_ = function() {
    this.consecutiveUpdates = 0, this.timer_ && (this.logger_("cancelTimer_"), clearTimeout(this.timer_)), this.timer_ = null;
  }, i.fixesBadSeeks_ = function() {
    var n = this.tech_.seeking();
    if (!n)
      return !1;
    var t = this.seekable(), r = this.tech_.currentTime(), s = this.afterSeekableWindow_(t, r, this.media(), this.allowSeeksWithinUnsafeLiveWindow), a;
    if (s) {
      var o = t.end(t.length - 1);
      a = o;
    }
    if (this.beforeSeekableWindow_(t, r)) {
      var u = t.start(0);
      a = u + (u === t.end(0) ? 0 : rn);
    }
    if (typeof a < "u")
      return this.logger_("Trying to seek outside of seekable at time " + r + " with " + ("seekable range " + Cv(t) + ". Seeking to ") + (a + ".")), this.tech_.setCurrentTime(a), !0;
    for (var l = this.masterPlaylistController_.sourceUpdater_, d = this.tech_.buffered(), p = l.audioBuffer ? l.audioBuffered() : null, h = l.videoBuffer ? l.videoBuffered() : null, m = this.media(), y = m.partTargetDuration ? m.partTargetDuration : (m.targetDuration - jn) * 2, T = [p, h], b = 0; b < T.length; b++)
      if (T[b]) {
        var I = Hd(T[b], r);
        if (I < y)
          return !1;
      }
    var B = ro(d, r);
    return B.length === 0 ? !1 : (a = B.start(0) + rn, this.logger_("Buffered region starts (" + B.start(0) + ") " + (" just beyond seek point (" + r + "). Seeking to " + a + ".")), this.tech_.setCurrentTime(a), !0);
  }, i.waiting_ = function() {
    if (!this.techWaiting_()) {
      var n = this.tech_.currentTime(), t = this.tech_.buffered(), r = Qr(t, n);
      if (r.length && n + 3 <= r.end(0)) {
        this.cancelTimer_(), this.tech_.setCurrentTime(n), this.logger_("Stopped at " + n + " while inside a buffered region " + ("[" + r.start(0) + " -> " + r.end(0) + "]. Attempting to resume ") + "playback by seeking to the current time."), this.tech_.trigger({
          type: "usage",
          name: "vhs-unknown-waiting"
        }), this.tech_.trigger({
          type: "usage",
          name: "hls-unknown-waiting"
        });
        return;
      }
    }
  }, i.techWaiting_ = function() {
    var n = this.seekable(), t = this.tech_.currentTime();
    if (this.tech_.seeking() || this.timer_ !== null)
      return !0;
    if (this.beforeSeekableWindow_(n, t)) {
      var r = n.end(n.length - 1);
      return this.logger_("Fell out of live window at time " + t + ". Seeking to " + ("live point (seekable end) " + r)), this.cancelTimer_(), this.tech_.setCurrentTime(r), this.tech_.trigger({
        type: "usage",
        name: "vhs-live-resync"
      }), this.tech_.trigger({
        type: "usage",
        name: "hls-live-resync"
      }), !0;
    }
    var s = this.tech_.vhs.masterPlaylistController_.sourceUpdater_, a = this.tech_.buffered(), o = this.videoUnderflow_({
      audioBuffered: s.audioBuffered(),
      videoBuffered: s.videoBuffered(),
      currentTime: t
    });
    if (o)
      return this.cancelTimer_(), this.tech_.setCurrentTime(t), this.tech_.trigger({
        type: "usage",
        name: "vhs-video-underflow"
      }), this.tech_.trigger({
        type: "usage",
        name: "hls-video-underflow"
      }), !0;
    var u = ro(a, t);
    if (u.length > 0) {
      var l = u.start(0) - t;
      return this.logger_("Stopped at " + t + ", setting timer for " + l + ", seeking " + ("to " + u.start(0))), this.cancelTimer_(), this.timer_ = setTimeout(this.skipTheGap_.bind(this), l * 1e3, t), !0;
    }
    return !1;
  }, i.afterSeekableWindow_ = function(n, t, r, s) {
    if (s === void 0 && (s = !1), !n.length)
      return !1;
    var a = n.end(n.length - 1) + rn, o = !r.endList;
    return o && s && (a = n.end(n.length - 1) + r.targetDuration * 3), t > a;
  }, i.beforeSeekableWindow_ = function(n, t) {
    return !!(n.length && n.start(0) > 0 && t < n.start(0) - this.liveRangeSafeTimeDelta);
  }, i.videoUnderflow_ = function(n) {
    var t = n.videoBuffered, r = n.audioBuffered, s = n.currentTime;
    if (t) {
      var a;
      if (t.length && r.length) {
        var o = Qr(t, s - 3), u = Qr(t, s), l = Qr(r, s);
        l.length && !u.length && o.length && (a = {
          start: o.end(0),
          end: l.end(0)
        });
      } else {
        var d = ro(t, s);
        d.length || (a = this.gapFromVideoUnderflow_(t, s));
      }
      return a ? (this.logger_("Encountered a gap in video from " + a.start + " to " + a.end + ". " + ("Seeking to current time " + s)), !0) : !1;
    }
  }, i.skipTheGap_ = function(n) {
    var t = this.tech_.buffered(), r = this.tech_.currentTime(), s = ro(t, r);
    this.cancelTimer_(), !(s.length === 0 || r !== n) && (this.logger_("skipTheGap_:", "currentTime:", r, "scheduled currentTime:", n, "nextRange start:", s.start(0)), this.tech_.setCurrentTime(s.start(0) + jn), this.tech_.trigger({
      type: "usage",
      name: "vhs-gap-skip"
    }), this.tech_.trigger({
      type: "usage",
      name: "hls-gap-skip"
    }));
  }, i.gapFromVideoUnderflow_ = function(n, t) {
    for (var r = JE(n), s = 0; s < r.length; s++) {
      var a = r.start(s), o = r.end(s);
      if (t - a < 4 && t - a > 2)
        return {
          start: a,
          end: o
        };
    }
    return null;
  }, e;
}(), l1 = {
  errorInterval: 30,
  getSource: function(e) {
    var i = this.tech({
      IWillNotUseThisInPlugins: !0
    }), n = i.currentSource_ || this.currentSource();
    return e(n);
  }
}, c1 = function e(i, n) {
  var t = 0, r = 0, s = G.mergeOptions(l1, n);
  i.ready(function() {
    i.trigger({
      type: "usage",
      name: "vhs-error-reload-initialized"
    }), i.trigger({
      type: "usage",
      name: "hls-error-reload-initialized"
    });
  });
  var a = function() {
    r && i.currentTime(r);
  }, o = function(p) {
    p != null && (r = i.duration() !== 1 / 0 && i.currentTime() || 0, i.one("loadedmetadata", a), i.src(p), i.trigger({
      type: "usage",
      name: "vhs-error-reload"
    }), i.trigger({
      type: "usage",
      name: "hls-error-reload"
    }), i.play());
  }, u = function() {
    if (Date.now() - t < s.errorInterval * 1e3) {
      i.trigger({
        type: "usage",
        name: "vhs-error-reload-canceled"
      }), i.trigger({
        type: "usage",
        name: "hls-error-reload-canceled"
      });
      return;
    }
    if (!s.getSource || typeof s.getSource != "function") {
      G.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!");
      return;
    }
    return t = Date.now(), s.getSource.call(i, o);
  }, l = function p() {
    i.off("loadedmetadata", a), i.off("error", u), i.off("dispose", p);
  }, d = function(p) {
    l(), e(i, p);
  };
  i.on("error", u), i.on("dispose", l), i.reloadSourceOnError = d;
}, d1 = function(e) {
  c1(this, e);
}, cy = "2.16.2", h1 = "6.0.1", p1 = "0.22.1", f1 = "4.8.0", m1 = "3.1.3", Zt = {
  PlaylistLoader: Jr,
  Playlist: bi,
  utils: wS,
  STANDARD_PLAYLIST_SELECTOR: Fp,
  INITIAL_PLAYLIST_SELECTOR: pw,
  lastBandwidthSelector: Fp,
  movingAverageBandwidthSelector: dw,
  comparePlaylistBandwidth: Qd,
  comparePlaylistResolution: cw,
  xhr: qv()
};
Object.keys(Kt).forEach(function(e) {
  Object.defineProperty(Zt, e, {
    get: function() {
      return G.log.warn("using Vhs." + e + " is UNSAFE be sure you know what you are doing"), Kt[e];
    },
    set: function(i) {
      if (G.log.warn("using Vhs." + e + " is UNSAFE be sure you know what you are doing"), typeof i != "number" || i < 0) {
        G.log.warn("value of Vhs." + e + " must be greater than or equal to 0");
        return;
      }
      Kt[e] = i;
    }
  });
});
var dy = "videojs-vhs", hy = function(e, i) {
  for (var n = i.media(), t = -1, r = 0; r < e.length; r++)
    if (e[r].id === n.id) {
      t = r;
      break;
    }
  e.selectedIndex_ = t, e.trigger({
    selectedIndex: t,
    type: "change"
  });
}, g1 = function(e, i) {
  i.representations().forEach(function(n) {
    e.addQualityLevel(n);
  }), hy(e, i.playlists);
};
Zt.canPlaySource = function() {
  return G.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.");
};
var v1 = function(e, i, n) {
  if (!e)
    return e;
  var t = {};
  i && i.attributes && i.attributes.CODECS && (t = Vo(en(i.attributes.CODECS))), n && n.attributes && n.attributes.CODECS && (t.audio = n.attributes.CODECS);
  var r = sa(t.video), s = sa(t.audio), a = {};
  for (var o in e)
    a[o] = {}, s && (a[o].audioContentType = s), r && (a[o].videoContentType = r), i.contentProtection && i.contentProtection[o] && i.contentProtection[o].pssh && (a[o].pssh = i.contentProtection[o].pssh), typeof e[o] == "string" && (a[o].url = e[o]);
  return G.mergeOptions(e, a);
}, y1 = function(e, i) {
  return e.reduce(function(n, t) {
    if (!t.contentProtection)
      return n;
    var r = i.reduce(function(s, a) {
      var o = t.contentProtection[a];
      return o && o.pssh && (s[a] = {
        pssh: o.pssh
      }), s;
    }, {});
    return Object.keys(r).length && n.push(r), n;
  }, []);
}, _1 = function(e) {
  var i = e.player, n = e.sourceKeySystems, t = e.audioMedia, r = e.mainPlaylists;
  if (!i.eme.initializeMediaKeys)
    return Promise.resolve();
  var s = t ? r.concat([t]) : r, a = y1(s, Object.keys(n)), o = [], u = [];
  return a.forEach(function(l) {
    u.push(new Promise(function(d, p) {
      i.tech_.one("keysessioncreated", d);
    })), o.push(new Promise(function(d, p) {
      i.eme.initializeMediaKeys({
        keySystems: l
      }, function(h) {
        if (h) {
          p(h);
          return;
        }
        d();
      });
    }));
  }), Promise.race([
    Promise.all(o),
    Promise.race(u)
  ]);
}, b1 = function(e) {
  var i = e.player, n = e.sourceKeySystems, t = e.media, r = e.audioMedia, s = v1(n, t, r);
  return s ? (i.currentSource().keySystems = s, s && !i.eme ? (G.log.warn("DRM encrypted source cannot be decrypted without a DRM plugin"), !1) : !0) : !1;
}, py = function() {
  if (!q.localStorage)
    return null;
  var e = q.localStorage.getItem(dy);
  if (!e)
    return null;
  try {
    return JSON.parse(e);
  } catch {
    return null;
  }
}, T1 = function(e) {
  if (!q.localStorage)
    return !1;
  var i = py();
  i = i ? G.mergeOptions(i, e) : e;
  try {
    q.localStorage.setItem(dy, JSON.stringify(i));
  } catch {
    return !1;
  }
  return i;
}, E1 = function(e) {
  return e.toLowerCase().indexOf("data:application/vnd.videojs.vhs+json,") === 0 ? JSON.parse(e.substring(e.indexOf(",") + 1)) : e;
};
Zt.supportsNativeHls = function() {
  if (!me || !me.createElement)
    return !1;
  var e = me.createElement("video");
  if (!G.getTech("Html5").isSupported())
    return !1;
  var i = [
    "application/vnd.apple.mpegurl",
    "audio/mpegurl",
    "audio/x-mpegurl",
    "application/x-mpegurl",
    "video/x-mpegurl",
    "video/mpegurl",
    "application/mpegurl"
  ];
  return i.some(function(n) {
    return /maybe|probably/i.test(e.canPlayType(n));
  });
}();
Zt.supportsNativeDash = function() {
  return !me || !me.createElement || !G.getTech("Html5").isSupported() ? !1 : /maybe|probably/i.test(me.createElement("video").canPlayType("application/dash+xml"));
}();
Zt.supportsTypeNatively = function(e) {
  return e === "hls" ? Zt.supportsNativeHls : e === "dash" ? Zt.supportsNativeDash : !1;
};
Zt.isSupported = function() {
  return G.log.warn("HLS is no longer a tech. Please remove it from your player's techOrder.");
};
var S1 = G.getComponent("Component"), Yd = /* @__PURE__ */ function(e) {
  ye(i, e);
  function i(t, r, s) {
    var a;
    if (a = e.call(this, r, G.mergeOptions(s.hls, s.vhs)) || this, s.hls && Object.keys(s.hls).length && G.log.warn("Using hls options is deprecated. Please rename `hls` to `vhs` in your options object."), typeof s.initialBandwidth == "number" && (a.options_.bandwidth = s.initialBandwidth), a.logger_ = zi("VhsHandler"), r.options_ && r.options_.playerId) {
      var o = G(r.options_.playerId);
      o.hasOwnProperty("hls") || Object.defineProperty(o, "hls", {
        get: function() {
          return G.log.warn("player.hls is deprecated. Use player.tech().vhs instead."), r.trigger({
            type: "usage",
            name: "hls-player-access"
          }), Ge(a);
        },
        configurable: !0
      }), o.hasOwnProperty("vhs") || Object.defineProperty(o, "vhs", {
        get: function() {
          return G.log.warn("player.vhs is deprecated. Use player.tech().vhs instead."), r.trigger({
            type: "usage",
            name: "vhs-player-access"
          }), Ge(a);
        },
        configurable: !0
      }), o.hasOwnProperty("dash") || Object.defineProperty(o, "dash", {
        get: function() {
          return G.log.warn("player.dash is deprecated. Use player.tech().vhs instead."), Ge(a);
        },
        configurable: !0
      }), a.player_ = o;
    }
    if (a.tech_ = r, a.source_ = t, a.stats = {}, a.ignoreNextSeekingEvent_ = !1, a.setOptions_(), a.options_.overrideNative && r.overrideNativeAudioTracks && r.overrideNativeVideoTracks)
      r.overrideNativeAudioTracks(!0), r.overrideNativeVideoTracks(!0);
    else if (a.options_.overrideNative && (r.featuresNativeVideoTracks || r.featuresNativeAudioTracks))
      throw new Error("Overriding native HLS requires emulated tracks. See https://git.io/vMpjB");
    return a.on(me, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], function(u) {
      var l = me.fullscreenElement || me.webkitFullscreenElement || me.mozFullScreenElement || me.msFullscreenElement;
      l && l.contains(a.tech_.el()) ? a.masterPlaylistController_.fastQualityChange_() : a.masterPlaylistController_.checkABR_();
    }), a.on(a.tech_, "seeking", function() {
      if (this.ignoreNextSeekingEvent_) {
        this.ignoreNextSeekingEvent_ = !1;
        return;
      }
      this.setCurrentTime(this.tech_.currentTime());
    }), a.on(a.tech_, "error", function() {
      this.tech_.error() && this.masterPlaylistController_ && this.masterPlaylistController_.pauseLoading();
    }), a.on(a.tech_, "play", a.play), a;
  }
  var n = i.prototype;
  return n.setOptions_ = function() {
    var t = this;
    if (this.options_.withCredentials = this.options_.withCredentials || !1, this.options_.handleManifestRedirects = this.options_.handleManifestRedirects !== !1, this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions !== !1, this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || !1, this.options_.smoothQualityChange = this.options_.smoothQualityChange || !1, this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage < "u" ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || !1, this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || !1, this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || !1, this.options_.customTagParsers = this.options_.customTagParsers || [], this.options_.customTagMappers = this.options_.customTagMappers || [], this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || !1, typeof this.options_.blacklistDuration != "number" && (this.options_.blacklistDuration = 5 * 60), typeof this.options_.bandwidth != "number" && this.options_.useBandwidthFromLocalStorage) {
      var r = py();
      r && r.bandwidth && (this.options_.bandwidth = r.bandwidth, this.tech_.trigger({
        type: "usage",
        name: "vhs-bandwidth-from-local-storage"
      }), this.tech_.trigger({
        type: "usage",
        name: "hls-bandwidth-from-local-storage"
      })), r && r.throughput && (this.options_.throughput = r.throughput, this.tech_.trigger({
        type: "usage",
        name: "vhs-throughput-from-local-storage"
      }), this.tech_.trigger({
        type: "usage",
        name: "hls-throughput-from-local-storage"
      }));
    }
    typeof this.options_.bandwidth != "number" && (this.options_.bandwidth = Kt.INITIAL_BANDWIDTH), this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Kt.INITIAL_BANDWIDTH, ["withCredentials", "useDevicePixelRatio", "limitRenditionByPlayerDimensions", "bandwidth", "smoothQualityChange", "customTagParsers", "customTagMappers", "handleManifestRedirects", "cacheEncryptionKeys", "playlistSelector", "initialPlaylistSelector", "experimentalBufferBasedABR", "liveRangeSafeTimeDelta", "experimentalLLHLS", "useNetworkInformationApi", "useDtsForTimestampOffset", "experimentalExactManifestTimings", "experimentalLeastPixelDiffSelector"].forEach(function(s) {
      typeof t.source_[s] < "u" && (t.options_[s] = t.source_[s]);
    }), this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions, this.useDevicePixelRatio = this.options_.useDevicePixelRatio;
  }, n.src = function(t, r) {
    var s = this;
    if (t) {
      this.setOptions_(), this.options_.src = E1(this.source_.src), this.options_.tech = this.tech_, this.options_.externVhs = Zt, this.options_.sourceType = km(r), this.options_.seekTo = function(u) {
        s.tech_.setCurrentTime(u);
      }, this.options_.smoothQualityChange && G.log.warn("smoothQualityChange is deprecated and will be removed in the next major version"), this.masterPlaylistController_ = new r1(this.options_);
      var a = G.mergeOptions({
        liveRangeSafeTimeDelta: rn
      }, this.options_, {
        seekable: function() {
          return s.seekable();
        },
        media: function() {
          return s.masterPlaylistController_.media();
        },
        masterPlaylistController: this.masterPlaylistController_
      });
      this.playbackWatcher_ = new u1(a), this.masterPlaylistController_.on("error", function() {
        var u = G.players[s.tech_.options_.playerId], l = s.masterPlaylistController_.error;
        typeof l == "object" && !l.code ? l.code = 3 : typeof l == "string" && (l = {
          message: l,
          code: 3
        }), u.error(l);
      });
      var o = this.options_.experimentalBufferBasedABR ? Zt.movingAverageBandwidthSelector(0.55) : Zt.STANDARD_PLAYLIST_SELECTOR;
      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : o.bind(this), this.masterPlaylistController_.selectInitialPlaylist = Zt.INITIAL_PLAYLIST_SELECTOR.bind(this), this.playlists = this.masterPlaylistController_.masterPlaylistLoader_, this.mediaSource = this.masterPlaylistController_.mediaSource, Object.defineProperties(this, {
        selectPlaylist: {
          get: function() {
            return this.masterPlaylistController_.selectPlaylist;
          },
          set: function(u) {
            this.masterPlaylistController_.selectPlaylist = u.bind(this);
          }
        },
        throughput: {
          get: function() {
            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;
          },
          set: function(u) {
            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = u, this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;
          }
        },
        bandwidth: {
          get: function() {
            var u = this.masterPlaylistController_.mainSegmentLoader_.bandwidth, l = q.navigator.connection || q.navigator.mozConnection || q.navigator.webkitConnection, d = 1e7;
            if (this.options_.useNetworkInformationApi && l) {
              var p = l.downlink * 1e3 * 1e3;
              p >= d && u >= d ? u = Math.max(u, p) : u = p;
            }
            return u;
          },
          set: function(u) {
            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = u, this.masterPlaylistController_.mainSegmentLoader_.throughput = {
              rate: 0,
              count: 0
            };
          }
        },
        systemBandwidth: {
          get: function() {
            var u = 1 / (this.bandwidth || 1), l;
            this.throughput > 0 ? l = 1 / this.throughput : l = 0;
            var d = Math.floor(1 / (u + l));
            return d;
          },
          set: function() {
            G.log.error('The "systemBandwidth" property is read-only');
          }
        }
      }), this.options_.bandwidth && (this.bandwidth = this.options_.bandwidth), this.options_.throughput && (this.throughput = this.options_.throughput), Object.defineProperties(this.stats, {
        bandwidth: {
          get: function() {
            return s.bandwidth || 0;
          },
          enumerable: !0
        },
        mediaRequests: {
          get: function() {
            return s.masterPlaylistController_.mediaRequests_() || 0;
          },
          enumerable: !0
        },
        mediaRequestsAborted: {
          get: function() {
            return s.masterPlaylistController_.mediaRequestsAborted_() || 0;
          },
          enumerable: !0
        },
        mediaRequestsTimedout: {
          get: function() {
            return s.masterPlaylistController_.mediaRequestsTimedout_() || 0;
          },
          enumerable: !0
        },
        mediaRequestsErrored: {
          get: function() {
            return s.masterPlaylistController_.mediaRequestsErrored_() || 0;
          },
          enumerable: !0
        },
        mediaTransferDuration: {
          get: function() {
            return s.masterPlaylistController_.mediaTransferDuration_() || 0;
          },
          enumerable: !0
        },
        mediaBytesTransferred: {
          get: function() {
            return s.masterPlaylistController_.mediaBytesTransferred_() || 0;
          },
          enumerable: !0
        },
        mediaSecondsLoaded: {
          get: function() {
            return s.masterPlaylistController_.mediaSecondsLoaded_() || 0;
          },
          enumerable: !0
        },
        mediaAppends: {
          get: function() {
            return s.masterPlaylistController_.mediaAppends_() || 0;
          },
          enumerable: !0
        },
        mainAppendsToLoadedData: {
          get: function() {
            return s.masterPlaylistController_.mainAppendsToLoadedData_() || 0;
          },
          enumerable: !0
        },
        audioAppendsToLoadedData: {
          get: function() {
            return s.masterPlaylistController_.audioAppendsToLoadedData_() || 0;
          },
          enumerable: !0
        },
        appendsToLoadedData: {
          get: function() {
            return s.masterPlaylistController_.appendsToLoadedData_() || 0;
          },
          enumerable: !0
        },
        timeToLoadedData: {
          get: function() {
            return s.masterPlaylistController_.timeToLoadedData_() || 0;
          },
          enumerable: !0
        },
        buffered: {
          get: function() {
            return dr(s.tech_.buffered());
          },
          enumerable: !0
        },
        currentTime: {
          get: function() {
            return s.tech_.currentTime();
          },
          enumerable: !0
        },
        currentSource: {
          get: function() {
            return s.tech_.currentSource_;
          },
          enumerable: !0
        },
        currentTech: {
          get: function() {
            return s.tech_.name_;
          },
          enumerable: !0
        },
        duration: {
          get: function() {
            return s.tech_.duration();
          },
          enumerable: !0
        },
        master: {
          get: function() {
            return s.playlists.master;
          },
          enumerable: !0
        },
        playerDimensions: {
          get: function() {
            return s.tech_.currentDimensions();
          },
          enumerable: !0
        },
        seekable: {
          get: function() {
            return dr(s.tech_.seekable());
          },
          enumerable: !0
        },
        timestamp: {
          get: function() {
            return Date.now();
          },
          enumerable: !0
        },
        videoPlaybackQuality: {
          get: function() {
            return s.tech_.getVideoPlaybackQuality();
          },
          enumerable: !0
        }
      }), this.tech_.one("canplay", this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_)), this.tech_.on("bandwidthupdate", function() {
        s.options_.useBandwidthFromLocalStorage && T1({
          bandwidth: s.bandwidth,
          throughput: Math.round(s.throughput)
        });
      }), this.masterPlaylistController_.on("selectedinitialmedia", function() {
        o1(s);
      }), this.masterPlaylistController_.sourceUpdater_.on("createdsourcebuffers", function() {
        s.setupEme_();
      }), this.on(this.masterPlaylistController_, "progress", function() {
        this.tech_.trigger("progress");
      }), this.on(this.masterPlaylistController_, "firstplay", function() {
        this.ignoreNextSeekingEvent_ = !0;
      }), this.setupQualityLevels_(), this.tech_.el() && (this.mediaSourceUrl_ = q.URL.createObjectURL(this.masterPlaylistController_.mediaSource), this.tech_.src(this.mediaSourceUrl_));
    }
  }, n.createKeySessions_ = function() {
    var t = this, r = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;
    this.logger_("waiting for EME key session creation"), _1({
      player: this.player_,
      sourceKeySystems: this.source_.keySystems,
      audioMedia: r && r.media(),
      mainPlaylists: this.playlists.master.playlists
    }).then(function() {
      t.logger_("created EME key session"), t.masterPlaylistController_.sourceUpdater_.initializedEme();
    }).catch(function(s) {
      t.logger_("error while creating EME key session", s), t.player_.error({
        message: "Failed to initialize media keys for EME",
        code: 3
      });
    });
  }, n.handleWaitingForKey_ = function() {
    this.logger_("waitingforkey fired, attempting to create any new key sessions"), this.createKeySessions_();
  }, n.setupEme_ = function() {
    var t = this, r = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader, s = b1({
      player: this.player_,
      sourceKeySystems: this.source_.keySystems,
      media: this.playlists.media(),
      audioMedia: r && r.media()
    });
    if (this.player_.tech_.on("keystatuschange", function(a) {
      if (a.status === "output-restricted") {
        var o = t.masterPlaylistController_.master();
        if (!(!o || !o.playlists)) {
          var u = [];
          if (o.playlists.forEach(function(d) {
            d && d.attributes && d.attributes.RESOLUTION && d.attributes.RESOLUTION.height >= 720 && (!d.excludeUntil || d.excludeUntil < 1 / 0) && (d.excludeUntil = 1 / 0, u.push(d));
          }), u.length) {
            var l;
            (l = G.log).warn.apply(l, ['DRM keystatus changed to "output-restricted." Removing the following HD playlists that will most likely fail to play and clearing the buffer. This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(u)), t.masterPlaylistController_.fastQualityChange_();
          }
        }
      }
    }), this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this), this.player_.tech_.on("waitingforkey", this.handleWaitingForKey_), G.browser.IE_VERSION === 11 || !s) {
      this.masterPlaylistController_.sourceUpdater_.initializedEme();
      return;
    }
    this.createKeySessions_();
  }, n.setupQualityLevels_ = function() {
    var t = this, r = G.players[this.tech_.options_.playerId];
    !r || !r.qualityLevels || this.qualityLevels_ || (this.qualityLevels_ = r.qualityLevels(), this.masterPlaylistController_.on("selectedinitialmedia", function() {
      g1(t.qualityLevels_, t);
    }), this.playlists.on("mediachange", function() {
      hy(t.qualityLevels_, t.playlists);
    }));
  }, i.version = function() {
    return {
      "@videojs/http-streaming": cy,
      "mux.js": h1,
      "mpd-parser": p1,
      "m3u8-parser": f1,
      "aes-decrypter": m1
    };
  }, n.version = function() {
    return this.constructor.version();
  }, n.canChangeType = function() {
    return ly.canChangeType();
  }, n.play = function() {
    this.masterPlaylistController_.play();
  }, n.setCurrentTime = function(t) {
    this.masterPlaylistController_.setCurrentTime(t);
  }, n.duration = function() {
    return this.masterPlaylistController_.duration();
  }, n.seekable = function() {
    return this.masterPlaylistController_.seekable();
  }, n.dispose = function() {
    this.playbackWatcher_ && this.playbackWatcher_.dispose(), this.masterPlaylistController_ && this.masterPlaylistController_.dispose(), this.qualityLevels_ && this.qualityLevels_.dispose(), this.player_ && (delete this.player_.vhs, delete this.player_.dash, delete this.player_.hls), this.tech_ && this.tech_.vhs && delete this.tech_.vhs, this.tech_ && delete this.tech_.hls, this.mediaSourceUrl_ && q.URL.revokeObjectURL && (q.URL.revokeObjectURL(this.mediaSourceUrl_), this.mediaSourceUrl_ = null), this.tech_ && this.tech_.off("waitingforkey", this.handleWaitingForKey_), e.prototype.dispose.call(this);
  }, n.convertToProgramTime = function(t, r) {
    return PS({
      playlist: this.masterPlaylistController_.media(),
      time: t,
      callback: r
    });
  }, n.seekToProgramTime = function(t, r, s, a) {
    return s === void 0 && (s = !0), a === void 0 && (a = 2), LS({
      programTime: t,
      playlist: this.masterPlaylistController_.media(),
      retryCount: a,
      pauseAfterSeek: s,
      seekTo: this.options_.seekTo,
      tech: this.options_.tech,
      callback: r
    });
  }, i;
}(S1), fa = {
  name: "videojs-http-streaming",
  VERSION: cy,
  canHandleSource: function(e, i) {
    i === void 0 && (i = {});
    var n = G.mergeOptions(G.options, i);
    return fa.canPlayType(e.type, n);
  },
  handleSource: function(e, i, n) {
    n === void 0 && (n = {});
    var t = G.mergeOptions(G.options, n);
    return i.vhs = new Yd(e, i, t), G.hasOwnProperty("hls") || Object.defineProperty(i, "hls", {
      get: function() {
        return G.log.warn("player.tech().hls is deprecated. Use player.tech().vhs instead."), i.vhs;
      },
      configurable: !0
    }), i.vhs.xhr = qv(), i.vhs.src(e.src, e.type), i.vhs;
  },
  canPlayType: function(e, i) {
    var n = km(e);
    if (!n)
      return "";
    var t = fa.getOverrideNative(i), r = Zt.supportsTypeNatively(n), s = !r || t;
    return s ? "maybe" : "";
  },
  getOverrideNative: function(e) {
    e === void 0 && (e = {});
    var i = e, n = i.vhs, t = n === void 0 ? {} : n, r = i.hls, s = r === void 0 ? {} : r, a = !(G.browser.IS_ANY_SAFARI || G.browser.IS_IOS), o = t.overrideNative, u = o === void 0 ? a : o, l = s.overrideNative, d = l === void 0 ? !1 : l;
    return d || u;
  }
}, w1 = function() {
  return ho("avc1.4d400d,mp4a.40.2");
};
w1() && G.getTech("Html5").registerSourceHandler(fa, 0);
G.VhsHandler = Yd;
Object.defineProperty(G, "HlsHandler", {
  get: function() {
    return G.log.warn("videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead."), Yd;
  },
  configurable: !0
});
G.VhsSourceHandler = fa;
Object.defineProperty(G, "HlsSourceHandler", {
  get: function() {
    return G.log.warn("videojs.HlsSourceHandler is deprecated. Use videojs.VhsSourceHandler instead."), fa;
  },
  configurable: !0
});
G.Vhs = Zt;
Object.defineProperty(G, "Hls", {
  get: function() {
    return G.log.warn("videojs.Hls is deprecated. Use videojs.Vhs instead."), Zt;
  },
  configurable: !0
});
G.use || (G.registerComponent("Hls", Zt), G.registerComponent("Vhs", Zt));
G.options.vhs = G.options.vhs || {};
G.options.hls = G.options.hls || {};
if (!G.getPlugin || !G.getPlugin("reloadSourceOnError")) {
  var k1 = G.registerPlugin || G.plugin;
  k1("reloadSourceOnError", d1);
}
const C1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: G
}, Symbol.toStringTag, { value: "Module" }));
/*! @name videojs-contrib-quality-levels @version 2.2.1 @license Apache-2.0 */
function A1(e, i) {
  e.prototype = Object.create(i.prototype), e.prototype.constructor = e, e.__proto__ = i;
}
function hl(e) {
  if (e === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
var I1 = function(e) {
  var i = this;
  return i.id = e.id, i.label = i.id, i.width = e.width, i.height = e.height, i.bitrate = e.bandwidth, i.frameRate = e.frameRate, i.enabled_ = e.enabled, Object.defineProperty(i, "enabled", {
    get: function() {
      return i.enabled_();
    },
    set: function(n) {
      i.enabled_(n);
    }
  }), i;
}, Ko = /* @__PURE__ */ function(e) {
  A1(i, e);
  function i() {
    var t;
    t = e.call(this) || this;
    var r = hl(hl(t));
    return r.levels_ = [], r.selectedIndex_ = -1, Object.defineProperty(r, "selectedIndex", {
      get: function() {
        return r.selectedIndex_;
      }
    }), Object.defineProperty(r, "length", {
      get: function() {
        return r.levels_.length;
      }
    }), r || hl(t);
  }
  var n = i.prototype;
  return n.addQualityLevel = function(t) {
    var r = this.getQualityLevelById(t.id);
    if (r)
      return r;
    var s = this.levels_.length;
    return r = new I1(t), "" + s in this || Object.defineProperty(this, s, {
      get: function() {
        return this.levels_[s];
      }
    }), this.levels_.push(r), this.trigger({
      qualityLevel: r,
      type: "addqualitylevel"
    }), r;
  }, n.removeQualityLevel = function(t) {
    for (var r = null, s = 0, a = this.length; s < a; s++)
      if (this[s] === t) {
        r = this.levels_.splice(s, 1)[0], this.selectedIndex_ === s ? this.selectedIndex_ = -1 : this.selectedIndex_ > s && this.selectedIndex_--;
        break;
      }
    return r && this.trigger({
      qualityLevel: t,
      type: "removequalitylevel"
    }), r;
  }, n.getQualityLevelById = function(t) {
    for (var r = 0, s = this.length; r < s; r++) {
      var a = this[r];
      if (a.id === t)
        return a;
    }
    return null;
  }, n.dispose = function() {
    this.selectedIndex_ = -1, this.levels_.length = 0;
  }, i;
}(G.EventTarget);
Ko.prototype.allowedEvents_ = {
  change: "change",
  addqualitylevel: "addqualitylevel",
  removequalitylevel: "removequalitylevel"
};
for (var D1 in Ko.prototype.allowedEvents_)
  Ko.prototype["on" + D1] = null;
var fy = "2.2.1", x1 = G.registerPlugin || G.plugin, P1 = function(e, i) {
  var n = e.qualityLevels, t = new Ko(), r = function s() {
    t.dispose(), e.qualityLevels = n, e.off("dispose", s);
  };
  return e.on("dispose", r), e.qualityLevels = function() {
    return t;
  }, e.qualityLevels.VERSION = fy, t;
}, my = function(e) {
  return P1(this, G.mergeOptions({}, e));
};
x1("qualityLevels", my);
my.VERSION = fy;
var L1 = "1.0.3", O1 = function(e) {
  var i = this, n = null, t = !1, r = !1, s = !1, a = !1, o = 0, u = !1, l = function() {
    n && clearTimeout(n), t = !1, r = !1, s = !1, a = !1, o = 0, u = !1;
  }, d = function() {
    s = !1, i.scrubbing() && !(e.bufferingConfig && e.bufferingConfig.includeScrub) && (t = !0, n = setTimeout(function() {
      t = !1;
    }, 200));
  }, p = function() {
    s === !1 && t === !1 && i.currentTime() > 0 && (s = /* @__PURE__ */ new Date(), r = +i.currentTime().toFixed(0), u = +i.readyState());
  }, h = function() {
    var m = +i.currentTime().toFixed(0);
    if (s && m !== r) {
      a = /* @__PURE__ */ new Date();
      var y = (a - s) / 1e3;
      s = !1, r = !1, o++, i.trigger("tracking:buffered", {
        currentTime: +m,
        readyState: +u,
        secondsToLoad: +y.toFixed(3),
        bufferCount: +o
      });
    }
  };
  this.on("dispose", l), this.on("loadstart", l), this.on("ended", l), this.on("pause", d), this.on("waiting", p), this.on("timeupdate", h);
}, N1 = function(e) {
  var i = this, n = 0, t = null, r = !1, s = function(o) {
    t && clearTimeout(t), n = 0, r = !1;
  }, a = function() {
    return typeof i.seeking == "function" && i.seeking() || typeof i.scrubbing == "function" && i.scrubbing();
  };
  i.on("dispose", s), i.on("loadstart", s), i.on("ended", s), i.on("pause", function() {
    a() || r || (t = setTimeout(function() {
      n++, i.trigger("tracking:pause", { pauseCount: n });
    }, 300));
  });
}, R1 = function(e) {
  var i = this, n = !1, t = !1, r = !1, s = null, a = 0, o = 0, u = function(h) {
    n = !1, t = !1, r = !1, s = null, a = 0, o = 0;
  }, l = function() {
    return a++;
  }, d = function() {
    return o++;
  }, p = function() {
    if (s = +i.duration().toFixed(0), s > 0) {
      var h = (s / 4).toFixed(0);
      n = +h, t = +h * 2, r = +h * 3;
    }
  };
  i.on("dispose", u), i.on("loadstart", u), i.on("tracking:pause", l), i.on("tracking:seek", d), i.on("timeupdate", function() {
    s === null && p();
    var h = +i.currentTime().toFixed(0), m = {
      seekCount: o,
      pauseCount: a,
      currentTime: h,
      duration: s
    };
    switch (h) {
      case n:
        n = !1, i.trigger("tracking:first-quarter", m);
        break;
      case t:
        t = !1, i.trigger("tracking:second-quarter", m);
        break;
      case r:
        r = !1, i.trigger("tracking:third-quarter", m);
        break;
    }
  }), i.on("ended", function() {
    var h = {
      seekCount: o,
      pauseCount: a,
      currentTime: s,
      duration: s
    };
    i.trigger("tracking:fourth-quarter", h);
  }), i.on("durationchange", p);
}, M1 = function(e) {
  if (!(typeof e > "u" || typeof e.performance != "function")) {
    var i = this, n = 0, t = 0, r = 0, s = 0, a = 0, o = 0, u = 0, l = [], d = function() {
      n = 0, t = 0, r = 0, s = 0, a = 0, o = 0, u = 0, l = [];
    }, p = function() {
      var m = {
        pauseCount: t,
        seekCount: n,
        bufferCount: r,
        totalDuration: s,
        watchedDuration: a,
        bufferDuration: o,
        initialLoadTime: u
      };
      e.performance.call(i, m);
    }, h = function() {
      p(), d();
    };
    typeof window.addEventListener == "function" && (window.addEventListener("beforeunload", h), i.on("dispose", function() {
      window.removeEventListener("beforeunload", h);
    })), i.on("loadstart", function() {
      s > 0 && p(), d();
    }), i.on("ended", h), i.on("dispose", h), i.on("timeupdate", function() {
      var m = +i.currentTime().toFixed(0);
      l.indexOf(m) < 0 && l.push(m), a = l.length;
    }), i.on("loadeddata", function(m, y) {
      s = +i.duration().toFixed(0);
    }), i.on("tracking:seek", function(m, y) {
      n = y.seekCount;
    }), i.on("tracking:pause", function(m, y) {
      t = y.pauseCount;
    }), i.on("tracking:buffered", function(m, y) {
      r = y.bufferCount, o = +(o + y.secondsToLoad).toFixed(3);
    }), i.on("tracking:firstplay", function(m, y) {
      u = y.secondsToLoad;
    });
  }
}, B1 = function(e) {
  var i = this, n = !1, t = 0, r = 0, s = 0, a = function() {
    n = !1, t = 0, r = 0, s = 0;
  }, o = function() {
    a(), t = /* @__PURE__ */ new Date();
  }, u = function() {
    r = /* @__PURE__ */ new Date(), s = (r - t) / 1e3;
  }, l = function() {
    n || (n = !0, i.trigger("tracking:firstplay", {
      secondsToLoad: +s.toFixed(3)
    }));
  };
  this.on("ended", a), this.on("dispose", a), this.on("loadstart", o), this.on("loadeddata", u), this.on("playing", l);
}, U1 = function(e) {
  var i = this, n = 0, t = function() {
    n = 0;
  };
  i.on("dispose", t), i.on("loadstart", t), i.on("ended", t), i.on("seeking", function() {
    var r = +i.currentTime().toFixed(0);
    n++, i.trigger("tracking:seek", {
      seekCount: +n,
      seekTo: r
    });
  });
}, F1 = G.registerPlugin || G.plugin, j1 = G.getPlugin || G.plugin, gy = function(e) {
  N1.apply(this, arguments), O1.apply(this, arguments), R1.apply(this, arguments), B1.apply(this, arguments), U1.apply(this, arguments), M1.apply(this, arguments);
};
typeof j1("eventTracking") > "u" && F1("eventTracking", gy);
gy.VERSION = L1;
var q1 = { exports: {} };
const V1 = /* @__PURE__ */ Wc(C1);
/*!
 * videojs-mux
 * @version 4.15.0
 * @copyright 2023 Mux, Inc.
 */
(function(e, i) {
  (function() {
    (function(n, t) {
      e.exports = t(V1);
    })(this, function(n) {
      return function() {
        var t = { 48: function(o, u, l) {
          var d;
          d = typeof window < "u" ? window : l.g !== void 0 ? l.g : typeof self < "u" ? self : {}, o.exports = d;
        }, 961: function(o) {
          var u;
          u = function() {
            return function() {
              var l = { 80: function(h, m, y) {
                h.exports = y(728).default;
              }, 728: function(h, m, y) {
                y.d(m, { default: function() {
                  return Zn;
                } });
                var T = y(48), b = y.n(T), I = function() {
                  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(k) {
                    var E = 16 * Math.random() | 0;
                    return (k === "x" ? E : 3 & E | 8).toString(16);
                  });
                }, B = function() {
                  return ("000000" + (Math.random() * Math.pow(36, 6) << 0).toString(36)).slice(-6);
                }, M = function(k) {
                  return k && k.nodeName !== void 0 ? (k.muxId || (k.muxId = k.id || B()), k.muxId) : k;
                }, A = function(k) {
                  var E;
                  k && k.nodeName !== void 0 ? k = M(E = k) : E = document.querySelector(k);
                  var C = E && E.nodeName ? E.nodeName.toLowerCase() : "";
                  return [E, k, C];
                }, x = y(640), P = y.n(x), j = P().methodFactory;
                P().methodFactory = function(k, E, C) {
                  var w = j(k, E, C);
                  return function() {
                    for (var N = ["[mux]"], z = 0; z < arguments.length; z++)
                      N.push(arguments[z]);
                    w.apply(void 0, N);
                  };
                }, P().setLevel(P().getLevel());
                var H = P();
                function D() {
                  return (b().doNotTrack || b().navigator && b().navigator.doNotTrack) === "1";
                }
                var O = { now: function() {
                  var k = b().performance, E = k && k.timing, C = E && E.navigationStart, w = typeof C == "number" && typeof k.now == "function" ? C + k.now() : Date.now();
                  return Math.round(w);
                } }, W = function(k) {
                  return X(k)[0];
                }, X = function(k) {
                  if (typeof k != "string" || k === "")
                    return ["localhost"];
                  var E, C = (k.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/) || [])[4];
                  return C && (E = (C.match(/[^\.]+\.[^\.]+$/) || [])[0]), [C, E];
                }, ie = function() {
                  var k = b().performance;
                  return (k && k.timing) !== void 0;
                }, K = function() {
                  var k = b().performance, E = k && k.timing;
                  return E && E.domContentLoadedEventEnd;
                }, Z = function() {
                  var k = b().performance, E = k && k.timing;
                  return E && E.navigationStart;
                };
                function te(k, E, C) {
                  C = C === void 0 ? 1 : C, k[E] = k[E] || 0, k[E] += C;
                }
                var ue = ["x-request-id", "cf-ray", "x-amz-cf-id", "x-akamai-request-id"], be = ["x-cdn", "content-type"].concat(ue);
                function he(k) {
                  var E = {};
                  return (k = k || "").trim().split(/[\r\n]+/).forEach(function(C) {
                    if (C) {
                      var w = C.split(": "), N = w.shift();
                      N && (be.indexOf(N.toLowerCase()) >= 0 || N.toLowerCase().indexOf("x-litix-") === 0) && (E[N] = w.join(": "));
                    }
                  }), E;
                }
                function at(k) {
                  if (k) {
                    var E = ue.find(function(C) {
                      return k[C] !== void 0;
                    });
                    return E ? k[E] : void 0;
                  }
                }
                var pe = function(k) {
                  var E = {};
                  for (var C in k) {
                    var w = k[C];
                    w["DATA-ID"].search("io.litix.data.") !== -1 && (E[w["DATA-ID"].replace("io.litix.data.", "")] = w.VALUE);
                  }
                  return E;
                };
                function le(k, E) {
                  var C = Object.keys(k);
                  if (Object.getOwnPropertySymbols) {
                    var w = Object.getOwnPropertySymbols(k);
                    E && (w = w.filter(function(N) {
                      return Object.getOwnPropertyDescriptor(k, N).enumerable;
                    })), C.push.apply(C, w);
                  }
                  return C;
                }
                function fe(k) {
                  for (var E = 1; E < arguments.length; E++) {
                    var C = arguments[E] != null ? arguments[E] : {};
                    E % 2 ? le(Object(C), !0).forEach(function(w) {
                      Pe(k, w, C[w]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(k, Object.getOwnPropertyDescriptors(C)) : le(Object(C)).forEach(function(w) {
                      Object.defineProperty(k, w, Object.getOwnPropertyDescriptor(C, w));
                    });
                  }
                  return k;
                }
                function Pe(k, E, C) {
                  return E in k ? Object.defineProperty(k, E, { value: C, enumerable: !0, configurable: !0, writable: !0 }) : k[E] = C, k;
                }
                var re = function(k) {
                  if (!k)
                    return {};
                  var E = Z(), C = k.loading, w = C ? C.start : k.trequest, N = C ? C.first : k.tfirst, z = C ? C.end : k.tload;
                  return { bytesLoaded: k.total, requestStart: Math.round(E + w), responseStart: Math.round(E + N), responseEnd: Math.round(E + z) };
                }, J = function(k) {
                  if (k && typeof k.getAllResponseHeaders == "function")
                    return he(k.getAllResponseHeaders());
                };
                function _e(k, E) {
                  var C = Object.keys(k);
                  if (Object.getOwnPropertySymbols) {
                    var w = Object.getOwnPropertySymbols(k);
                    E && (w = w.filter(function(N) {
                      return Object.getOwnPropertyDescriptor(k, N).enumerable;
                    })), C.push.apply(C, w);
                  }
                  return C;
                }
                function Ie(k) {
                  for (var E = 1; E < arguments.length; E++) {
                    var C = arguments[E] != null ? arguments[E] : {};
                    E % 2 ? _e(Object(C), !0).forEach(function(w) {
                      He(k, w, C[w]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(k, Object.getOwnPropertyDescriptors(C)) : _e(Object(C)).forEach(function(w) {
                      Object.defineProperty(k, w, Object.getOwnPropertyDescriptor(C, w));
                    });
                  }
                  return k;
                }
                function He(k, E, C) {
                  return E in k ? Object.defineProperty(k, E, { value: C, enumerable: !0, configurable: !0, writable: !0 }) : k[E] = C, k;
                }
                var Qe = function(k, E) {
                  if (!k || typeof k.getRequests != "function")
                    return {};
                  var C = k.getRequests({ state: "executed" });
                  if (C.length === 0)
                    return {};
                  var w, N = C[C.length - 1], z = W(N.url), U = N.url, $ = N.bytesLoaded, Q = new Date(N.requestStartDate).getTime(), ae = new Date(N.firstByteDate).getTime(), we = new Date(N.requestEndDate).getTime(), Le = isNaN(N.duration) ? 0 : N.duration, ke = typeof E.getMetricsFor == "function" ? E.getMetricsFor(N.mediaType).HttpList : E.getDashMetrics().getHttpRequests(N.mediaType);
                  return ke.length > 0 && (w = he(ke[ke.length - 1]._responseHeaders || "")), { requestStart: Q, requestResponseStart: ae, requestResponseEnd: we, requestBytesLoaded: $, requestResponseHeaders: w, requestMediaDuration: Le, requestHostname: z, requestUrl: U, requestId: w ? at(w) : void 0 };
                }, Ue = function(k) {
                  var E;
                  return (E = k.match(/.*codecs\*?="(.*)"/)) === null || E === void 0 ? void 0 : E[1];
                };
                function bt(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var it = 0, ne = function() {
                  function k() {
                    (function(w, N) {
                      if (!(w instanceof N))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k);
                  }
                  var E, C;
                  return E = k, C = [{ key: "on", value: function(w, N, z) {
                    return N._eventEmitterGuid = N._eventEmitterGuid || ++it, this._listeners = this._listeners || {}, this._listeners[w] = this._listeners[w] || [], z && (N = N.bind(z)), this._listeners[w].push(N), N;
                  } }, { key: "off", value: function(w, N) {
                    var z = this._listeners && this._listeners[w];
                    z && z.forEach(function(U, $) {
                      U._eventEmitterGuid === N._eventEmitterGuid && z.splice($, 1);
                    });
                  } }, { key: "one", value: function(w, N, z) {
                    var U = this;
                    N._eventEmitterGuid = N._eventEmitterGuid || ++it;
                    var $ = function Q() {
                      U.off(w, Q), N.apply(z || this, arguments);
                    };
                    $._eventEmitterGuid = N._eventEmitterGuid, this.on(w, $);
                  } }, { key: "emit", value: function(w, N) {
                    var z = this;
                    if (this._listeners) {
                      N = N || {};
                      var U = this._listeners["before*"] || [], $ = this._listeners[w] || [], Q = this._listeners["after" + w] || [], ae = function(we, Le) {
                        (we = we.slice()).forEach(function(ke) {
                          ke.call(z, { type: w }, Le);
                        });
                      };
                      ae(U, N), ae($, N), ae(Q, N);
                    }
                  } }], C && bt(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }(), Fe = ne;
                function $e(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var nt = function() {
                  function k(w) {
                    var N = this;
                    (function(z, U) {
                      if (!(z instanceof U))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w, this._playbackHeartbeatInterval = null, this._playheadShouldBeProgressing = !1, w.on("playing", function() {
                      N._playheadShouldBeProgressing = !0;
                    }), w.on("play", this._startPlaybackHeartbeatInterval.bind(this)), w.on("playing", this._startPlaybackHeartbeatInterval.bind(this)), w.on("adbreakstart", this._startPlaybackHeartbeatInterval.bind(this)), w.on("adplay", this._startPlaybackHeartbeatInterval.bind(this)), w.on("adplaying", this._startPlaybackHeartbeatInterval.bind(this)), w.on("seeking", this._startPlaybackHeartbeatInterval.bind(this)), w.on("devicewake", this._startPlaybackHeartbeatInterval.bind(this)), w.on("viewstart", this._startPlaybackHeartbeatInterval.bind(this)), w.on("rebufferstart", this._startPlaybackHeartbeatInterval.bind(this)), w.on("pause", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("ended", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("viewend", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("error", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("aderror", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("adpause", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("adended", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("adbreakend", this._stopPlaybackHeartbeatInterval.bind(this)), w.on("seeked", function() {
                      w.data.player_is_paused ? N._stopPlaybackHeartbeatInterval() : N._startPlaybackHeartbeatInterval();
                    }), w.on("timeupdate", function() {
                      N._playbackHeartbeatInterval !== null && w.emit("playbackheartbeat");
                    }), w.on("devicesleep", function(z, U) {
                      N._playbackHeartbeatInterval !== null && (b().clearInterval(N._playbackHeartbeatInterval), w.emit("playbackheartbeatend", { viewer_time: U.viewer_time }), N._playbackHeartbeatInterval = null);
                    });
                  }
                  var E, C;
                  return E = k, (C = [{ key: "_startPlaybackHeartbeatInterval", value: function() {
                    var w = this;
                    this._playbackHeartbeatInterval === null && (this.pm.emit("playbackheartbeat"), this._playbackHeartbeatInterval = b().setInterval(function() {
                      w.pm.emit("playbackheartbeat");
                    }, this.pm.playbackHeartbeatTime));
                  } }, { key: "_stopPlaybackHeartbeatInterval", value: function() {
                    this._playheadShouldBeProgressing = !1, this._playbackHeartbeatInterval !== null && (b().clearInterval(this._playbackHeartbeatInterval), this.pm.emit("playbackheartbeatend"), this._playbackHeartbeatInterval = null);
                  } }]) && $e(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function Tt(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Ke = function(k, E, C) {
                  return E && Tt(k.prototype, E), C && Tt(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  var C = this;
                  (function(w, N) {
                    if (!(w instanceof N))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k), E.on("viewinit", function() {
                    C.viewErrored = !1;
                  }), E.on("error", function(w, N) {
                    try {
                      var z = E.errorTranslator({ player_error_code: N.player_error_code, player_error_message: N.player_error_message, player_error_context: N.player_error_context });
                      z ? (E.data.player_error_code = z.player_error_code || N.player_error_code, E.data.player_error_message = z.player_error_message || N.player_error_message, E.data.player_error_context = z.player_error_context || N.player_error_context, C.viewErrored = !0) : (delete E.data.player_error_code, delete E.data.player_error_message, delete E.data.player_error_context);
                    } catch (U) {
                      E.mux.log.warn("Exception in error translator callback.", U), C.viewErrored = !0;
                    }
                  });
                });
                function Wt(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var jt = function() {
                  function k(w) {
                    (function(N, z) {
                      if (!(N instanceof z))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w, this._watchTimeTrackerLastCheckedTime = null, w.on("playbackheartbeat", this._updateWatchTime.bind(this)), w.on("playbackheartbeatend", this._clearWatchTimeState.bind(this));
                  }
                  var E, C;
                  return E = k, (C = [{ key: "_updateWatchTime", value: function(w, N) {
                    var z = N.viewer_time;
                    this._watchTimeTrackerLastCheckedTime === null && (this._watchTimeTrackerLastCheckedTime = z), te(this.pm.data, "view_watch_time", z - this._watchTimeTrackerLastCheckedTime), this._watchTimeTrackerLastCheckedTime = z;
                  } }, { key: "_clearWatchTimeState", value: function(w, N) {
                    this._updateWatchTime(w, N), this._watchTimeTrackerLastCheckedTime = null;
                  } }]) && Wt(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function gt(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Et = function() {
                  function k(w) {
                    (function(N, z) {
                      if (!(N instanceof z))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w, this._playbackTimeTrackerLastPlayheadPosition = -1, w.on("playbackheartbeat", this._updatePlaybackTime.bind(this)), w.on("playbackheartbeatend", this._clearPlaybackTimeState.bind(this)), w.on("seeking", this._clearPlaybackTimeState.bind(this));
                  }
                  var E, C;
                  return E = k, (C = [{ key: "_updatePlaybackTime", value: function() {
                    var w = this.pm.data.player_playhead_time;
                    if (this._playbackTimeTrackerLastPlayheadPosition >= 0 && w > this._playbackTimeTrackerLastPlayheadPosition) {
                      var N = w - this._playbackTimeTrackerLastPlayheadPosition;
                      N <= 1e3 && te(this.pm.data, "view_content_playback_time", N);
                    }
                    this._playbackTimeTrackerLastPlayheadPosition = w;
                  } }, { key: "_clearPlaybackTimeState", value: function() {
                    this._updatePlaybackTime(), this._playbackTimeTrackerLastPlayheadPosition = -1;
                  } }]) && gt(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function vt(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var De = function() {
                  function k(w) {
                    (function(z, U) {
                      if (!(z instanceof U))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w;
                    var N = this._updatePlayheadTime.bind(this);
                    w.on("playbackheartbeat", N), w.on("playbackheartbeatend", N), w.on("timeupdate", N), w.on("destroy", function() {
                      w.off("timeupdate", N);
                    });
                  }
                  var E, C;
                  return E = k, (C = [{ key: "_updateMaxPlayheadPosition", value: function() {
                    this.pm.data.view_max_playhead_position = this.pm.data.view_max_playhead_position === void 0 ? this.pm.data.player_playhead_time : Math.max(this.pm.data.view_max_playhead_position, this.pm.data.player_playhead_time);
                  } }, { key: "_updatePlayheadTime", value: function(w, N) {
                    var z = this, U = function() {
                      z.pm.currentFragmentPDT && z.pm.currentFragmentStart && (z.pm.data.player_program_time = z.pm.currentFragmentPDT + z.pm.data.player_playhead_time - z.pm.currentFragmentStart);
                    };
                    if (N && N.player_playhead_time)
                      this.pm.data.player_playhead_time = N.player_playhead_time, U(), this._updateMaxPlayheadPosition();
                    else if (this.pm.getPlayheadTime) {
                      var $ = this.pm.getPlayheadTime();
                      $ !== void 0 && (this.pm.data.player_playhead_time = $, U(), this._updateMaxPlayheadPosition());
                    }
                  } }]) && vt(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function Oe(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Me = 3e5, Je = function(k, E, C) {
                  return E && Oe(k.prototype, E), C && Oe(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  if (function(z, U) {
                    if (!(z instanceof U))
                      throw new TypeError("Cannot call a class as a function");
                  }(this, k), !E.disableRebufferTracking) {
                    var C, w = function(z, U) {
                      N(U), C = void 0;
                    }, N = function(z) {
                      if (C) {
                        var U = z.viewer_time - C;
                        te(E.data, "view_rebuffer_duration", U), C = z.viewer_time, E.data.view_rebuffer_duration > Me && (E.emit("viewend"), E.send("viewend"), E.mux.log.warn("Ending view after rebuffering for longer than ".concat(Me, "ms, future events will be ignored unless a programchange or videochange occurs.")));
                      }
                      E.data.view_watch_time >= 0 && E.data.view_rebuffer_count > 0 && (E.data.view_rebuffer_frequency = E.data.view_rebuffer_count / E.data.view_watch_time, E.data.view_rebuffer_percentage = E.data.view_rebuffer_duration / E.data.view_watch_time);
                    };
                    E.on("playbackheartbeat", function(z, U) {
                      return N(U);
                    }), E.on("rebufferstart", function(z, U) {
                      C || (te(E.data, "view_rebuffer_count", 1), C = U.viewer_time, E.one("rebufferend", w));
                    }), E.on("viewinit", function() {
                      C = void 0, E.off("rebufferend", w);
                    });
                  }
                });
                function ei(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Gt = function() {
                  function k(w) {
                    var N = this;
                    (function(z, U) {
                      if (!(z instanceof U))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w, w.disableRebufferTracking || w.disablePlayheadRebufferTracking || (this._lastCheckedTime = null, this._lastPlayheadTime = null, this._lastPlayheadTimeUpdatedTime = null, w.on("playbackheartbeat", this._checkIfRebuffering.bind(this)), w.on("playbackheartbeatend", this._cleanupRebufferTracker.bind(this)), w.on("seeking", function() {
                      N._cleanupRebufferTracker(null, { viewer_time: O.now() });
                    }));
                  }
                  var E, C;
                  return E = k, C = [{ key: "_checkIfRebuffering", value: function(w, N) {
                    if (this.pm.seekingTracker.isSeeking || this.pm.adTracker.isAdBreak || !this.pm.playbackHeartbeat._playheadShouldBeProgressing)
                      this._cleanupRebufferTracker(w, N);
                    else if (this._lastCheckedTime !== null)
                      if (this._lastPlayheadTime === this.pm.data.player_playhead_time) {
                        var z = N.viewer_time - this._lastPlayheadTimeUpdatedTime;
                        typeof this.pm.sustainedRebufferThreshold == "number" && z >= this.pm.sustainedRebufferThreshold && (this._rebuffering || (this._rebuffering = !0, this.pm.emit("rebufferstart", { viewer_time: this._lastPlayheadTimeUpdatedTime }))), this._lastCheckedTime = N.viewer_time;
                      } else
                        this._cleanupRebufferTracker(w, N, !0);
                    else
                      this._prepareRebufferTrackerState(N.viewer_time);
                  } }, { key: "_clearRebufferTrackerState", value: function() {
                    this._lastCheckedTime = null, this._lastPlayheadTime = null, this._lastPlayheadTimeUpdatedTime = null;
                  } }, { key: "_prepareRebufferTrackerState", value: function(w) {
                    this._lastCheckedTime = w, this._lastPlayheadTime = this.pm.data.player_playhead_time, this._lastPlayheadTimeUpdatedTime = w;
                  } }, { key: "_cleanupRebufferTracker", value: function(w, N) {
                    var z = arguments.length > 2 && arguments[2] !== void 0 && arguments[2];
                    if (this._rebuffering)
                      this._rebuffering = !1, this.pm.emit("rebufferend", { viewer_time: N.viewer_time });
                    else {
                      if (this._lastCheckedTime === null)
                        return;
                      var U = this.pm.data.player_playhead_time - this._lastPlayheadTime, $ = N.viewer_time - this._lastPlayheadTimeUpdatedTime;
                      typeof this.pm.minimumRebufferDuration == "number" && U > 0 && $ - U > this.pm.minimumRebufferDuration && (this._lastCheckedTime = null, this.pm.emit("rebufferstart", { viewer_time: this._lastPlayheadTimeUpdatedTime }), this.pm.emit("rebufferend", { viewer_time: this._lastPlayheadTimeUpdatedTime + $ - U }));
                    }
                    z ? this._prepareRebufferTrackerState(N.viewer_time) : this._clearRebufferTrackerState();
                  } }], C && ei(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }(), de = Gt;
                function ti(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Si = function() {
                  function k(w) {
                    var N = this;
                    (function(z, U) {
                      if (!(z instanceof U))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w, w.on("viewinit", function() {
                      var z = w.data, U = z.view_id;
                      if (!z.view_program_changed) {
                        var $ = function(Q, ae) {
                          var we = ae.viewer_time;
                          Q.type === "playing" && w.data.view_time_to_first_frame === void 0 ? N.calculateTimeToFirstFrame(we || O.now(), U) : Q.type !== "adplaying" || w.data.view_time_to_first_frame !== void 0 && !N._inPrerollPosition() || N.calculateTimeToFirstFrame(we || O.now(), U);
                        };
                        w.one("playing", $), w.one("adplaying", $), w.one("viewend", function() {
                          w.off("playing", $), w.off("adplaying", $);
                        });
                      }
                    });
                  }
                  var E, C;
                  return E = k, (C = [{ key: "_inPrerollPosition", value: function() {
                    return this.pm.data.view_content_playback_time === void 0 || this.pm.data.view_content_playback_time <= 1e3;
                  } }, { key: "calculateTimeToFirstFrame", value: function(w, N) {
                    N === this.pm.data.view_id && (this.pm.watchTimeTracker._updateWatchTime(null, { viewer_time: w }), this.pm.data.view_time_to_first_frame = this.pm.data.view_watch_time, (this.pm.data.player_autoplay_on || this.pm.data.video_is_autoplay) && this.NAVIGATION_START && (this.pm.data.view_aggregate_startup_time = this.pm.data.view_start + this.pm.data.view_watch_time - this.NAVIGATION_START));
                  } }]) && ti(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function On(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var br = function(k, E, C) {
                  return E && On(k.prototype, E), C && On(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  var C = this;
                  (function(w, N) {
                    if (!(w instanceof N))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k), E.on("viewinit", function() {
                    C._lastPlayheadPosition = -1;
                  }), ["pause", "rebufferstart", "seeking", "error", "adbreakstart", "hb"].forEach(function(w) {
                    E.on(w, function() {
                      if (C._lastPlayheadPosition >= 0 && E.data.player_playhead_time >= 0 && C._lastPlayerWidth >= 0 && C._lastSourceWidth > 0 && C._lastPlayerHeight >= 0 && C._lastSourceHeight > 0) {
                        var N = E.data.player_playhead_time - C._lastPlayheadPosition;
                        if (N < 0)
                          return void (C._lastPlayheadPosition = -1);
                        var z = Math.min(C._lastPlayerWidth / C._lastSourceWidth, C._lastPlayerHeight / C._lastSourceHeight), U = Math.max(0, z - 1), $ = Math.max(0, 1 - z);
                        E.data.view_max_upscale_percentage = Math.max(E.data.view_max_upscale_percentage || 0, U), E.data.view_max_downscale_percentage = Math.max(E.data.view_max_downscale_percentage || 0, $), te(E.data, "view_total_content_playback_time", N), te(E.data, "view_total_upscaling", U * N), te(E.data, "view_total_downscaling", $ * N);
                      }
                      C._lastPlayheadPosition = -1;
                    });
                  }), ["playing", "hb"].forEach(function(w) {
                    E.on(w, function() {
                      C._lastPlayheadPosition = E.data.player_playhead_time, C._lastPlayerWidth = E.data.player_width, C._lastPlayerHeight = E.data.player_height, C._lastSourceWidth = E.data.video_source_width, C._lastSourceHeight = E.data.video_source_height;
                    });
                  });
                });
                function Aa(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Tr = function(k, E, C) {
                  return E && Aa(k.prototype, E), C && Aa(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  var C = this;
                  (function(w, N) {
                    if (!(w instanceof N))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k), this.isSeeking = !1, E.on("seeking", function(w, N) {
                    Object.assign(E.data, N), C._lastSeekingTime = O.now(), C.isSeeking === !1 && (C.isSeeking = !0, E.send("seeking"));
                  }), E.on("seeked", function() {
                    C.isSeeking = !1;
                    var w = C._lastSeekingTime || O.now(), N = O.now() - w;
                    te(E.data, "view_seek_count", 1), te(E.data, "view_seek_duration", N);
                    var z = E.data.view_max_seek_time || 0;
                    E.data.view_max_seek_time = Math.max(z, N);
                  }), E.on("viewend", function() {
                    C.isSeeking = !1;
                  });
                });
                function Ia(k, E) {
                  return function(C) {
                    if (Array.isArray(C))
                      return C;
                  }(k) || function(C, w) {
                    var N = C == null ? null : typeof Symbol < "u" && C[Symbol.iterator] || C["@@iterator"];
                    if (N != null) {
                      var z, U, $ = [], Q = !0, ae = !1;
                      try {
                        for (N = N.call(C); !(Q = (z = N.next()).done) && ($.push(z.value), !w || $.length !== w); Q = !0)
                          ;
                      } catch (we) {
                        ae = !0, U = we;
                      } finally {
                        try {
                          Q || N.return == null || N.return();
                        } finally {
                          if (ae)
                            throw U;
                        }
                      }
                      return $;
                    }
                  }(k, E) || function(C, w) {
                    if (C) {
                      if (typeof C == "string")
                        return Da(C, w);
                      var N = Object.prototype.toString.call(C).slice(8, -1);
                      return N === "Object" && C.constructor && (N = C.constructor.name), N === "Map" || N === "Set" ? Array.from(C) : N === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(N) ? Da(C, w) : void 0;
                    }
                  }(k, E) || function() {
                    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                  }();
                }
                function Da(k, E) {
                  (E == null || E > k.length) && (E = k.length);
                  for (var C = 0, w = new Array(E); C < E; C++)
                    w[C] = k[C];
                  return w;
                }
                function ku(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var xa = function(k, E) {
                  k.push(E), k.sort(function(C, w) {
                    return C.viewer_time - w.viewer_time;
                  });
                }, wi = ["adbreakstart", "adrequest", "adresponse", "adplay", "adplaying", "adpause", "adended", "adbreakend", "aderror"], Pa = function() {
                  function k(w) {
                    var N = this;
                    (function(U, $) {
                      if (!(U instanceof $))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, k), this.pm = w, w.on("viewinit", function() {
                      N.isAdBreak = !1, N._currentAdRequestNumber = 0, N._currentAdResponseNumber = 0, N._adRequests = [], N._adResponses = [], N._adHasPlayed = !1, N._wouldBeNewAdPlay = !0, N._prerollPlayTime = void 0;
                    }), wi.forEach(function(U) {
                      return w.on(U, N._updateAdData.bind(N));
                    });
                    var z = function() {
                      N.isAdBreak = !1;
                    };
                    w.on("adbreakstart", function() {
                      N.isAdBreak = !0;
                    }), w.on("play", z), w.on("playing", z), w.on("viewend", z), w.on("adrequest", function(U, $) {
                      $ = Object.assign({ ad_request_id: "generatedAdRequestId" + N._currentAdRequestNumber++ }, $), xa(N._adRequests, $), te(w.data, "view_ad_request_count"), N.inPrerollPosition() && (w.data.view_preroll_requested = !0, N._adHasPlayed || te(w.data, "view_preroll_request_count"));
                    }), w.on("adresponse", function(U, $) {
                      $ = Object.assign({ ad_request_id: "generatedAdRequestId" + N._currentAdResponseNumber++ }, $), xa(N._adResponses, $);
                      var Q = N.findAdRequest($.ad_request_id);
                      Q && te(w.data, "view_ad_request_time", Math.max(0, $.viewer_time - Q.viewer_time));
                    }), w.on("adplay", function(U, $) {
                      N._adHasPlayed = !0, N._wouldBeNewAdPlay && (N._wouldBeNewAdPlay = !1, te(w.data, "view_ad_played_count")), N.inPrerollPosition() && !w.data.view_preroll_played && (w.data.view_preroll_played = !0, N._adRequests.length > 0 && (w.data.view_preroll_request_time = Math.max(0, $.viewer_time - N._adRequests[0].viewer_time)), w.data.view_start && (w.data.view_startup_preroll_request_time = Math.max(0, $.viewer_time - w.data.view_start)), N._prerollPlayTime = $.viewer_time);
                    }), w.on("adplaying", function(U, $) {
                      N.inPrerollPosition() && w.data.view_preroll_load_time === void 0 && N._prerollPlayTime !== void 0 && (w.data.view_preroll_load_time = $.viewer_time - N._prerollPlayTime, w.data.view_startup_preroll_load_time = $.viewer_time - N._prerollPlayTime);
                    }), w.on("adended", function() {
                      N._wouldBeNewAdPlay = !0;
                    }), w.on("aderror", function() {
                      N._wouldBeNewAdPlay = !0;
                    });
                  }
                  var E, C;
                  return E = k, (C = [{ key: "inPrerollPosition", value: function() {
                    return this.pm.data.view_content_playback_time === void 0 || this.pm.data.view_content_playback_time <= 1e3;
                  } }, { key: "findAdRequest", value: function(w) {
                    for (var N = 0; N < this._adRequests.length; N++)
                      if (this._adRequests[N].ad_request_id === w)
                        return this._adRequests[N];
                  } }, { key: "_updateAdData", value: function(w, N) {
                    if (this.inPrerollPosition()) {
                      if (!this.pm.data.view_preroll_ad_tag_hostname && N.ad_tag_url) {
                        var z = Ia(X(N.ad_tag_url), 2), U = z[0], $ = z[1];
                        this.pm.data.view_preroll_ad_tag_domain = $, this.pm.data.view_preroll_ad_tag_hostname = U;
                      }
                      if (!this.pm.data.view_preroll_ad_asset_hostname && N.ad_asset_url) {
                        var Q = Ia(X(N.ad_asset_url), 2), ae = Q[0], we = Q[1];
                        this.pm.data.view_preroll_ad_asset_domain = we, this.pm.data.view_preroll_ad_asset_hostname = ae;
                      }
                    }
                    this.pm.data.ad_asset_url = N == null ? void 0 : N.ad_asset_url, this.pm.data.ad_tag_url = N == null ? void 0 : N.ad_tag_url, this.pm.data.ad_creative_id = N == null ? void 0 : N.ad_creative_id, this.pm.data.ad_id = N == null ? void 0 : N.ad_id, this.pm.data.ad_universal_id = N == null ? void 0 : N.ad_universal_id;
                  } }]) && ku(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function La(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Cu = function(k, E, C) {
                  return E && La(k.prototype, E), C && La(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  var C, w;
                  (function($, Q) {
                    if (!($ instanceof Q))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k);
                  var N = function() {
                    E.disableRebufferTracking || C && (te(E.data, "view_waiting_rebuffer_duration", O.now() - C), C = !1, b().clearInterval(w));
                  }, z = !1, U = function() {
                    z = !1, N();
                  };
                  E.on("waiting", function() {
                    z && (E.disableRebufferTracking || (te(E.data, "view_waiting_rebuffer_count", 1), C = O.now(), w = b().setInterval(function() {
                      if (C) {
                        var $ = O.now();
                        te(E.data, "view_waiting_rebuffer_duration", $ - C), C = $;
                      }
                    }, 250)));
                  }), E.on("playing", function() {
                    N(), z = !0;
                  }), E.on("pause", U), E.on("seeking", U);
                });
                function Oa(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Au = function(k, E, C) {
                  return E && Oa(k.prototype, E), C && Oa(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  var C = this;
                  (function(z, U) {
                    if (!(z instanceof U))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k);
                  var w = function() {
                    C.lastWallClockTime = O.now(), E.on("before*", N);
                  }, N = function(z) {
                    var U = O.now(), $ = C.lastWallClockTime;
                    C.lastWallClockTime = U, U - $ > 3e4 && (E.emit("devicesleep", { viewer_time: $ }), Object.assign(E.data, { viewer_time: $ }), E.send("devicesleep"), E.emit("devicewake", { viewer_time: U }), Object.assign(E.data, { viewer_time: U }), E.send("devicewake"));
                  };
                  E.one("playbackheartbeat", w), E.on("playbackheartbeatend", function() {
                    E.off("before*", N), E.one("playbackheartbeat", w);
                  });
                }), Na = y(375), Hn = y(655), ii = y.n(Hn), Ra = "muxData", Ma = function() {
                  var k;
                  try {
                    k = Na.parse(ii().get(Ra) || "");
                  } catch {
                    k = {};
                  }
                  return k;
                }, Wn = function(k) {
                  try {
                    ii().set(Ra, Na.stringify(k), { expires: 7300 });
                  } catch {
                  }
                }, Bi = function() {
                  var k = Ma();
                  return k.mux_viewer_id = k.mux_viewer_id || I(), k.msn = k.msn || Math.random(), Wn(k), { mux_viewer_id: k.mux_viewer_id, mux_sample_number: k.msn };
                };
                function Er(k, E) {
                  var C = E.beaconCollectionDomain, w = E.beaconDomain;
                  if (C)
                    return "https://" + C;
                  var N = w || "litix.io";
                  return (k = k || "inferred").match(/^[a-z0-9]+$/) ? "https://" + k + "." + N : "https://img.litix.io/a.gif";
                }
                var ut = function() {
                  var k;
                  switch (Ba()) {
                    case "cellular":
                      k = "cellular";
                      break;
                    case "ethernet":
                      k = "wired";
                      break;
                    case "wifi":
                      k = "wifi";
                      break;
                    case void 0:
                      break;
                    default:
                      k = "other";
                  }
                  return k;
                }, Ba = function() {
                  var k = b().navigator, E = k && (k.connection || k.mozConnection || k.webkitConnection);
                  return E && E.type;
                };
                ut.getConnectionFromAPI = Ba;
                var Sr = ut, wr = Qi({ a: "env", b: "beacon", c: "custom", d: "ad", e: "event", f: "experiment", i: "internal", m: "mux", n: "response", p: "player", q: "request", r: "retry", s: "session", t: "timestamp", u: "viewer", v: "video", w: "page", x: "view", y: "sub" }), Ua = Qi({ ad: "ad", ag: "aggregate", ap: "api", al: "application", ar: "architecture", as: "asset", au: "autoplay", av: "average", bi: "bitrate", br: "break", bw: "browser", by: "bytes", ca: "cached", cb: "cancel", cc: "codec", cd: "code", cg: "category", ch: "changed", cl: "canceled", cn: "config", co: "count", ce: "counter", cp: "complete", cr: "creative", ct: "content", cu: "current", cx: "connection", cz: "context", dg: "downscaling", dm: "domain", dn: "cdn", do: "downscale", dr: "drm", dp: "dropped", du: "duration", dv: "device", ec: "encoding", ed: "edge", en: "end", eg: "engine", em: "embed", er: "error", es: "errorcode", et: "errortext", ee: "event", ev: "events", ex: "expires", ep: "experiments", fa: "failed", fi: "first", fm: "family", ft: "format", fp: "fps", fq: "frequency", fr: "frame", fs: "fullscreen", ha: "has", hb: "holdback", he: "headers", ho: "host", hn: "hostname", ht: "height", id: "id", ii: "init", in: "instance", ip: "ip", is: "is", ke: "key", la: "language", lb: "labeled", le: "level", li: "live", ld: "loaded", lo: "load", ls: "lists", lt: "latency", ma: "max", md: "media", me: "message", mf: "manifest", mi: "mime", ml: "midroll", mm: "min", mn: "manufacturer", mo: "model", mx: "mux", ne: "newest", nm: "name", no: "number", on: "on", os: "os", pa: "paused", pb: "playback", pd: "producer", pe: "percentage", pf: "played", pg: "program", ph: "playhead", pi: "plugin", pl: "preroll", pn: "playing", po: "poster", pr: "preload", ps: "position", pt: "part", py: "property", ra: "rate", rd: "requested", re: "rebuffer", rf: "rendition", rm: "remote", ro: "ratio", rp: "response", rq: "request", rs: "requests", sa: "sample", se: "session", sk: "seek", sm: "stream", so: "source", sq: "sequence", sr: "series", st: "start", su: "startup", sv: "server", sw: "software", ta: "tag", tc: "tech", te: "text", tg: "target", th: "throughput", ti: "time", tl: "total", to: "to", tt: "title", ty: "type", ug: "upscaling", un: "universal", up: "upscale", ur: "url", us: "user", va: "variant", vd: "viewed", vi: "video", ve: "version", vw: "view", vr: "viewer", wd: "width", wa: "watch", wt: "waiting" });
                function Qi(k) {
                  var E = {};
                  for (var C in k)
                    k.hasOwnProperty(C) && (E[k[C]] = C);
                  return E;
                }
                function ft(k) {
                  var E = {}, C = {};
                  return Object.keys(k).forEach(function(w) {
                    var N = !1;
                    if (k.hasOwnProperty(w) && k[w] !== void 0) {
                      var z = w.split("_"), U = z[0], $ = wr[U];
                      $ || (H.info("Data key word `" + z[0] + "` not expected in " + w), $ = U + "_"), z.splice(1).forEach(function(Q) {
                        Q === "url" && (N = !0), Ua[Q] ? $ += Ua[Q] : Number(Q) && Math.floor(Number(Q)) === Number(Q) ? $ += Q : (H.info("Data key word `" + Q + "` not expected in " + w), $ += "_" + Q + "_");
                      }), N ? C[$] = k[w] : E[$] = k[w];
                    }
                  }), Object.assign(E, C);
                }
                var kr = { maxBeaconSize: 300, maxQueueLength: 3600, baseTimeBetweenBeacons: 1e4, maxPayloadKBSize: 500 }, qt = ["hb", "requestcompleted", "requestfailed", "requestcanceled"], Iu = "https://img.litix.io", Ui = function(k) {
                  var E = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  this._beaconUrl = k || Iu, this._eventQueue = [], this._postInFlight = !1, this._failureCount = 0, this._sendTimeout = !1, this._options = Object.assign({}, kr, E);
                };
                Ui.prototype.queueEvent = function(k, E) {
                  var C = Object.assign({}, E);
                  return (this._eventQueue.length <= this._options.maxQueueLength || k === "eventrateexceeded") && (this._eventQueue.push(C), this._sendTimeout || this._startBeaconSending(), this._eventQueue.length <= this._options.maxQueueLength);
                }, Ui.prototype.flushEvents = function() {
                  var k = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
                  k && this._eventQueue.length === 1 ? this._eventQueue.pop() : (this._eventQueue.length && this._sendBeaconQueue(), this._startBeaconSending());
                }, Ui.prototype.destroy = function() {
                  var k = arguments.length > 0 && arguments[0] !== void 0 && arguments[0];
                  this.destroyed = !0, k ? this._clearBeaconQueue() : this.flushEvents(), b().clearTimeout(this._sendTimeout);
                }, Ui.prototype._clearBeaconQueue = function() {
                  var k = this._eventQueue.length > this._options.maxBeaconSize ? this._eventQueue.length - this._options.maxBeaconSize : 0, E = this._eventQueue.slice(k);
                  k > 0 && Object.assign(E[E.length - 1], ft({ mux_view_message: "event queue truncated" }));
                  var C = this._createPayload(E);
                  Cr(this._beaconUrl, C, !0, function() {
                  });
                }, Ui.prototype._sendBeaconQueue = function() {
                  var k = this;
                  if (!this._postInFlight) {
                    var E = this._eventQueue.slice(0, this._options.maxBeaconSize);
                    this._eventQueue = this._eventQueue.slice(this._options.maxBeaconSize), this._postInFlight = !0;
                    var C = this._createPayload(E), w = O.now();
                    Cr(this._beaconUrl, C, !1, function(N, z) {
                      z ? (k._eventQueue = E.concat(k._eventQueue), k._failureCount += 1, H.info("Error sending beacon: " + z)) : k._failureCount = 0, k._roundTripTime = O.now() - w, k._postInFlight = !1;
                    });
                  }
                }, Ui.prototype._getNextBeaconTime = function() {
                  if (!this._failureCount)
                    return this._options.baseTimeBetweenBeacons;
                  var k = Math.pow(2, this._failureCount - 1);
                  return (1 + (k *= Math.random())) * this._options.baseTimeBetweenBeacons;
                }, Ui.prototype._startBeaconSending = function() {
                  var k = this;
                  b().clearTimeout(this._sendTimeout), this.destroyed || (this._sendTimeout = b().setTimeout(function() {
                    k._eventQueue.length && k._sendBeaconQueue(), k._startBeaconSending();
                  }, this._getNextBeaconTime()));
                }, Ui.prototype._createPayload = function(k) {
                  var E, C, w, N = this, z = { transmission_timestamp: Math.round(O.now()) };
                  this._roundTripTime && (z.rtt_ms = Math.round(this._roundTripTime));
                  var U = function() {
                    E = JSON.stringify({ metadata: z, events: C || k }), w = E.length / 1024;
                  }, $ = function() {
                    return w <= N._options.maxPayloadKBSize;
                  };
                  return U(), $() || (H.info("Payload size is too big (" + w + " kb). Removing unnecessary events."), C = k.filter(function(Q) {
                    return qt.indexOf(Q.e) === -1;
                  }), U()), $() || (H.info("Payload size still too big (" + w + " kb). Cropping fields.."), C.forEach(function(Q) {
                    for (var ae in Q) {
                      var we = Q[ae];
                      typeof we == "string" && we.length > 51200 && (Q[ae] = we.substring(0, 51200));
                    }
                  }), U()), E;
                };
                var Fa = function(k) {
                  return k.length <= 57344;
                }, Cr = function(k, E, C, w) {
                  if (C && navigator && navigator.sendBeacon && navigator.sendBeacon(k, E))
                    w();
                  else if (b().fetch)
                    b().fetch(k, { method: "POST", body: E, headers: { "Content-Type": "text/plain" }, keepalive: Fa(E) }).then(function(z) {
                      return w(null, z.ok ? null : "Error");
                    }).catch(function(z) {
                      return w(null, z);
                    });
                  else {
                    if (b().XMLHttpRequest) {
                      var N = new (b()).XMLHttpRequest();
                      return N.onreadystatechange = function() {
                        if (N.readyState === 4)
                          return w(null, N.status !== 200 ? "error" : void 0);
                      }, N.open("POST", k), N.setRequestHeader("Content-Type", "text/plain"), void N.send(E);
                    }
                    w();
                  }
                }, ja = Ui;
                function As(k, E) {
                  (E == null || E > k.length) && (E = k.length);
                  for (var C = 0, w = new Array(E); C < E; C++)
                    w[C] = k[C];
                  return w;
                }
                function Is(k, E) {
                  var C = Object.keys(k);
                  if (Object.getOwnPropertySymbols) {
                    var w = Object.getOwnPropertySymbols(k);
                    E && (w = w.filter(function(N) {
                      return Object.getOwnPropertyDescriptor(k, N).enumerable;
                    })), C.push.apply(C, w);
                  }
                  return C;
                }
                function Fi(k) {
                  for (var E = 1; E < arguments.length; E++) {
                    var C = arguments[E] != null ? arguments[E] : {};
                    E % 2 ? Is(Object(C), !0).forEach(function(w) {
                      hn(k, w, C[w]);
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(k, Object.getOwnPropertyDescriptors(C)) : Is(Object(C)).forEach(function(w) {
                      Object.defineProperty(k, w, Object.getOwnPropertyDescriptor(C, w));
                    });
                  }
                  return k;
                }
                function Gn(k) {
                  return Gn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(E) {
                    return typeof E;
                  } : function(E) {
                    return E && typeof Symbol == "function" && E.constructor === Symbol && E !== Symbol.prototype ? "symbol" : typeof E;
                  }, Gn(k);
                }
                function Ar(k, E) {
                  if (!(k instanceof E))
                    throw new TypeError("Cannot call a class as a function");
                }
                function qa(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                function hn(k, E, C) {
                  return E in k ? Object.defineProperty(k, E, { value: C, enumerable: !0, configurable: !0, writable: !0 }) : k[E] = C, k;
                }
                var Du = ["env_key", "view_id", "view_sequence_number", "player_sequence_number", "beacon_domain", "player_playhead_time", "viewer_time", "mux_api_version", "event", "video_id", "player_instance_id"], xu = ["adplay", "adplaying", "adpause", "adfirstquartile", "admidpoint", "adthirdquartile", "adended", "adresponse"], Ir = ["viewstart", "error", "ended", "viewend"], Kn = function() {
                  function k(w, N) {
                    var z, U, $, Q, ae, we, Le, ke, ve, Ae, ge, ot, et, yt, Xe, rt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                    Ar(this, k), hn(this, "previousBeaconData", null), hn(this, "lastEventTime", 0), hn(this, "rateLimited", !1), this.mux = w, this.envKey = N, this.options = rt, this.eventQueue = new ja(Er(this.envKey, this.options)), this.sampleRate = (z = this.options.sampleRate) !== null && z !== void 0 ? z : 1, this.disableCookies = (U = this.options.disableCookies) !== null && U !== void 0 && U, this.respectDoNotTrack = ($ = this.options.respectDoNotTrack) !== null && $ !== void 0 && $, this.previousBeaconData = null, this.lastEventTime = 0, this.rateLimited = !1, this.pageLevelData = { mux_api_version: this.mux.API_VERSION, mux_embed: this.mux.NAME, mux_embed_version: this.mux.VERSION, viewer_application_name: (Q = this.options.platform) === null || Q === void 0 ? void 0 : Q.name, viewer_application_version: (ae = this.options.platform) === null || ae === void 0 ? void 0 : ae.version, viewer_application_engine: (we = this.options.platform) === null || we === void 0 ? void 0 : we.layout, viewer_device_name: (Le = this.options.platform) === null || Le === void 0 ? void 0 : Le.product, viewer_device_category: "", viewer_device_manufacturer: (ke = this.options.platform) === null || ke === void 0 ? void 0 : ke.manufacturer, viewer_os_family: (ve = this.options.platform) === null || ve === void 0 || (Ae = ve.os) === null || Ae === void 0 ? void 0 : Ae.family, viewer_os_architecture: (ge = this.options.platform) === null || ge === void 0 || (ot = ge.os) === null || ot === void 0 ? void 0 : ot.architecture, viewer_os_version: (et = this.options.platform) === null || et === void 0 || (yt = et.os) === null || yt === void 0 ? void 0 : yt.version, viewer_connection_type: Sr(), page_url: b() === null || b() === void 0 || (Xe = b().location) === null || Xe === void 0 ? void 0 : Xe.href }, this.viewerData = this.disableCookies ? {} : Bi();
                  }
                  var E, C;
                  return E = k, (C = [{ key: "send", value: function(w, N) {
                    var z;
                    if (w && N != null && N.view_id) {
                      if (this.respectDoNotTrack && D())
                        return H.info("Not sending `" + w + "` because Do Not Track is enabled");
                      if (!N || Gn(N) !== "object")
                        return H.error("A data object was expected in send() but was not provided");
                      var U, $, Q = this.disableCookies ? {} : (U = Ma(), $ = O.now(), U.session_start && (U.sst = U.session_start, delete U.session_start), U.session_id && (U.sid = U.session_id, delete U.session_id), U.session_expires && (U.sex = U.session_expires, delete U.session_expires), (!U.sex || U.sex < $) && (U.sid = I(), U.sst = $), U.sex = $ + 15e5, Wn(U), { session_id: U.sid, session_start: U.sst, session_expires: U.sex }), ae = Fi(Fi(Fi(Fi(Fi({}, this.pageLevelData), N), Q), this.viewerData), {}, { event: w, env_key: this.envKey });
                      ae.user_id && (ae.viewer_user_id = ae.user_id, delete ae.user_id);
                      var we = ((z = ae.mux_sample_number) !== null && z !== void 0 ? z : 0) >= this.sampleRate, Le = ft(this._deduplicateBeaconData(w, ae));
                      if (this.lastEventTime = this.mux.utils.now(), we)
                        return H.info("Not sending event due to sample rate restriction", w, ae, Le);
                      if (this.envKey || H.info("Missing environment key (envKey) - beacons will be dropped if the video source is not a valid mux video URL", w, ae, Le), !this.rateLimited) {
                        if (H.info("Sending event", w, ae, Le), this.rateLimited = !this.eventQueue.queueEvent(w, Le), this.mux.WINDOW_UNLOADING && w === "viewend")
                          this.eventQueue.destroy(!0);
                        else if (this.mux.WINDOW_HIDDEN && w === "hb" ? this.eventQueue.flushEvents(!0) : Ir.indexOf(w) >= 0 && this.eventQueue.flushEvents(), this.rateLimited)
                          return ae.event = "eventrateexceeded", Le = ft(ae), this.eventQueue.queueEvent(ae.event, Le), H.error("Beaconing disabled due to rate limit.");
                      }
                    }
                  } }, { key: "destroy", value: function() {
                    this.eventQueue.destroy(!1);
                  } }, { key: "_deduplicateBeaconData", value: function(w, N) {
                    var z = this, U = {}, $ = N.view_id;
                    if ($ === "-1" || w === "viewstart" || w === "viewend" || !this.previousBeaconData || this.mux.utils.now() - this.lastEventTime >= 6e5)
                      U = Fi({}, N), $ && (this.previousBeaconData = U), $ && w === "viewend" && (this.previousBeaconData = null);
                    else {
                      var Q = w.indexOf("request") === 0;
                      Object.entries(N).forEach(function(ae) {
                        var we = function(ve, Ae) {
                          return function(ge) {
                            if (Array.isArray(ge))
                              return ge;
                          }(ve) || function(ge, ot) {
                            var et = ge == null ? null : typeof Symbol < "u" && ge[Symbol.iterator] || ge["@@iterator"];
                            if (et != null) {
                              var yt, Xe, rt = [], St = !0, Ve = !1;
                              try {
                                for (et = et.call(ge); !(St = (yt = et.next()).done) && (rt.push(yt.value), !ot || rt.length !== ot); St = !0)
                                  ;
                              } catch (Te) {
                                Ve = !0, Xe = Te;
                              } finally {
                                try {
                                  St || et.return == null || et.return();
                                } finally {
                                  if (Ve)
                                    throw Xe;
                                }
                              }
                              return rt;
                            }
                          }(ve, Ae) || function(ge, ot) {
                            if (ge) {
                              if (typeof ge == "string")
                                return As(ge, ot);
                              var et = Object.prototype.toString.call(ge).slice(8, -1);
                              return et === "Object" && ge.constructor && (et = ge.constructor.name), et === "Map" || et === "Set" ? Array.from(ge) : et === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(et) ? As(ge, ot) : void 0;
                            }
                          }(ve, Ae) || function() {
                            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                          }();
                        }(ae, 2), Le = we[0], ke = we[1];
                        z.previousBeaconData && (ke !== z.previousBeaconData[Le] || Du.indexOf(Le) > -1 || z.objectHasChanged(Q, Le, ke, z.previousBeaconData[Le]) || z.eventRequiresKey(w, Le)) && (U[Le] = ke, z.previousBeaconData[Le] = ke);
                      });
                    }
                    return U;
                  } }, { key: "objectHasChanged", value: function(w, N, z, U) {
                    return !(!w || N.indexOf("request_") !== 0 || N !== "request_response_headers" && Gn(z) === "object" && Gn(U) === "object" && Object.keys(z || {}).length === Object.keys(U || {}).length);
                  } }, { key: "eventRequiresKey", value: function(w, N) {
                    return w === "renditionchange" && N.indexOf("video_source_") === 0 || !(N.indexOf("ad_id") !== 0 || !xu.includes(w));
                  } }]) && qa(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), k;
                }();
                function zn(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Nn = function(k, E, C) {
                  return E && zn(k.prototype, E), C && zn(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  (function(ae, we) {
                    if (!(ae instanceof we))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k);
                  var C = 0, w = 0, N = 0, z = 0, U = 0, $ = 0, Q = 0;
                  E.on("requestcompleted", function(ae, we) {
                    var Le, ke, ve = we.request_start, Ae = we.request_response_start, ge = we.request_response_end, ot = we.request_bytes_loaded;
                    if (z++, Ae ? (Le = Ae - (ve ?? 0), ke = (ge ?? 0) - Ae) : ke = (ge ?? 0) - (ve ?? 0), ke > 0 && ot && ot > 0) {
                      var et = ot / ke * 8e3;
                      U++, w += ot, N += ke, E.data.view_min_request_throughput = Math.min(E.data.view_min_request_throughput || 1 / 0, et), E.data.view_average_request_throughput = w / N * 8e3, E.data.view_request_count = z, Le > 0 && (C += Le, E.data.view_max_request_latency = Math.max(E.data.view_max_request_latency || 0, Le), E.data.view_average_request_latency = C / U);
                    }
                  }), E.on("requestfailed", function(ae, we) {
                    z++, $++, E.data.view_request_count = z, E.data.view_request_failed_count = $;
                  }), E.on("requestcanceled", function(ae, we) {
                    z++, Q++, E.data.view_request_count = z, E.data.view_request_canceled_count = Q;
                  });
                });
                function Dr(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                var Va = function(k, E, C) {
                  return E && Dr(k.prototype, E), C && Dr(k, C), Object.defineProperty(k, "prototype", { writable: !1 }), k;
                }(function k(E) {
                  var C = this;
                  (function(w, N) {
                    if (!(w instanceof N))
                      throw new TypeError("Cannot call a class as a function");
                  })(this, k), E.on("before*", function(w, N) {
                    var z = N.viewer_time, U = O.now(), $ = C._lastEventTime;
                    if (C._lastEventTime = U, $ && U - $ > 36e5) {
                      var Q = Object.keys(E.data).reduce(function(ae, we) {
                        return we.indexOf("video_") === 0 ? Object.assign(ae, function(Le, ke, ve) {
                          return ke in Le ? Object.defineProperty(Le, ke, { value: ve, enumerable: !0, configurable: !0, writable: !0 }) : Le[ke] = ve, Le;
                        }({}, we, E.data[we])) : ae;
                      }, {});
                      E.mux.log.info("Received event after at least an hour inactivity, creating a new view"), E.emit("viewinit", Object.assign({ viewer_time: z }, Q)), E.playbackHeartbeat._playheadShouldBeProgressing && w.type !== "play" && w.type !== "adbreakstart" && (E.emit("play", { viewer_time: z }), w.type !== "playing" && E.emit("playing", { viewer_time: z }));
                    }
                  });
                });
                function Xn(k) {
                  return Xn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(E) {
                    return typeof E;
                  } : function(E) {
                    return E && typeof Symbol == "function" && E.constructor === Symbol && E !== Symbol.prototype ? "symbol" : typeof E;
                  }, Xn(k);
                }
                function xi(k, E) {
                  (E == null || E > k.length) && (E = k.length);
                  for (var C = 0, w = new Array(E); C < E; C++)
                    w[C] = k[C];
                  return w;
                }
                function Pu(k, E) {
                  for (var C = 0; C < E.length; C++) {
                    var w = E[C];
                    w.enumerable = w.enumerable || !1, w.configurable = !0, "value" in w && (w.writable = !0), Object.defineProperty(k, w.key, w);
                  }
                }
                function Rn(k, E) {
                  return Rn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(C, w) {
                    return C.__proto__ = w, C;
                  }, Rn(k, E);
                }
                function Ha(k, E) {
                  if (E && (Xn(E) === "object" || typeof E == "function"))
                    return E;
                  if (E !== void 0)
                    throw new TypeError("Derived constructors may only return object or undefined");
                  return Pt(k);
                }
                function Pt(k) {
                  if (k === void 0)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                  return k;
                }
                function Qn(k) {
                  return Qn = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(E) {
                    return E.__proto__ || Object.getPrototypeOf(E);
                  }, Qn(k);
                }
                var Lu = ["viewstart", "ended", "loadstart", "pause", "play", "playing", "ratechange", "waiting", "adplay", "adpause", "adended", "aderror", "adplaying", "adrequest", "adresponse", "adbreakstart", "adbreakend", "adfirstquartile", "admidpoint", "adthirdquartile", "rebufferstart", "rebufferend", "seeked", "error", "hb", "requestcompleted", "requestfailed", "requestcanceled", "renditionchange"], xr = function(k) {
                  (function(z, U) {
                    if (typeof U != "function" && U !== null)
                      throw new TypeError("Super expression must either be null or a function");
                    z.prototype = Object.create(U && U.prototype, { constructor: { value: z, writable: !0, configurable: !0 } }), Object.defineProperty(z, "prototype", { writable: !1 }), U && Rn(z, U);
                  })(N, k);
                  var E, C, w = function(z) {
                    var U = function() {
                      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                        return !1;
                      if (typeof Proxy == "function")
                        return !0;
                      try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                        })), !0;
                      } catch {
                        return !1;
                      }
                    }();
                    return function() {
                      var $, Q = Qn(z);
                      if (U) {
                        var ae = Qn(this).constructor;
                        $ = Reflect.construct(Q, arguments, ae);
                      } else
                        $ = Q.apply(this, arguments);
                      return Ha(this, $);
                    };
                  }(N);
                  function N(z, U, $) {
                    var Q;
                    (function(ve, Ae) {
                      if (!(ve instanceof Ae))
                        throw new TypeError("Cannot call a class as a function");
                    })(this, N), (Q = w.call(this)).DOM_CONTENT_LOADED_EVENT_END = K(), Q.NAVIGATION_START = Z(), Q.mux = z, Q.id = U, ($ = Object.assign({ debug: !1, minimumRebufferDuration: 250, sustainedRebufferThreshold: 1e3, playbackHeartbeatTime: 25, beaconDomain: "litix.io", sampleRate: 1, disableCookies: !1, respectDoNotTrack: !1, disableRebufferTracking: !1, disablePlayheadRebufferTracking: !1, errorTranslator: function(ve) {
                      return ve;
                    } }, $)).data = $.data || {}, $.data.property_key && ($.data.env_key = $.data.property_key, delete $.data.property_key), H.setLevel($.debug ? "debug" : "warn"), Q.getPlayheadTime = $.getPlayheadTime, Q.getStateData = $.getStateData || function() {
                      return {};
                    }, Q.getAdData = $.getAdData || function() {
                    }, Q.minimumRebufferDuration = $.minimumRebufferDuration, Q.sustainedRebufferThreshold = $.sustainedRebufferThreshold, Q.playbackHeartbeatTime = $.playbackHeartbeatTime, Q.disableRebufferTracking = $.disableRebufferTracking, Q.disableRebufferTracking && Q.mux.log.warn("Disabling rebuffer tracking. This should only be used in specific circumstances as a last resort when your player is known to unreliably track rebuffering."), Q.disablePlayheadRebufferTracking = $.disablePlayheadRebufferTracking, Q.errorTranslator = $.errorTranslator, Q.playbackEventDispatcher = new Kn(z, $.data.env_key, $), Q.data = { player_instance_id: I(), mux_sample_rate: $.sampleRate, beacon_domain: $.beaconCollectionDomain ? $.beaconCollectionDomain : $.beaconDomain }, Q.data.view_sequence_number = 1, Q.data.player_sequence_number = 1, Q.oldEmit = Q.emit, Q.emit = function(ve, Ae) {
                      Ae = Object.assign({ viewer_time: this.mux.utils.now() }, Ae), this.oldEmit(ve, Ae);
                    };
                    var ae = function() {
                      this.data.view_start === void 0 && (this.data.view_start = this.mux.utils.now(), this.emit("viewstart"));
                    }.bind(Pt(Q));
                    Q.on("viewinit", function(ve, Ae) {
                      this._resetVideoData(), this._resetViewData(), this._resetErrorData(), this._updateStateData(), Object.assign(this.data, Ae), this._initializeViewData(), this.one("play", ae), this.one("adbreakstart", ae);
                    });
                    var we = function(ve) {
                      this.emit("viewend"), this.send("viewend"), this.emit("viewinit", ve);
                    }.bind(Pt(Q));
                    if (Q.on("videochange", function(ve, Ae) {
                      we(Ae);
                    }), Q.on("programchange", function(ve, Ae) {
                      this.data.player_is_paused && this.mux.log.warn("The `programchange` event is intended to be used when the content changes mid playback without the video source changing, however the video is not currently playing. If the video source is changing please use the videochange event otherwise you will lose startup time information."), we(Object.assign(Ae, { view_program_changed: !0 })), ae(), this.emit("play"), this.emit("playing");
                    }), Q.on("fragmentchange", function(ve, Ae) {
                      this.currentFragmentPDT = Ae.currentFragmentPDT, this.currentFragmentStart = Ae.currentFragmentStart;
                    }), Q.on("destroy", Q.destroy), typeof window < "u" && typeof window.addEventListener == "function" && typeof window.removeEventListener == "function") {
                      var Le = function() {
                        var ve = Q.data.view_start !== void 0;
                        Q.mux.WINDOW_HIDDEN = document.visibilityState === "hidden", ve && Q.mux.WINDOW_HIDDEN && (Q.data.player_is_paused || Q.emit("hb"));
                      };
                      window.addEventListener("visibilitychange", Le, !1);
                      var ke = function(ve) {
                        ve.persisted || Q.destroy();
                      };
                      window.addEventListener("pagehide", ke, !1), Q.on("destroy", function() {
                        window.removeEventListener("visibilitychange", Le), window.removeEventListener("pagehide", ke);
                      });
                    }
                    return Q.on("playerready", function(ve, Ae) {
                      Object.assign(this.data, Ae);
                    }), Lu.forEach(function(ve) {
                      Q.on(ve, function(Ae, ge) {
                        ve.indexOf("ad") !== 0 && this._updateStateData(), Object.assign(this.data, ge), this._sanitizeData();
                      }), Q.on("after" + ve, function() {
                        (ve !== "error" || this.errorTracker.viewErrored) && this.send(ve);
                      });
                    }), Q.on("viewend", function(ve, Ae) {
                      Object.assign(Q.data, Ae);
                    }), Q.one("playerready", function(ve) {
                      var Ae = this.mux.utils.now();
                      this.data.player_init_time && (this.data.player_startup_time = Ae - this.data.player_init_time), !this.mux.PLAYER_TRACKED && this.NAVIGATION_START && (this.mux.PLAYER_TRACKED = !0, (this.data.player_init_time || this.DOM_CONTENT_LOADED_EVENT_END) && (this.data.page_load_time = Math.min(this.data.player_init_time || 1 / 0, this.DOM_CONTENT_LOADED_EVENT_END || 1 / 0) - this.NAVIGATION_START)), this.send("playerready"), delete this.data.player_startup_time, delete this.data.page_load_time;
                    }), Q.longResumeTracker = new Va(Pt(Q)), Q.errorTracker = new Ke(Pt(Q)), new Au(Pt(Q)), Q.seekingTracker = new Tr(Pt(Q)), Q.playheadTime = new De(Pt(Q)), Q.playbackHeartbeat = new nt(Pt(Q)), new br(Pt(Q)), Q.watchTimeTracker = new jt(Pt(Q)), new Et(Pt(Q)), Q.adTracker = new Pa(Pt(Q)), new de(Pt(Q)), new Je(Pt(Q)), new Si(Pt(Q)), new Cu(Pt(Q)), new Nn(Pt(Q)), $.hlsjs && Q.addHLSJS($), $.dashjs && Q.addDashJS($), Q.emit("viewinit", $.data), Q;
                  }
                  return E = N, C = [{ key: "destroy", value: function() {
                    this._destroyed || (this._destroyed = !0, this.data.view_start !== void 0 && (this.emit("viewend"), this.send("viewend")), this.playbackEventDispatcher.destroy(), this.removeHLSJS(), this.removeDashJS(), window.clearTimeout(this._heartBeatTimeout));
                  } }, { key: "send", value: function(z) {
                    if (this.data.view_id) {
                      var U = Object.assign({}, this.data);
                      if (U.video_source_is_live === void 0 && (U.player_source_duration === 1 / 0 || U.video_source_duration === 1 / 0 ? U.video_source_is_live = !0 : (U.player_source_duration > 0 || U.video_source_duration > 0) && (U.video_source_is_live = !1)), U.video_source_is_live || ["player_program_time", "player_manifest_newest_program_time", "player_live_edge_program_time", "player_program_time", "video_holdback", "video_part_holdback", "video_target_duration", "video_part_target_duration"].forEach(function(we) {
                        U[we] = void 0;
                      }), U.video_source_url = U.video_source_url || U.player_source_url, U.video_source_url) {
                        var $ = function(we, Le) {
                          return function(ke) {
                            if (Array.isArray(ke))
                              return ke;
                          }(we) || function(ke, ve) {
                            var Ae = ke == null ? null : typeof Symbol < "u" && ke[Symbol.iterator] || ke["@@iterator"];
                            if (Ae != null) {
                              var ge, ot, et = [], yt = !0, Xe = !1;
                              try {
                                for (Ae = Ae.call(ke); !(yt = (ge = Ae.next()).done) && (et.push(ge.value), !ve || et.length !== ve); yt = !0)
                                  ;
                              } catch (rt) {
                                Xe = !0, ot = rt;
                              } finally {
                                try {
                                  yt || Ae.return == null || Ae.return();
                                } finally {
                                  if (Xe)
                                    throw ot;
                                }
                              }
                              return et;
                            }
                          }(we, Le) || function(ke, ve) {
                            if (ke) {
                              if (typeof ke == "string")
                                return xi(ke, ve);
                              var Ae = Object.prototype.toString.call(ke).slice(8, -1);
                              return Ae === "Object" && ke.constructor && (Ae = ke.constructor.name), Ae === "Map" || Ae === "Set" ? Array.from(ke) : Ae === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Ae) ? xi(ke, ve) : void 0;
                            }
                          }(we, Le) || function() {
                            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                          }();
                        }(X(U.video_source_url), 2), Q = $[0], ae = $[1];
                        U.video_source_domain = ae, U.video_source_hostname = Q;
                      }
                      delete U.ad_request_id, this.playbackEventDispatcher.send(z, U), this.data.view_sequence_number++, this.data.player_sequence_number++, this._restartHeartBeat(), z === "viewend" && delete this.data.view_id;
                    }
                  } }, { key: "_updateStateData", value: function() {
                    Object.assign(this.data, this.getStateData()), this.playheadTime._updatePlayheadTime(), this._sanitizeData();
                  } }, { key: "_sanitizeData", value: function() {
                    var z = this;
                    ["player_width", "player_height", "video_source_width", "video_source_height", "player_playhead_time", "video_source_bitrate"].forEach(function(U) {
                      var $ = parseInt(z.data[U], 10);
                      z.data[U] = isNaN($) ? void 0 : $;
                    }), ["player_source_url", "video_source_url"].forEach(function(U) {
                      if (z.data[U]) {
                        var $ = z.data[U].toLowerCase();
                        $.indexOf("data:") !== 0 && $.indexOf("blob:") !== 0 || (z.data[U] = "MSE style URL");
                      }
                    });
                  } }, { key: "_resetVideoData", value: function(z, U) {
                    var $ = this;
                    Object.keys(this.data).forEach(function(Q) {
                      Q.indexOf("video_") === 0 && delete $.data[Q];
                    });
                  } }, { key: "_resetViewData", value: function() {
                    var z = this;
                    Object.keys(this.data).forEach(function(U) {
                      U.indexOf("view_") === 0 && delete z.data[U];
                    }), this.data.view_sequence_number = 1;
                  } }, { key: "_resetErrorData", value: function(z, U) {
                    delete this.data.player_error_code, delete this.data.player_error_message;
                  } }, { key: "_initializeViewData", value: function() {
                    var z = this, U = this.data.view_id = I(), $ = function() {
                      U === z.data.view_id && te(z.data, "player_view_count", 1);
                    };
                    this.data.player_is_paused ? this.one("play", $) : $();
                  } }, { key: "_restartHeartBeat", value: function() {
                    var z = this;
                    window.clearTimeout(this._heartBeatTimeout), this.errorTracker.viewErrored || (this._heartBeatTimeout = window.setTimeout(function() {
                      z.data.player_is_paused || z.emit("hb");
                    }, 1e4));
                  } }, { key: "addHLSJS", value: function(z) {
                    z.hlsjs ? this.hlsjs ? this.mux.log.warn("An instance of HLS.js is already being monitored for this player.") : (this.hlsjs = z.hlsjs, function(U, $, Q) {
                      var ae = arguments.length > 4 ? arguments[4] : void 0, we = U.log, Le = U.utils.secondsToMs, ke = function(Ve) {
                        var Te, Ne = parseInt(ae.version);
                        return Ne === 1 && Ve.programDateTime !== null && (Te = Ve.programDateTime), Ne === 0 && Ve.pdt !== null && (Te = Ve.pdt), Te;
                      };
                      if (ie()) {
                        var ve = function(Ve, Te) {
                          return U.emit($, Ve, Te);
                        }, Ae = function(Ve, Te) {
                          var Ne = Te.levels, Ee = Te.audioTracks, Be = Te.url, ht = Te.stats, _t = Te.networkDetails, ni = Te.sessionData, Vt = {}, Yt = {};
                          Ne.forEach(function(Pi, Yi) {
                            Vt[Yi] = { width: Pi.width, height: Pi.height, bitrate: Pi.bitrate, attrs: Pi.attrs };
                          }), Ee.forEach(function(Pi, Yi) {
                            Yt[Yi] = { name: Pi.name, language: Pi.lang, bitrate: Pi.bitrate };
                          });
                          var Mt = re(ht), Bt = Mt.bytesLoaded, Ji = Mt.requestStart, pn = Mt.responseStart, vi = Mt.responseEnd;
                          ve("requestcompleted", fe(fe({}, pe(ni)), {}, { request_event_type: Ve, request_bytes_loaded: Bt, request_start: Ji, request_response_start: pn, request_response_end: vi, request_type: "manifest", request_hostname: W(Be), request_response_headers: J(_t), request_rendition_lists: { media: Vt, audio: Yt, video: {} } }));
                        };
                        Q.on(ae.Events.MANIFEST_LOADED, Ae);
                        var ge = function(Ve, Te) {
                          var Ne = Te.details, Ee = Te.level, Be = Te.networkDetails, ht = Te.stats, _t = re(ht), ni = _t.bytesLoaded, Vt = _t.requestStart, Yt = _t.responseStart, Mt = _t.responseEnd, Bt = Ne.fragments[Ne.fragments.length - 1], Ji = ke(Bt) + Le(Bt.duration);
                          ve("requestcompleted", { request_event_type: Ve, request_bytes_loaded: ni, request_start: Vt, request_response_start: Yt, request_response_end: Mt, request_current_level: Ee, request_type: "manifest", request_hostname: W(Ne.url), request_response_headers: J(Be), video_holdback: Ne.holdBack && Le(Ne.holdBack), video_part_holdback: Ne.partHoldBack && Le(Ne.partHoldBack), video_part_target_duration: Ne.partTarget && Le(Ne.partTarget), video_target_duration: Ne.targetduration && Le(Ne.targetduration), video_source_is_live: Ne.live, player_manifest_newest_program_time: isNaN(Ji) ? void 0 : Ji });
                        };
                        Q.on(ae.Events.LEVEL_LOADED, ge);
                        var ot = function(Ve, Te) {
                          var Ne = Te.details, Ee = Te.networkDetails, Be = Te.stats, ht = re(Be), _t = ht.bytesLoaded, ni = ht.requestStart, Vt = ht.responseStart, Yt = ht.responseEnd;
                          ve("requestcompleted", { request_event_type: Ve, request_bytes_loaded: _t, request_start: ni, request_response_start: Vt, request_response_end: Yt, request_type: "manifest", request_hostname: W(Ne.url), request_response_headers: J(Ee) });
                        };
                        Q.on(ae.Events.AUDIO_TRACK_LOADED, ot);
                        var et = function(Ve, Te) {
                          var Ne = Te.stats, Ee = Te.networkDetails, Be = Te.frag;
                          Ne = Ne || Be.stats;
                          var ht = re(Ne), _t = ht.bytesLoaded, ni = ht.requestStart, Vt = ht.responseStart, Yt = ht.responseEnd, Mt = Ee ? J(Ee) : void 0, Bt = { request_event_type: Ve, request_bytes_loaded: _t, request_start: ni, request_response_start: Vt, request_response_end: Yt, request_hostname: Ee ? W(Ee.responseURL) : void 0, request_id: Mt ? at(Mt) : void 0, request_response_headers: Mt, request_media_duration: Be.duration, request_url: Ee == null ? void 0 : Ee.responseURL };
                          Be.type === "main" ? (Bt.request_type = "media", Bt.request_current_level = Be.level, Bt.request_video_width = (Q.levels[Be.level] || {}).width, Bt.request_video_height = (Q.levels[Be.level] || {}).height, Bt.request_labeled_bitrate = (Q.levels[Be.level] || {}).bitrate) : Bt.request_type = Be.type, ve("requestcompleted", Bt);
                        };
                        Q.on(ae.Events.FRAG_LOADED, et);
                        var yt = function(Ve, Te) {
                          var Ne = Te.frag, Ee = Ne.start, Be = { currentFragmentPDT: ke(Ne), currentFragmentStart: Le(Ee) };
                          ve("fragmentchange", Be);
                        };
                        Q.on(ae.Events.FRAG_CHANGED, yt);
                        var Xe = function(Ve, Te) {
                          var Ne = Te.type, Ee = Te.details, Be = Te.response, ht = Te.fatal, _t = Te.frag, ni = Te.networkDetails, Vt = (_t == null ? void 0 : _t.url) || Te.url || "", Yt = ni ? J(ni) : void 0;
                          if (Ee !== ae.ErrorDetails.MANIFEST_LOAD_ERROR && Ee !== ae.ErrorDetails.MANIFEST_LOAD_TIMEOUT && Ee !== ae.ErrorDetails.FRAG_LOAD_ERROR && Ee !== ae.ErrorDetails.FRAG_LOAD_TIMEOUT && Ee !== ae.ErrorDetails.LEVEL_LOAD_ERROR && Ee !== ae.ErrorDetails.LEVEL_LOAD_TIMEOUT && Ee !== ae.ErrorDetails.AUDIO_TRACK_LOAD_ERROR && Ee !== ae.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT && Ee !== ae.ErrorDetails.SUBTITLE_LOAD_ERROR && Ee !== ae.ErrorDetails.SUBTITLE_LOAD_TIMEOUT && Ee !== ae.ErrorDetails.KEY_LOAD_ERROR && Ee !== ae.ErrorDetails.KEY_LOAD_TIMEOUT || ve("requestfailed", { request_error: Ee, request_url: Vt, request_hostname: W(Vt), request_id: Yt ? at(Yt) : void 0, request_type: Ee === ae.ErrorDetails.FRAG_LOAD_ERROR || Ee === ae.ErrorDetails.FRAG_LOAD_TIMEOUT ? "media" : Ee === ae.ErrorDetails.AUDIO_TRACK_LOAD_ERROR || Ee === ae.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT ? "audio" : Ee === ae.ErrorDetails.SUBTITLE_LOAD_ERROR || Ee === ae.ErrorDetails.SUBTITLE_LOAD_TIMEOUT ? "subtitle" : Ee === ae.ErrorDetails.KEY_LOAD_ERROR || Ee === ae.ErrorDetails.KEY_LOAD_TIMEOUT ? "encryption" : "manifest", request_error_code: Be == null ? void 0 : Be.code, request_error_text: Be == null ? void 0 : Be.text }), ht) {
                            var Mt, Bt = "".concat(Vt ? "url: ".concat(Vt, `
`) : "") + "".concat(Be && (Be.code || Be.text) ? "response: ".concat(Be.code, ", ").concat(Be.text, `
`) : "") + "".concat(Te.reason ? "failure reason: ".concat(Te.reason, `
`) : "") + "".concat(Te.level ? "level: ".concat(Te.level, `
`) : "") + "".concat(Te.parent ? "parent stream controller: ".concat(Te.parent, `
`) : "") + "".concat(Te.buffer ? "buffer length: ".concat(Te.buffer, `
`) : "") + "".concat(Te.error ? "error: ".concat(Te.error, `
`) : "") + "".concat(Te.event ? "event: ".concat(Te.event, `
`) : "") + "".concat(Te.err ? "error message: ".concat((Mt = Te.err) === null || Mt === void 0 ? void 0 : Mt.message, `
`) : "");
                            ve("error", { player_error_code: Ne, player_error_message: Ee, player_error_context: Bt });
                          }
                        };
                        Q.on(ae.Events.ERROR, Xe);
                        var rt = function(Ve, Te) {
                          var Ne = Te.frag, Ee = Ne && Ne._url || "";
                          ve("requestcanceled", { request_event_type: Ve, request_url: Ee, request_type: "media", request_hostname: W(Ee) });
                        };
                        Q.on(ae.Events.FRAG_LOAD_EMERGENCY_ABORTED, rt);
                        var St = function(Ve, Te) {
                          var Ne = Te.level, Ee = Q.levels[Ne];
                          if (Ee && Ee.attrs && Ee.attrs.BANDWIDTH) {
                            var Be, ht = Ee.attrs.BANDWIDTH, _t = parseFloat(Ee.attrs["FRAME-RATE"]);
                            isNaN(_t) || (Be = _t), ht ? ve("renditionchange", { video_source_fps: Be, video_source_bitrate: ht, video_source_width: Ee.width, video_source_height: Ee.height, video_source_rendition_name: Ee.name, video_source_codec: Ee == null ? void 0 : Ee.videoCodec }) : we.warn("missing BANDWIDTH from HLS manifest parsed by HLS.js");
                          }
                        };
                        Q.on(ae.Events.LEVEL_SWITCHED, St), Q._stopMuxMonitor = function() {
                          Q.off(ae.Events.MANIFEST_LOADED, Ae), Q.off(ae.Events.LEVEL_LOADED, ge), Q.off(ae.Events.AUDIO_TRACK_LOADED, ot), Q.off(ae.Events.FRAG_LOADED, et), Q.off(ae.Events.FRAG_CHANGED, yt), Q.off(ae.Events.ERROR, Xe), Q.off(ae.Events.FRAG_LOAD_EMERGENCY_ABORTED, rt), Q.off(ae.Events.LEVEL_SWITCHED, St), Q.off(ae.Events.DESTROYING, Q._stopMuxMonitor), delete Q._stopMuxMonitor;
                        }, Q.on(ae.Events.DESTROYING, Q._stopMuxMonitor);
                      } else
                        we.warn("performance timing not supported. Not tracking HLS.js.");
                    }(this.mux, this.id, z.hlsjs, {}, z.Hls || window.Hls)) : this.mux.log.warn("You must pass a valid hlsjs instance in order to track it.");
                  } }, { key: "removeHLSJS", value: function() {
                    var z;
                    this.hlsjs && ((z = this.hlsjs) && typeof z._stopMuxMonitor == "function" && z._stopMuxMonitor(), this.hlsjs = void 0);
                  } }, { key: "addDashJS", value: function(z) {
                    z.dashjs ? this.dashjs ? this.mux.log.warn("An instance of Dash.js is already being monitored for this player.") : (this.dashjs = z.dashjs, function(U, $, Q) {
                      var ae = U.log;
                      if (Q && Q.on) {
                        var we = function(Xe, rt) {
                          return U.emit($, Xe, rt);
                        }, Le = function(Xe) {
                          var rt = Xe.type, St = (Xe.data || {}).url;
                          we("requestcompleted", { request_event_type: rt, request_start: 0, request_response_start: 0, request_response_end: 0, request_bytes_loaded: -1, request_type: "manifest", request_hostname: W(St), request_url: St });
                        };
                        Q.on("manifestLoaded", Le);
                        var ke = {}, ve = function(Xe) {
                          var rt = Xe.type, St = Xe.fragmentModel, Ve = (Xe.chunk || {}).mediaInfo || {}, Te = Ve.type, Ne = Ve.bitrateList, Ee = {};
                          (Ne = Ne || []).forEach(function(pn, vi) {
                            Ee[vi] = {}, Ee[vi].width = pn.width, Ee[vi].height = pn.height, Ee[vi].bitrate = pn.bandwidth, Ee[vi].attrs = {};
                          }), Te === "video" ? ke.video = Ee : Te === "audio" ? ke.audio = Ee : ke.media = Ee;
                          var Be = Qe(St, Q), ht = Be.requestStart, _t = Be.requestResponseStart, ni = Be.requestResponseEnd, Vt = Be.requestResponseHeaders, Yt = Be.requestMediaDuration, Mt = Be.requestHostname, Bt = Be.requestUrl, Ji = Be.requestId;
                          we("requestcompleted", { request_event_type: rt, request_start: ht, request_response_start: _t, request_response_end: ni, request_bytes_loaded: -1, request_type: Te + "_init", request_response_headers: Vt, request_hostname: Mt, request_id: Ji, request_url: Bt, request_media_duration: Yt, request_rendition_lists: ke });
                        };
                        Q.on("initFragmentLoaded", ve);
                        var Ae = function(Xe) {
                          var rt = Xe.type, St = Xe.fragmentModel, Ve = Xe.chunk || {}, Te = Ve.mediaInfo, Ne = Ve.start, Ee = (Te || {}).type, Be = Qe(St, Q), ht = Be.requestStart, _t = Be.requestResponseStart, ni = Be.requestResponseEnd, Vt = Be.requestBytesLoaded, Yt = Be.requestResponseHeaders, Mt = Be.requestMediaDuration, Bt = Be.requestHostname, Ji = Be.requestUrl, pn = Be.requestId, vi = function(Ns, Rs) {
                            var tr = Rs.getQualityFor(Ns), ir = Rs.getCurrentTrackFor(Ns).bitrateList;
                            return ir ? { currentLevel: tr, renditionWidth: ir[tr].width || null, renditionHeight: ir[tr].height || null, renditionBitrate: ir[tr].bandwidth } : {};
                          }(Ee, Q), Pi = vi.currentLevel, Yi = vi.renditionWidth, er = vi.renditionHeight, Fu = vi.renditionBitrate;
                          we("requestcompleted", { request_event_type: rt, request_start: ht, request_response_start: _t, request_response_end: ni, request_bytes_loaded: Vt, request_type: Ee, request_response_headers: Yt, request_hostname: Bt, request_id: pn, request_url: Ji, request_media_start_time: Ne, request_media_duration: Mt, request_current_level: Pi, request_labeled_bitrate: Fu, request_video_width: Yi, request_video_height: er });
                        };
                        Q.on("mediaFragmentLoaded", Ae);
                        var ge = { video: void 0, audio: void 0, totalBitrate: void 0 }, ot = function(Xe, rt, St) {
                          if (typeof Xe.newQuality == "number") {
                            var Ve = Xe.mediaType;
                            if (Ve === "audio" || Ve === "video") {
                              var Te = Q.getBitrateInfoListFor(Ve).find(function(Ee) {
                                return Ee.qualityIndex === Xe.newQuality;
                              });
                              if (Te && typeof Te.bitrate == "number") {
                                ge[Ve] = Ie(Ie({}, Te), {}, { codec: Q.getCurrentTrackFor(Ve).codec });
                                var Ne = function() {
                                  if (ge.video && typeof ge.video.bitrate == "number") {
                                    if (ge.video.width && ge.video.height) {
                                      var Ee = ge.video.bitrate;
                                      return ge.audio && typeof ge.audio.bitrate == "number" && (Ee += ge.audio.bitrate), Ee !== ge.totalBitrate ? (ge.totalBitrate = Ee, { video_source_bitrate: Ee, video_source_height: ge.video.height, video_source_width: ge.video.width, video_source_codec: Ue(ge.video.codec) }) : void 0;
                                    }
                                    ae.warn("have bitrate info for video but missing width/height");
                                  }
                                }();
                                Ne && we("renditionchange", Ne);
                              } else
                                ae.warn("missing bitrate info for ".concat(Ve));
                            }
                          } else
                            ae.warn("missing evt.newQuality in qualityChangeRendered event", Xe);
                        };
                        Q.on("qualityChangeRendered", ot);
                        var et = function(Xe) {
                          var rt = Xe.request, St = Xe.mediaType;
                          we("requestcanceled", { request_event_type: (rt = rt || {}).type + "_" + rt.action, request_url: rt.url, request_type: St, request_hostname: W(rt.url) });
                        };
                        Q.on("fragmentLoadingAbandoned", et);
                        var yt = function(Xe) {
                          var rt, St, Ve = Xe.error, Te = (Ve == null || (rt = Ve.data) === null || rt === void 0 ? void 0 : rt.request) || {}, Ne = (Ve == null || (St = Ve.data) === null || St === void 0 ? void 0 : St.response) || {};
                          (Ve == null ? void 0 : Ve.code) === 27 && we("requestfailed", { request_error: Te.type + "_" + Te.action, request_url: Te.url, request_hostname: W(Te.url), request_type: Te.mediaType, request_error_code: Ne.status, request_error_text: Ne.statusText });
                          var Ee = "".concat(Te != null && Te.url ? "url: ".concat(Te.url, `
`) : "") + "".concat(Ne != null && Ne.status || Ne != null && Ne.statusText ? "response: ".concat(Ne == null ? void 0 : Ne.status, ", ").concat(Ne == null ? void 0 : Ne.statusText, `
`) : "");
                          we("error", { player_error_code: Ve == null ? void 0 : Ve.code, player_error_message: Ve == null ? void 0 : Ve.message, player_error_context: Ee });
                        };
                        Q.on("error", yt), Q._stopMuxMonitor = function() {
                          Q.off("manifestLoaded", Le), Q.off("initFragmentLoaded", ve), Q.off("mediaFragmentLoaded", Ae), Q.off("qualityChangeRendered", ot), Q.off("error", yt), Q.off("fragmentLoadingAbandoned", et), delete Q._stopMuxMonitor;
                        };
                      } else
                        ae.warn("Invalid dash.js player reference. Monitoring blocked.");
                    }(this.mux, this.id, z.dashjs)) : this.mux.log.warn("You must pass a valid dashjs instance in order to track it.");
                  } }, { key: "removeDashJS", value: function() {
                    var z;
                    this.dashjs && ((z = this.dashjs) && typeof z._stopMuxMonitor == "function" && z._stopMuxMonitor(), this.dashjs = void 0);
                  } }], C && Pu(E.prototype, C), Object.defineProperty(E, "prototype", { writable: !1 }), N;
                }(Fe), Jn = xr, Wa = y(153), Yn = y.n(Wa);
                function Ds(k) {
                  return Ds = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(E) {
                    return typeof E;
                  } : function(E) {
                    return E && typeof Symbol == "function" && E.constructor === Symbol && E !== Symbol.prototype ? "symbol" : typeof E;
                  }, Ds(k);
                }
                function xs(k, E) {
                  return function(C) {
                    if (Array.isArray(C))
                      return C;
                  }(k) || function(C, w) {
                    var N = C == null ? null : typeof Symbol < "u" && C[Symbol.iterator] || C["@@iterator"];
                    if (N != null) {
                      var z, U, $ = [], Q = !0, ae = !1;
                      try {
                        for (N = N.call(C); !(Q = (z = N.next()).done) && ($.push(z.value), !w || $.length !== w); Q = !0)
                          ;
                      } catch (we) {
                        ae = !0, U = we;
                      } finally {
                        try {
                          Q || N.return == null || N.return();
                        } finally {
                          if (ae)
                            throw U;
                        }
                      }
                      return $;
                    }
                  }(k, E) || function(C, w) {
                    if (C) {
                      if (typeof C == "string")
                        return Ga(C, w);
                      var N = Object.prototype.toString.call(C).slice(8, -1);
                      return N === "Object" && C.constructor && (N = C.constructor.name), N === "Map" || N === "Set" ? Array.from(C) : N === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(N) ? Ga(C, w) : void 0;
                    }
                  }(k, E) || function() {
                    throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                  }();
                }
                function Ga(k, E) {
                  (E == null || E > k.length) && (E = k.length);
                  for (var C = 0, w = new Array(E); C < E; C++)
                    w[C] = k[C];
                  return w;
                }
                var Mn, Ka = ["loadstart", "pause", "play", "playing", "seeking", "seeked", "timeupdate", "ratechange", "stalled", "waiting", "error", "ended"], Ou = { 1: "MEDIA_ERR_ABORTED", 2: "MEDIA_ERR_NETWORK", 3: "MEDIA_ERR_DECODE", 4: "MEDIA_ERR_SRC_NOT_SUPPORTED" };
                b() && b().WeakMap && (Mn = /* @__PURE__ */ new WeakMap());
                var Pr = function(k) {
                  return this.buffer = "", this.manifest = { segments: [], serverControl: {}, sessionData: {} }, this.currentUri = {}, this.process(k), this.manifest;
                };
                Pr.prototype.process = function(k) {
                  var E;
                  for (this.buffer += k, E = this.buffer.indexOf(`
`); E > -1; E = this.buffer.indexOf(`
`))
                    this.processLine(this.buffer.substring(0, E)), this.buffer = this.buffer.substring(E + 1);
                }, Pr.prototype.processLine = function(k) {
                  var E = k.indexOf(":"), C = Ru(k, E), w = C[0], N = C.length === 2 ? Ls(C[1]) : void 0;
                  if (w[0] !== "#")
                    this.currentUri.uri = w, this.manifest.segments.push(this.currentUri), this.manifest.targetDuration && !("duration" in this.currentUri) && (this.currentUri.duration = this.manifest.targetDuration), this.currentUri = {};
                  else
                    switch (w) {
                      case "#EXT-X-TARGETDURATION":
                        if (!isFinite(N) || N < 0)
                          return;
                        this.manifest.targetDuration = N, this.setHoldBack();
                        break;
                      case "#EXT-X-PART-INF":
                        Ps(this.manifest, C), this.manifest.partInf.partTarget && (this.manifest.partTargetDuration = this.manifest.partInf.partTarget), this.setHoldBack();
                        break;
                      case "#EXT-X-SERVER-CONTROL":
                        Ps(this.manifest, C), this.setHoldBack();
                        break;
                      case "#EXTINF":
                        N === 0 ? this.currentUri.duration = 0.01 : N > 0 && (this.currentUri.duration = N);
                        break;
                      case "#EXT-X-PROGRAM-DATE-TIME":
                        var z = N, U = new Date(z);
                        this.manifest.dateTimeString || (this.manifest.dateTimeString = z, this.manifest.dateTimeObject = U), this.currentUri.dateTimeString = z, this.currentUri.dateTimeObject = U;
                        break;
                      case "#EXT-X-VERSION":
                        Ps(this.manifest, C);
                        break;
                      case "#EXT-X-SESSION-DATA":
                        var $ = Mu(C[1]), Q = pe($);
                        Object.assign(this.manifest.sessionData, Q);
                    }
                }, Pr.prototype.setHoldBack = function() {
                  var k = this.manifest, E = k.serverControl, C = k.targetDuration, w = k.partTargetDuration;
                  if (E) {
                    var N = "holdBack", z = "partHoldBack", U = C && 3 * C, $ = w && 2 * w;
                    C && !E.hasOwnProperty(N) && (E[N] = U), U && E[N] < U && (E[N] = U), w && !E.hasOwnProperty(z) && (E[z] = 3 * w), w && E[z] < $ && (E[z] = $);
                  }
                };
                var Ps = function(k, E) {
                  var C, w = za(E[0].replace("#EXT-X-", ""));
                  Or(E[1]) ? (C = {}, C = Object.assign(Lr(E[1]), C)) : C = Ls(E[1]), k[w] = C;
                }, za = function(k) {
                  return k.toLowerCase().replace(/-(\w)/g, function(E) {
                    return E[1].toUpperCase();
                  });
                }, Ls = function(k) {
                  if (k.toLowerCase() === "yes" || k.toLowerCase() === "no")
                    return k.toLowerCase() === "yes";
                  var E = k.indexOf(":") !== -1 ? k : parseFloat(k);
                  return isNaN(E) ? k : E;
                }, Nu = function(k) {
                  var E = {}, C = k.split("=");
                  return C.length > 1 && (E[za(C[0])] = Ls(C[1])), E;
                }, Lr = function(k) {
                  for (var E = k.split(","), C = {}, w = 0; E.length > w; w++) {
                    var N = E[w], z = Nu(N);
                    C = Object.assign(z, C);
                  }
                  return C;
                }, Or = function(k) {
                  return k.indexOf("=") > -1;
                }, Ru = function(k, E) {
                  return E === -1 ? [k] : [k.substring(0, E), k.substring(E + 1)];
                }, Mu = function(k) {
                  var E = {};
                  if (k) {
                    var C = k.search(",");
                    return [k.slice(0, C), k.slice(C + 1)].forEach(function(w, N) {
                      for (var z = w.replace(/['"]+/g, "").split("="), U = 0; U < z.length; U++)
                        z[U] === "DATA-ID" && (E["DATA-ID"] = z[1 - U]), z[U] === "VALUE" && (E.VALUE = z[1 - U]);
                    }), { data: E };
                  }
                }, Os = Pr, Bu = { safeCall: function(k, E, C, w) {
                  var N = w;
                  if (k && typeof k[E] == "function")
                    try {
                      N = k[E].apply(k, C);
                    } catch (z) {
                      H.info("safeCall error", z);
                    }
                  return N;
                }, safeIncrement: te, getComputedStyle: function(k, E) {
                  var C;
                  if (k && E && b() && typeof b().getComputedStyle == "function")
                    return Mn && Mn.has(k) && (C = Mn.get(k)), C || (C = b().getComputedStyle(k, null), Mn && Mn.set(k, C)), C.getPropertyValue(E);
                }, secondsToMs: function(k) {
                  return Math.floor(1e3 * k);
                }, assign: Object.assign, headersStringToObject: he, cdnHeadersToRequestId: at, extractHostnameAndDomain: X, extractHostname: W, manifestParser: Os, generateShortID: B, generateUUID: I, now: O.now };
                function Nr(k, E) {
                  (E == null || E > k.length) && (E = k.length);
                  for (var C = 0, w = new Array(E); C < E; C++)
                    w[C] = k[C];
                  return w;
                }
                var gi = {}, $n = function k(E) {
                  var C = arguments;
                  typeof E == "string" ? k.hasOwnProperty(E) ? b().setTimeout(function() {
                    C = Array.prototype.splice.call(C, 1), k[E].apply(null, C);
                  }, 0) : H.warn("`" + E + "` is an unknown task") : typeof E == "function" ? b().setTimeout(function() {
                    E(k);
                  }, 0) : H.warn("`" + E + "` is invalid.");
                }, Uu = { loaded: O.now(), NAME: "mux-embed", VERSION: "4.24.0", API_VERSION: "2.1", PLAYER_TRACKED: !1, monitor: function(k, E) {
                  return function(C, w, N) {
                    var z = xs(A(w), 3), U = z[0], $ = z[1], Q = z[2], ae = C.log, we = C.utils.getComputedStyle, Le = C.utils.secondsToMs;
                    if (!U)
                      return ae.error("No element was found with the `" + $ + "` query selector.");
                    if (Q !== "video" && Q !== "audio")
                      return ae.error("The element of `" + $ + "` was not a media element.");
                    U.mux && (U.mux.destroy(), delete U.mux, ae.warn("Already monitoring this video element, replacing existing event listeners")), (N = Object.assign({ automaticErrorTracking: !0 }, N)).data = Object.assign({ player_software: "HTML5 Video Element", player_mux_plugin_name: "VideoElementMonitor", player_mux_plugin_version: C.VERSION }, N.data), N.getPlayheadTime = function() {
                      return Le(U.currentTime);
                    }, N.getStateData = function() {
                      var ve, Ae, ge = this.hlsjs && this.hlsjs.url, ot = this.dashjs && Ds(this.dashjs.getSource === "function") && this.dashjs.getSource(), et = { player_is_paused: U.paused, player_playhead_time: Le(U.currentTime), player_width: parseInt(we(U, "width")), player_height: parseInt(we(U, "height")), player_autoplay_on: U.autoplay, player_preload_on: U.preload, player_language_code: U.lang, player_is_fullscreen: Yn() && !!(Yn().fullscreenElement || Yn().webkitFullscreenElement || Yn().mozFullScreenElement || Yn().msFullscreenElement), video_poster_url: U.poster, video_source_url: ge || ot || U.currentSrc, video_source_duration: Le(U.duration), video_source_height: U.videoHeight, video_source_width: U.videoWidth, view_dropped_frame_count: (ve = U) === null || ve === void 0 || (Ae = ve.getVideoPlaybackQuality) === null || Ae === void 0 ? void 0 : Ae.call(ve).droppedVideoFrames }, yt = N.getPlayheadTime();
                      if (U.getStartDate && yt > 0) {
                        var Xe = U.getStartDate();
                        if (Xe && typeof Xe.getTime == "function" && Xe.getTime()) {
                          var rt = Xe.getTime();
                          if (et.player_program_time = rt + yt, U.seekable.length > 0) {
                            var St = rt + U.seekable.end(U.seekable.length - 1);
                            et.player_live_edge_program_time = St;
                          }
                        }
                      }
                      return et;
                    }, U.mux = U.mux || {}, U.mux.deleted = !1, U.mux.emit = function(ve, Ae) {
                      C.emit($, ve, Ae);
                    };
                    var ke = function() {
                      ae.error("The monitor for this video element has already been destroyed.");
                    };
                    U.mux.destroy = function() {
                      Object.keys(U.mux.listeners).forEach(function(ve) {
                        U.removeEventListener(ve, U.mux.listeners[ve], !1);
                      }), delete U.mux.listeners, U.mux.destroy = ke, U.mux.swapElement = ke, U.mux.emit = ke, U.mux.addHLSJS = ke, U.mux.addDashJS = ke, U.mux.removeHLSJS = ke, U.mux.removeDashJS = ke, U.mux.deleted = !0, C.emit($, "destroy");
                    }, U.mux.swapElement = function(ve) {
                      var Ae = xs(A(ve), 3), ge = Ae[0], ot = Ae[1], et = Ae[2];
                      return ge ? et !== "video" && et !== "audio" ? C.log.error("The element of `" + ot + "` was not a media element.") : (ge.muxId = U.muxId, delete U.muxId, ge.mux = ge.mux || {}, ge.mux.listeners = Object.assign({}, U.mux.listeners), delete U.mux.listeners, Object.keys(ge.mux.listeners).forEach(function(yt) {
                        U.removeEventListener(yt, ge.mux.listeners[yt], !1), ge.addEventListener(yt, ge.mux.listeners[yt], !1);
                      }), ge.mux.swapElement = U.mux.swapElement, ge.mux.destroy = U.mux.destroy, delete U.mux, void (U = ge)) : C.log.error("No element was found with the `" + ot + "` query selector.");
                    }, U.mux.addHLSJS = function(ve) {
                      C.addHLSJS($, ve);
                    }, U.mux.addDashJS = function(ve) {
                      C.addDashJS($, ve);
                    }, U.mux.removeHLSJS = function() {
                      C.removeHLSJS($);
                    }, U.mux.removeDashJS = function() {
                      C.removeDashJS($);
                    }, C.init($, N), C.emit($, "playerready"), U.paused || (C.emit($, "play"), U.readyState > 2 && C.emit($, "playing")), U.mux.listeners = {}, Ka.forEach(function(ve) {
                      (ve !== "error" || N.automaticErrorTracking) && (U.mux.listeners[ve] = function() {
                        var Ae = {};
                        if (ve === "error") {
                          if (!U.error || U.error.code === 1)
                            return;
                          Ae.player_error_code = U.error.code, Ae.player_error_message = Ou[U.error.code] || U.error.message;
                        }
                        C.emit($, ve, Ae);
                      }, U.addEventListener(ve, U.mux.listeners[ve], !1));
                    });
                  }($n, k, E);
                }, destroyMonitor: function(k) {
                  var E = function(C, w) {
                    return function(N) {
                      if (Array.isArray(N))
                        return N;
                    }(C) || function(N, z) {
                      var U = N == null ? null : typeof Symbol < "u" && N[Symbol.iterator] || N["@@iterator"];
                      if (U != null) {
                        var $, Q, ae = [], we = !0, Le = !1;
                        try {
                          for (U = U.call(N); !(we = ($ = U.next()).done) && (ae.push($.value), !z || ae.length !== z); we = !0)
                            ;
                        } catch (ke) {
                          Le = !0, Q = ke;
                        } finally {
                          try {
                            we || U.return == null || U.return();
                          } finally {
                            if (Le)
                              throw Q;
                          }
                        }
                        return ae;
                      }
                    }(C, w) || function(N, z) {
                      if (N) {
                        if (typeof N == "string")
                          return Nr(N, z);
                        var U = Object.prototype.toString.call(N).slice(8, -1);
                        return U === "Object" && N.constructor && (U = N.constructor.name), U === "Map" || U === "Set" ? Array.from(N) : U === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(U) ? Nr(N, z) : void 0;
                      }
                    }(C, w) || function() {
                      throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                    }();
                  }(A(k), 1)[0];
                  E && E.mux && typeof E.mux.destroy == "function" ? E.mux.destroy() : H.error("A video element monitor for `" + k + "` has not been initialized via `mux.monitor`.");
                }, addHLSJS: function(k, E) {
                  var C = M(k);
                  gi[C] ? gi[C].addHLSJS(E) : H.error("A monitor for `" + C + "` has not been initialized.");
                }, addDashJS: function(k, E) {
                  var C = M(k);
                  gi[C] ? gi[C].addDashJS(E) : H.error("A monitor for `" + C + "` has not been initialized.");
                }, removeHLSJS: function(k) {
                  var E = M(k);
                  gi[E] ? gi[E].removeHLSJS() : H.error("A monitor for `" + E + "` has not been initialized.");
                }, removeDashJS: function(k) {
                  var E = M(k);
                  gi[E] ? gi[E].removeDashJS() : H.error("A monitor for `" + E + "` has not been initialized.");
                }, init: function(k, E) {
                  D() && E && E.respectDoNotTrack && H.info("The browser's Do Not Track flag is enabled - Mux beaconing is disabled.");
                  var C = M(k);
                  gi[C] = new Jn($n, C, E);
                }, emit: function(k, E, C) {
                  var w = M(k);
                  gi[w] ? (gi[w].emit(E, C), E === "destroy" && delete gi[w]) : H.error("A monitor for `" + w + "` has not been initialized.");
                }, checkDoNotTrack: D, log: H, utils: Bu, events: { PLAYER_READY: "playerready", VIEW_INIT: "viewinit", VIDEO_CHANGE: "videochange", PLAY: "play", PAUSE: "pause", PLAYING: "playing", TIME_UPDATE: "timeupdate", SEEKING: "seeking", SEEKED: "seeked", REBUFFER_START: "rebufferstart", REBUFFER_END: "rebufferend", ERROR: "error", ENDED: "ended", RENDITION_CHANGE: "renditionchange", ORIENTATION_CHANGE: "orientationchange", AD_REQUEST: "adrequest", AD_RESPONSE: "adresponse", AD_BREAK_START: "adbreakstart", AD_PLAY: "adplay", AD_PLAYING: "adplaying", AD_PAUSE: "adpause", AD_FIRST_QUARTILE: "adfirstquartile", AD_MID_POINT: "admidpoint", AD_THIRD_QUARTILE: "adthirdquartile", AD_ENDED: "adended", AD_BREAK_END: "adbreakend", AD_ERROR: "aderror", REQUEST_COMPLETED: "requestcompleted", REQUEST_FAILED: "requestfailed", REQUEST_CANCELLED: "requestcanceled" }, WINDOW_HIDDEN: !1, WINDOW_UNLOADING: !1 };
                Object.assign($n, Uu), b() !== void 0 && typeof b().addEventListener == "function" && b().addEventListener("pagehide", function(k) {
                  k.persisted || ($n.WINDOW_UNLOADING = !0);
                }, !1);
                var Zn = $n;
              }, 655: function(h, m, y) {
                var T, b;
                function I(B) {
                  return I = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(M) {
                    return typeof M;
                  } : function(M) {
                    return M && typeof Symbol == "function" && M.constructor === Symbol && M !== Symbol.prototype ? "symbol" : typeof M;
                  }, I(B);
                  /*!
                   * JavaScript Cookie v2.1.3
                   * https://github.com/js-cookie/js-cookie
                   *
                   * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
                   * Released under the MIT license
                   */
                }
                (function(B) {
                  var M = !1;
                  if ((b = typeof (T = B) == "function" ? T.call(m, y, m, h) : T) === void 0 || (h.exports = b), M = !0, I(m) === "object" && (h.exports = B(), M = !0), !M) {
                    var A = window.Cookies, x = window.Cookies = B();
                    x.noConflict = function() {
                      return window.Cookies = A, x;
                    };
                  }
                })(function() {
                  var B = function() {
                    for (var M = 0, A = {}; M < arguments.length; M++) {
                      var x = arguments[M];
                      for (var P in x)
                        A[P] = x[P];
                    }
                    return A;
                  };
                  return function M(A) {
                    function x(P, j, H) {
                      var D;
                      if (typeof document < "u") {
                        if (arguments.length > 1) {
                          if (typeof (H = B({ path: "/" }, x.defaults, H)).expires == "number") {
                            var O = /* @__PURE__ */ new Date();
                            O.setMilliseconds(O.getMilliseconds() + 864e5 * H.expires), H.expires = O;
                          }
                          try {
                            D = JSON.stringify(j), /^[\{\[]/.test(D) && (j = D);
                          } catch {
                          }
                          return j = A.write ? A.write(j, P) : encodeURIComponent(String(j)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), P = (P = (P = encodeURIComponent(String(P))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape), document.cookie = [P, "=", j, H.expires ? "; expires=" + H.expires.toUTCString() : "", H.path ? "; path=" + H.path : "", H.domain ? "; domain=" + H.domain : "", H.secure ? "; secure" : ""].join("");
                        }
                        P || (D = {});
                        for (var W = document.cookie ? document.cookie.split("; ") : [], X = /(%[0-9A-Z]{2})+/g, ie = 0; ie < W.length; ie++) {
                          var K = W[ie].split("="), Z = K.slice(1).join("=");
                          Z.charAt(0) === '"' && (Z = Z.slice(1, -1));
                          try {
                            var te = K[0].replace(X, decodeURIComponent);
                            if (Z = A.read ? A.read(Z, te) : A(Z, te) || Z.replace(X, decodeURIComponent), this.json)
                              try {
                                Z = JSON.parse(Z);
                              } catch {
                              }
                            if (P === te) {
                              D = Z;
                              break;
                            }
                            P || (D[te] = Z);
                          } catch {
                          }
                        }
                        return D;
                      }
                    }
                    return x.set = x, x.get = function(P) {
                      return x.call(x, P);
                    }, x.getJSON = function() {
                      return x.apply({ json: !0 }, [].slice.call(arguments));
                    }, x.defaults = {}, x.remove = function(P, j) {
                      x(P, "", B(j, { expires: -1 }));
                    }, x.withConverter = M, x;
                  }(function() {
                  });
                });
              }, 153: function(h, m, y) {
                var T, b = y.g !== void 0 ? y.g : typeof window < "u" ? window : {}, I = y(558);
                typeof document < "u" ? T = document : (T = b["__GLOBAL_DOCUMENT_CACHE@4"]) || (T = b["__GLOBAL_DOCUMENT_CACHE@4"] = I), h.exports = T;
              }, 48: function(h, m, y) {
                var T;
                T = typeof window < "u" ? window : y.g !== void 0 ? y.g : typeof self < "u" ? self : {}, h.exports = T;
              }, 640: function(h, m, y) {
                var T, b;
                (function(I, B) {
                  T = function() {
                    var M = function() {
                    }, A = "undefined", x = typeof window !== A && typeof window.navigator !== A && /Trident\/|MSIE /.test(window.navigator.userAgent), P = ["trace", "debug", "info", "warn", "error"];
                    function j(ue, be) {
                      var he = ue[be];
                      if (typeof he.bind == "function")
                        return he.bind(ue);
                      try {
                        return Function.prototype.bind.call(he, ue);
                      } catch {
                        return function() {
                          return Function.prototype.apply.apply(he, [ue, arguments]);
                        };
                      }
                    }
                    function H() {
                      console.log && (console.log.apply ? console.log.apply(console, arguments) : Function.prototype.apply.apply(console.log, [console, arguments])), console.trace && console.trace();
                    }
                    function D(ue) {
                      return ue === "debug" && (ue = "log"), typeof console !== A && (ue === "trace" && x ? H : console[ue] !== void 0 ? j(console, ue) : console.log !== void 0 ? j(console, "log") : M);
                    }
                    function O(ue, be) {
                      for (var he = 0; he < P.length; he++) {
                        var at = P[he];
                        this[at] = he < ue ? M : this.methodFactory(at, ue, be);
                      }
                      this.log = this.debug;
                    }
                    function W(ue, be, he) {
                      return function() {
                        typeof console !== A && (O.call(this, be, he), this[ue].apply(this, arguments));
                      };
                    }
                    function X(ue, be, he) {
                      return D(ue) || W.apply(this, arguments);
                    }
                    function ie(ue, be, he) {
                      var at, pe = this;
                      be = be ?? "WARN";
                      var le = "loglevel";
                      function fe(J) {
                        var _e = (P[J] || "silent").toUpperCase();
                        if (typeof window !== A && le) {
                          try {
                            return void (window.localStorage[le] = _e);
                          } catch {
                          }
                          try {
                            window.document.cookie = encodeURIComponent(le) + "=" + _e + ";";
                          } catch {
                          }
                        }
                      }
                      function Pe() {
                        var J;
                        if (typeof window !== A && le) {
                          try {
                            J = window.localStorage[le];
                          } catch {
                          }
                          if (typeof J === A)
                            try {
                              var _e = window.document.cookie, Ie = _e.indexOf(encodeURIComponent(le) + "=");
                              Ie !== -1 && (J = /^([^;]+)/.exec(_e.slice(Ie))[1]);
                            } catch {
                            }
                          return pe.levels[J] === void 0 && (J = void 0), J;
                        }
                      }
                      typeof ue == "string" ? le += ":" + ue : typeof ue == "symbol" && (le = void 0), pe.name = ue, pe.levels = { TRACE: 0, DEBUG: 1, INFO: 2, WARN: 3, ERROR: 4, SILENT: 5 }, pe.methodFactory = he || X, pe.getLevel = function() {
                        return at;
                      }, pe.setLevel = function(J, _e) {
                        if (typeof J == "string" && pe.levels[J.toUpperCase()] !== void 0 && (J = pe.levels[J.toUpperCase()]), !(typeof J == "number" && J >= 0 && J <= pe.levels.SILENT))
                          throw "log.setLevel() called with invalid level: " + J;
                        if (at = J, _e !== !1 && fe(J), O.call(pe, J, ue), typeof console === A && J < pe.levels.SILENT)
                          return "No console available for logging";
                      }, pe.setDefaultLevel = function(J) {
                        be = J, Pe() || pe.setLevel(J, !1);
                      }, pe.resetLevel = function() {
                        pe.setLevel(be, !1), function() {
                          if (typeof window !== A && le) {
                            try {
                              return void window.localStorage.removeItem(le);
                            } catch {
                            }
                            try {
                              window.document.cookie = encodeURIComponent(le) + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC";
                            } catch {
                            }
                          }
                        }();
                      }, pe.enableAll = function(J) {
                        pe.setLevel(pe.levels.TRACE, J);
                      }, pe.disableAll = function(J) {
                        pe.setLevel(pe.levels.SILENT, J);
                      };
                      var re = Pe();
                      re == null && (re = be), pe.setLevel(re, !1);
                    }
                    var K = new ie(), Z = {};
                    K.getLogger = function(ue) {
                      if (typeof ue != "symbol" && typeof ue != "string" || ue === "")
                        throw new TypeError("You must supply a name when creating a logger.");
                      var be = Z[ue];
                      return be || (be = Z[ue] = new ie(ue, K.getLevel(), K.methodFactory)), be;
                    };
                    var te = typeof window !== A ? window.log : void 0;
                    return K.noConflict = function() {
                      return typeof window !== A && window.log === K && (window.log = te), K;
                    }, K.getLoggers = function() {
                      return Z;
                    }, K.default = K, K;
                  }, (b = T.call(m, y, m, h)) === void 0 || (h.exports = b);
                })();
              }, 375: function(h, m) {
                var y = Object.prototype.hasOwnProperty;
                function T(I) {
                  try {
                    return decodeURIComponent(I.replace(/\+/g, " "));
                  } catch {
                    return null;
                  }
                }
                function b(I) {
                  try {
                    return encodeURIComponent(I);
                  } catch {
                    return null;
                  }
                }
                m.stringify = function(I, B) {
                  B = B || "";
                  var M, A, x = [];
                  for (A in typeof B != "string" && (B = "?"), I)
                    if (y.call(I, A)) {
                      if ((M = I[A]) || M != null && !isNaN(M) || (M = ""), A = b(A), M = b(M), A === null || M === null)
                        continue;
                      x.push(A + "=" + M);
                    }
                  return x.length ? B + x.join("&") : "";
                }, m.parse = function(I) {
                  for (var B, M = /([^=?#&]+)=?([^&]*)/g, A = {}; B = M.exec(I); ) {
                    var x = T(B[1]), P = T(B[2]);
                    x === null || P === null || x in A || (A[x] = P);
                  }
                  return A;
                };
              }, 558: function() {
              } }, d = {};
              function p(h) {
                var m = d[h];
                if (m !== void 0)
                  return m.exports;
                var y = d[h] = { exports: {} };
                return l[h].call(y.exports, y, y.exports, p), y.exports;
              }
              return p.n = function(h) {
                var m = h && h.__esModule ? function() {
                  return h.default;
                } : function() {
                  return h;
                };
                return p.d(m, { a: m }), m;
              }, p.d = function(h, m) {
                for (var y in m)
                  p.o(m, y) && !p.o(h, y) && Object.defineProperty(h, y, { enumerable: !0, get: m[y] });
              }, p.g = function() {
                if (typeof globalThis == "object")
                  return globalThis;
                try {
                  return this || new Function("return this")();
                } catch {
                  if (typeof window == "object")
                    return window;
                }
              }(), p.o = function(h, m) {
                return Object.prototype.hasOwnProperty.call(h, m);
              }, p(80);
            }();
          }, o.exports = u();
        }, 855: function(o) {
          o.exports = n;
        } }, r = {};
        function s(o) {
          var u = r[o];
          if (u !== void 0)
            return u.exports;
          var l = r[o] = { exports: {} };
          return t[o](l, l.exports, s), l.exports;
        }
        s.n = function(o) {
          var u = o && o.__esModule ? function() {
            return o.default;
          } : function() {
            return o;
          };
          return s.d(u, { a: u }), u;
        }, s.d = function(o, u) {
          for (var l in u)
            s.o(u, l) && !s.o(o, l) && Object.defineProperty(o, l, { enumerable: !0, get: u[l] });
        }, s.g = function() {
          if (typeof globalThis == "object")
            return globalThis;
          try {
            return this || new Function("return this")();
          } catch {
            if (typeof window == "object")
              return window;
          }
        }(), s.o = function(o, u) {
          return Object.prototype.hasOwnProperty.call(o, u);
        }, s.r = function(o) {
          typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(o, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(o, "__esModule", { value: !0 });
        };
        var a = {};
        return function() {
          s.r(a), s.d(a, { register: function() {
            return at;
          } });
          var o = s(48), u = s.n(o), l = s(855), d = s.n(l), p = s(961), h = s.n(p), m = h().utils.secondsToMs;
          function y(pe, le) {
            var fe = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], Pe = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : [], re = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : function() {
              return {};
            }, J = !1;
            pe.on("adstart", function() {
              J = !0;
            }), pe.on("adend", function() {
              J = !1;
            }), pe.on("adserror", function() {
              J = !1;
            });
            var _e = function() {
              var Ie = m(le.currentTime()), He = function Ue() {
                var bt = h().utils.now(), it = m(le.currentTime());
                if (J) {
                  if (it > Ie) {
                    var ne = re();
                    ne.viewer_time = bt - Math.max(0, it - Ie), le.off("timeupdate", Ue), pe.mux.emit("adplaying", ne);
                  }
                } else
                  le.off("timeupdate", Ue);
              };
              le.on("timeupdate", He);
              var Qe = function Ue() {
                le.off("timeupdate", He), fe.forEach(function(bt) {
                  le.off(bt, Ue);
                });
              };
              fe.forEach(function(Ue) {
                le.on(Ue, Qe);
              });
            };
            Pe.forEach(function(Ie) {
              le.on(Ie, _e);
            });
          }
          function T(pe) {
            if (typeof pe != "string")
              return !1;
            var le = pe.split(".").map(function(re) {
              return parseInt(re);
            }), fe = le[0], Pe = le[1];
            return fe > 2 || fe === 2 && Pe >= 3;
          }
          var b = h().utils.manifestParser;
          function I(pe, le) {
            return function(fe) {
              if (Array.isArray(fe))
                return fe;
            }(pe) || function(fe, Pe) {
              var re = fe == null ? null : typeof Symbol < "u" && fe[Symbol.iterator] || fe["@@iterator"];
              if (re != null) {
                var J, _e, Ie = [], He = !0, Qe = !1;
                try {
                  for (re = re.call(fe); !(He = (J = re.next()).done) && (Ie.push(J.value), !Pe || Ie.length !== Pe); He = !0)
                    ;
                } catch (Ue) {
                  Qe = !0, _e = Ue;
                } finally {
                  try {
                    He || re.return == null || re.return();
                  } finally {
                    if (Qe)
                      throw _e;
                  }
                }
                return Ie;
              }
            }(pe, le) || function(fe, Pe) {
              if (fe) {
                if (typeof fe == "string")
                  return B(fe, Pe);
                var re = Object.prototype.toString.call(fe).slice(8, -1);
                if (re === "Object" && fe.constructor && (re = fe.constructor.name), re === "Map" || re === "Set")
                  return Array.from(fe);
                if (re === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(re))
                  return B(fe, Pe);
              }
            }(pe, le) || function() {
              throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
            }();
          }
          function B(pe, le) {
            (le == null || le > pe.length) && (le = pe.length);
            for (var fe = 0, Pe = new Array(le); fe < le; fe++)
              Pe[fe] = pe[fe];
            return Pe;
          }
          var M = h().utils, A = M.assign, x = M.secondsToMs;
          function P(pe, le, fe) {
            var Pe = 0;
            return function() {
              var re, J = le.readyState;
              if (J >= 2) {
                if (Pe = Pe || h().utils.now(), J !== 4)
                  return;
                var _e = pe(), Ie = _e.mux.utils.extractHostnameAndDomain, He = _e.mux.utils.headersStringToObject, Qe = h().utils.now(), Ue = I(Ie(le.responseURL), 1)[0], bt = le.responseType === "arraybuffer" ? le.response.byteLength : le.responseText.length, it = He(le.getAllResponseHeaders ? le.getAllResponseHeaders() : ""), ne = function(Me) {
                  var Je = Me["content-type"];
                  return Je ? Je.match(/^audio\/mpegurl/i) ? "manifest" : Je.match(/^audio.*/i) ? "audio" : Je.match(/^video.*/) ? "video" : Je.match(/^application\/x-mpegurl/i) || Je.match(/^application\/vnd.apple.mpegurl/i) || Je.match(/^application\/dash+xml/i) ? "manifest" : "unknown" : "unknown";
                }(it);
                if (le.status >= 200 && le.status < 300) {
                  var Fe = { request_start: fe, request_response_start: Pe, request_response_end: Qe, request_bytes_loaded: bt, request_hostname: Ue, request_url: le.responseURL, request_response_headers: it, request_type: ne };
                  if (ne === "manifest") {
                    var $e, nt, Tt, Ke, Wt, jt, gt, Et = (re = le.responseText, new b(re));
                    if (Et) {
                      $e = Et.partTargetDuration, nt = Et.targetDuration, Tt = Et.segments;
                      var vt = Et.serverControl;
                      Ke = vt.partHoldBack, Wt = vt.holdBack, gt = Et.sessionData;
                      var De = Tt[Tt.length - 1];
                      De && De.dateTimeObject && (jt = De.dateTimeObject.getTime() + x(De.duration)), Fe = A(Fe, { video_holdback: Wt && x(Wt), video_part_holdback: Ke && x(Ke), video_part_target_duration: $e && x($e), video_target_duration: nt && x(nt), player_manifest_newest_program_time: jt }), gt && (Fe = A(Fe, gt));
                    }
                  }
                  _e.mux.emit("requestcompleted", Fe);
                } else {
                  var Oe = { request_hostname: I(Ie(le.responseURL), 1)[0], request_url: le.responseURL, request_type: ne };
                  _e.mux.emit("requestfailed", Oe);
                }
              }
            };
          }
          function j(pe, le) {
            var fe, Pe = function(re) {
              return function(J) {
                var _e = h().utils.now();
                try {
                  re(J);
                } catch {
                }
                try {
                  J.onreadystatechange = function(Ie, He, Qe) {
                    var Ue = P(pe, Ie, He);
                    return function() {
                      try {
                        Ue();
                      } catch {
                      }
                      try {
                        Qe();
                      } catch {
                      }
                    };
                  }(J, _e, J.onreadystatechange || function() {
                  });
                } catch {
                }
              };
            };
            le.beforeRequest = (fe = le.beforeRequest || function(re) {
              return re;
            }, function(re) {
              var J = fe(re);
              return J ? (J.beforeSend = Pe(J.beforeSend || function() {
              }), J) : re;
            });
          }
          var H = function(pe) {
            var le, fe = function(Pe) {
              for (var re, J = Pe.textTracks(), _e = 0; _e < J.length; _e++)
                J[_e].label === "segment-metadata" && (re = J[_e]);
              return re;
            }(pe);
            fe && fe.on && fe.on("cuechange", function() {
              try {
                var Pe = pe.tech({ IWillNotUseThisInPlugins: !0 }), re = (Pe.vhs || Pe.hls).playlists.media().attributes.BANDWIDTH;
                le !== re && pe.mux.emit("renditionchange", { video_source_bitrate: re }), le = re;
              } catch (J) {
                pe.mux && pe.mux.log && pe.mux.log.warn && pe.mux.log.warn("Cannot retrieve BANDWIDTH information from player: ".concat(J));
              }
            });
          };
          function D(pe, le) {
            return function(fe) {
              if (Array.isArray(fe))
                return fe;
            }(pe) || function(fe, Pe) {
              var re = fe == null ? null : typeof Symbol < "u" && fe[Symbol.iterator] || fe["@@iterator"];
              if (re != null) {
                var J, _e, Ie = [], He = !0, Qe = !1;
                try {
                  for (re = re.call(fe); !(He = (J = re.next()).done) && (Ie.push(J.value), !Pe || Ie.length !== Pe); He = !0)
                    ;
                } catch (Ue) {
                  Qe = !0, _e = Ue;
                } finally {
                  try {
                    He || re.return == null || re.return();
                  } finally {
                    if (Qe)
                      throw _e;
                  }
                }
                return Ie;
              }
            }(pe, le) || function(fe, Pe) {
              if (fe) {
                if (typeof fe == "string")
                  return O(fe, Pe);
                var re = Object.prototype.toString.call(fe).slice(8, -1);
                if (re === "Object" && fe.constructor && (re = fe.constructor.name), re === "Map" || re === "Set")
                  return Array.from(fe);
                if (re === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(re))
                  return O(fe, Pe);
              }
            }(pe, le) || function() {
              throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
            }();
          }
          function O(pe, le) {
            (le == null || le > pe.length) && (le = pe.length);
            for (var fe = 0, Pe = new Array(le); fe < le; fe++)
              Pe[fe] = pe[fe];
            return Pe;
          }
          var W = /* @__PURE__ */ new Map(), X, ie = h().log, K = h().utils.assign, Z = h().utils.safeCall, te = h().utils.getComputedStyle, ue = h().utils.secondsToMs, be = ["loadstart", "pause", "play", "playing", "seeking", "seeked", "timeupdate", "ratechange", "stalled", "waiting", "error", "ended"];
          function he(pe) {
            var le = pe;
            return function(fe) {
              var Pe, re;
              if (le.IS_IE8)
                return !1;
              var J = this, _e = J.id(), Ie = ((Pe = J.tech) === null || Pe === void 0 || (re = Pe.call(J, !0)) === null || re === void 0 ? void 0 : re.el()) || J.tag, He = X && (X.get(Ie) || X.get(J.el()));
              (fe = K({ automaticErrorTracking: !0 }, fe)).data = K({ player_software_name: "Video.js", player_software_version: le.VERSION || "< 4.11", player_mux_plugin_name: "videojs-mux", player_mux_plugin_version: "4.15.0", player_init_time: He }, fe.data), fe.getPlayheadTime = function() {
                return ue(J.currentTime());
              }, fe.getStateData = function() {
                var ne = Z(J, "videoHeight"), Fe = Z(J, "videoWidth");
                if (Fe === void 0 || ne === void 0) {
                  var $e = J.el().firstChild;
                  $e && $e.nodeName.toUpperCase() === "VIDEO" && (ne = $e.videoHeight, Fe = $e.videoWidth);
                }
                return { player_is_paused: Z(J, "paused"), player_is_fullscreen: Z(J, "isFullscreen"), player_autoplay_on: !!Z(J, "autoplay"), player_preload_on: Z(J, "preload"), player_width: te(J.el(), "width"), player_height: te(J.el(), "height"), player_language_code: Z(J, "language"), video_poster_url: Z(J, "poster"), video_source_url: Z(J, "currentSrc"), video_source_mime_type: Z(J, "currentType") && Z(J, "currentType").toLowerCase(), video_source_duration: ue(Z(J, "duration") || 0), video_source_is_live: J.duration() === 1 / 0, video_source_height: ne, video_source_width: Fe };
              }, J.mux = function() {
                ie.error("[videojs-mux] The plugin was initialized more than once.");
              }, J.mux.emit = function(ne, Fe) {
                h().emit(_e, ne, Fe);
              }, J.mux.addHLSJS = function(ne) {
                h().addHLSJS(_e, ne);
              }, J.mux.log = ie, J.mux.utils = h().utils, h().init(_e, fe);
              var Qe = !1, Ue = function() {
                Qe || J.mux.emit("playerready"), Qe = !0;
              };
              J.ready(function() {
                J.addClass("vjs-mux"), u().setTimeout(Ue, 0);
              });
              var bt = !1;
              J.one("play", Ue), be.forEach(function(ne) {
                (ne !== "error" || fe.automaticErrorTracking) && J.on(ne, function() {
                  if (!bt) {
                    var Fe = {};
                    if (ne === "error") {
                      var $e = Z(J, "error");
                      if ($e) {
                        if ($e.code === 1)
                          return;
                        Fe = { player_error_code: $e.code, player_error_message: $e.message, player_error_context: $e.status };
                      }
                    }
                    J.mux.emit(ne, Fe);
                  }
                });
              });
              var it = !1;
              J.on("play", function() {
                it = !0;
              }), J.on("pause", function() {
                it = !1;
              }), J.on("adstart", function() {
                bt = !0, it && J.mux.emit("pause"), J.mux.emit("adbreakstart");
              }), J.on("adend", function() {
                J.mux.emit("adbreakend"), bt = !1, Z(J, "paused") || (J.mux.emit("play"), it = !0, J.onceux && J.mux.emit("playing"));
              }), J.ima && function(ne) {
                var Fe, $e, nt, Tt, Ke, Wt, jt = function(vt) {
                  var De = typeof (vt = vt || {}).getAdData == "function" ? vt.getAdData() : {}, Oe = typeof vt.getAd == "function" ? vt.getAd() : {}, Me = typeof Oe.getMediaUrl == "function" ? Oe.getMediaUrl() : De.mediaUrl, Je = De == null ? void 0 : De.adId, ei = De == null ? void 0 : De.creativeId, Gt = De == null ? void 0 : De.universalAdIdValue, de = ne.ima.settings || {}, ti = {};
                  return Me && (ti.ad_asset_url = Me), de.adTagUrl && (ti.ad_tag_url = de.adTagUrl), Je && (ti.ad_id = Je), ei && (ti.ad_creative_id = ei), Gt && (ti.ad_universal_id = Gt), ti;
                };
                try {
                  var gt = window.google.ima.AdEvent.Type;
                  Fe = gt.LOADED, $e = gt.STARTED, nt = gt.COMPLETE, Tt = gt.PAUSED, Ke = gt.RESUMED, Wt = gt.SKIPPED;
                } catch {
                  Fe = "loaded", $e = "start", nt = "complete", Tt = "pause", Ke = "resume", Wt = "skip";
                }
                var Et = 0;
                ne.mux.triggerAdRequest = function() {
                  Et++, ne.mux.emit("adrequest", jt());
                }, ne.on("adsready", function() {
                  var vt = ne.ima.addEventListener || function() {
                  };
                  vt(Fe, function(De) {
                    var Oe = jt(De);
                    Et > 0 && (Et--, ne.mux.emit("adresponse", Oe)), ne.mux.emit("adplay", Oe);
                  }), vt($e, function(De) {
                    var Oe = jt(De);
                    ne.mux.emit("adplaying", Oe);
                  }), vt(Ke, function(De) {
                    var Oe = jt(De);
                    ne.mux.emit("adplay", Oe), ne.mux.emit("adplaying", Oe);
                  }), vt(Tt, function(De) {
                    var Oe = jt(De);
                    ne.mux.emit("adpause", Oe);
                  }), vt(nt, function(De) {
                    var Oe = jt(De);
                    ne.mux.emit("adended", Oe);
                  }), vt(Wt, function(De) {
                    var Oe = jt(De);
                    ne.mux.emit("adended", Oe);
                  }), ne.on("adserror", function() {
                    Et > 0 && (Et--, ne.mux.emit("adresponse")), ne.mux.emit("aderror");
                  });
                });
              }(J), J.onceux && function(ne) {
                y(ne, ne, ["onceux-linearad-pause", "onceux-linearad-skipped", "onceux-linearad-complete", "adserror"], ["adstart", "onceux-linearad-resume"]), ne.on("adstart", function() {
                  ne.mux.emit("adplay");
                }), ne.on("onceux-linearad-start", function(Fe) {
                  Fe.linearAd && Fe.linearAd.index > 0 && (ne.mux.emit("adplay"), ne.mux.emit("adplaying"));
                }), ne.on("onceux-linearad-resume", function() {
                  ne.mux.emit("adplay");
                }), ne.on("onceux-linearad-pause", function() {
                  ne.mux.emit("adpause");
                }), ne.on("onceux-linearad-complete", function() {
                  ne.mux.emit("adended");
                }), ne.on("onceux-linearad-skipped", function() {
                  ne.mux.emit("adended");
                });
              }(J), J.ima3 && typeof J.ima3.ready == "function" && function(ne) {
                var Fe = function() {
                  var Tt = ne.ima3.currentAd, Ke = ne.ima3.settings, Wt = {};
                  return Tt && (Wt.ad_asset_url = Tt.mediaUrl), Ke && (Wt.ad_tag_url = Ke.serverUrl), Wt;
                };
                if (T(ne.ima3.version)) {
                  var $e = 0, nt = function() {
                    $e > 0 && ($e--, ne.mux.emit("adresponse", Fe()));
                  };
                  ne.on("ads-request", function() {
                    $e++, ne.mux.emit("adrequest", Fe());
                  }), ne.on("ads-load", function() {
                    nt(), ne.mux.emit("adplay", Fe());
                  }), ne.on("adserror", function() {
                    nt(), ne.mux.emit("aderror");
                  }), ne.on("ads-play", function() {
                    ne.mux.emit("adplay", Fe());
                  }), ne.on("ads-pause", function() {
                    ne.mux.emit("adpause", Fe());
                  }), ne.on("ads-ad-ended", function() {
                    ne.mux.emit("adended", Fe());
                  });
                }
                ne.ima3.ready(function() {
                  ne.ima3.adPlayer ? (T(ne.ima3.version) || (ne.ima3.adPlayer.on("play", function() {
                    ne.mux.emit("adplay");
                  }), ne.ima3.adPlayer.on("pause", function() {
                    ne.mux.emit("adpause");
                  }), ne.ima3.adPlayer.on("ended", function() {
                    ne.mux.emit("adended");
                  })), y(ne, ne.ima3.adPlayer, ["pause", "ended", "adserror"], ["play"], Fe)) : (ne.mux.log("Legacy IMA3 plugin found, ad events may not track correctly."), ne.on("ads-ad-started", function() {
                    ne.mux.emit("adplaying", Fe());
                  }), ne.on("ads-play", function() {
                    ne.mux.emit("adplaying", Fe());
                  }));
                });
              }(J), J.FreeWheelPlugin && J.FreeWheelPlugin.VERSION && function(ne) {
                var Fe = function($e) {
                  var nt = ne.FreeWheelPlugin, Tt = {};
                  switch ($e) {
                    case "adplay":
                    case "adplaying":
                    case "adpause":
                      Tt.ad_asset_url = ne.currentSrc();
                  }
                  return nt && (Tt.ad_tag_url = nt.tech.toLowerCase() === "html5" ? nt.settings.Html5.serverUrl : nt.settings.Flash.serverUrl), Tt;
                };
                ne.on("ads-request", function() {
                  ne.mux.emit("adrequest", Fe("adrequest"));
                }), ne.on("ads-load", function() {
                  ne.mux.emit("adresponse", Fe("adresponse"));
                }), ne.on("adserror", function() {
                  ne.mux.emit("aderror");
                }), ne.on("ads-ad-started", function() {
                  ne.mux.emit("adplay", Fe("adplay")), ne.mux.emit("adplaying", Fe("adplaying"));
                }), ne.on("ads-play", function() {
                  ne.mux.emit("adplay", Fe("adplay")), ne.mux.emit("adplaying", Fe("adplaying"));
                }), ne.on("ads-pause", function() {
                  ne.mux.emit("adpause", Fe("adpause"));
                }), ne.on("ads-ad-ended", function() {
                  ne.mux.emit("adended", Fe("adended"));
                }), ne.on("adend", function() {
                  ne.mux.emit("play");
                });
              }(J), J.on("dispose", function() {
                J.mux.emit("destroy"), X.delete(J);
              });
            };
          }
          function at(pe) {
            (pe.registerPlugin || pe.plugin || function() {
              h().log.error("No valid method to register videojs plugin available.");
            })("mux", he(pe)), function(le) {
              if (!W.get(le) && (W.set(le, "video.js ".concat(le.VERSION, " initialized")), typeof le.getTech == "function"))
                for (var fe = (le.getTech("Html5") || {}).sourceHandlers, Pe = le.Vhs || le.Hls, re = function(_e) {
                  var Ie = fe[_e], He = Ie.handleSource;
                  Ie.handleSource = function(Qe, Ue) {
                    var bt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                    Pe && Pe.xhr && j(function() {
                      return le(Ue.el());
                    }, Pe.xhr);
                    var it = He(Qe, Ue, bt);
                    if (it && typeof it.xhr == "function")
                      try {
                        var ne = D(le.VERSION.split("."), 2), Fe = ne[0], $e = ne[1];
                        Fe = parseInt(Fe), $e = parseInt($e);
                        var nt = Fe >= 7 && $e >= 4 ? it.player().id() : it.player_.el_.parentNode.id;
                        H(le(nt));
                      } catch {
                      }
                    return it;
                  };
                }, J = 0; J < fe.length; J++)
                  re(J);
            }(pe);
          }
          X = typeof WeakMap < "u" ? /* @__PURE__ */ new WeakMap() : /* @__PURE__ */ new Map(), d().hook && d().hook("beforesetup", function(pe, le) {
            return X.set(pe, h().utils.now()), le;
          }), at(d());
        }(), a;
      }();
    });
  })();
})(q1);
const H1 = "youboralib", W1 = "lib", G1 = "js", K1 = "Jordi Aguilar", z1 = "6.8.46", X1 = "2023-03-24", Q1 = "https://bitbucket.org/npaw/lib-plugin-js.git", J1 = {
  name: H1,
  type: W1,
  tech: G1,
  author: K1,
  version: z1,
  built: X1,
  repo: Q1
};
var gu = J1.version, Y1 = function() {
  Function.prototype.bind = Function.prototype.bind || function(e) {
    var i = Array.prototype.slice, n = this, t = i.call(arguments, 1);
    function r() {
      var s = n.prototype && this instanceof n;
      return n.apply(
        !s && e || this,
        t.concat(i.call(arguments))
      );
    }
    return r.prototype = n.prototype, r;
  }, Array.prototype.forEach = Array.prototype.forEach || function(e, i) {
    if (typeof e != "function")
      throw new TypeError(e + " is not a function!");
    for (var n = this.length, t = 0; t < n; t++)
      e.call(i, this[t], t, this);
  }, Math.trunc = Math.trunc || function(e) {
    return isNaN(e) ? NaN : e > 0 ? Math.floor(e) : Math.ceil(e);
  };
}, $1 = Y1, vy = function(e) {
  if (e == null)
    throw new TypeError("Cannot convert undefined or null to object");
  for (var i = Object(e), n = 1; n < arguments.length; n++) {
    var t = arguments[n];
    if (t != null)
      for (var r in t)
        t.hasOwnProperty(r) && (i[r] = t[r]);
  }
  return i;
}, Jp = function() {
}, Z1 = function(e) {
  if (arguments.length > 1)
    throw Error("Second argument not supported");
  if (e === null)
    throw Error("Cannot set a null [[Prototype]]");
  if (typeof e != "object")
    throw TypeError("Argument must be an object");
  return Jp.prototype = e, new Jp();
}, Yp = vy, ek = Z1, $d = function() {
};
$d.prototype = {
  constructor: function() {
  }
};
$d.extend = function(e, i) {
  var n = this, t;
  return e && e.hasOwnProperty("constructor") ? t = e.constructor : t = function() {
    return n.apply(this, arguments);
  }, Yp(t, n, i), t.prototype = ek(n.prototype), e && Yp(t.prototype, e), t.prototype.constructor = t, t.__super__ = n.prototype, t;
};
var xt = $d, Zd = function(e) {
  return Object.prototype.toString.call(e) === "[object Array]";
}, tk = xt, $p = Zd, ik = tk.extend(
  {
    on: function(e, i) {
      if (this._listeners = this._listeners || {}, typeof i == "function")
        return this._listeners[e] = this._listeners[e] || [], this._listeners[e].push(i), this;
    },
    off: function(e, i) {
      if (this._listeners = this._listeners || {}, this._listeners[e]) {
        var n = this._listeners[e].indexOf(i);
        n !== -1 && this._listeners[e].splice(n, 1);
      }
      return this;
    },
    emit: function(e, i) {
      return this._listeners = this._listeners || {}, i = i || {}, $p(this._listeners[e]) && this._listeners[e].forEach(this._eachCallback.bind(this, e, i)), $p(this._listeners["*"]) && this._listeners["*"].forEach(this._eachCallback.bind(this, e, i)), this;
    },
    _eachCallback: function(e, i, n) {
      if (typeof n == "function") {
        var t = {
          type: e,
          data: i,
          target: this
        };
        n(t);
      }
    }
  }
), Pn = ik, nk = Pn, rk = Zd, pt = {
  _emitter: new nk(),
  on: function() {
    pt._emitter.on.apply(pt._emitter, arguments);
  },
  off: function() {
    pt._emitter.off.apply(pt._emitter, arguments);
  },
  emit: function() {
    pt._emitter.emit.apply(pt._emitter, arguments);
  },
  Level: {
    SILENT: 6,
    ERROR: 5,
    WARNING: 4,
    NOTICE: 3,
    DEBUG: 2,
    VERBOSE: 1
  },
  Event: {
    LOG: "log"
  },
  logLevel: 5,
  plainLogs: !1,
  report: function(e, i, n) {
    if (typeof console < "u" && console.log && typeof document < "u") {
      i = i || pt.Level.NOTICE, n = n || "darkcyan";
      var t = {
        5: "e",
        4: "w",
        3: "n",
        2: "d",
        1: "v"
      }, r = t[i], s = "[Youbora]" + pt._getCurrentTime() + " " + r + ":";
      if (this.emit("log", { level: i, msg: e, prefix: s }), pt.logLevel <= i)
        if (pt.plainLogs || document.documentMode)
          pt._plainReport(e, s);
        else {
          var a;
          i === pt.Level.ERROR && console.error ? a = console.error : i === pt.Level.WARNING && console.warn ? a = console.warn : i === pt.Level.DEBUG && console.debug ? a = console.debug : a = console.log, s = "%c" + s, rk(e) ? (e.splice(0, 0, s, "color: " + n), a.apply(console, e)) : a.call(console, s, "color: " + n, e);
        }
    }
  },
  _getCurrentTime: function() {
    var e = /* @__PURE__ */ new Date(), i = ("0" + e.getDate()).slice(-2), n = ("0" + e.getMinutes()).slice(-2), t = ("0" + e.getSeconds()).slice(-2), r = ("00" + e.getMilliseconds()).slice(-3);
    return "[" + i + ":" + n + ":" + t + "." + r + "]";
  },
  _plainReport: function(e, i) {
    if (e instanceof Array)
      for (var n in e)
        pt._plainReport(e[n], i);
    else
      typeof e == "string" ? console.log(i + " " + e) : (console.log(i + " <next line>"), console.log(e));
  },
  error: function() {
    pt.report([].slice.call(arguments), pt.Level.ERROR, "darkred");
  },
  warn: function() {
    pt.report([].slice.call(arguments), pt.Level.WARNING, "darkorange");
  },
  notice: function() {
    pt.report([].slice.call(arguments), pt.Level.NOTICE, "darkgreen");
  },
  debug: function() {
    pt.report([].slice.call(arguments), pt.Level.DEBUG, "indigo");
  },
  verbose: function() {
    pt.report([].slice.call(arguments), pt.Level.VERBOSE, "navy");
  },
  loadLevelFromUrl: function() {
    typeof window < "u" && window.location && this._parseLevelFromUrl(window.location.search);
  },
  _parseLevelFromUrl: function(e) {
    if (e) {
      var i = /\?.*&*youbora-debug=(.+)/i.exec(e);
      i !== null && (pt.logLevel = i[1]);
      var n = /\?.*&*youbora-debug=plain/i.exec(e);
      n !== null && (pt.plainLogs = !0);
    }
  }
}, At = pt, Wr = At, sk = {
  stripProtocol: function(e) {
    var i = e;
    try {
      i = e.replace(/^(.*?:\/\/|\/\/)/i, "");
    } catch (n) {
      Wr.warn(n);
    }
    return i;
  },
  addProtocol: function(e, i) {
    var n = "http://localhost/";
    try {
      n = "http://" + e, i || typeof window < "u" && window.location.protocol.indexOf("https") === 0 ? n = "https://" + e : typeof window < "u" && window.location.protocol.indexOf("http") === 0 && (n = "//" + e);
    } catch (t) {
      Wr.warn(t);
    }
    return n;
  },
  parseNumber: function(e, i) {
    return !isNaN(e) && e >= 0 && e !== 1 / 0 && e !== -1 / 0 && e !== null && typeof e < "u" ? e : i;
  },
  logAllEvents: function(e, i, n) {
    try {
      if (Wr.logLevel <= Wr.Level.DEBUG) {
        n = n || function(s) {
          Wr.debug("Event: " + s.type);
        };
        var t = [
          "canplay",
          "buffering",
          "waiting",
          "ended",
          "play",
          "playing",
          "pause",
          "resume",
          "error",
          "abort",
          "seek",
          "seeking",
          "seeked",
          "stalled",
          "dispose",
          "loadeddata",
          "loadstart"
        ];
        i && (i[0] === null ? (i.shift(), t = i) : t = t.concat(i));
        for (var r = 0; r < t.length; r++)
          typeof e == "function" ? e.call(window, t[r], n) : e.on ? e.on(t[r], n) : e.addEventListener && e.addEventListener(t[r], n);
      }
    } catch (s) {
      Wr.error(s);
    }
  },
  buildRenditionString: function(e, i, n) {
    arguments.length === 1 && (n = e, e = null, i = null);
    var t = null;
    return e && i && (t = e + "x" + i), typeof n == "number" && !isNaN(n) && n >= 1 && (t ? t += "@" : t = "", n < 1e3 ? t += Math.round(n) + "bps" : n < 1e6 ? (n = Math.round(n / 1e3), t += n + "Kbps") : (n = Math.round(n / 1e4) / 100, t += n + "Mbps")), t;
  },
  buildErrorParams: function(e, i, n, t) {
    var r = {};
    return typeof e == "object" && e !== null ? r = e : (r.errorCode = e || "FAILURE", r.msg = i || r.errorCode, r.errorMetadata = n, r.errorLevel = t), r;
  },
  calculateAdViewability: function(e, i) {
    var n = !0;
    if (typeof window < "u" && e && typeof e.getBoundingClientRect == "function") {
      var t = e.getBoundingClientRect();
      if (t.top >= window.innerHeight || t.bottom <= 0 || t.right <= 0 || t.left >= window.innerWidth)
        n = !1;
      else {
        var r = Math.trunc(t.height * t.width), s = t.top > 0 ? t.top : 0, a = t.bottom > window.innerHeight ? window.innerHeight : t.bottom, o = t.left > 0 ? t.left : 0, u = t.right > window.innerWidth ? window.innerWidth : t.right, l = (u - o) * (a - s);
        n = l * 100 > r * (i || 50);
      }
    }
    return n;
  },
  getMetricsFrom: function(e, i) {
    var n = e || i;
    for (var t in n)
      if (typeof n[t] != "object" || !n[t].value) {
        var r = {};
        r.value = n[t], n[t] = r;
      }
    return n;
  },
  assign: vy,
  isArray: Zd
}, mi = sk, ak = xt, ok = ak.extend({
  getCdnTraffic: function() {
    var e = null;
    if (typeof CdnBalancerStats < "u" && CdnBalancerStats.cdn)
      e = CdnBalancerStats.cdn.totalDownloadedBytes;
    else if (typeof Streamroot < "u")
      e = this._getStreamrootPeerObject("cdn", !1) || this._getStreamrootInstanceObject("cdnDownload");
    else if (typeof peer5 < "u" && peer5.getStats)
      e = peer5.getStats().totalHttpDownloaded;
    else if (typeof teltoo < "u" && teltoo.getStats) {
      var i = teltoo.getStats();
      e = i.totalReceivedBytes - i.p2pReceivedBytes;
    }
    return e;
  },
  getMultiCdnInfo: function() {
    var e = null;
    if (typeof CdnBalancerStats < "u" && CdnBalancerStats.cdn && CdnBalancerStats.cdn.cdns) {
      var i = CdnBalancerStats.p2p;
      e = {
        P2P: {
          downloaded_bytes: i.downloadedBytes,
          uploaded_bytes: i.uploadedBytes,
          downloaded_chunks: i.downloadedSegments,
          uploaded_chunks: i.uploadedSegments,
          errors: i.failedRequests ? i.failedRequests.total : 0,
          missed_downloaded_chunks: i.failedRequests ? i.failedRequests.absent : 0,
          timeout_errors: i.failedRequests ? i.failedRequests.timeout : 0,
          other_errors: i.failedRequests ? i.failedRequests.error : 0,
          late_uploaded_chunks: i.discardedUploadedSegments,
          late_uploaded_bytes: i.discardedUploadedBytes,
          late_downloaded_bytes: i.discardedDownloadedBytes,
          time: i.downloadMillis,
          active_peers: i.activePeers,
          peers: i.totalPeers
        }
      }, CdnBalancerStats.cdn.cdns.forEach(function(n) {
        e[n.name] = {
          downloaded_bytes: n.bytes,
          downloaded_chunks: n.chunks,
          errors: n.failures,
          time: n.downloadMillis
        };
      });
    }
    return e;
  },
  getSegmentDuration: function() {
    var e = null;
    return typeof CdnBalancerStats < "u" && CdnBalancerStats.segmentDuration ? CdnBalancerStats.segmentDuration : e;
  },
  getBalancerResponseId: function() {
    var e = null;
    return typeof CdnBalancerStats < "u" && CdnBalancerStats.cdn ? CdnBalancerStats.cdn.responseUUID : e;
  },
  getP2PTraffic: function() {
    var e = null;
    return typeof CdnBalancerStats < "u" && CdnBalancerStats.p2p ? e = CdnBalancerStats.p2p.downloadedBytes : typeof Streamroot < "u" ? e = this._getStreamrootPeerObject("p2p", !0) || this._getStreamrootInstanceObject("dnaDownload") : typeof peer5 < "u" && peer5.getStats ? e = peer5.getStats().totalP2PDownloaded : typeof teltoo < "u" && teltoo.getStats && (e = teltoo.getStats().p2pReceivedBytes), e;
  },
  getUploadTraffic: function() {
    var e = null;
    return typeof CdnBalancerStats < "u" && CdnBalancerStats.p2p ? e = CdnBalancerStats.p2p.uploadedBytes : typeof Streamroot < "u" ? e = this._getStreamrootPeerObject("upload", !0) || this._getStreamrootInstanceObject("dnaUpload") : typeof peer5 < "u" && peer5.getStats && (e = peer5.getStats().totalP2PUploaded), e;
  },
  getIsP2PEnabled: function() {
    var e = !1;
    if (typeof CdnBalancerStats < "u" && CdnBalancerStats.p2p)
      e = CdnBalancerStats.p2p.downloadEnabled;
    else if (typeof Streamroot < "u")
      if (Streamroot.p2pAvailable && Streamroot.peerAgents)
        for (var i in Streamroot.peerAgents)
          e = e || Streamroot.peerAgents[i].isP2PEnabled;
      else
        Streamroot.instances && Streamroot.instances.forEach(function(n) {
          e = e || n.dnaDownloadEnabled || n.dnaUploadEnabled;
        });
    else
      typeof peer5 < "u" && peer5.isEnabled ? e = peer5.isEnabled() : typeof teltoo < "u" && (e = !0);
    return e;
  },
  _getStreamrootPeerObject: function(e, i) {
    var n = null;
    if (Streamroot.p2pAvailable && Streamroot.peerAgents)
      for (var t in Streamroot.peerAgents) {
        var r = Streamroot.peerAgents[t];
        r.stats && (!i || r.isP2PEnabled) && (n += r.stats[e]);
      }
    return n;
  },
  _getStreamrootInstanceObject: function(e) {
    var i = null;
    return Streamroot.instances && Streamroot.instances.forEach(function(n) {
      n.stats && n.stats.currentContent && (i += n.stats.currentContent[e]);
    }), i;
  }
}), yy = ok, uk = xt, _y = uk.extend(
  {
    constructor: function() {
      this.reset();
    },
    reset: function() {
      this.startTime = 0, this.stopTime = 0, this.pauseTime = 0, this.offset = 0;
    },
    getDeltaTime: function(e) {
      var i = -1, n = (/* @__PURE__ */ new Date()).getTime();
      if (this.startTime) {
        e && !this.stopTime && (this.stopTime = n);
        var t = this.pauseTime ? n - this.pauseTime : 0, r = this.stopTime ? this.stopTime : n;
        i = this.offset - t + (r - this.startTime);
      }
      return i;
    },
    start: function() {
      this.startTime = (/* @__PURE__ */ new Date()).getTime(), this.stopTime = 0, this.offset = 0;
    },
    stop: function() {
      return this.pauseTime && this.resume(), this.stopTime = (/* @__PURE__ */ new Date()).getTime(), this.startTime ? this.offset + (this.stopTime - this.startTime) : -1;
    },
    pause: function() {
      this.pauseTime = (/* @__PURE__ */ new Date()).getTime();
    },
    resume: function() {
      this.offset -= (/* @__PURE__ */ new Date()).getTime() - this.pauseTime, this.pauseTime = 0;
    },
    clone: function() {
      var e = new _y();
      return e.startTime = this.startTime, e.stopTime = this.stopTime, e.offset = this.offset, e;
    }
  }
), ks = _y, lk = xt, ck = ks, dk = lk.extend(
  {
    constructor: function(e, i) {
      this.callback = e, this.interval = i || 5e3, this.isRunning = !1, this._timer = null, this.chrono = new ck();
    },
    start: function() {
      this.isRunning || (this.isRunning = !0, this._setTick());
    },
    stop: function() {
      if (this.isRunning = !1, this._timer)
        try {
          clearTimeout(this._timer), this._timer = null;
        } catch {
          typeof atv < "u" && (atv.clearTimeout(this._timer), this._timer = null);
        }
    },
    _setTick: function() {
      if (this.isRunning) {
        this.chrono.start();
        try {
          this._timer = setTimeout(function() {
            this.callback(this.chrono.stop()), this._setTick();
          }.bind(this), this.interval);
        } catch {
          typeof atv < "u" && (this._timer = atv.setTimeout(function() {
            this.callback(this.chrono.stop()), this._setTick();
          }.bind(this), this.interval));
        }
      }
    }
  }
), eh = dk, hk = {
  Preroll: "pre",
  Midroll: "mid",
  Postroll: "post"
}, pk = hk, fk = {
  START: "start",
  JOIN: "join",
  PAUSE: "pause",
  RESUME: "resume",
  SEEK_BEGIN: "seek-begin",
  SEEK_END: "seek-end",
  BUFFER_BEGIN: "buffer-begin",
  BUFFER_END: "buffer-end",
  ERROR: "error",
  STOP: "stop",
  CLICK: "click",
  MANIFEST: "manifest",
  PODSTART: "break-start",
  PODSTOP: "break-stop",
  QUARTILE: "quartile",
  VIDEO_EVENT: "video-event"
}, mk = fk, gk = mk, vk = {
  Event: gk
}, vu = vk, yk = {
  NO_RESPONSE: "NO_RESPONSE",
  EMPTY: "EMPTY_RESPONSE",
  WRONG: "WRONG_RESPONSE"
}, _k = yk, bk = {
  GET: "get",
  POST: "post"
}, th = bk, Tk = {
  DATA: "/data",
  INIT: "/init",
  START: "/start",
  JOIN: "/joinTime",
  PAUSE: "/pause",
  RESUME: "/resume",
  SEEK: "/seek",
  BUFFER: "/bufferUnderrun",
  ERROR: "/error",
  STOP: "/stop",
  PING: "/ping",
  VIDEO_EVENT: "/infinity/video/event",
  AD_INIT: "/adInit",
  AD_START: "/adStart",
  AD_JOIN: "/adJoin",
  AD_PAUSE: "/adPause",
  AD_RESUME: "/adResume",
  AD_BUFFER: "/adBufferUnderrun",
  AD_STOP: "/adStop",
  AD_CLICK: "/adClick",
  AD_ERROR: "/adError",
  AD_MANIFEST: "/adManifest",
  AD_POD_START: "/adBreakStart",
  AD_POD_STOP: "/adBreakStop",
  AD_QUARTILE: "/adQuartile",
  EVENT: "/infinity/session/event",
  SESSION_START: "/infinity/session/start",
  SESSION_STOP: "/infinity/session/stop",
  NAV: "/infinity/session/nav",
  BEAT: "/infinity/session/beat",
  OFFLINE_EVENTS: "/offlineEvents"
}, Ek = Tk, Sk = {
  WILL_SEND_INIT: "will-send-init",
  WILL_SEND_START: "will-send-start",
  WILL_SEND_JOIN: "will-send-join",
  WILL_SEND_PAUSE: "will-send-pause",
  WILL_SEND_RESUME: "will-send-resume",
  WILL_SEND_SEEK: "will-send-seek",
  WILL_SEND_BUFFER: "will-send-buffer",
  WILL_SEND_ERROR: "will-send-error",
  WILL_SEND_FATAL_ERROR: "will-send-fatal-error",
  WILL_SEND_STOP: "will-send-stop",
  WILL_SEND_PING: "will-send-ping",
  WILL_SEND_VIDEO_EVENT: "will-send-video-event",
  WILL_SEND_AD_START: "will-send-ad-start",
  WILL_SEND_AD_JOIN: "will-send-ad-join",
  WILL_SEND_AD_PAUSE: "will-send-ad-pause",
  WILL_SEND_AD_RESUME: "will-send-ad-resume",
  WILL_SEND_AD_BUFFER: "will-send-ad-buffer",
  WILL_SEND_AD_STOP: "will-send-ad-stop",
  WILL_SEND_AD_CLICK: "will-send-ad-click",
  WILL_SEND_AD_ERROR: "will-send-ad-error",
  WILL_SEND_AD_MANIFEST: "will-send-ad-manifest",
  WILL_SEND_AD_POD_START: "will-send-ad-break-start",
  WILL_SEND_AD_POD_STOP: "will-send-ad-break-stop",
  WILL_SEND_AD_QUARTILE: "will-send-ad-quartile",
  WILL_SEND_SESSION_START: "will-send-session-start",
  WILL_SEND_SESSION_STOP: "will-send-session-stop",
  WILL_SEND_NAV: "will-send-nav",
  WILL_SEND_BEAT: "will-send-beat",
  WILL_SEND_EVENT: "will-send-event",
  WILL_SEND_OFFLINE_EVENTS: "will-send-offline-events"
}, wk = Sk, kk = {
  ClientSide: "csai",
  ServerSide: "ssai"
}, Ck = kk, Ak = pk, Ik = vu, Dk = _k, xk = th, Pk = Ek, Lk = wk, Ok = Ck, Nk = {
  AdPosition: Ak,
  ManifestError: Dk,
  RequestMethod: xk,
  Service: Pk,
  WillSendEvent: Lk,
  AdInsertionType: Ok,
  Adapter: Ik
}, Xi = Nk, Rk = xt, Zi = At, Mk = mi, Ni = Rk.extend(
  {
    constructor: function(e, i, n, t) {
      this.xhr = this.createXHR(), this.host = e || "", this.service = i || "", this.params = n || {}, this.options = Mk.assign({}, Ni.defaultOptions, t), this.retries = 0, this.sendPostRequest = !1, this.preparedPostRequest = !1, this.options.cache || this.setParam("timemark", (/* @__PURE__ */ new Date()).getTime());
    },
    createXHR: function() {
      var e = {};
      try {
        XMLHttpRequest ? e = new XMLHttpRequest() : e = new ActiveXObject("Microsoft.XMLHTTP");
      } catch (i) {
        Zi.error(i);
      }
      return e;
    },
    getXHR: function() {
      return this.xhr;
    },
    getResponse: function() {
      return this.xhr.response;
    },
    getResponseText: function() {
      return this.xhr.responseText;
    },
    getResponseHeaders: function() {
      return this.xhr.getAllResponseHeaders();
    },
    getUrl: function() {
      return this.host + this.service + this.getParamString();
    },
    on: function(e, i, n) {
      return this.xhr.addEventListener ? this.xhr.addEventListener(e, i.bind(this, this, n)) : e === Ni.Event.SUCCESS && (this.xhr.onreadystatechange = function() {
        this.xhr.readyState === 4 && i.bind(this, this, n);
      }.bind(this)), this;
    },
    off: function(e, i) {
      return this.xhr.removeEventListener(e, i), this;
    },
    getParamString: function() {
      try {
        var e = "?";
        for (var i in this.params) {
          var n = this.params[i];
          if (n !== null && typeof n == "object") {
            var t = JSON.stringify(n);
            t !== "{}" && (e += encodeURIComponent(i) + "=" + encodeURIComponent(t) + "&");
          } else
            n !== null && typeof n < "u" && n !== "" && (e += encodeURIComponent(i) + "=" + encodeURIComponent(n) + "&");
        }
        return e.slice(0, -1);
      } catch (r) {
        return Zi.error(r), "";
      }
    },
    getParam: function(e) {
      return this.params[e];
    },
    setParam: function(e, i) {
      return this.params[e] = i, this;
    },
    setBody: function(e) {
      this.body = e;
    },
    setPostRequest: function(e) {
      this.sendPostRequest = e;
    },
    getParamsForPostMessages: function() {
      var e = {};
      try {
        var i = this.getParam("timemark"), n = this.getParam("code"), t = this.getParam("sessionRoot"), r = this.getParam("sessionId");
        i && (e.timemark = i), n && (e.code = n), t && (e.sessionRoot = t), r && (e.sessionId = r);
      } catch (s) {
        Zi.error(s);
      }
      return e;
    },
    send: function() {
      try {
        try {
          this.sendPostRequest && !this.preparedPostRequest && (this.options.method = "POST", this.body = JSON.stringify(this.params), this.params = this.getParamsForPostMessages(), this.preparedPostRequest = !0);
        } catch {
        }
        if (this.xhr.open(this.options.method, this.getUrl(), !0), this.options.requestHeaders)
          for (var e in this.options.requestHeaders)
            this.options.requestHeaders.hasOwnProperty(e) && this.xhr.setRequestHeader(e, this.options.requestHeaders[e]);
        if (this.options.retryAfter > 0 && this.options.maxRetries > 0) {
          var i = function() {
            if (this.retries >= this.options.maxRetries)
              Zi.error('Aborting failed request "' + this.service + '". Max retries reached.');
            else {
              Zi.warn('YBRequest "' + this.service + '" failed. Retry ' + (this.retries + 1) + " of " + this.options.maxRetries + " in " + this.options.retryAfter + "ms.");
              try {
                setTimeout(function() {
                  this.retries += 1, this.send();
                }.bind(this), this.options.retryAfter);
              } catch (t) {
                typeof atv < "u" ? atv.setTimeout(function() {
                  this.retries += 1, this.send();
                }.bind(this), this.options.retryAfter) : Zi.error(t);
              }
            }
          };
          this.retries === 0 && this.on(Ni.Event.ERROR, i.bind(this));
        }
        Zi.logLevel <= Zi.Level.VERBOSE && Zi.verbose("XHR Req: " + this.getUrl());
        for (var n in Ni._globalListeners)
          Ni._globalListeners[n].forEach(function(t) {
            this.on(n, t);
          }.bind(this));
        return this.xhr.send(this.body);
      } catch (t) {
        Zi.error(t);
      }
    }
  },
  {
    Event: {
      SUCCESS: "load",
      LOAD: "load",
      ERROR: "error",
      ABORT: "abort"
    },
    defaultOptions: {
      method: "GET",
      requestHeaders: {},
      maxRetries: 3,
      retryAfter: 5e3,
      cache: !1
    },
    _globalListeners: {},
    onEvery: function(e, i) {
      Ni._globalListeners[e] = Ni._globalListeners[e] || [], Ni._globalListeners[e].push(i);
    },
    offEvery: function(e, i) {
      if (Ni._globalListeners[e]) {
        var n = Ni._globalListeners[e].indexOf(i);
        n !== -1 && Ni._globalListeners[e].splice(n, 1);
      }
    }
  }
), cn = Ni, Bk = Pn, by = Bk.extend(
  {
    constructor: function() {
      this._isBusy = !0, this._sendRequest = !0, this.transformName = "Transform";
    },
    parse: function(e) {
    },
    isBlocking: function(e) {
      return this._isBusy;
    },
    done: function() {
      this._isBusy = !1, this.emit(by.Event.DONE);
    },
    hasToSend: function(e) {
      return this._sendRequest;
    },
    getState: function() {
      return this._sendRequest ? this._isBusy ? this.STATE_BLOCKED : this.STATE_NO_BLOCKED : this.STATE_OFFLINE;
    }
  },
  {
    STATE_OFFLINE: 2,
    STATE_BLOCKED: 1,
    STATE_NO_BLOCKED: 0,
    Event: {
      DONE: "done"
    }
  }
), Vn = by, Uk = xt, Zp = At, pl = cn, or = Vn, Fk = Uk.extend(
  {
    constructor: function(e) {
      this.transforms = [], this.pluginRef = e, this._requests = [];
    },
    sendRequest: function(e, i, n) {
      e && (typeof i == "function" && e.on(pl.Event.SUCCESS, i, n), this._registerRequest(e));
    },
    buildRequest: function(e, i, n, t) {
      n = n || {};
      var r = new pl(e, i, n);
      typeof t == "function" && r.on(pl.Event.SUCCESS, t), this._registerRequest(r);
    },
    addTransform: function(e) {
      e.parse && e.isBlocking ? (this.transforms.push(e), e.on(or.Event.DONE, this._processRequests.bind(this))) : Zp.warn(e + " is not a valid RequestTransform.");
    },
    removeTransform: function(e) {
      var i = this.transforms.indexOf(e);
      i !== -1 ? this.transforms.splice(i, 1) : Zp.warn("Trying to remove unexisting Transform '" + e + "'.");
    },
    _registerRequest: function(e) {
      if (this.pluginRef) {
        var i = this.pluginRef.options;
        i.authToken && (e.options.requestHeaders.Authorization = i.authType + " " + i.authToken);
      }
      this._requests.push(e), this._processRequests();
    },
    _processRequests: function() {
      var e = this._requests;
      this._requests = [];
      for (var i = []; e.length; ) {
        var n = e.shift(), t = this._transform(n);
        t === or.STATE_NO_BLOCKED ? (this.pluginRef && (n.host = this.pluginRef.getHost()), n.send()) : t === or.STATE_BLOCKED && i.push(n);
      }
      for (; i.length; )
        this._requests.push(i.shift());
    },
    _transform: function(e) {
      var i = or.STATE_NO_BLOCKED;
      return this.transforms.forEach(function(n) {
        if (n.isBlocking(e)) {
          i = or.STATE_BLOCKED;
          return;
        } else
          n.parse(e);
        n.getState() === or.STATE_OFFLINE && (i = or.STATE_OFFLINE);
      }), i;
    }
  }
), ih = Fk, fl = cn, ef = Vn, oo = At, jk = mi, qi = Xi, vo = ef.extend(
  {
    constructor: function(e, i) {
      ef.prototype.constructor.apply(this, arguments), this.response = {}, this._viewIndex = (/* @__PURE__ */ new Date()).getTime(), this._session = i, this._httpSecure = e.options["app.https"], this._plugin = e, this.transformName = "View";
    },
    init: function() {
      if (this._plugin.options && this._plugin.options.offline)
        return this.response.host = "OFFLINE", this.response.code = "OFFLINE", this.response.pingTime = 60, this.response.beatTime = 60, this.done(), null;
      if (this._plugin.storage.isEnabled()) {
        var e = (/* @__PURE__ */ new Date()).getTime();
        if (e < this._plugin.sessionExpire + (Number(this._plugin.getDataTime()) || 0) && this._plugin.getStoredData())
          return this.setData(this._plugin.getStoredData()), null;
      }
      var i = qi.Service.DATA, n = {
        outputformat: "json"
      };
      n = this._plugin.requestBuilder.buildParams(n, i), n !== null && (oo.notice(i + " " + n.system), n.system === "nicetest" && oo.error(
        "No accountCode has been set. Please set your accountCode inside plugin's options."
      ), new fl(this._plugin.getHost(), i, n).on(fl.Event.SUCCESS, this._receiveData.bind(this)).on(fl.Event.ERROR, this._failedData.bind(this)).send());
    },
    setData: function(e) {
      try {
        var i = JSON.parse(e);
        this._plugin.options["parse.fdsResponseHost"] && (e = e.replace(i.q.h, this._plugin.options["parse.fdsResponseHost"](i.q.h)), i = JSON.parse(e)), this.response.msg = e, this.response.host = jk.addProtocol(i.q.h, this._httpSecure), this.response.code = i.q.c, this.response.pingTime = i.q.pt || 5, this.response.beatTime = i.q.i && i.q.i.bt || 30, this.response.sessionExpire = i.q.i && i.q.i.exp || 300, this._plugin.storage.setLocal("sessionExpire", this.response.sessionExpire), this.done();
      } catch {
        oo.error("Fastdata response is invalid.");
      }
    },
    _receiveData: function(e, i) {
      var n = e.getResponse();
      this.setData(n);
    },
    _failedData: function(e, i) {
      oo.error("Fastdata request has failed.");
    },
    nextView: function() {
      return this._viewIndex = (/* @__PURE__ */ new Date()).getTime(), this.getViewCode();
    },
    getViewCode: function() {
      return this.response.code + "_" + this._viewIndex;
    },
    getSession: function() {
      return this._session;
    },
    setSession: function(e) {
      this._session = e;
    },
    setHost: function(e) {
      this.response.host = e;
    },
    parse: function(e) {
      e.host = e.host || this.response.host, e.params.system = this._plugin.getAccountCode(), e.params.sessionRoot = e.params.sessionRoot || this.getSession(), vo.EventList.PingTime.indexOf(e.service) !== -1 && (e.params.pingTime = e.params.pingTime || this.response.pingTime), vo.EventList.Infinity.indexOf(e.service) === -1 ? e.params.code = e.params.code || this.getViewCode() : e.params.sessionId = e.params.sessionRoot, vo.EventList.CreateView.indexOf(e.service) !== -1 && (this._plugin.infinity.infinityStarted || this._plugin.storage.isEnabled() && this._plugin.storage.getLocal("infinityStarted")) && (e.params.parentId = e.params.sessionRoot, e.params.navContext = e.params.navContext || this._plugin.getContext());
    }
  },
  {
    EventList: {
      CreateView: [
        qi.Service.START,
        qi.Service.INIT,
        qi.Service.ERROR
      ],
      Infinity: [
        qi.Service.NAV,
        qi.Service.SESSION_START,
        qi.Service.SESSION_STOP,
        qi.Service.EVENT,
        qi.Service.BEAT
      ],
      PingTime: [
        qi.Service.START,
        qi.Service.PING
      ]
    }
  }
), Ty = vo, qk = Pn, Ey = qk.extend(
  {
    constructor: function(e) {
      this._realResource = null, this._lastManifest = null, this._transportFormat = null, this.iterations = 3, this._headers = e;
    },
    done: function() {
      this.iterations = 3, this.emit(Ey.Event.DONE);
    },
    parse: function(e, i) {
    },
    getResource: function() {
      return this._realResource;
    },
    getTransportFormat: function() {
      return this._transportFormat;
    },
    getLastManifest: function() {
      return this._lastManifest;
    },
    shouldExecute: function(e) {
      return !0;
    }
  },
  {
    Event: {
      DONE: "done"
    }
  }
), yu = Ey, Vk = {
  MP4: "MP4",
  MPEG2: "TS",
  CMF: "CMF"
}, _u = Vk, ml = cn, Hk = yu, Wk = At, gl = _u, Gk = Hk.extend(
  {
    parse: function(e, i, n) {
      n = n || "";
      var t = null;
      try {
        t = /((\S*?)(\.m3u8|\.m3u|\.ts|\.m4s|\.mp4|\.cmfv|\.m4a)((\?|;)\S*|\n|\r|$))/i.exec(e.replaceAll(",URI=", `
`).replaceAll('"', "").replaceAll(",", `
`));
      } catch (l) {
        Wk.warn("Parse HLS Regex failed", l), this.done();
      }
      if (t !== null) {
        var r = t[1].trim(), s = "", a = n.lastIndexOf("/");
        if (r.indexOf("http") !== 0 && a !== -1) {
          if (r[0] === "/" && r[1] !== "/") {
            var o = n.indexOf("/") + 1;
            o += n.substr(o, n.length).indexOf("/") + 1, o += n.substr(o, n.length).indexOf("/"), r = n.slice(0, o) + r;
          } else
            r = n.slice(0, a) + "/" + r;
          s = n.slice(0, a) + "/";
        }
        if (t[3] === ".m3u8" || t[3] === ".m3u")
          if (i)
            this._parseWithManifest(i, s, t);
          else {
            var u = new ml(r, null, null, { cache: !0, requestHeaders: this._headers });
            u.on(ml.Event.SUCCESS, function(l) {
              this._parseWithManifest(l, s, t);
            }.bind(this)), u.on(ml.Event.ERROR, function(l) {
              this.done();
            }.bind(this)), u.send();
          }
        else {
          switch (t[3]) {
            case ".mp4":
            case ".m4s":
            case ".m4a":
              this._transportFormat = gl.MP4;
              break;
            case ".ts":
              this._transportFormat = gl.MPEG2;
              break;
            case ".cmfv":
              this._transportFormat = gl.CMF;
          }
          this._realResource = r, this.done();
        }
      } else
        this.done();
    },
    _parseWithManifest: function(e, i, n) {
      this._lastManifest = e, this.parse(e.getResponseText(), null, i + n[2]);
    },
    shouldExecute: function(e) {
      var i = !0;
      if (e) {
        var n = e.getResponseText();
        i = n.indexOf("#EXTM3U") !== -1;
      }
      return i;
    }
  }
), Sy = Gk, tf, nf;
function Kk() {
  return nf || (nf = 1, tf = {
    cdnName: "LEVEL3",
    parsers: [{
      element: "host+type",
      headerName: "X-WR-Diag",
      regex: /Host:(.+)\sType:(.+)/
    }],
    requestHeaders: {
      "X-WR-Diag": "host"
    },
    parseType: function(e) {
      if (e) {
        if (e.indexOf("TCP_HIT") === 0 || e.indexOf("TCP_MEM_HIT") === 0 || e.indexOf("TCP_IMS_HIT") === 0)
          return 1;
        if (e.indexOf("TCP_MISS") === 0)
          return 2;
      }
      return 0;
    }
  }), tf;
}
var rf, sf;
function zk() {
  return sf || (sf = 1, rf = {
    cdnName: "CLOUDFRT",
    parsers: [{
      element: "host",
      headerName: "X-Amz-Cf-Id",
      regex: /(.+)/
    }, {
      element: "type",
      headerName: "X-Cache",
      regex: /(\S+)\s.+/
    }],
    parseType: function(e) {
      switch (e) {
        case "Hit":
          return 1;
        case "Miss":
          return 2;
        default:
          return 0;
      }
    }
  }), rf;
}
var af, of;
function Xk() {
  return of || (of = 1, af = {
    cdnName: "AKAMAI",
    parsers: [{
      element: "type+host",
      headerName: "X-Cache",
      regex: /(.+)\sfrom.+AkamaiGHost\/(.+)\).+/
    }, {
      element: "host",
      headerName: "akamai-mon-iucid-del",
      regex: /(.*)/
    }, {
      element: "type",
      headerName: "akamai-cache-status",
      regex: /(.+)\sfrom\schild/
    }],
    requestHeaders: {
      Pragma: "akamai-x-cache-on"
    },
    parseType: function(e) {
      var i = e.toLowerCase();
      return i.indexOf("hit") !== -1 ? 1 : i.indexOf("miss") !== -1 ? 2 : 0;
    }
  }), af;
}
var uf, lf;
function Qk() {
  return lf || (lf = 1, uf = {
    cdnName: "HIGHNEGR",
    parsers: [{
      element: "host+type",
      headerName: "X-HW",
      regex: /.+,[0-9]+\.(.+)\.(.+)/
    }],
    parseType: function(e) {
      switch (e) {
        case "c":
        case "x":
          return 1;
        default:
          return 2;
      }
    }
  }), uf;
}
var cf, df;
function Jk() {
  return df || (df = 1, cf = {
    cdnName: "FASTLY",
    parsers: [{
      element: "host",
      headerName: "X-Served-By",
      regex: /([^,\s]+)$/
    }, {
      element: "type",
      headerName: "X-Cache",
      regex: /([^,\s]+)$/
    }],
    parseType: function(e) {
      switch (e) {
        case "HIT":
          return 1;
        case "MISS":
          return 2;
        default:
          return 0;
      }
    }
  }), cf;
}
var hf, pf;
function Yk() {
  return pf || (pf = 1, hf = {
    cdnName: "TELEFO",
    parsers: [{
      element: "host+type",
      headerName: "x-tcdn",
      regex: /Host:(.+)\sType:(.+)/
    }],
    requestHeaders: {
      "x-tcdn": "host"
    },
    parseType: function(e) {
      if (e) {
        if (e.indexOf("p") !== -1 || e.indexOf("c") !== -1)
          return 1;
        if (e.indexOf("i") !== -1 || e.indexOf("m") !== -1)
          return 2;
      }
      return 0;
    }
  }), hf;
}
var ff, mf;
function $k() {
  return mf || (mf = 1, ff = {
    cdnName: "AMAZON",
    parsers: [{
      element: "host",
      headerName: "x-amz-cf-pop",
      regex: /(.+)/
    }, {
      element: "type",
      headerName: "x-cache",
      regex: /(.+)\sfrom.+/
    }],
    parseType: function(e) {
      return e.toLowerCase().indexOf("hit") !== -1 ? 1 : e.toLowerCase().indexOf("miss") !== -1 ? 2 : 0;
    }
  }), ff;
}
var gf, vf;
function Zk() {
  return vf || (vf = 1, gf = {
    cdnName: "EDGECAST",
    parsers: [{
      element: "host",
      headerName: "Server",
      regex: /\((.+)\/.+\)/
    }, {
      element: "type",
      headerName: "X-Cache",
      regex: /(.+)/
    }],
    parseType: function(e) {
      switch (e) {
        case "HIT":
          return 1;
        case "MISS":
        default:
          return 2;
      }
    }
  }), gf;
}
var yf, _f;
function eC() {
  return _f || (_f = 1, yf = {
    parsers: [
      {
        element: "name",
        headerName: null,
        regex: /(.+)/
      },
      {
        element: "host",
        headerName: null,
        regex: /(.+)/
      }
    ]
  }), yf;
}
var bf, Tf;
function tC() {
  return Tf || (Tf = 1, bf = {
    cdnName: "NOSOTT",
    parsers: [{
      element: "host",
      headerName: "X-NOS-Server",
      regex: /(.+)/
    }, {
      element: "type",
      headerName: "X-Cache",
      regex: /(.*)/
    }],
    parseType: function(e) {
      switch (e) {
        case "Hit":
          return 1;
        case "Miss":
          return 2;
        default:
          return 0;
      }
    }
  }), bf;
}
var iC = Pn, Ef = At, nC = mi, vl = cn, It = iC.extend(
  {
    constructor: function(e) {
      this._options = nC.assign({
        cdnName: null,
        parsers: [],
        requestMethod: "HEAD",
        requestHeaders: {},
        parseType: function() {
          return 0;
        }
      }, e), this._responses = {};
    },
    done: function() {
      this.emit(It.Event.DONE);
    },
    addParser: function(e) {
      return this._options.parsers.push(e), this;
    },
    setCdnName: function(e) {
      return this._options.cdnName = e, this;
    },
    setRequestMethod: function(e) {
      return this._options.requestMethod = e, this;
    },
    setRequestHeader: function(e, i) {
      return this._options.requestHeaders[e] = i, this;
    },
    setParseType: function(e) {
      return this._options.parseType = e, this;
    },
    getParsedCdnName: function() {
      return this._cdnName;
    },
    getParsedNodeHost: function() {
      return this._cdnNodeHost;
    },
    getParsedNodeTypeString: function() {
      return this._cdnNodeTypeString;
    },
    getParsedNodeType: function() {
      return this._cdnNodeType;
    },
    getResponses: function() {
      return this._responses;
    },
    parse: function(e, i) {
      this._responses = i || {};
      var n = JSON.stringify(this._options.requestHeaders);
      this._responses[n] ? this._parseResponse(this._responses[n]) : this._requestResponse(e);
    },
    _requestResponse: function(e) {
      var i = JSON.stringify(this._options.requestHeaders), n = i !== "{}", t = new vl(e, null, null, {
        method: this._options.requestMethod,
        maxRetries: 0,
        requestHeaders: this._options.requestHeaders,
        cache: !0
      });
      t.on(vl.Event.SUCCESS, function(r) {
        this._responses[i] = r.getResponseHeaders(), this._parseResponse(this._responses[i]);
      }.bind(this)), t.on(vl.Event.ERROR, function(r) {
        n ? (this._options.requestHeaders = {}, this._requestResponse(e)) : this.done();
      }.bind(this)), t.send();
    },
    _parseResponse: function(e) {
      this._options.parsers.forEach(function(i) {
        if (typeof i.headerName == "string")
          this._parseHeaderResponse(e, i, i.headerName);
        else if (Array.isArray(i.headerName))
          for (var n = 0, t = i.headerName.length; n < t; n++) {
            var r = i.headerName[n];
            typeof r == "string" && this._parseHeaderResponse(e, i, r);
          }
      }.bind(this)), this.done();
    },
    _parseHeaderResponse: function(e, i, n) {
      n && (n = n ? n.toLowerCase() : "", e.split(`
`).forEach(function(t) {
        var r = t.indexOf(":");
        if (r !== -1) {
          var s = t.slice(0, r).toLowerCase();
          s === n && this._executeParser(i, t.slice(r + 1));
        }
      }.bind(this)));
    },
    _executeParser: function(e, i) {
      try {
        var n = e.regex.exec(i.trim());
        if (n !== null)
          switch (this._options.cdnName && (this._cdnName = this._options.cdnName), e.element) {
            case It.ElementType.HOST:
              this._cdnNodeHost = n[1];
              break;
            case It.ElementType.TYPE:
              this._cdnNodeTypeString = n[1], this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString);
              break;
            case It.ElementType.HOST_AND_TYPE:
              this._cdnNodeHost = n[1], this._cdnNodeTypeString = n[2], this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString);
              break;
            case It.ElementType.TYPE_AND_HOST:
              this._cdnNodeTypeString = n[1], this._cdnNodeType = this._options.parseType(this._cdnNodeTypeString), this._cdnNodeHost = n[2];
              break;
            case It.ElementType.NAME:
              this._cdnName = n[1].toUpperCase();
              break;
          }
      } catch {
        Ef.warn("CDN parsing for " + this._options.cdnName + " could not parse header value " + i);
      }
    },
    shouldExecute: function() {
      return !0;
    }
  },
  {
    Event: {
      DONE: "done"
    },
    ElementType: {
      HOST: "host",
      TYPE: "type",
      HOST_AND_TYPE: "host+type",
      TYPE_AND_HOST: "type+host",
      NAME: "name"
    },
    _cdnConfigs: {},
    setBalancerHeaderName: function(e, i) {
      It._cdnConfigs.Balancer.parsers[0].headerName = e, It._cdnConfigs.Balancer.parsers[1].headerName = i;
    },
    create: function(e) {
      if (It._cdnConfigs[e])
        return new It(It._cdnConfigs[e]);
      Ef.warn("Tried to create an unexisting CdnParser named " + e);
    },
    add: function(e, i) {
      It._cdnConfigs[e] = i;
    }
  }
);
It.add("Level3", Kk());
It.add("Cloudfront", zk());
It.add("Akamai", Xk());
It.add("Highwinds", Qk());
It.add("Fastly", Jk());
It.add("Telefonica", Yk());
It.add("Amazon", $k());
It.add("Edgecast", Zk());
It.add("Balancer", eC());
It.add("NosOtt", tC());
var wy = It, rC = Pn, sC = At, yl = cn, Mc = rC.extend({
  constructor: function(e) {
    this.plugin = e, this.headerName = "x-cdn";
  },
  init: function() {
    var e = null;
    this.plugin && (this.plugin.getAdapter() && this.plugin.getAdapter().getURLToParse() ? e = this.plugin.getAdapter().getURLToParse() : e = this.plugin.getResource()), this.plugin && this.plugin.getAdapter() && this.plugin.getAdapter().flags.isStarted && this._request(e);
  },
  done: function(e) {
    this.emit(Mc.Events.DONE, e);
  },
  error: function() {
    this.emit(Mc.Events.ERROR);
  },
  _successfulRequest: function(e) {
    setTimeout(this.init.bind(this), parseInt(this.plugin.options["parse.cdnTTL"]) * 1e3);
    var i = e.getResponseHeaders().split(`
`), n = null;
    for (var t in i) {
      var r = i[t], s = r.indexOf(this.headerName);
      s > -1 && (n = r.substring(s + this.headerName.length + 1, r.length - 1).replace(" ", ""));
    }
    this.done(n);
  },
  _failedRequest: function() {
    setTimeout(this.init.bind(this), parseInt(this.plugin.options["parse.cdnTTL"]) * 1e3), sC.warn("CDN switch detection request failed"), this.error();
  },
  _request: function(e) {
    var i = new yl(e, null, null, { method: "HEAD", cache: !0 });
    i.on(yl.Event.SUCCESS, this._successfulRequest.bind(this)), i.on(yl.Event.ERROR, this._failedRequest.bind(this)), i.send();
  }
}, {
  Events: {
    DONE: "done",
    ERROR: "error"
  }
}), aC = Mc, _l = cn, oC = yu, bl = At, Tl = _u, uC = oC.extend(
  {
    parse: function(e, i) {
      if (i)
        this.parseLocation(i, e);
      else {
        var n = new _l(e, null, null, { cache: !0, requestHeaders: this._headers });
        n.on(_l.Event.SUCCESS, function(t) {
          this.parseLocation(t, e);
        }.bind(this)), n.on(_l.Event.ERROR, function(t) {
          this.done();
        }.bind(this)), n.send();
      }
    },
    parseLocation: function(e, i) {
      this.iterations--;
      var n = new RegExp(/<Location>([\s\S]+)<\/Location>/);
      try {
        this._lastManifest = e;
        var t = e.getResponseText(), r = n.exec(t);
        if (r && r[1])
          var s = this._htmlDecode(r[1].replace(`
`, ""));
        s && s !== i && this.iterations > 0 ? this.parse(s) : this.parseFinalResource(t, i);
      } catch {
        bl.warn("Dash parse failed"), this.done();
      }
    },
    _htmlDecode: function(e) {
      if (typeof document < "u" && typeof document.createElement == "function") {
        var i = document.createElement("textarea");
        return i.innerHTML = e, i.childNodes && i.childNodes.length ? i.childNodes[0].nodeValue : e;
      }
      return e;
    },
    parseFinalResource: function(e, i) {
      var n = new RegExp(/<BaseURL>[\r\n]*(.*?)[\r\n]*<\/BaseURL>/), t = new RegExp(/<SegmentURL[\s\S]*media="([^"]+)/), r = new RegExp(/<SegmentTemplate[\s\S]*media="([^"]+)/), s = null;
      try {
        s = n.exec(e) || r.exec(e) || t.exec(e), this._getManifestMetadata(e), s && s[1] && this._isFullUrl(s[1]) ? s[1].indexOf('"') > 0 ? this._realResource = s[1].substr(0, s[1].indexOf('"')).replace(`
`, "") : this._realResource = s[1].replace(`
`, "") : this._realResource = i;
      } catch {
        bl.warn("Dash manifest parse failed");
      }
      this.done();
    },
    _getManifestMetadata: function(e) {
      try {
        var i = new RegExp(/<AdaptationSet[\s\S]*mimeType="video\/([^"]+)/), n = i.exec(e), t = null;
        switch (n[1]) {
          case "mp4":
          case "m4s":
            t = Tl.MP4;
            break;
          case "mp2t":
            t = Tl.MPEG2;
            break;
          case "cmfv":
            t = Tl.CMF;
            break;
        }
        this._transportFormat = t;
      } catch {
        bl.warn("Couldnt find the transport format");
      }
    },
    _isFullUrl: function(e) {
      return e.indexOf("http") !== -1;
    },
    shouldExecute: function(e) {
      var i = !0;
      if (e) {
        var n = e.getResponseText();
        i = n.indexOf("<MPD") !== -1;
      }
      return i;
    }
  }
), ky = uC, El = cn, lC = yu, cC = lC.extend(
  {
    parse: function(e, i) {
      if (i)
        this._parseWithManifest(i);
      else {
        this._realResource = e;
        var n = new El(e, null, null, {
          cache: !0,
          requestHeaders: this._headers
        });
        n.on(El.Event.SUCCESS, function(t) {
          this._parseWithManifest(t);
        }.bind(this)), n.on(El.Event.ERROR, function(t) {
          this.done();
        }.bind(this)), n.send();
      }
    },
    _parseWithManifest: function(e) {
      this._lastManifest = e;
      var i = e.getResponseHeaders(), n = !1;
      e && e.xhr && e.xhr.responseURL && e.xhr.responseURL !== this._realResource ? (this._realResource = e.xhr.responseURL, this.parse(this._realResource), n = !0) : i.split(`
`).forEach(function(t) {
        t.startsWith("Location:") && (this._realResource = t.slice(10), this.parse(this._realResource), n = !0);
      }.bind(this)), n || this.done();
    }
  }
), Cy = cC, dC = Vn, hC = Sy, Sl = wy, wl = aC, pC = ky, fC = yu, mC = Cy, Sf = At, gC = Xi, Ay = dC.extend(
  {
    constructor: function(e) {
      Ay.__super__.constructor.apply(this, arguments), this._plugin = e, this._realResource = null, this._transportFormat = null, this._initResource = null, this._cdnName = null, this._cdnNodeHost = null, this._cdnNodeTypeString = null, this._cdnNodeType = null, this._responses = {}, this._isBusy = !1, this.transformName = "Resource";
    },
    getResource: function() {
      return this._realResource;
    },
    _getInitialCdnResource: function() {
      return this._realResource || this._initResource;
    },
    getTransportFormat: function() {
      return this._transportFormat;
    },
    getCdnName: function() {
      return this._cdnName;
    },
    getNodeHost: function() {
      return this._cdnNodeHost;
    },
    getNodeTypeString: function() {
      return this._cdnNodeTypeString;
    },
    getNodeType: function() {
      return this._cdnNodeType;
    },
    init: function(e) {
      if (!e) {
        this.done();
        return;
      }
      this._isBusy || (this._isBusy = !0, this._initResource = e, this._parseManifestEnabled = this._plugin.isParseManifest(), this._cdnEnabled = this._plugin.isParseCdnNode(), this._cdnList = this._plugin.getParseCdnNodeList().slice(), Sl.setBalancerHeaderName(this._plugin.getParseCdnNodeNameHeader(), this._plugin.getParseNodeHeader()), this._setTimeout(), this._parseManifestEnabled ? this._isFinalUrl(this._initResource) ? (this._realResource = this._initResource, this.done()) : this.parseManifest() : this._parseCDN());
    },
    _isFinalUrl: function(e) {
      var i = [".ts", ".mp4", ".m4s", ".cmfv"];
      e = e || "";
      for (var n in i) {
        var t = i[n];
        if (e.lastIndexOf(t) === e.length - t.length)
          return !0;
      }
      return !1;
    },
    _setTimeout: function() {
      var e = function() {
        this._isBusy && (this.done(), Sf.warn("ResourceTransform has exceeded the maximum execution time (3s) and will be aborted."));
      }.bind(this);
      try {
        this._parseTimeout = setTimeout(e, 3e3);
      } catch (i) {
        typeof atv < "u" ? this._parseTimeout = atv.setTimeout(e, 3e3) : Sf.error(i);
      }
    },
    parseManifest: function(e, i) {
      var n = this._plugin.options["parse.manifest.auth"], t = [new mC(n), new pC(n), new hC(n)];
      this._parseManifest(t, e, i || this._initResource);
    },
    _parseManifest: function(e, i, n, t) {
      if (e.length > 0) {
        var r = e[0];
        r.shouldExecute(i) ? (r.on(fC.Event.DONE, function() {
          this._parseManifest(e.slice(1, e.length), r.getLastManifest(), r.getResource(), r.getTransportFormat() || t);
        }.bind(this)), r.parse(n, i)) : this._parseManifest(e.slice(1, e.length), i, n, t);
      } else
        this._transportFormat = t, this._realResource = n, this._parseCDN();
    },
    _parseCDN: function() {
      if (this._plugin.isCdnSwitch())
        this.switchDetector = new wl(this._plugin), this.switchDetector.on(wl.Events.DONE, function(n) {
          this._cdnName = n.data, this.done();
        }.bind(this)), this.switchDetector.on(wl.Events.ERROR, function() {
          this.done();
        }.bind(this)), this.switchDetector.init();
      else if (this._cdnEnabled && this._cdnList.length > 0) {
        var e = this._cdnList.shift();
        if (this.getNodeHost())
          return;
        var i = Sl.create(e);
        i ? (i.on(Sl.Event.DONE, function() {
          this._responses = i.getResponses(), this._cdnName = i.getParsedCdnName(), this._cdnNodeHost = i.getParsedNodeHost(), this._cdnNodeTypeString = i.getParsedNodeTypeString(), this._cdnNodeType = i.getParsedNodeType(), this.getNodeHost() ? this.done() : this._parseCDN();
        }.bind(this)), i.parse(this._getInitialCdnResource(), this._responses)) : this._parseCDN();
      } else
        this.done();
    },
    parse: function(e) {
      if (e.service === gC.Service.START) {
        var i = this._plugin.requestBuilder.lastSent;
        i.parsedResource = e.params.parsedResource = this.getResource() || e.params.parsedResource, i.transportFormat = e.params.transportFormat = this.getTransportFormat() || e.params.transportFormat, this._cdnEnabled && (i.cdn = e.params.cdn = e.params.cdn || this.getCdnName(), i.nodeHost = e.params.nodeHost = this.getNodeHost() || e.params.nodeHost, i.nodeType = e.params.nodeType = this.getNodeType() || e.params.nodeType, i.nodeTypeString = e.params.nodeTypeString = this.getNodeTypeString() || e.params.nodeTypeString);
      }
    }
  }
), Iy = Ay, wf = Vn, vC = wf.extend(
  {
    constructor: function(e, i) {
      this._sendRequest = !1, this._isBusy = !1, this.plugin = e, this.session = i, this.transformName = "Offline";
    },
    parse: function(e) {
      e && this.plugin.offlineStorage && this.plugin.offlineStorage.addEvent(e.service, e.params);
    },
    hasToSend: function(e) {
      return !1;
    },
    getState: function() {
      return wf.STATE_OFFLINE;
    }
  }
), Dy = vC, yC = xt, _C = At, Bc = yC.extend({
  exists: function(e) {
    return Bc.Dictionary.hasOwnProperty(e);
  },
  getNewName: function(e) {
    var i = Bc.Dictionary[e];
    return _C.warn('The option "' + e + '" is deprecated, use "' + i + '" instead'), i;
  }
}, {
  Dictionary: {
    httpSecure: "app.https",
    username: "user.name",
    anonymousUser: "user.anonymousId",
    obfuscateIp: "user.obfuscateIp",
    userType: "user.type",
    "content.title2": "content.program",
    "background.settings.iphone": "background.settings.iOS",
    "parse.hls": "parse.manifest",
    "parse.dash": "parse.manifest",
    "parse.locationHeader": "parse.manifest",
    "extraparam.1": "content.customDimension.1",
    "extraparam.2": "content.customDimension.2",
    "extraparam.3": "content.customDimension.3",
    "extraparam.4": "content.customDimension.4",
    "extraparam.5": "content.customDimension.5",
    "extraparam.6": "content.customDimension.6",
    "extraparam.7": "content.customDimension.7",
    "extraparam.8": "content.customDimension.8",
    "extraparam.9": "content.customDimension.9",
    "extraparam.10": "content.customDimension.10",
    "extraparam.11": "content.customDimension.11",
    "extraparam.12": "content.customDimension.12",
    "extraparam.13": "content.customDimension.13",
    "extraparam.14": "content.customDimension.14",
    "extraparam.15": "content.customDimension.15",
    "extraparam.16": "content.customDimension.16",
    "extraparam.17": "content.customDimension.17",
    "extraparam.18": "content.customDimension.18",
    "extraparam.19": "content.customDimension.19",
    "extraparam.20": "content.customDimension.20",
    "ad.extraparam.1": "ad.customDimension.1",
    "ad.extraparam.2": "ad.customDimension.2",
    "ad.extraparam.3": "ad.customDimension.3",
    "ad.extraparam.4": "ad.customDimension.4",
    "ad.extraparam.5": "ad.customDimension.5",
    "ad.extraparam.6": "ad.customDimension.6",
    "ad.extraparam.7": "ad.customDimension.7",
    "ad.extraparam.8": "ad.customDimension.8",
    "ad.extraparam.9": "ad.customDimension.9",
    "ad.extraparam.10": "ad.customDimension.10"
  }
}), bC = Bc, TC = {
  HDS: "HDS",
  HLS: "HLS",
  MSS: "MSS",
  DASH: "DASH",
  RTMP: "RTMP",
  RTP: "RTP",
  RTSP: "RTSP",
  DVB: "DVB",
  DVBC: "DVB-C",
  DVBT: "DVB-T",
  DVBT2: "DVB-T2",
  MULTICAST: "MULTICAST"
}, xy = TC, EC = xt, SC = bC, wC = At, kC = _u, CC = xy, kf = th, Uc = EC.extend(
  {
    constructor: function(e) {
      this.enabled = !0, this.host = "a-fds.youborafds01.com", this.accountCode = "nicetest", this.authToken = null, this.authType = "Bearer", this.preventZombieViews = !0, this.offline = !1, this.referer = null, this.referral = null, this.disableCookies = !0, this.forceCookies = !1, this.disableStorage = !1, this["user.email"] = null, this["user.type"] = null, this["user.name"] = null, this["user.obfuscateIp"] = !1, this["user.anonymousId"] = null, this["user.privacyProtocol"] = null, this["parse.manifest"] = !1, this["parse.manifest.auth"] = {}, this["parse.cdnNameHeader"] = ["x-cdn-forward"], this["parse.cdnNodeHeader"] = "", this["parse.cdnNode"] = !1, this["parse.cdnNode.list"] = ["Akamai", "Amazon", "Cloudfront", "Level3", "Fastly", "Highwinds", "Telefonica", "Edgecast", "NosOtt"], this["parse.fdsResponseHost"] = null, this["parse.cdnSwitchHeader"] = !1, this["parse.cdnTTL"] = 60, this["network.ip"] = null, this["network.isp"] = null, this["network.connectionType"] = null, this["device.id"] = null, this["device.code"] = null, this["device.model"] = null, this["device.brand"] = null, this["device.type"] = null, this["device.name"] = null, this["device.osName"] = null, this["device.osVersion"] = null, this["device.browserName"] = null, this["device.browserVersion"] = null, this["device.browserType"] = null, this["device.browserEngine"] = null, this["device.EDID"] = null, this["device.isAnonymous"] = !1, this["content.transactionCode"] = null, this["content.resource"] = null, this["content.isLive"] = null, this["content.isLive.noSeek"] = !1, this["content.isLive.noMonitor"] = !1, this["content.title"] = null, this["content.program"] = null, this["content.duration"] = null, this["content.fps"] = null, this["content.segmentDuration"] = null, this["content.bitrate"] = null, this["content.totalBytes"] = null, this["content.sendTotalBytes"] = !1, this["content.throughput"] = null, this["content.rendition"] = null, this["content.cdn"] = null, this["content.cdnNode"] = null, this["content.cdnType"] = null, this["content.metadata"] = {}, this["content.metrics"] = {}, this["content.streamingProtocol"] = null, this["content.transportFormat"] = null, this["content.package"] = null, this["content.saga"] = null, this["content.tvShow"] = null, this["content.season"] = null, this["content.episodeTitle"] = null, this["content.channel"] = null, this["content.id"] = null, this["content.imdbId"] = null, this["content.gracenoteId"] = null, this["content.type"] = null, this["content.genre"] = null, this["content.language"] = null, this["content.autodetect.language"] = !0, this["content.subtitles"] = null, this["content.autodetect.subtitles"] = !0, this["content.contractedResolution"] = null, this["content.cost"] = null, this["content.price"] = null, this["content.playbackType"] = null, this["content.drm"] = null, this["content.encoding.videoCodec"] = null, this["content.encoding.audioCodec"] = null, this["content.encoding.codecSettings"] = null, this["content.encoding.codecProfile"] = null, this["content.encoding.containerFormat"] = null, this["ad.metadata"] = {}, this["ad.campaign"] = null, this["ad.creativeId"] = null, this["ad.provider"] = null, this["ad.resource"] = null, this["ad.title"] = null, this["ad.duration"] = null, this["ad.expectedPattern"] = null, this["ad.givenAds"] = null, this["ad.breaksTime"] = null, this["ad.expectedBreaks"] = null, this["ad.givenBreaks"] = null, this["ad.ignore"] = !1, this["ad.blockerDetected"] = null, this["app.name"] = null, this["app.releaseVersion"] = null, this["app.https"] = !1, this["background.enabled"] = !0, this["background.settings"] = null, this["background.settings.android"] = "stop", this["background.settings.iOS"] = "stop", this["background.settings.desktop"] = null, this["background.settings.tv"] = "stop", this["background.settings.playstation"] = "stop", this["smartswitch.configCode"] = null, this["smartswitch.groupCode"] = null, this["smartswitch.contractCode"] = null, this["content.customDimensions"] = {}, this["content.customDimension.1"] = null, this["content.customDimension.2"] = null, this["content.customDimension.3"] = null, this["content.customDimension.4"] = null, this["content.customDimension.5"] = null, this["content.customDimension.6"] = null, this["content.customDimension.7"] = null, this["content.customDimension.8"] = null, this["content.customDimension.9"] = null, this["content.customDimension.10"] = null, this["content.customDimension.11"] = null, this["content.customDimension.12"] = null, this["content.customDimension.13"] = null, this["content.customDimension.14"] = null, this["content.customDimension.15"] = null, this["content.customDimension.16"] = null, this["content.customDimension.17"] = null, this["content.customDimension.18"] = null, this["content.customDimension.19"] = null, this["content.customDimension.20"] = null, this["ad.customDimension.1"] = null, this["ad.customDimension.2"] = null, this["ad.customDimension.3"] = null, this["ad.customDimension.4"] = null, this["ad.customDimension.5"] = null, this["ad.customDimension.6"] = null, this["ad.customDimension.7"] = null, this["ad.customDimension.8"] = null, this["ad.customDimension.9"] = null, this["ad.customDimension.10"] = null, this.forceInit = !1, this["session.metrics"] = {}, this["session.context"] = !1, this["errors.fatal"] = [], this["errors.nonFatal"] = [], this["errors.ignore"] = [], this.linkedViewId = null, this.waitForMetadata = !1, this.pendingMetadata = [], this.method = kf.GET, this["playhead.monitor"] = !0, this["readyState.monitor"] = !0, this.setOptions(e);
    },
    setOptions: function(e, i) {
      var n = !1;
      if (i === void 0) {
        i = this, n = !0;
        var t = new SC();
      }
      if (typeof e < "u")
        for (var r in e) {
          var s = !1, a = null;
          n && (this.hasOwnProperty(r) || (t.exists(r) ? (a = t.getNewName(r), s = !0) : wC.warn('The option "' + r + '" does not exist, so it cannot be set'))), typeof i[r] == "object" && i[r] !== null && !Array.isArray(i[r]) && r === "parse.cdnNode.list" ? this.setOptions(e[r], i[r]) : s ? i[a] = e[r] : i[r] = e[r];
        }
    },
    setExtraParams: function(e) {
      var i = 20;
      if (!(typeof e != "object" || !e.length)) {
        for (e.length >= i && (e = e.slice(0, i)); e.length < i; )
          e.push(null);
        e.forEach(function(n, t) {
          this["content.customDimension." + (t + 1).toString()] = n;
        }.bind(this));
      }
    },
    setCustomDimensions: function() {
      Uc.prototype.setExtraParams.apply(this, arguments);
    },
    setAdExtraParams: function(e) {
      var i = 10;
      if (!(typeof e != "object" || !e.length)) {
        for (e.length >= i && (e = e.slice(0, i)); e.length < i; )
          e.push(null);
        e.forEach(function(n, t) {
          this["ad.customDimension." + (t + 1).toString()] = n;
        }.bind(this));
      }
    },
    setAdCustomDimensions: function() {
      Uc.prototype.setAdExtraParams.apply(this, arguments);
    }
  },
  {
    StreamingProtocol: CC,
    TransportFormat: kC,
    RequestMethod: kf
  }
), Py = Uc, Cf = Vn, uo = Xi, AC = Cf.extend(
  {
    _services: [uo.Service.INIT, uo.Service.START, uo.Service.OFFLINE_EVENTS],
    isBlocking: function(e) {
      if (this._isBusy && e != null) {
        if (this._services.indexOf(e.service) !== -1)
          this.done();
        else if (e.service === uo.Service.ERROR)
          return !1;
      }
      return Cf.prototype.isBlocking.apply(this, arguments);
    }
  }
), IC = AC, DC = xt, lo = At, xC = DC.extend(
  {
    constructor: function(e, i, n, t) {
      this.prefix = e || "youbora", this.disableCookies = i, this.forceCookies = n, this.disabled = t;
    },
    isEnabled: function() {
      if (this.disabled)
        return !1;
      var e = !0;
      if (!this.forceCookies)
        try {
          localStorage.setItem(this.prefix + ".test", "true"), localStorage.removeItem(this.prefix + ".test");
        } catch {
          e = !1;
        }
      return e;
    },
    setLocal: function(e, i) {
      if (this.disabled)
        return null;
      var n = null;
      try {
        this.forceCookies || (typeof localStorage > "u" || !localStorage) && !this.disableCookies ? n = this._setCookie(this.prefix + ".local." + e, i) : n = localStorage.setItem(this.prefix + "." + e, i);
      } catch {
        lo.error("Youbora Infinity needs localStorage or cookies, not supported by your browser.");
      }
      return n;
    },
    getLocal: function(e) {
      return this.disabled ? null : this._localGetRemove("getItem", "_getCookie", e);
    },
    removeLocal: function(e) {
      return this.disabled ? null : this._localGetRemove("removeItem", "_removeCookie", e);
    },
    _localGetRemove: function(e, i, n) {
      var t = null;
      try {
        this.forceCookies || (typeof localStorage > "u" || !localStorage) && !this.disableCookies ? t = this[i](this.prefix + ".local." + n) : t = localStorage[e](this.prefix + "." + n);
      } catch {
        lo.error("Youbora Infinity needs localStorage or cookies, not supported by your browser.");
      }
      return t;
    },
    setSession: function(e, i) {
      if (this.disabled)
        return null;
      var n = null;
      try {
        this.forceCookies || (typeof sessionStorage > "u" || !sessionStorage) && !this.disableCookies ? n = this._setCookie(this.prefix + ".session." + e, i) : n = sessionStorage.setItem(this.prefix + "." + e, i);
      } catch {
        lo.error("Youbora Infinity needs sessionStorage or cookies, not supported by your browser.");
      }
      return n;
    },
    getSession: function(e) {
      return this.disabled ? null : this._sessionGetRemove("getItem", "_getCookie", e);
    },
    removeSession: function(e) {
      return this.disabled ? null : this._sessionGetRemove("removeItem", "_removeCookie", e);
    },
    _sessionGetRemove: function(e, i, n) {
      var t = null;
      try {
        this.forceCookies || (typeof sessionStorage > "u" || !sessionStorage) && !this.disableCookies ? t = this[i](this.prefix + ".session." + n) : t = sessionStorage[e](this.prefix + "." + n);
      } catch {
        lo.error("Youbora Infinity needs sessionStorage or cookies, not supported by your browser.");
      }
      return t;
    },
    getStorages: function(e) {
      return this.getSession(e) || this.getLocal(e);
    },
    setStorages: function(e, i) {
      this.setSession(e, i), this.setLocal(e, i);
    },
    removeStorages: function(e) {
      this.removeSession(e), this.removeLocal(e);
    },
    _setCookie: function(e, i) {
      if (typeof document < "u") {
        var n = ";";
        typeof location < "u" && (n += "domain=" + location.host.split(".").reverse().splice(0, 2).reverse().join(".") + ";path=/;"), document.cookie = e + "=" + i + n;
      }
    },
    _getCookie: function(e) {
      if (typeof document < "u")
        for (var i = e + "=", n = decodeURIComponent(document.cookie), t = n.split(";"), r = 0; r < t.length; r++) {
          for (var s = t[r]; s.charAt(0) === " "; )
            s = s.substring(1);
          if (s.indexOf(i) === 0)
            return s.substring(i.length, s.length);
        }
      return null;
    },
    _removeCookie: function(e) {
      this._setCookie(e, "");
    }
  }
), nh = xC, PC = xt, LC = nh, OC = PC.extend({
  constructor: function() {
    this.storage = new LC("youboraOffline", !0), this.actualView = null, this.viewList = [], this.givenIds = [], this._getOldViewList();
  },
  _newView: function() {
    var e = this._getValidId();
    this.storage.setLocal(e, ""), this.viewList.push(e), this.storage.setLocal("views", this.viewList), this.actualView = e;
  },
  addEvent: function(e, i) {
    if (e === "/start" && this._newView(), e === "/init" || !this.actualView)
      return null;
    var n = '{"request":"' + e.slice(1) + '",';
    n += '"unixtime":' + Date.now() + ",";
    for (var t in i) {
      if (i[t] === void 0)
        break;
      n += '"' + t + '":', t === "code" ? n += '"CODE_PLACEHOLDER",' : t === "sessionId" ? n += '"SESSION_PLACEHOLDER",' : t === "sessionRoot" ? n += '"ROOT_PLACEHOLDER",' : typeof i[t] == "string" ? n += '"' + i[t] + '",' : typeof i[t] == "object" ? n += '"' + JSON.stringify(i[t]).replace(/"/g, '\\"') + '",' : n += i[t] + ",";
    }
    n = n.slice(0, -1), n += "}";
    var r = this.storage.getLocal(this.actualView);
    r !== "" && (r = r + ","), this.storage.setLocal(this.actualView, r + n);
  },
  getView: function() {
    if (this.viewList.length > this.givenIds.length)
      for (var e = 0; ; ) {
        var i = this.viewList[e];
        if (this.givenIds.indexOf(i) < 0)
          return this.givenIds.push(i), ["[" + this.storage.getLocal(i) + "]", i];
        e++;
      }
    return [null, null];
  },
  removeView: function(e) {
    this.storage.removeLocal(e);
    var i = this.viewList.indexOf(e);
    i !== -1 && this.viewList.splice(i, 1), i = this.givenIds.indexOf(e), i !== -1 && this.givenIds.splice(i, 1), this.storage.setLocal("views", this.viewList.toString()), e === this.actualView && (this.actualView = null);
  },
  _getOldViewList: function() {
    var e = "";
    this.storage.getLocal("views") ? e = this.storage.getLocal("views") : this.storage.setLocal("views", ""), e === "" ? this.viewList = [] : typeof e.split == "function" && (this.viewList = e.split(","));
  },
  _getValidId: function() {
    var e = Math.floor(Math.random() * 1e8).toString();
    return this.viewList.indexOf(e) >= 0 ? this._getValidId() : e;
  },
  sent: function() {
    this.givenIds = [];
  }
}), NC = OC, RC = xt, MC = At, kl = [
  "accountCode",
  "username",
  "anonymousUser",
  "rendition",
  "deviceInfo",
  "player",
  "title",
  "title2",
  "live",
  "segmentDuration",
  "mediaDuration",
  "mediaResource",
  "parsedResource",
  "transactionCode",
  "properties",
  "cdn",
  "playerVersion",
  "param1",
  "param2",
  "param3",
  "param4",
  "param5",
  "param6",
  "param7",
  "param8",
  "param9",
  "param10",
  "param11",
  "param12",
  "param13",
  "param14",
  "param15",
  "param16",
  "param17",
  "param18",
  "param19",
  "param20",
  "dimensions",
  "playerStartupTime",
  "obfuscateIp",
  "privacyProtocol",
  "p2pEnabled",
  "pluginVersion",
  "pluginInfo",
  "isp",
  "connectionType",
  "ip",
  "referer",
  "userType",
  "streamingProtocol",
  "transportFormat",
  "householdId",
  "adsBlocked",
  "adsExpected",
  "deviceUUID",
  "smartswitchConfigCode",
  "smartswitchGroupCode",
  "smartswitchContractCode",
  "libVersion",
  "nodeHost",
  "nodeType",
  "appName",
  "appReleaseVersion",
  "package",
  "saga",
  "tvshow",
  "season",
  "titleEpisode",
  "channel",
  "imdbID",
  "gracenoteID",
  "contentType",
  "genre",
  "contentLanguage",
  "subtitles",
  "cost",
  "price",
  "playbackType",
  "email",
  "drm",
  "videoCodec",
  "audioCodec",
  "codecSettings",
  "codecProfile",
  "containerFormat",
  "contentId",
  "contractedResolution",
  "linkedViewId",
  "edid",
  "cdnBalancerResponseUUID",
  "triggeredEvents"
], Cl = [
  "player",
  "playhead",
  "adTitle",
  "position",
  "adDuration",
  "adCampaign",
  "adCreativeId",
  "adProvider",
  "adResource",
  "adPlayerVersion",
  "adProperties",
  "adAdapterVersion",
  "adInsertionType",
  "extraparam1",
  "extraparam2",
  "extraparam3",
  "extraparam4",
  "extraparam5",
  "extraparam6",
  "extraparam7",
  "extraparam8",
  "extraparam9",
  "extraparam10",
  "fullscreen",
  "audio",
  "skippable",
  "adNumber",
  "adNumberInBreak",
  "breakNumber"
], lr = RC.extend(
  {
    constructor: function(e) {
      this._plugin = e, this._adNumber = 0, this._adNumberInBreak = 0, this.lastSent = {};
    },
    fetchParams: function(e, i, n) {
      e = e || {}, i = i || [];
      for (var t = 0; t < i.length; t++) {
        var r = i[t];
        if (!e[r]) {
          var s = lr.getters[r];
          if (this._plugin[s]) {
            var a = this._plugin[s]();
            a !== null && (!n || this.lastSent[r] !== a) && (e[r] = a, this.lastSent[r] = a);
          } else
            MC.warn("Trying to call undefined getter " + r + ":" + s);
        }
      }
      return e;
    },
    getGetters: function() {
      return lr.getters;
    },
    buildBody: function(e) {
      var i = null;
      return this.fetchParams(i, lr.bodyParams[e], !1);
    },
    buildParams: function(e, i) {
      return e = e || {}, this.fetchParams(e, lr.params[i], !1), this.fetchParams(e, lr.differentParams[i], !0), e;
    },
    getNewAdNumber: function() {
      var e = this.lastSent.adNumber;
      return e && this.lastSent.position === this._plugin.getAdPosition() ? e += 1 : e = 1, this.lastSent.adNumber = e, e;
    },
    getNewAdNumberInBreak: function() {
      return this._adNumberInBreak++, this.lastSent.adNumberInBreak = this._adNumberInBreak, this._adNumberInBreak;
    },
    getNewBreakNumber: function() {
      var e = 1;
      return this._adNumberInBreak = 0, this.lastSent.breakNumber && (e = this.lastSent.breakNumber + 1), this.lastSent.breakNumber = e, e;
    },
    getChangedEntities: function() {
      return this.fetchParams({}, lr.differentParams.entities, !0);
    }
  },
  {
    params: {
      "/data": ["system", "pluginVersion", "requestNumber", "username"],
      "/init": kl,
      "/start": kl,
      "/joinTime": ["joinDuration", "playhead", "bitrate", "triggeredEvents"],
      "/pause": ["playhead", "triggeredEvents"],
      "/resume": ["pauseDuration", "playhead", "triggeredEvents"],
      "/seek": ["seekDuration", "playhead", "triggeredEvents"],
      "/bufferUnderrun": ["bufferDuration", "playhead", "triggeredEvents"],
      "/error": ["player", "playhead", "triggeredEvents"].concat(kl),
      "/stop": ["bitrate", "totalBytes", "playhead", "pauseDuration", "metrics", "cdnDownloadedTraffic", "multiCdnInfo", "p2pDownloadedTraffic", "uploadTraffic", "triggeredEvents"],
      "/infinity/video/event": [],
      "/adInit": Cl,
      "/adStart": Cl,
      "/adJoin": ["playhead", "position", "adJoinDuration", "adPlayhead", "adNumber", "adNumberInBreak", "breakNumber"],
      "/adPause": ["playhead", "position", "adPlayhead", "adNumber", "adNumberInBreak", "breakNumber"],
      "/adResume": ["playhead", "position", "adPlayhead", "adPauseDuration", "adNumber", "adNumberInBreak", "breakNumber"],
      "/adBufferUnderrun": ["playhead", "position", "adPlayhead", "adBufferDuration", "adNumber", "adNumberInBreak", "breakNumber"],
      "/adStop": ["playhead", "position", "adPlayhead", "adBitrate", "adTotalDuration", "pauseDuration", "adViewedDuration", "adViewability", "adNumber", "adNumberInBreak", "breakNumber"],
      "/adClick": ["playhead", "position", "adPlayhead", "adNumber", "adNumberInBreak", "breakNumber"],
      "/adError": ["playhead"].concat(Cl),
      "/adManifest": ["givenBreaks", "expectedBreaks", "expectedPattern", "breaksTime"],
      "/adBreakStart": ["position", "givenAds", "expectedAds", "breakNumber", "adInsertionType"],
      "/adBreakStop": ["position", "breakNumber"],
      "/adQuartile": ["position", "adViewedDuration", "adViewability", "adNumber", "adNumberInBreak", "breakNumber"],
      "/ping": ["droppedFrames", "playrate", "cdnDownloadedTraffic", "multiCdnInfo", "p2pDownloadedTraffic", "uploadTraffic", "latency", "packetLoss", "packetSent", "metrics", "totalBytes", "segmentDuration"],
      "/infinity/session/start": [
        "accountCode",
        "username",
        "userType",
        "anonymousUser",
        "route",
        "page",
        "referer",
        "referral",
        "screenResolution",
        "language",
        "deviceInfo",
        "adsBlocked",
        "deviceUUID",
        "libVersion",
        "appName",
        "appReleaseVersion",
        "isp",
        "connectionType",
        "ip",
        "obfuscateIp",
        "privacyProtocol",
        "dimensions",
        "param1",
        "param2",
        "param3",
        "param4",
        "param5",
        "param6",
        "param7",
        "param8",
        "param9",
        "param10",
        "param11",
        "param12",
        "param13",
        "param14",
        "param15",
        "param16",
        "param17",
        "param18",
        "param19",
        "param20",
        "edid"
      ],
      "/infinity/session/stop": ["sessionMetrics"],
      "/infinity/session/nav": ["route", "page", "scrollDepth"],
      "/infinity/session/beat": ["sessionMetrics"],
      "/infinity/session/event": ["accountCode"],
      "/offlineEvents": {}
    },
    bodyParams: {
      "/offlineEvents": ["viewJson"]
    },
    differentParams: {
      entities: [
        "rendition",
        "title",
        "title2",
        "param1",
        "param2",
        "param3",
        "param4",
        "param5",
        "param6",
        "param7",
        "param8",
        "param9",
        "param10",
        "param11",
        "param12",
        "param13",
        "param14",
        "param15",
        "param16",
        "param17",
        "param18",
        "param19",
        "param20",
        "cdn",
        "nodeHost",
        "nodeType",
        "nodeTypeString",
        "subtitles",
        "contentLanguage"
      ]
    },
    getters: {
      requestNumber: "getRequestNumber",
      playhead: "getPlayhead",
      playrate: "getPlayrate",
      fps: "getFramesPerSecond",
      segmentDuration: "getSegmentDuration",
      droppedFrames: "getDroppedFrames",
      mediaDuration: "getDuration",
      bitrate: "getBitrate",
      totalBytes: "getTotalBytes",
      throughput: "getThroughput",
      rendition: "getRendition",
      title: "getTitle",
      title2: "getTitle2",
      live: "getIsLive",
      mediaResource: "getResource",
      parsedResource: "getParsedResource",
      transactionCode: "getTransactionCode",
      properties: "getMetadata",
      playerVersion: "getPlayerVersion",
      player: "getPlayerName",
      cdn: "getCdn",
      pluginVersion: "getPluginVersion",
      libVersion: "getLibVersion",
      userType: "getUserType",
      streamingProtocol: "getStreamingProtocol",
      transportFormat: "getTransportFormat",
      obfuscateIp: "getObfuscateIp",
      privacyProtocol: "getPrivacyProtocol",
      householdId: "getHouseholdId",
      latency: "getLatency",
      packetLoss: "getPacketLoss",
      packetSent: "getPacketSent",
      metrics: "getVideoMetrics",
      dimensions: "getCustomDimensions",
      param1: "getExtraparam1",
      param2: "getExtraparam2",
      param3: "getExtraparam3",
      param4: "getExtraparam4",
      param5: "getExtraparam5",
      param6: "getExtraparam6",
      param7: "getExtraparam7",
      param8: "getExtraparam8",
      param9: "getExtraparam9",
      param10: "getExtraparam10",
      param11: "getExtraparam11",
      param12: "getExtraparam12",
      param13: "getExtraparam13",
      param14: "getExtraparam14",
      param15: "getExtraparam15",
      param16: "getExtraparam16",
      param17: "getExtraparam17",
      param18: "getExtraparam18",
      param19: "getExtraparam19",
      param20: "getExtraparam20",
      extraparam1: "getAdExtraparam1",
      extraparam2: "getAdExtraparam2",
      extraparam3: "getAdExtraparam3",
      extraparam4: "getAdExtraparam4",
      extraparam5: "getAdExtraparam5",
      extraparam6: "getAdExtraparam6",
      extraparam7: "getAdExtraparam7",
      extraparam8: "getAdExtraparam8",
      extraparam9: "getAdExtraparam9",
      extraparam10: "getAdExtraparam10",
      position: "getAdPosition",
      adNumber: "getAdNumber",
      adNumberInBreak: "getAdNumberInBreak",
      breakNumber: "getBreakNumber",
      adPlayhead: "getAdPlayhead",
      adDuration: "getAdDuration",
      adCampaign: "getAdCampaign",
      adCreativeId: "getAdCreativeId",
      adBitrate: "getAdBitrate",
      adTitle: "getAdTitle",
      adResource: "getAdResource",
      adPlayerVersion: "getAdPlayerVersion",
      adProperties: "getAdMetadata",
      adAdapterVersion: "getAdAdapterVersion",
      givenBreaks: "getGivenBreaks",
      expectedBreaks: "getExpectedBreaks",
      expectedPattern: "getExpectedPattern",
      breaksTime: "getBreaksTime",
      givenAds: "getGivenAds",
      expectedAds: "getExpectedAds",
      adsExpected: "getAdsExpected",
      adViewedDuration: "getAdViewedDuration",
      adViewability: "getAdViewability",
      fullscreen: "getIsFullscreen",
      audio: "getAudioEnabled",
      skippable: "getIsSkippable",
      adProvider: "getAdProvider",
      adInsertionType: "getAdInsertionType",
      pluginInfo: "getPluginInfo",
      isp: "getIsp",
      connectionType: "getConnectionType",
      ip: "getIp",
      deviceInfo: "getDeviceInfo",
      edid: "getEDID",
      system: "getAccountCode",
      accountCode: "getAccountCode",
      username: "getUsername",
      anonymousUser: "getAnonymousUser",
      joinDuration: "getJoinDuration",
      bufferDuration: "getBufferDuration",
      seekDuration: "getSeekDuration",
      pauseDuration: "getPauseDuration",
      adJoinDuration: "getAdJoinDuration",
      adBufferDuration: "getAdBufferDuration",
      adPauseDuration: "getAdPauseDuration",
      adTotalDuration: "getAdTotalDuration",
      referer: "getReferer",
      referral: "getReferral",
      language: "getLanguage",
      screenResolution: "getScreenResolution",
      nodeHost: "getNodeHost",
      nodeType: "getNodeType",
      nodeTypeString: "getNodeTypeString",
      route: "getReferer",
      page: "getPageName",
      playerStartupTime: "getPlayerStartupTime",
      pageLoadTime: "getPageLoadTime",
      cdnDownloadedTraffic: "getCdnTraffic",
      multiCdnInfo: "getMultiCdnInfo",
      p2pDownloadedTraffic: "getP2PTraffic",
      p2pEnabled: "getIsP2PEnabled",
      uploadTraffic: "getUploadTraffic",
      cdnBalancerResponseUUID: "getBalancerResponseId",
      viewJson: "getOfflineView",
      deviceUUID: "getDeviceUUID",
      sessionMetrics: "getSessionMetrics",
      scrollDepth: "getScrollDepth",
      adsBlocked: "getIsBlocked",
      linkedViewId: "getLinkedViewId",
      smartswitchConfigCode: "getSmartswitchConfigCode",
      smartswitchGroupCode: "getSmartswitchGroupCode",
      smartswitchContractCode: "getSmartswitchContractCode",
      appName: "getAppName",
      appReleaseVersion: "getAppReleaseVersion",
      package: "getPackage",
      saga: "getSaga",
      tvshow: "getTvShow",
      season: "getSeason",
      titleEpisode: "getEpisodeTitle",
      channel: "getChannel",
      drm: "getDRM",
      videoCodec: "getVideoCodec",
      audioCodec: "getAudioCodec",
      codecSettings: "getCodecSettings",
      codecProfile: "getCodecProfile",
      containerFormat: "getContainerFormat",
      contentId: "getID",
      imdbID: "getImdbId",
      gracenoteID: "getGracenoteID",
      contentType: "getType",
      genre: "getGenre",
      contentLanguage: "getVideoLanguage",
      subtitles: "getSubtitles",
      contractedResolution: "getContractedResolution",
      cost: "getCost",
      price: "getPrice",
      playbackType: "getPlaybackType",
      email: "getEmail"
    }
  }
), Ly = lr, BC = Vn, UC = BC.extend(
  {
    isBlocking: function(e) {
      return !e.params.sessionId;
    }
  }
), FC = UC, jC = Pn, Af = ih, If = FC, qC = mi, Kr = jC.extend(
  {
    constructor: function(e) {
      this._plugin = e, this.infinityStopped = !1, this.infinityStarted = !1;
    },
    andBeyond: function() {
      Kr.prototype.begin.apply(this, arguments);
    },
    begin: function(e, i) {
      i = i || !1, i && (this._plugin.storage.removeStorages("infinityStarted"), this._plugin.storage.removeStorages("data"), this._plugin.restartViewTransform()), this._comm = new Af(this._plugin), this._comm.addTransform(this._plugin.viewTransform), this._comm.addTransform(new If(this._plugin)), this._plugin && this._plugin.storage && typeof this._plugin.storage.getLocal == "function" && (this._registeredProperties = this._plugin.storage.getLocal("inifnityRegisteredProperties")), this.fireSessionStart(e);
    },
    _setLastActive: function() {
      this._firstActive || (this._firstActive = this.getFirstActive()), this._plugin.storage.setStorages("lastactive", (/* @__PURE__ */ new Date()).getTime());
    },
    getFirstActive: function() {
      return Number(this._plugin.getLastActive()) || 0;
    },
    getComm: function() {
      return this._comm;
    },
    fireSessionStart: function(e) {
      this.infinityStopped && (this._plugin.restartViewTransform(), this._comm = new Af(this._plugin), this._comm.addTransform(this._plugin.viewTransform), this._comm.addTransform(new If(this._plugin)), this.infinityStopped = !1), this.infinityStarted || (this._plugin.storage.setLocal("infinityStarted", "true"), this.infinityStarted = !0, this.emit(Kr.Event.SESSION_START, this._getParamsJson(e, null, null, !0, !0)), this._setLastActive());
    },
    fireSessionStop: function(e) {
      this.infinityStarted && (this.infinityStopped = !0, this.infinityStarted = !1, this._plugin.storage.removeStorages("infinityStarted"), this.emit(Kr.Event.SESSION_STOP, e), this._plugin.storage.removeStorages("data"), this._plugin.storage.removeStorages("session"), this._plugin.storage.removeStorages("lastactive"));
    },
    newSession: function(e, i) {
      this.isActive() && (this.infinityStarted ? this.fireSessionStop() : (this._plugin.storage.removeStorages("infinityStarted"), this._plugin.storage.removeStorages("data"), this._comm && this._comm.removeTransform(this._plugin.viewTransform), this._plugin.restartViewTransform(), this._comm && this._comm.addTransform(this._plugin.viewTransform))), this._plugin.setOptions(e), this.begin(i);
    },
    fireNav: function(e) {
      this.isActive() && (this.infinityStarted = !0, this.emit(Kr.Event.NAV, this._getParamsJson(e, null, null, !0)));
    },
    _sendExtraBeat: function() {
      if (this._plugin && this._plugin._beat) {
        var e = (/* @__PURE__ */ new Date()).getTime(), i = this._plugin._beat.chrono.startTime ? e - this._plugin._beat.chrono.startTime : 0;
        this._plugin._sendBeat(i), this._plugin._beat.chrono.startTime = e;
      }
      this._setLastActive();
    },
    fireEvent: function(e, i, n, t) {
      if (this.infinityStarted) {
        var r = this._getParamsJson(i, n, e);
        qC.assign(r.params, t || {}), this.emit(Kr.Event.EVENT, r), this._setLastActive();
      }
    },
    register: function(e, i) {
      this._registeredProperties = { dimensions: e, values: i }, this._plugin.storage.setLocal("inifnityRegisteredProperties", JSON.stringify(this._registeredProperties));
    },
    registerOnce: function(e, i) {
      this._registeredProperties || this.register(e, i);
    },
    unregister: function() {
      this._registeredProperties = null, this._plugin.storage.removeLocal("inifnityRegisteredProperties");
    },
    _getParamsJson: function(e, i, n, t, r) {
      var s = {};
      if (n && (s.name = n), s.dimensions = e || {}, s.values = i || {}, this._registeredProperties) {
        for (var a in this._registeredProperties.dimensions)
          s.dimensions[a] = this._registeredProperties.dimensions[a];
        for (var o in this._registeredProperties.values)
          s.values[o] = this._registeredProperties.values[o];
      }
      var u = { params: s };
      return t && (u.params.dimensions.page && (u.params.page = u.params.dimensions.page, delete u.params.dimensions.page), u.params.dimensions.route && (u.params.route = u.params.dimensions.route, delete u.params.dimensions.route), r || delete u.params.dimensions, delete u.params.values), u;
    },
    isActive: function() {
      var e = this._plugin.storage.getLocal("infinityStarted");
      if (this.infinityStarted || e && e !== "false")
        return !0;
      var i = (/* @__PURE__ */ new Date()).getTime();
      return Number(this._plugin.getLastActive()) + this._plugin.sessionExpire > i;
    }
  },
  {
    Event: {
      NAV: "nav",
      SESSION_START: "sessionStart",
      SESSION_STOP: "sessionStop",
      BEAT: "beat",
      EVENT: "event"
    }
  }
), rh = Kr, Oy = function(e) {
  e = e || window;
  var i = e.document, n = function(T) {
    var b = !1;
    if (T.getBoundingClientRect) {
      var I = T.getBoundingClientRect();
      b = {
        top: Math.max(I.top, 0),
        left: Math.max(I.left, 0),
        bottom: Math.min(I.bottom, e.innerHeight || i.documentElement.clientHeight),
        right: Math.min(I.right, e.innerWidth || i.documentElement.clientWidth)
      }, b.bottom <= b.top || b.right <= b.left ? b = !1 : b.area = (b.bottom - b.top) * (b.right - b.left);
    }
    return b;
  }, t = function(T, b) {
    if (b) {
      var I = n(T);
      I && l.push({
        url: b,
        area: I.area,
        rect: I
      });
    }
  }, r = function() {
    for (var T = i.getElementsByTagName("*"), b = /url\(.*(http.*)\)/ig, I = 0; I < T.length; I++) {
      var B = T[I], M = e.getComputedStyle(B);
      if (B.tagName === "IMG" && t(B, B.src), M["background-image"]) {
        b.lastIndex = 0;
        var A = b.exec(M["background-image"]);
        A && A.length > 1 && t(B, A[1].replace('"', ""));
      }
      if (B.tagName === "IFRAME")
        try {
          var x = n(B);
          if (x) {
            var P = Oy(B.contentWindow);
            P && l.push({
              tm: P,
              area: x.area,
              rect: x
            });
          }
        } catch {
        }
    }
  }, s = function() {
    for (var T = {}, b = e.performance.getEntriesByType("resource"), I = 0; I < b.length; I++)
      T[b[I].name] = b[I].responseEnd;
    for (var B = 0; B < l.length; B++)
      "tm" in l[B] || (l[B].tm = T[l[B].url] !== void 0 ? T[l[B].url] : 0);
  }, a = function() {
    "msFirstPaint" in e.performance.timing && (p = e.performance.timing.msFirstPaint - y);
    for (var T = e.performance.getEntriesByType("paint"), b = 0; b < T.length; b++)
      T[b].name === "first-paint" && (p = T[b].startTime);
    if (p === void 0 || p < 0 || p > 12e4) {
      p = e.performance.timing.responseStart - y;
      for (var I = {}, B = i.getElementsByTagName("head")[0].children, M = 0; M < B.length; M++) {
        var A = B[M];
        A.tagName === "SCRIPT" && A.src && !A.async && (I[A.src] = !0), A.tagName === "LINK" && A.rel === "stylesheet" && A.href && (I[A.href] = !0);
      }
      for (var x = e.performance.getEntriesByType("resource"), P = !1, j = 0; j < x.length; j++)
        if (!P && I[x[j].name] && (x[j].initiatorType === "script" || x[j].initiatorType === "link")) {
          var H = x[j].responseEnd;
          (p === void 0 || H > p) && (p = H);
        } else
          P = !0;
    }
    p = Math.max(p, 0);
  }, o = function() {
    for (var T = { 0: 0 }, b = 0, I = 0; I < l.length; I++) {
      var B = p;
      "tm" in l[I] && l[I].tm > p && (B = l[I].tm), T[B] === void 0 && (T[B] = 0), T[B] += l[I].area, b += l[I].area;
    }
    var M = Math.max(i.documentElement.clientWidth, e.innerWidth || 0) * Math.max(i.documentElement.clientHeight, e.innerHeight || 0);
    if (M > 0 && (M = Math.max(M - b, 0) * m, T[p] === void 0 && (T[p] = 0), T[p] += M, b += M), b) {
      for (var A in T)
        T.hasOwnProperty(A) && d.push({ tm: A, area: T[A] });
      d.sort(function(j, H) {
        return j.tm - H.tm;
      });
      for (var x = 0, P = 0; P < d.length; P++)
        x += d[P].area, d[P].progress = x / b;
    }
  }, u = function() {
    if (d.length) {
      h = 0;
      for (var T = 0, b = 0, I = 0; I < d.length; I++) {
        var B = d[I].tm - T;
        B > 0 && b < 1 && (h += (1 - b) * B), T = d[I].tm, b = d[I].progress;
      }
    } else
      h = p;
  }, l = [], d = [], p, h, m = 0.1;
  try {
    var y = e.performance.timing.navigationStart;
    r(), s(), a(), o(), u();
  } catch {
  }
  return h;
}, VC = Oy, HC = xt, WC = VC, GC = HC.extend({
  constructor: function(e) {
    if (this.infinity = e.infinity, this.timeObject = null, this.playerSetup = null, this.perfObject = null, this.myTimesObject = {}, typeof window < "u" && typeof window.addEventListener == "function" && (window.addEventListener("load", this._windowLoaded.bind(this)), window.performance && window.performance.timing)) {
      try {
        typeof window.performance.getEntriesByType == "function" && (this.perfObject = window.performance);
      } catch {
      }
      this.timeObject = window.performance.timing;
    }
    try {
      if (typeof PerformanceObserver == "function") {
        var i = new PerformanceObserver(function(n, t) {
          var r = n.getEntries();
          this.myTimesObject.largestContentfulPaint = r[r.length - 1].renderTime;
        }.bind(this));
        PerformanceObserver.supportedEntryTypes.indexOf("largest-contentful-paint") > -1 && i.observe({ entryTypes: ["largest-contentful-paint"] });
      }
    } catch {
    }
  },
  _windowLoaded: function() {
    this.myTimesObject.onLoad = (/* @__PURE__ */ new Date()).getTime(), this._getEnoughFPS(), setTimeout(this._fireLoadTimesEvent.bind(this), 1e3);
  },
  _fireLoadTimesEvent: function() {
    this._getLastMetrics(), this.infinity.fireEvent("loadTimes", {}, this._getAllValues());
  },
  _getAllValues: function() {
    var e = {
      PageLoadTime: this.getPageLoadTime(),
      DNSTime: this.getDnsTime(),
      TCPTime: this.getTcpTime(),
      HandshakeTime: this.getHandshakeTime(),
      DomReadyTime: this.getDomReadyTime(),
      BackendTime: this.getBackendTime(),
      FrontendTime: this.getFrontendTime(),
      VisualReady: this.getTimeToVisuallyReady(),
      TimeToInteractive: this.getTimeToInteractive(),
      JsTime: this.getJSTime(),
      CssTime: this.getCSSTime(),
      ImageTime: this.getImageTime(),
      FontTime: this.getFontTime(),
      AvgReqLatency: this.getAvgReqLatency(),
      MaxReqLatency: this.getMaxReqLatency(),
      FirstPaint: this.getFirstPaint(),
      FirstContentfulPaint: this.getFirstContentfulPaint(),
      LargestContentfulPaint: this.getLargestContentfulPaint(),
      SpeedIndex: this.getSpeedIndex()
    };
    for (var i in e)
      e[i] === null || e[i] === void 0 || e[i] < 0 ? delete e[i] : e[i] = Math.round(e[i]);
    return e;
  },
  getPageLoadTime: function() {
    var e = null;
    return this.timeObject && (e = this.timeObject.loadEventEnd - this.timeObject.navigationStart), e;
  },
  getPlayerStartupTime: function() {
    var e = null;
    return this.timeObject && this.playerSetup && (e = this.playerSetup - this.timeObject.navigationStart), e;
  },
  getDnsTime: function() {
    var e = null;
    return this.timeObject && (e = this.timeObject.domainLookupEnd - this.timeObject.domainLookupStart), e;
  },
  getTcpTime: function() {
    var e = null;
    return this.timeObject && (e = this.timeObject.connectEnd - this.timeObject.connectStart), e;
  },
  getHandshakeTime: function() {
    var e = null;
    return this.timeObject && this.timeObject.secureConnectionStart && (e = this.timeObject.connectEnd - this.timeObject.secureConnectionStart), e;
  },
  getDomReadyTime: function() {
    var e = null;
    return this.timeObject && (e = this.timeObject.domComplete - this.timeObject.navigationStart), e;
  },
  getBackendTime: function() {
    var e = null;
    return this.timeObject && (e = this.timeObject.responseStart - this.timeObject.navigationStart), e;
  },
  getFrontendTime: function() {
    var e = null;
    return this.timeObject && (e = this.myTimesObject.onLoad - this.timeObject.responseStart), e;
  },
  getTimeToVisuallyReady: function() {
    var e = this.myTimesObject.firstPaint || 0;
    return this.timeObject ? Math.max(
      e,
      this.timeObject.domContentLoadedEventEnd - this.timeObject.navigationStart || 0
    ) : e || null;
  },
  getTimeToInteractive: function() {
    if (this.myTimesObject.fps && this.getTimeToVisuallyReady())
      return Math.max(this.myTimesObject.fps, this.getTimeToVisuallyReady());
    setTimeout(function() {
      this.getTimeToInteractive();
    }.bind(this), 500);
  },
  getJSTime: function() {
    return this._getXTime("script");
  },
  getCSSTime: function() {
    return this._getXTime("css");
  },
  getImageTime: function() {
    return this._getXTime("img");
  },
  getFontTime: function() {
    return this._getXTime("css", [".woff", ".otf", ".ttf"]);
  },
  getAvgReqLatency: function() {
    try {
      if (this.perfObject && typeof this.perfObject.getEntriesByType == "function") {
        var e = 0, i = 0, n = this.perfObject.getEntriesByType("resource");
        for (var t in n)
          n[t].requestStart && n[t].responseStart && (i += n[t].responseStart - n[t].requestStart), e++;
        return i / e;
      }
    } catch {
    }
    return null;
  },
  getFirstPaint: function() {
    return this.myTimesObject ? this.myTimesObject.firstPaint : null;
  },
  getFirstContentfulPaint: function() {
    return this.myTimesObject ? this.myTimesObject.firstContentfulPaint : null;
  },
  getLargestContentfulPaint: function() {
    return this.myTimesObject ? this.myTimesObject.largestContentfulPaint : null;
  },
  getMaxReqLatency: function() {
    try {
      if (this.perfObject && typeof this.perfObject.getEntriesByType == "function") {
        var e = this.perfObject.getEntriesByType("resource"), i = 0;
        for (var n in e)
          e[n].requestStart && e[n].responseStart && (i = Math.max(i, e[n].responseStart - e[n].requestStart));
        return i;
      }
    } catch {
    }
    return null;
  },
  getSpeedIndex: function() {
    var e = null;
    if (typeof window < "u" && window.performance && typeof window.performance.getEntriesByType == "function")
      try {
        e = WC();
      } catch {
      }
    return e;
  },
  _getXTime: function(e, i) {
    var n = 0;
    try {
      if (this.perfObject && typeof this.perfObject.getEntriesByType == "function") {
        var t = this.perfObject.getEntriesByType("resource");
        for (var r in t)
          if (t[r].initiatorType === e)
            if (!i)
              n += t[r].duration;
            else {
              var s = !1;
              for (var a in i)
                t[r].name.indexOf(i[a] > 0) && (s = !0);
              s && (n += t[r].duration);
            }
      }
    } catch {
    }
    return Math.round(n) || null;
  },
  _getLastMetrics: function() {
    var e = null, i = null;
    try {
      if (this.perfObject && typeof this.perfObject.getEntriesByType == "function") {
        var n = this.perfObject.getEntriesByType("paint");
        for (var t in n)
          n[t].name === "first-paint" ? e = n[t].startTime : n[t].name === "first-contentful-paint" && (i = n[t].startTime);
      }
    } catch {
    }
    !e && this.timeObject && (e = this.timeObject.msFirstPaint - this.timeObject.navigationStart), this.myTimesObject.firstPaint = e, this.myTimesObject.firstContentfulPaint = i, this.getTimeToInteractive();
  },
  _getEnoughFPS: function() {
    if (this.timeObject && typeof window < "u") {
      var e = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function() {
      };
      this.preFPS = (/* @__PURE__ */ new Date()).getTime(), e(function() {
        var i = (/* @__PURE__ */ new Date()).getTime();
        i < this.preFPS + 50 ? this.myTimesObject.fps = i - this.timeObject.navigationStart : setTimeout(function() {
          return this._getEnoughFPS();
        }.bind(this), 50);
      }.bind(this));
    } else
      return !0;
  },
  setPlayerSetupTime: function() {
    this.playerSetup = this.playerSetup || (/* @__PURE__ */ new Date()).getTime();
  }
}), KC = GC, zC = xt, XC = zC.extend({
  constructor: function(e) {
    this.plugin = e, this.isInBackground = !1, this.listenerReference = this._visibilityListener.bind(this), this._reset();
  },
  startDetection: function() {
    !this.isBackgroundDetectorStarted && typeof document < "u" && (this.isBackgroundDetectorStarted = !0, document.addEventListener("visibilitychange", this.listenerReference));
  },
  stopDetection: function() {
    this.isBackgroundDetectorStarted && typeof document < "u" && (document.removeEventListener("visibilitychange", this.listenerReference), this._reset());
  },
  _reset: function() {
    this.isBackgroundDetectorStarted = !1;
  },
  _visibilityListener: function(e) {
    if (typeof document < "u") {
      var i = this._getSettings();
      document.visibilityState === "hidden" ? this._toBackground(i) : document.visibilityState === "visible" && this._toForeground(i);
    }
  },
  _toBackground: function(e) {
    if (this.isInBackground = !0, this.plugin && this.plugin._adsAdapter && this.plugin._adsAdapter.stopChronoView(), typeof e == "string") {
      switch (e) {
        case "stop":
          this._fireStop();
          break;
        case "pause":
          this._firePause();
          break;
      }
      if (this.plugin.infinity.infinityStarted) {
        this.lastBeatTime = (/* @__PURE__ */ new Date()).getTime();
        var i = this.plugin._beat.chrono.startTime ? this.lastBeatTime - this.plugin._beat.chrono.startTime : 0;
        this.plugin._sendBeat(i), this.plugin._beat.stop();
      }
    }
  },
  _toForeground: function(e) {
    if (this.isInBackground = !1, this.plugin && this.plugin._adsAdapter && this.plugin._adsAdapter.startChronoView(), typeof e == "string" && e && this.plugin.infinity.infinityStarted) {
      var i = (/* @__PURE__ */ new Date()).getTime();
      i - this.lastBeatTime < this.plugin.sessionExpire ? (this.plugin._sendBeat(i - this.lastBeatTime), this.plugin._beat.start()) : this.plugin.infinity.newSession();
    }
  },
  _getSettings: function() {
    if (typeof this.plugin.options["background.settings"] == "string" && this.plugin.options["background.settings"])
      return this.plugin.options["background.settings"];
    if (this.plugin.deviceDetector.isSmartTV())
      return this.plugin.options["background.settings.tv"];
    if (this.plugin.deviceDetector.isDesktop())
      return this.plugin.options["background.settings.desktop"];
    if (this.plugin.deviceDetector.isAndroid())
      return this.plugin.options["background.settings.android"];
    if (this.plugin.deviceDetector.isIphone())
      return this.plugin.options["background.settings.iOS"];
    if (this.plugin.deviceDetector.isPlayStation())
      return this.plugin.options["background.settings.playstation"];
  },
  _firePause: function() {
    this._fireX("firePause");
  },
  _fireStop: function() {
    this._fireX("fireStop"), this.plugin.fireStop();
  },
  _fireX: function(e) {
    this.adsAdapter = this.plugin.getAdsAdapter(), this.adsAdapter && this.adsAdapter[e](), this.contentAdapter = this.plugin.getAdapter(), this.contentAdapter && this.contentAdapter[e]();
  },
  canBlockStartCalls: function() {
    return this.isInBackground && this.plugin.options["background.enabled"] === !0 && this._getSettings();
  }
}), Ny = XC, QC = xt, JC = QC.extend({
  constructor: function() {
    typeof navigator < "u" && navigator.userAgent && (this._isSmartTVDevice = navigator.userAgent.toLowerCase().match(/smarttv/) || navigator.userAgent.toLowerCase().match(/smart-tv/) || navigator.userAgent.toLowerCase().match(/appletv/) || navigator.userAgent.toLowerCase().match(/apple tv/), this._isPlaystationDevice = navigator.userAgent.match(/PlayStation/) !== null, this._isIphoneDevice = navigator.userAgent.match(/iPhone|iPad|iPod/i) !== null, this._isAndroidDevice = navigator.userAgent.match(/Android/) !== null, this._isSmartphoneDevice = !this._isSmartTVDevice && !this._isPlaystationDevice && (this._isIphoneDevice || this._isAndroidDevice), this._isDesktopDevice = !this._isSmartphoneDevice && !this._isSmartTVDevice && !this._isPlaystationDevice);
  },
  isIphone: function() {
    return this._isIphoneDevice;
  },
  isAndroid: function() {
    return this._isAndroidDevice;
  },
  isSmartphone: function() {
    return this._isSmartphoneDevice;
  },
  isDesktop: function() {
    return this._isDesktopDevice;
  },
  isSmartTV: function() {
    return this._isSmartTVDevice;
  },
  isPlayStation: function() {
    return this._isPlaystationDevice;
  }
}), Ry = JC, YC = xt, $C = YC.extend({
  constructor: function(e) {
    this.pluginref = e, this.listenerReference = this._changeListener.bind(this), this.loadReference = this._loadListener.bind(this), this.isEnabled = !1, this.pageHeight = 0, this.maxHeight = 0, this.startDetection();
  },
  startDetection: function() {
    !this.isEnabled && typeof window < "u" && typeof window.addEventListener == "function" && (window.addEventListener("scroll", this.listenerReference), window.addEventListener("resize", this.listenerReference), window.addEventListener("load", this.loadReference), this.isEnabled = !0);
  },
  stopDetection: function() {
    this.isEnabled && typeof window < "u" && typeof window.removeEventListener == "function" && (window.removeEventListener("scroll", this.listenerReference), window.removeEventListener("resize", this.listenerReference), window.removeEventListener("load", this.loadReference), this.isEnabled = !1);
  },
  getScrollDepth: function() {
    var e = null;
    return this.maxHeight && this.pageHeight && (e = Math.min(Math.trunc(this.maxHeight / this.pageHeight * 100), 100)), e;
  },
  _loadListener: function() {
    if (typeof document < "u") {
      var e = document.documentElement;
      e && (this.pageHeight = Math.round(e.scrollHeight, e.clientHeight, e.offsetHeight), this.maxHeight = window.innerHeight, this._updateCompletionRate());
    }
  },
  _changeListener: function() {
    if (this.pageHeight) {
      var e = this.maxHeight;
      this.maxHeight = Math.max(this.maxHeight, window.pageYOffset + window.innerHeight), e !== this.maxHeight && this._updateCompletionRate();
    }
    var i = this.pluginref.getAdsAdapter();
    i && i.flags.isStarted && (i.getIsVisible() ? i.startChronoView() : i.stopChronoView());
  },
  _updateCompletionRate: function() {
    setTimeout(function() {
      this.pluginref.storage.setSession("pageScrollDepth", this.getScrollDepth());
    }.bind(this), 3e3);
  }
}), ZC = $C, eA = xt, tA = eA.extend({
  constructor: function(e) {
    this.plugin = e;
  },
  getAllData: function() {
    var e = this.getNonRandomData();
    return e.timestamp = this.getTimestamp(), e;
  },
  getNonRandomData: function() {
    var e = {};
    return e.userAgent = this.getUserAgent(), e.threads = this.getVirtualCores(), e.language = this.getLanguage(), e.langList = this.getAvailableLanguages(), e.resolution = this.getResolution(), e.colorDepth = this.getColorDepth(), e.deviceMemory = this.getMemory(), e.touchscreen = this.getTouchscreen(), e.localStorage = this.getLocalStorage(), e.sessionStorage = this.getSessionStorage(), e.cookiesAvailable = this.getCookiesAvailable(), e.flashAvailable = this.getHasFlash(), e.timeZone = this.getTimeZone(), e.plugins = this.getPluginList(), e;
  },
  getUserAgent: function() {
    return this._getNavigatorValue("userAgent");
  },
  getVirtualCores: function() {
    return this._getNavigatorValue("hardwareConcurrency");
  },
  getLanguage: function() {
    return this._getNavigatorValue("language");
  },
  getAvailableLanguages: function() {
    return this._getNavigatorValue("languages");
  },
  getResolution: function() {
    var e = null;
    try {
      this._getNavigatorValue("screen") && (e = navigator.screen.width.toString() + navigator.screen.height.toString());
    } catch {
    }
    return e;
  },
  getColorDepth: function() {
    var e = null;
    try {
      this._getNavigatorValue("screen") && (e = navigator.screen.colorDepth);
    } catch {
    }
    return e;
  },
  getMemory: function() {
    return this._getNavigatorValue("deviceMemory");
  },
  getTouchscreen: function() {
    return this._getNavigatorValue("maxTouchPoints") || !1;
  },
  getLocalStorage: function() {
    var e = !1;
    try {
      e = typeof localStorage < "u";
    } catch {
    }
    return e;
  },
  getSessionStorage: function() {
    var e = !1;
    try {
      e = typeof sessionStorage < "u";
    } catch {
    }
    return e;
  },
  getCookiesAvailable: function() {
    return this._getNavigatorValue("cookieEnabled") || !1;
  },
  getHasFlash: function() {
    var e = !1;
    try {
      var i = this._getNavigatorValue("plugins");
      e = i && typeof i["Shockwave Flash"] == "object" || typeof window < "u" && window.ActiveXObject && new ActiveXObject("ShockwaveFlash.ShockwaveFlash") !== !1;
    } catch {
    }
    return e;
  },
  getPluginList: function() {
    var e = null;
    try {
      var i = this._getNavigatorValue("plugins");
      if (i && i.length !== 0) {
        for (var n = "", t = 0; t < navigator.plugins.length; t++)
          n += navigator.plugins[t].description + " " + navigator.plugins[t].filename + " " + navigator.plugins[t].name + " ";
        e = n;
      }
    } catch {
    }
    return e;
  },
  getTimeZone: function() {
    var e = null;
    try {
      var i = /* @__PURE__ */ new Date();
      e = i.getTimezoneOffset().toString();
    } catch {
    }
    return e;
  },
  getTimestamp: function() {
    return (/* @__PURE__ */ new Date()).getTime();
  },
  _navigatorCheck: function() {
    return typeof navigator < "u";
  },
  _getNavigatorValue: function(e) {
    var i = null;
    try {
      this._navigatorCheck() && (i = navigator[e]);
    } catch {
    }
    return i;
  }
}), iA = tA, nA = function(e) {
  function i(re, J) {
    return re << J | re >>> 32 - J;
  }
  function n(re, J) {
    var _e, Ie, He, Qe, Ue;
    return He = re & 2147483648, Qe = J & 2147483648, _e = re & 1073741824, Ie = J & 1073741824, Ue = (re & 1073741823) + (J & 1073741823), _e & Ie ? Ue ^ 2147483648 ^ He ^ Qe : _e | Ie ? Ue & 1073741824 ? Ue ^ 3221225472 ^ He ^ Qe : Ue ^ 1073741824 ^ He ^ Qe : Ue ^ He ^ Qe;
  }
  function t(re, J, _e) {
    return re & J | ~re & _e;
  }
  function r(re, J, _e) {
    return re & _e | J & ~_e;
  }
  function s(re, J, _e) {
    return re ^ J ^ _e;
  }
  function a(re, J, _e) {
    return J ^ (re | ~_e);
  }
  function o(re, J, _e, Ie, He, Qe, Ue) {
    return re = n(re, n(n(t(J, _e, Ie), He), Ue)), n(i(re, Qe), J);
  }
  function u(re, J, _e, Ie, He, Qe, Ue) {
    return re = n(re, n(n(r(J, _e, Ie), He), Ue)), n(i(re, Qe), J);
  }
  function l(re, J, _e, Ie, He, Qe, Ue) {
    return re = n(re, n(n(s(J, _e, Ie), He), Ue)), n(i(re, Qe), J);
  }
  function d(re, J, _e, Ie, He, Qe, Ue) {
    return re = n(re, n(n(a(J, _e, Ie), He), Ue)), n(i(re, Qe), J);
  }
  function p(re) {
    for (var J, _e = re.length, Ie = _e + 8, He = (Ie - Ie % 64) / 64, Qe = (He + 1) * 16, Ue = Array(Qe - 1), bt = 0, it = 0; it < _e; )
      J = (it - it % 4) / 4, bt = it % 4 * 8, Ue[J] = Ue[J] | re.charCodeAt(it) << bt, it++;
    return J = (it - it % 4) / 4, bt = it % 4 * 8, Ue[J] = Ue[J] | 128 << bt, Ue[Qe - 2] = _e << 3, Ue[Qe - 1] = _e >>> 29, Ue;
  }
  function h(re) {
    var J = "", _e = "", Ie, He;
    for (He = 0; He <= 3; He++)
      Ie = re >>> He * 8 & 255, _e = "0" + Ie.toString(16), J = J + _e.substr(_e.length - 2, 2);
    return J;
  }
  function m(re) {
    re = re.replace(/rn/g, "n");
    for (var J = "", _e = 0; _e < re.length; _e++) {
      var Ie = re.charCodeAt(_e);
      Ie < 128 ? J += String.fromCharCode(Ie) : Ie > 127 && Ie < 2048 ? (J += String.fromCharCode(Ie >> 6 | 192), J += String.fromCharCode(Ie & 63 | 128)) : (J += String.fromCharCode(Ie >> 12 | 224), J += String.fromCharCode(Ie >> 6 & 63 | 128), J += String.fromCharCode(Ie & 63 | 128));
    }
    return J;
  }
  var y = Array(), T, b, I, B, M, A, x, P, j, H = 7, D = 12, O = 17, W = 22, X = 5, ie = 9, K = 14, Z = 20, te = 4, ue = 11, be = 16, he = 23, at = 6, pe = 10, le = 15, fe = 21;
  for (e = m(e), y = p(e), A = 1732584193, x = 4023233417, P = 2562383102, j = 271733878, T = 0; T < y.length; T += 16)
    b = A, I = x, B = P, M = j, A = o(A, x, P, j, y[T + 0], H, 3614090360), j = o(j, A, x, P, y[T + 1], D, 3905402710), P = o(P, j, A, x, y[T + 2], O, 606105819), x = o(x, P, j, A, y[T + 3], W, 3250441966), A = o(A, x, P, j, y[T + 4], H, 4118548399), j = o(j, A, x, P, y[T + 5], D, 1200080426), P = o(P, j, A, x, y[T + 6], O, 2821735955), x = o(x, P, j, A, y[T + 7], W, 4249261313), A = o(A, x, P, j, y[T + 8], H, 1770035416), j = o(j, A, x, P, y[T + 9], D, 2336552879), P = o(P, j, A, x, y[T + 10], O, 4294925233), x = o(x, P, j, A, y[T + 11], W, 2304563134), A = o(A, x, P, j, y[T + 12], H, 1804603682), j = o(j, A, x, P, y[T + 13], D, 4254626195), P = o(P, j, A, x, y[T + 14], O, 2792965006), x = o(x, P, j, A, y[T + 15], W, 1236535329), A = u(A, x, P, j, y[T + 1], X, 4129170786), j = u(j, A, x, P, y[T + 6], ie, 3225465664), P = u(P, j, A, x, y[T + 11], K, 643717713), x = u(x, P, j, A, y[T + 0], Z, 3921069994), A = u(A, x, P, j, y[T + 5], X, 3593408605), j = u(j, A, x, P, y[T + 10], ie, 38016083), P = u(P, j, A, x, y[T + 15], K, 3634488961), x = u(x, P, j, A, y[T + 4], Z, 3889429448), A = u(A, x, P, j, y[T + 9], X, 568446438), j = u(j, A, x, P, y[T + 14], ie, 3275163606), P = u(P, j, A, x, y[T + 3], K, 4107603335), x = u(x, P, j, A, y[T + 8], Z, 1163531501), A = u(A, x, P, j, y[T + 13], X, 2850285829), j = u(j, A, x, P, y[T + 2], ie, 4243563512), P = u(P, j, A, x, y[T + 7], K, 1735328473), x = u(x, P, j, A, y[T + 12], Z, 2368359562), A = l(A, x, P, j, y[T + 5], te, 4294588738), j = l(j, A, x, P, y[T + 8], ue, 2272392833), P = l(P, j, A, x, y[T + 11], be, 1839030562), x = l(x, P, j, A, y[T + 14], he, 4259657740), A = l(A, x, P, j, y[T + 1], te, 2763975236), j = l(j, A, x, P, y[T + 4], ue, 1272893353), P = l(P, j, A, x, y[T + 7], be, 4139469664), x = l(x, P, j, A, y[T + 10], he, 3200236656), A = l(A, x, P, j, y[T + 13], te, 681279174), j = l(j, A, x, P, y[T + 0], ue, 3936430074), P = l(P, j, A, x, y[T + 3], be, 3572445317), x = l(x, P, j, A, y[T + 6], he, 76029189), A = l(A, x, P, j, y[T + 9], te, 3654602809), j = l(j, A, x, P, y[T + 12], ue, 3873151461), P = l(P, j, A, x, y[T + 15], be, 530742520), x = l(x, P, j, A, y[T + 2], he, 3299628645), A = d(A, x, P, j, y[T + 0], at, 4096336452), j = d(j, A, x, P, y[T + 7], pe, 1126891415), P = d(P, j, A, x, y[T + 14], le, 2878612391), x = d(x, P, j, A, y[T + 5], fe, 4237533241), A = d(A, x, P, j, y[T + 12], at, 1700485571), j = d(j, A, x, P, y[T + 3], pe, 2399980690), P = d(P, j, A, x, y[T + 10], le, 4293915773), x = d(x, P, j, A, y[T + 1], fe, 2240044497), A = d(A, x, P, j, y[T + 8], at, 1873313359), j = d(j, A, x, P, y[T + 15], pe, 4264355552), P = d(P, j, A, x, y[T + 6], le, 2734768916), x = d(x, P, j, A, y[T + 13], fe, 1309151649), A = d(A, x, P, j, y[T + 4], at, 4149444226), j = d(j, A, x, P, y[T + 11], pe, 3174756917), P = d(P, j, A, x, y[T + 2], le, 718787259), x = d(x, P, j, A, y[T + 9], fe, 3951481745), A = n(A, b), x = n(x, I), P = n(P, B), j = n(j, M);
  var Pe = h(A) + h(x) + h(P) + h(j);
  return Pe.toLowerCase();
}, rA = nA, sA = iA, aA = xt, oA = rA, uA = aA.extend({
  constructor: function(e) {
    this.plugin = e, this.dataExtractor = new sA(), this.key = this.getPreviousKey();
  },
  generateHashKey: function() {
    if (!this.key) {
      var e = this.dataExtractor.getAllData();
      this.key = this._hashFunction(e), this.plugin.storage.setLocal("youboraDeviceUUID", this.key);
    }
  },
  getKey: function() {
    return this.key || this.generateHashKey(), this.key;
  },
  _hashFunction: function(e) {
    var i = e;
    return typeof e != "string" && (i = JSON.stringify(e)), oA(i);
  },
  _reset: function() {
    this.key = void 0;
  },
  getPreviousKey: function() {
    return this.plugin.storage.getLocal("youboraDeviceUUID");
  }
}), My = uA, lA = xt, Hs = ks, cA = lA.extend(
  {
    constructor: function() {
      this.reset();
    },
    reset: function() {
      this.join = new Hs(), this.seek = new Hs(), this.pause = new Hs(), this.buffer = new Hs(), this.total = new Hs(), this.viewedMax = [];
    }
  }
), dA = cA, hA = xt, pA = hA.extend(
  {
    constructor: function() {
      this.reset();
    },
    reset: function() {
      this.isStarted = !1, this.isJoined = !1, this.isPaused = !1, this.isSeeking = !1, this.isBuffering = !1, this.isVideoStateBuffering = !1, this.isEnded = !1, this.isStopped = !1, this.lastQuartileSent = 0;
    }
  }
), fA = pA, mA = xt, gA = eh, vA = ks, Js = mA.extend(
  {
    constructor: function(e, i, n) {
      this._adapter = e, this._seekEnabled = i & Js.Type.SEEK, this._bufferEnabled = i & Js.Type.BUFFER, n = n || 800, this._chrono = new vA(), this._lastPlayhead = 0, n > 0 && (this._timer = new gA(this.progress.bind(this), n));
    },
    start: function() {
      this.stop(), this.canBeUsed() && this._timer.start();
    },
    stop: function() {
      this._lastPlayhead = 0, this._timer && this._timer.stop();
    },
    skipNextTick: function() {
      this._lastPlayhead = 0;
    },
    progress: function() {
      var e = this._chrono.stop();
      this._chrono.start();
      var i = e * Js.kBUFFER_THRESHOLD_RATIO, n = e * Js.kSEEK_THRESHOLD_RATIO;
      this._adapter.getPlayrate && this._adapter.getPlayrate() && this._adapter.getPlayrate() !== 1 && (i *= this._adapter.getPlayrate(), n *= this._adapter.getPlayrate());
      var t = this._getPlayhead(), r = Math.abs(this._lastPlayhead - t) * 1e3;
      r < i ? this._bufferEnabled && this._lastPlayhead > 0 && !this._adapter.flags.isPaused && !this._adapter.flags.isSeeking && this._adapter.fireBufferBegin(null, !1, "playheadMonitor") : r > n ? this._seekEnabled && this._lastPlayhead > 0 && this._adapter.fireSeekBegin(null, !1, "playheadMonitor") : (this._seekEnabled && this._adapter.fireSeekEnd(null, "playheadMonitor"), this._bufferEnabled && this._adapter.fireBufferEnd(null, "playheadMonitor")), this._lastPlayhead = t;
    },
    canBeUsed: function() {
      var e = this._adapter.plugin;
      return e && e.getPlayheadMonitorEnabled() && (this._seekEnabled || this._bufferEnabled) ? e.getIsLive() ? !e.options["content.isLive.noMonitor"] : !0 : !1;
    },
    _getPlayhead: function() {
      return this._adapter.getPlayhead();
    }
  },
  {
    Type: {
      NONE: 0,
      BUFFER: 1,
      SEEK: 2
    },
    kBUFFER_THRESHOLD_RATIO: 0.5,
    kSEEK_THRESHOLD_RATIO: 2
  }
), By = Js, yA = xt, _A = At, bA = yA.extend(
  {
    constructor: function(e, i) {
      this._adapter = e, this._videoElement = e.getVideoObject(), this._startedStateCheck = !1, this._intervalCheckId = null, this._intervalMilliseconds = i || 300;
    },
    start: function() {
      var e = this._adapter.plugin;
      e && e.getReadyStateMonitorEnabled() && this._videoElement && !this._startedStateCheck && (this._intervalCheckId = setInterval(this.checkStateProperty.bind(this), this._intervalMilliseconds), this._startedStateCheck = !0);
    },
    stop: function() {
      try {
        this._startedStateCheck && this._intervalCheckId && clearInterval(this._intervalCheckId), this._intervalCheckId = null, this._startedStateCheck = !1;
      } catch {
        _A.error("Produced error stopping the network monitor");
      }
    },
    checkStateProperty: function(e) {
      try {
        this._videoElement && this._adapter && this._videoElement.readyState && (this._videoElement.readyState > 3 && !this._adapter.flags.isSeeking ? this._adapter.flags.isBuffering ? this.fireBufferEnd({}, "stateMonitor") : this._adapter.flags.isJoined || this.fireJoin({}, "stateMonitor") : this._videoElement.readyState < 4 && !this._adapter.flags.isBuffering && this.fireBufferBegin({}, !1, "stateMonitor", !0));
      } catch {
      }
    }
  }
), TA = bA, Al, Df;
function EA() {
  if (Df)
    return Al;
  Df = 1;
  var e = vu, i = ks, n = {
    getPosition: function() {
      return null;
    },
    getGivenBreaks: function() {
      return null;
    },
    getExpectedBreaks: function() {
      return null;
    },
    getExpectedPattern: function() {
      return null;
    },
    getBreaksTime: function() {
      return null;
    },
    getGivenAds: function() {
      return null;
    },
    getExpectedAds: function() {
      return null;
    },
    getIsVisible: function() {
      return !0;
    },
    getAudioEnabled: function() {
      return null;
    },
    getIsSkippable: function() {
      return null;
    },
    getIsFullscreen: function() {
      return null;
    },
    getCampaign: function() {
      return null;
    },
    getCreativeId: function() {
      return null;
    },
    getProvider: function() {
      return null;
    },
    getAdInsertionType: function() {
      return null;
    },
    fireClick: function(t) {
      typeof t == "string" && (t = { url: t }), this.emit(e.Event.CLICK, { params: t });
    },
    fireQuartile: function(t) {
      this.flags.isStarted && typeof t == "number" && t > this.flags.lastQuartileSent && t < 4 && (this.flags.lastQuartileSent++, this.emit(e.Event.QUARTILE, { params: { quartile: t } }));
    },
    startChronoView: function() {
      if (this.getIsVisible() && !this.plugin.backgroundDetector.isInBackground) {
        var t = this.chronos.viewedMax;
        (t.length === 0 || t[t.length - 1].stopTime !== 0) && (t.push(new i()), t[t.length - 1].start());
      }
    },
    stopChronoView: function() {
      var t = this.chronos.viewedMax;
      t[0] && t.length > 0 && t[t.length - 1].stopTime === 0 && t[t.length - 1].stop();
    },
    fireManifest: function(t, r) {
      var s = { params: t };
      typeof t == "string" && (s = { params: { errorType: t, errorMessage: r } }), this.emit(e.Event.MANIFEST, s);
    },
    fireSkip: function(t) {
      t === void 0 && (t = {}), t.skipped = !0, this.fireStop(t);
    },
    fireBreakStart: function(t) {
      this.emit(e.Event.PODSTART, { params: t });
    },
    fireBreakStop: function(t) {
      this.emit(e.Event.PODSTOP, { params: t });
    }
  };
  return Al = n, Al;
}
var Il, xf;
function SA() {
  if (xf)
    return Il;
  xf = 1;
  var e = vu, i = At, n = {
    getPlayrate: function() {
      return this.flags.isPaused ? 0 : 1;
    },
    getFramesPerSecond: function() {
      return null;
    },
    getDroppedFrames: function() {
      return null;
    },
    getThroughput: function() {
      return null;
    },
    getRendition: function() {
      return null;
    },
    getTitle2: function() {
      return null;
    },
    getIsLive: function() {
      return null;
    },
    getCdnTraffic: function() {
      return null;
    },
    getP2PTraffic: function() {
      return null;
    },
    getUploadTraffic: function() {
      return null;
    },
    getIsP2PEnabled: function() {
      return null;
    },
    getSegmentDuration: function() {
      return null;
    },
    getHouseholdId: function() {
      return null;
    },
    getLatency: function() {
      return null;
    },
    getPacketLoss: function() {
      return null;
    },
    getPacketSent: function() {
      return null;
    },
    getMetrics: function() {
      return null;
    },
    getAudioCodec: function() {
      return null;
    },
    getVideoCodec: function() {
      return null;
    },
    getURLToParse: function() {
      return null;
    },
    fireSeekBegin: function(t, r, s) {
      if (this._discardFalseBuffers(), this.plugin && this.plugin.getIsLive() && this.plugin.options["content.isLive.noSeek"])
        return null;
      if (this.flags.isJoined && !this.flags.isSeeking) {
        if (this.flags.isBuffering)
          if (r !== !1)
            i.notice("Converting current buffer to seek"), this.chronos.seek = this.chronos.buffer.clone(), this.chronos.buffer.reset(), this.flags.isBuffering = !1;
          else
            return;
        else
          this.chronos.seek.start();
        try {
          this.fireEventsStruct.seek = [], s ? this.fireEventsStruct.seek.push(s) : this.fireEventsStruct.seek.push("undefinedEvent");
        } catch {
        }
        this.flags.isSeeking = !0, this.emit(e.Event.SEEK_BEGIN, { params: t });
      }
    },
    fireSeekEnd: function(t, r) {
      if (this.plugin && this.plugin.getIsLive() && this.plugin.options["content.isLive.noSeek"])
        return null;
      if (this.flags.isJoined && this.flags.isSeeking) {
        try {
          r ? this.fireEventsStruct.seek.push(r) : this.fireEventsStruct.seek.push("undefinedEvent");
        } catch {
        }
        t = t || {}, t.triggeredEvents = this.fireEventsStruct.seek, this.cancelSeek(), this.emit(e.Event.SEEK_END, { params: t });
      }
    },
    cancelSeek: function(t) {
      this.flags.isJoined && this.flags.isSeeking && (this.flags.isSeeking = !1, this.chronos.seek.stop(), this.monitor && this.monitor.skipNextTick());
    },
    fireEvent: function(t, r, s, a) {
      var o = a || {};
      o.name = t || "", o.dimensions = r || {}, o.values = s || {}, this.emit(e.Event.VIDEO_EVENT, { params: o });
    }
  };
  return Il = n, Il;
}
var wA = Pn, Dl = At, sh = mi, Pf = gu, kA = dA, CA = fA, xl = By, AA = TA, mn = vu, ah = wA.extend(
  {
    constructor: function(e) {
      this.flags = new CA(), this.chronos = new kA(), this.fireEventsStruct = {}, this.fireEventsStruct.buffer = [], this.fireEventsStruct.seek = [], this.monitor = null, this.plugin = null, this.player = null, this._isAdsAdapter = null, this.setPlayer(e), this.tag = this.player, Dl.notice("Adapter " + this.getVersion() + " with Lib " + Pf + " is ready.");
    },
    setPlayer: function(e) {
      this.player && this.unregisterListeners(), typeof e == "string" && typeof document < "u" ? this.player = document.getElementById(e) : this.player = e, this.registerListeners();
    },
    registerListeners: function() {
    },
    unregisterListeners: function() {
    },
    dispose: function() {
      this.stopMonitor(), this.stopReadyStateMonitor(), this.fireStop(), this.unregisterListeners(), this.player = null, this.tag = null;
    },
    monitorPlayhead: function(e, i, n) {
      this.stopMonitor();
      var t = 0;
      e && (t |= xl.Type.BUFFER), i && (t |= xl.Type.SEEK), !this.monitor || !this.monitor._timer.isRunning ? this.monitor = new xl(this, t, n) : this.monitor.skipNextTick();
    },
    stopMonitor: function() {
      this.monitor && this.monitor.stop();
    },
    monitorReadyState: function(e) {
      this.stopReadyStateMonitor(), this.stateMonitor = new AA(this, e);
    },
    startReadyStateMonitor: function() {
      this.stateMonitor && this.stateMonitor.start();
    },
    stopReadyStateMonitor: function() {
      this.stateMonitor && this.stateMonitor.stop();
    },
    checkReadyState: function(e, i) {
      try {
        this.plugin && this.plugin.getReadyStateMonitorEnabled() && e && (e > 3 && !this.flags.isSeeking ? this.flags.isBuffering ? this.fireBufferEnd({}, i + "-readyState") : this.flags.isJoined || this.fireJoin({}, i + "-readyState") : e < 4 && !this.flags.isBuffering && this.fireBufferBegin({}, !1, i + "-readyState", !0));
      } catch {
        Dl.error("Can't check readyState property correctly");
      }
    },
    getPlayhead: function() {
      return null;
    },
    getDuration: function() {
      return null;
    },
    getBitrate: function() {
      return null;
    },
    getTotalBytes: function() {
      return null;
    },
    getTitle: function() {
      return null;
    },
    getResource: function() {
      return null;
    },
    getPlayerVersion: function() {
      return null;
    },
    getPlayerName: function() {
      return null;
    },
    getVersion: function() {
      return Pf + "-generic-js";
    },
    getVideoObject: function() {
      return null;
    },
    fireInit: function(e, i) {
      this.plugin && this.plugin.fireInit(e, i);
    },
    fireStart: function(e, i) {
      if (this.plugin && this.plugin.backgroundDetector && this.plugin.backgroundDetector.canBlockStartCalls())
        return null;
      this.flags.isStarted || (this.flags.isStarted = !0, this.chronos.total.start(), this.chronos.join.start(), i && (e = e || {}, e.triggeredEvents = [i]), this.startReadyStateMonitor(), this.emit(mn.Event.START, { params: e }));
    },
    fireJoin: function(e, i) {
      !this.flags.isJoined && !this.flags.isStarted && !this._isAds() && this.plugin && this.plugin.isInitiated && this.fireStart({}, i), this.flags.isStarted && !this.flags.isJoined && (this.flags.isStarted = !0, this.monitor && this.monitor.start(), this.flags.isJoined = !0, this.chronos.join.stop(), i && (e = e || {}, e.triggeredEvents = [i]), this.emit(mn.Event.JOIN, { params: e }));
    },
    firePause: function(e, i) {
      this._discardFalseBuffers(), this.flags.isBuffering && this.fireBufferEnd(null, "firePauseCall"), this.flags.isJoined && !this.flags.isPaused && (this.flags.isPaused = !0, this.chronos.pause.start(), i && (e = e || {}, e.triggeredEvents = [i]), this.emit(mn.Event.PAUSE, { params: e }));
    },
    fireResume: function(e, i) {
      this._discardFalseBuffers(), this.flags.isJoined && this.flags.isPaused && (this.flags.isPaused = !1, this.chronos.pause.stop(), this.monitor && this.monitor.skipNextTick(), i && (e = e || {}, e.triggeredEvents = [i]), this.emit(mn.Event.RESUME, { params: e }));
    },
    fireBufferBegin: function(e, i, n, t) {
      if (t = t || !1, this.flags.isJoined && !this.flags.isBuffering) {
        if (this.flags.isSeeking)
          if (i)
            Dl.notice("Converting current buffer to seek"), this.chronos.buffer = this.chronos.seek.clone(), this.chronos.seek.reset(), this.flags.isSeeking = !1;
          else
            return;
        else
          this.chronos.buffer.start();
        try {
          this.fireEventsStruct.buffer = [], n ? this.fireEventsStruct.buffer.push(n) : this.fireEventsStruct.buffer.push("undefinedEvent");
        } catch {
        }
        this.flags.isBuffering = !0, this.flags.isVideoStateBuffering = t, this.emit(mn.Event.BUFFER_BEGIN, { params: e });
      }
    },
    fireBufferEnd: function(e, i) {
      if (this.flags.isJoined && this.flags.isBuffering) {
        try {
          i ? this.fireEventsStruct.buffer.push(i) : this.fireEventsStruct.buffer.push("undefinedEvent");
        } catch {
        }
        e = e || {}, e.triggeredEvents = this.fireEventsStruct.buffer, this.cancelBuffer(), this.emit(mn.Event.BUFFER_END, { params: e });
      }
    },
    _discardFalseBuffers: function() {
      try {
        this.flags.isBuffering && this.flags.isVideoStateBuffering && this._getDeltaBufferTime() <= 100 && this.cancelBuffer();
      } catch {
      }
    },
    cancelBuffer: function(e) {
      this.flags.isJoined && this.flags.isBuffering && (this.flags.isBuffering = !1, this.flags.isVideoStateBuffering = !1, this.chronos.buffer.stop(), this.monitor && this.monitor.skipNextTick());
    },
    _getDeltaBufferTime: function() {
      return this.chronos && this.chronos.buffer ? this.chronos.buffer.getDeltaTime(!1) : 0;
    },
    fireStop: function(e, i) {
      (this._isAds() || this.plugin && this.plugin._isStopReady()) && (this._isAds() && this.flags.isStarted || !this._isAds() && (this.flags.isStarted || this.plugin && this.plugin.isInitiated)) && (this.stopMonitor(), this.stopReadyStateMonitor(), this.flags.reset(), this.chronos.total.stop(), this.chronos.join.reset(), this.chronos.pause.stop(), this.chronos.buffer.stop(), this.chronos.seek.stop(), i && (e = e || {}, e.triggeredEvents = [i]), this.emit(mn.Event.STOP, { params: e }), this.chronos.pause.reset(), this.chronos.buffer.reset(), this.chronos.seek.reset(), this.chronos.viewedMax.splice(0, this.chronos.viewedMax.length));
    },
    setIsAds: function(e) {
      this._isAdsAdapter = e;
    },
    _isAds: function() {
      return this._isAdsAdapter;
    },
    fireCasted: function(e, i) {
      e || (e = {}), e.casted = !0, this.fireStop(e, i);
    },
    fireError: function(e, i, n, t, r) {
      var s = sh.buildErrorParams(e, i, n, t);
      s.code && delete s.code, r && (s = s || {}, s.triggeredEvents = [r]);
      var a = this.plugin ? this.plugin.options : {};
      typeof s.errorCode < "u" && a["errors.ignore"] && a["errors.ignore"].indexOf(s.errorCode.toString()) > -1 || (this.emit(mn.Event.ERROR, { params: s }), typeof s.errorCode < "u" && a["errors.fatal"] && a["errors.fatal"].indexOf(s.errorCode.toString()) > -1 && this.fireStop({}, r));
    },
    fireFatalError: function(e, i, n, t, r) {
      var s = this.plugin ? this.plugin.options : {};
      typeof e < "u" && s["errors.ignore"] && s["errors.ignore"].indexOf(e.toString()) > -1 || (this.monitor && this.monitor.stop(), this.fireError(e, i, n, t, r), typeof e < "u" && s["errors.nonFatal"] && s["errors.nonFatal"].indexOf(e.toString()) > -1 || this.fireStop({}, r));
    }
  },
  {
    Event: mn.Event
  }
);
sh.assign(ah.prototype, EA());
sh.assign(ah.prototype, SA());
var oh = ah, Pl, Lf;
function IA() {
  if (Lf)
    return Pl;
  Lf = 1;
  var e = At, i = Xi, n = mi, t = oh, r = {
    setAdapter: function(s) {
      if (this.browserLoadTimes && this.browserLoadTimes.setPlayerSetupTime(), s.plugin)
        e.warn("Adapters can only be added to a single plugin");
      else {
        this.removeAdapter(), this._adapter = s, s.plugin = this, s.setIsAds(!1), this.contentAdapterListeners = {}, this.contentAdapterListeners[t.Event.START] = this._startListener.bind(this), this.contentAdapterListeners[t.Event.JOIN] = this._joinListener.bind(this), this.contentAdapterListeners[t.Event.PAUSE] = this._pauseListener.bind(this), this.contentAdapterListeners[t.Event.RESUME] = this._resumeListener.bind(this), this.contentAdapterListeners[t.Event.SEEK_BEGIN] = this._seekBufferBeginListener.bind(this), this.contentAdapterListeners[t.Event.SEEK_END] = this._seekEndListener.bind(this), this.contentAdapterListeners[t.Event.BUFFER_BEGIN] = this._seekBufferBeginListener.bind(this), this.contentAdapterListeners[t.Event.BUFFER_END] = this._bufferEndListener.bind(this), this.contentAdapterListeners[t.Event.ERROR] = this._errorListener.bind(this), this.contentAdapterListeners[t.Event.STOP] = this._stopListener.bind(this), this.contentAdapterListeners[t.Event.VIDEO_EVENT] = this._videoEventListener.bind(this);
        for (var a in this.contentAdapterListeners)
          this._adapter.on(a, this.contentAdapterListeners[a]);
      }
    },
    getAdapter: function() {
      return this._adapter;
    },
    removeAdapter: function() {
      if (this._adapter) {
        if (this._adapter.dispose(), this._adapter.plugin = null, this.contentAdapterListeners) {
          for (var s in this.contentAdapterListeners)
            this._adapter.off(s, this.contentAdapterListeners[s]);
          delete this.contentAdapterListeners;
        }
        this._adapter = null;
      }
    },
    _startListener: function(s) {
      this.isInitiated ? this.initChrono.startTime !== 0 && (this._adapter.chronos.join.startTime = this.initChrono.startTime) : (this.viewTransform.nextView(), this._initComm(), this._startPings());
      try {
        if (this._adapter && this.resourceTransform) {
          var a = this._getResourceForTransform();
          this.resourceTransform.init(a);
        }
      } catch {
      }
      var o = s.data.params || {}, u = this.getResource() && typeof this.getIsLive() == "boolean" && (this.getIsLive() || typeof this.getDuration() == "number" && this.getDuration() > 0) && this.getTitle();
      u = this.options.forceInit ? !1 : u && this._isExtraMetadataReady(), u && !this.isInitiated ? (this._send(i.WillSendEvent.WILL_SEND_START, i.Service.START, o), this._adSavedError(), this._adSavedManifest(), e.notice(i.Service.START + " " + (o.title || o.mediaResource)), this.isStarted = !0) : this.isInitiated || (this.isInitiated = !0, this._adapter.chronos.join.start(), this._send(i.WillSendEvent.WILL_SEND_INIT, i.Service.INIT, o), this._adSavedError(), this._adSavedManifest(), e.notice(i.Service.INIT + " " + (o.title || o.mediaResource)));
    },
    _retryStart: function(s) {
      this._isExtraMetadataReady() && (this._send(i.WillSendEvent.WILL_SEND_START, i.Service.START, {}), this.startDelayed = !1);
    },
    _joinListener: function(s) {
      var a = {};
      n.assign(a, s.data.params || {}), !this._adsAdapter || !this._adsAdapter.flags.isStarted ? (this._adapter && (this._adapter.chronos.join.startTime = Math.min(
        this._adapter.chronos.join.startTime + (this._totalPrerollsTime || 0),
        (/* @__PURE__ */ new Date()).getTime()
      ), this._totalPrerollsTime = 0), this.isInitiated && !this.isStarted && (this._isExtraMetadataReady() ? this._send(i.WillSendEvent.WILL_SEND_START, i.Service.START, a) : this.startDelayed = !0, this._adSavedError(), this._adSavedManifest(), e.notice(i.Service.START + " " + (a.title || a.mediaResource)), this.isStarted = !0), a = s.data.params || {}, this._adsAdapter && this.isBreakStarted && this._adsAdapter.fireBreakStop(), this._send(i.WillSendEvent.WILL_SEND_JOIN, i.Service.JOIN, a), e.notice(i.Service.JOIN + " " + a.joinDuration + "ms")) : (this._adapter.monitor && this._adapter.monitor.stop(), this._adapter.flags.isJoined = !1, this._adapter.chronos.join.stopTime = 0);
    },
    _pauseListener: function(s) {
      this._adapter && (this._adapter.flags.isBuffering || this._adapter.flags.isSeeking || this._adsAdapter && this._adsAdapter.flags.isStarted) && this._adapter.chronos.pause.reset();
      var a = s.data.params || {};
      this._send(i.WillSendEvent.WILL_SEND_PAUSE, i.Service.PAUSE, a), e.notice(i.Service.PAUSE + " at " + a.playhead + "s");
    },
    _resumeListener: function(s) {
      this._adsAdapter && this.isBreakStarted && !this._adsAdapter.flags.isStarted && this._adsAdapter.fireBreakStop();
      var a = s.data.params || {};
      this._send(i.WillSendEvent.WILL_SEND_RESUME, i.Service.RESUME, a), e.notice(i.Service.RESUME + " " + a.pauseDuration + "ms"), this._adapter.chronos.pause.reset();
    },
    _seekBufferBeginListener: function(s) {
      this._adapter && this._adapter.flags.isPaused && this._adapter.chronos.pause.reset(), s.type && s.type.includes("buffer") ? e.notice(s.type + ", eventsTriggered: " + this._adapter.fireEventsStruct.buffer) : e.notice(s.type + ", eventsTriggered: " + this._adapter.fireEventsStruct.seek);
    },
    _seekEndListener: function(s) {
      var a = s.data.params || {};
      this._send(i.WillSendEvent.WILL_SEND_SEEK, i.Service.SEEK, a), e.notice(
        i.Service.SEEK + " to " + a.playhead + " in " + a.seekDuration + "ms" + (a.triggeredEvents ? ", eventsTriggered: " + a.triggeredEvents : "")
      );
    },
    _bufferEndListener: function(s) {
      var a = s.data.params || {};
      this._send(i.WillSendEvent.WILL_SEND_BUFFER, i.Service.BUFFER, a), e.notice(
        i.Service.BUFFER + " to " + a.playhead + " in " + a.bufferDuration + "ms" + (a.triggeredEvents ? ", eventsTriggered: " + a.triggeredEvents : "")
      );
    },
    _errorListener: function(s) {
      this._blockError(s.data.params) || (this.fireError(s.data.params || {}), this._adSavedError(), this._adSavedManifest());
    },
    _blockError: function(s) {
      var a = Date.now(), o = this._lastErrorParams ? this._lastErrorParams.errorCode === s.errorCode && this._lastErrorParams.msg === s.msg : !1;
      return o && this._lastErrorTime + 5e3 > a ? (this._lastErrorTime = a, !0) : (this._lastErrorTime = a, this._lastErrorParams = s, !1);
    },
    _stopListener: function(s) {
      this.fireStop(s.data.params || {});
    },
    _isStopReady: function(s) {
      var a = !1;
      if (!this.requestBuilder.lastSent.live && this._adsAdapter && this._adapter && (!this._adapter.getPlayhead() || this._adapter.getPlayhead() >= this.requestBuilder.lastSent.mediaDuration - 1)) {
        var o = 0, u = this.options["ad.expectedPattern"];
        if (u && u.post && u.post[0])
          o = u.post[0];
        else if (this.requestBuilder.lastSent.breaksTime) {
          if (this.requestBuilder.lastSent.position === i.AdPosition.Postroll && (o = this.requestBuilder.lastSent.givenAds), !o && this.requestBuilder.lastSent.breaksTime) {
            var l = this.requestBuilder.lastSent.breaksTime;
            if (l.length > 0 && this.requestBuilder.lastSent.mediaDuration) {
              var d = Math.round(l[l.length - 1]);
              d + 1 >= this.requestBuilder.lastSent.mediaDuration && (o = 1);
            }
          }
        } else
          a = !0;
        o <= this.playedPostrolls && (a = !0);
      } else
        a = !0;
      return a;
    },
    _videoEventListener: function(s) {
      this._send(i.WillSendEvent.WILL_SEND_VIDEO_EVENT, i.Service.VIDEO_EVENT, s.data.params);
    },
    _isExtraMetadataReady: function(s) {
      if (!this.options.waitForMetadata || this.options.pendingMetadata.length < 1)
        return !0;
      var a = this.requestBuilder.getGetters();
      return this.options.pendingMetadata.map(function(o) {
        if (a.hasOwnProperty(o))
          return !!this[a[o]]();
      }.bind(this)).indexOf(!1) < 0;
    }
  };
  return Pl = r, Pl;
}
var Ll, Of;
function DA() {
  if (Of)
    return Ll;
  Of = 1;
  var e = mi, i = gu, n = th, t = {
    getHost: function() {
      var r = this.options.host;
      return this.viewTransform && this.viewTransform.response && this.viewTransform.response.host && (r = this.viewTransform.response.host), e.addProtocol(e.stripProtocol(r), this.options["app.https"]);
    },
    getUserType: function() {
      return this.options["user.type"];
    },
    isParseManifest: function() {
      return this.options["parse.manifest"];
    },
    isParseCdnNode: function() {
      return this.options["parse.cdnNode"];
    },
    isCdnSwitch: function() {
      return this.options["parse.cdnSwitchHeader"];
    },
    getParseCdnNodeList: function() {
      return this.options["parse.cdnNode.list"];
    },
    getParseCdnNodeNameHeader: function() {
      return this.options["parse.cdnNameHeader"];
    },
    getParseNodeHeader: function() {
      return this.options["parse.cdnNodeHeader"];
    },
    getObfuscateIp: function() {
      return this.options["user.obfuscateIp"];
    },
    getPrivacyProtocol: function() {
      var r = this.options["user.privacyProtocol"];
      return typeof r == "string" && (r = r.toLowerCase()), r === "optin" || r === "optout" ? r : null;
    },
    getCustomDimensions: function() {
      var r = this.options["content.customDimensions"];
      return typeof r == "object" ? r : null;
    },
    getExtraparam1: function() {
      return this.options["content.customDimension.1"];
    },
    getExtraparam2: function() {
      return this.options["content.customDimension.2"];
    },
    getExtraparam3: function() {
      return this.options["content.customDimension.3"];
    },
    getExtraparam4: function() {
      return this.options["content.customDimension.4"];
    },
    getExtraparam5: function() {
      return this.options["content.customDimension.5"];
    },
    getExtraparam6: function() {
      return this.options["content.customDimension.6"];
    },
    getExtraparam7: function() {
      return this.options["content.customDimension.7"];
    },
    getExtraparam8: function() {
      return this.options["content.customDimension.8"];
    },
    getExtraparam9: function() {
      return this.options["content.customDimension.9"];
    },
    getExtraparam10: function() {
      return this.options["content.customDimension.10"];
    },
    getExtraparam11: function() {
      return this.options["content.customDimension.11"];
    },
    getExtraparam12: function() {
      return this.options["content.customDimension.12"];
    },
    getExtraparam13: function() {
      return this.options["content.customDimension.13"];
    },
    getExtraparam14: function() {
      return this.options["content.customDimension.14"];
    },
    getExtraparam15: function() {
      return this.options["content.customDimension.15"];
    },
    getExtraparam16: function() {
      return this.options["content.customDimension.16"];
    },
    getExtraparam17: function() {
      return this.options["content.customDimension.17"];
    },
    getExtraparam18: function() {
      return this.options["content.customDimension.18"];
    },
    getExtraparam19: function() {
      return this.options["content.customDimension.19"];
    },
    getExtraparam20: function() {
      return this.options["content.customDimension.20"];
    },
    getAdExtraparam1: function() {
      return this.options["ad.customDimension.1"];
    },
    getAdExtraparam2: function() {
      return this.options["ad.customDimension.2"];
    },
    getAdExtraparam3: function() {
      return this.options["ad.customDimension.3"];
    },
    getAdExtraparam4: function() {
      return this.options["ad.customDimension.4"];
    },
    getAdExtraparam5: function() {
      return this.options["ad.customDimension.5"];
    },
    getAdExtraparam6: function() {
      return this.options["ad.customDimension.6"];
    },
    getAdExtraparam7: function() {
      return this.options["ad.customDimension.7"];
    },
    getAdExtraparam8: function() {
      return this.options["ad.customDimension.8"];
    },
    getAdExtraparam9: function() {
      return this.options["ad.customDimension.9"];
    },
    getAdExtraparam10: function() {
      return this.options["ad.customDimension.10"];
    },
    getPluginInfo: function() {
      var r = {
        lib: i,
        adapter: this.getAdapterVersion(),
        adAdapter: this.getAdAdapterVersion()
      };
      return r;
    },
    getIp: function() {
      return this.options["network.ip"];
    },
    getIsp: function() {
      return this.options["network.isp"];
    },
    getConnectionType: function() {
      return this.options["network.connectionType"];
    },
    getDeviceInfo: function() {
      var r = {};
      return this.getDeviceCode() && (r.deviceCode = this.getDeviceCode()), this.getModel() && (r.model = this.getModel()), this.getBrand() && (r.brand = this.getBrand()), this.getDeviceType() && (r.deviceType = this.getDeviceType()), this.getDeviceName() && (r.deviceName = this.getDeviceName()), this.getOsName() && (r.osName = this.getOsName()), this.getOsVersion() && (r.osVersion = this.getOsVersion()), this.getBrowserName() && (r.browserName = this.getBrowserName()), this.getBrowserVersion() && (r.browserVersion = this.getBrowserVersion()), this.getBrowserType() && (r.browserType = this.getBrowserType()), this.getBrowserEngine() && (r.browserEngine = this.getBrowserEngine()), r !== {} ? r : null;
    },
    getEDID: function() {
      var r = this.options["device.EDID"];
      return r ? r.toString() : null;
    },
    getDeviceCode: function() {
      return this.options["device.code"];
    },
    getModel: function() {
      return this.options["device.model"];
    },
    getBrand: function() {
      return this.options["device.brand"];
    },
    getDeviceType: function() {
      return this.options["device.type"];
    },
    getDeviceName: function() {
      return this.options["device.name"];
    },
    getOsName: function() {
      return this.options["device.osName"];
    },
    getOsVersion: function() {
      return this.options["device.osVersion"];
    },
    getBrowserName: function() {
      return this.options["device.browserName"];
    },
    getBrowserVersion: function() {
      return this.options["device.browserVersion"];
    },
    getBrowserType: function() {
      return this.options["device.browserType"];
    },
    getBrowserEngine: function() {
      return this.options["device.browserEngine"];
    },
    getAccountCode: function() {
      return this.options.accountCode;
    },
    getUsername: function() {
      return this.options["user.name"];
    },
    getAnonymousUser: function() {
      return this.options["user.anonymousId"];
    },
    getEmail: function() {
      return this.options["user.email"];
    },
    getReferer: function() {
      var r = this.options.referer || "";
      return !r && typeof window < "u" && window.location && (r = window.location.href), r;
    },
    getReferral: function() {
      var r = this.options.referral || "";
      return !r && typeof document < "u" && (r = document.referrer), r;
    },
    getLanguage: function() {
      var r = null;
      return typeof navigator < "u" && (r = navigator.language), r;
    },
    getScreenResolution: function() {
      var r = null;
      try {
        if (window && window.screen) {
          var s = window.devicePixelRatio || 1;
          r = window.screen.width * s + "x" + window.screen.height * s;
        }
      } catch {
      }
      return r;
    },
    getNodeHost: function() {
      return this.options["content.cdnNode"] || this.resourceTransform.getNodeHost();
    },
    getNodeType: function() {
      return this.options["content.cdnType"] || this.resourceTransform.getNodeType();
    },
    getNodeTypeString: function() {
      return this.resourceTransform.getNodeTypeString();
    },
    getRequestNumber: function() {
      return Math.random();
    },
    getOfflineView: function() {
      var r = null;
      return this.offlineStorage && (r = this.offlineStorage.getView()), r;
    },
    getDeviceUUID: function() {
      var r = null;
      return this.options["device.isAnonymous"] || (r = this.options["device.id"] || this.uuidGenerator.getKey()), r;
    },
    getSmartswitchConfigCode: function() {
      return this.options["smartswitch.configCode"];
    },
    getSmartswitchGroupCode: function() {
      return this.options["smartswitch.groupCode"];
    },
    getSmartswitchContractCode: function() {
      return this.options["smartswitch.contractCode"];
    },
    getAppName: function() {
      return this.options["app.name"];
    },
    getAppReleaseVersion: function() {
      return this.options["app.releaseVersion"];
    },
    getIsBlocked: function() {
      return this.options["ad.blockerDetected"];
    },
    isMethodPostEnabled: function() {
      return this.options.method && this.options.method.toLowerCase() === n.POST;
    },
    getPlayheadMonitorEnabled: function() {
      return this.options["playhead.monitor"];
    },
    getReadyStateMonitorEnabled: function() {
      return this.options["readyState.monitor"];
    }
  };
  return Ll = t, Ll;
}
var Ol, Nf;
function xA() {
  if (Nf)
    return Ol;
  Nf = 1;
  var e = At, i = mi, n = gu, t = _u, r = xy, s = {
    getPlayhead: function() {
      var a = this._safeGetterAdapter("getPlayhead");
      return i.parseNumber(a, 0);
    },
    getPlayrate: function() {
      var a = 0;
      if (this._adapter && this._adapter.flags && !this._adapter.flags.isPaused)
        try {
          a = this._adapter.getPlayrate();
        } catch (o) {
          e.warn("An error occured while calling getPlayrate", o);
        }
      return a;
    },
    getFramesPerSecond: function() {
      return this._safeGetterAdapter("getFramesPerSecond", "content.fps");
    },
    getSegmentDuration: function() {
      return this.hybridNetwork.getSegmentDuration() || this._safeGetterAdapter("getSegmentDuration", "content.segmentDuration");
    },
    getDroppedFrames: function() {
      var a = this._safeGetterAdapter("getDroppedFrames");
      return a || (a = this.getWebkitDroppedFrames()), i.parseNumber(a, 0);
    },
    getWebkitDroppedFrames: function() {
      return this._adapter && this._adapter.tag && this._adapter.tag.webkitDroppedFrameCount ? this._adapter.tag.webkitDroppedFrameCount : null;
    },
    getDuration: function() {
      var a = this._safeGetterAdapter("getDuration", "content.duration") || null;
      return i.parseNumber(Math.round(a), null);
    },
    getBitrate: function() {
      var a = this._safeGetterAdapter("getBitrate", "content.bitrate");
      return (!a || a === -1) && (a = this.getWebkitBitrate()), i.parseNumber(a, -1);
    },
    getTotalBytes: function() {
      return this.options["content.sendTotalBytes"] ? this._safeGetterAdapter("getTotalBytes", "content.totalBytes") : null;
    },
    getWebkitBitrate: function() {
      if (this._adapter && this._adapter.tag && this._adapter.tag.webkitVideoDecodedByteCount) {
        var a = this._adapter.tag.webkitVideoDecodedByteCount;
        if (this._lastWebkitBitrate) {
          var o = this._adapter.tag.webkitVideoDecodedByteCount - this._lastWebkitBitrate;
          a = Math.round(o / this.viewTransform.response.pingTime * 8);
        }
        return this._lastWebkitBitrate = this._adapter.tag.webkitVideoDecodedByteCount, a !== 0 ? a : -1;
      }
    },
    getThroughput: function() {
      var a = this._safeGetterAdapter("getThroughput", "content.throughput");
      return i.parseNumber(a, -1);
    },
    getRendition: function() {
      return this._safeGetterAdapter("getRendition", "content.rendition");
    },
    getTitle: function() {
      return this._safeGetterAdapter("getTitle", "content.title");
    },
    getTitle2: function() {
      return this._safeGetterAdapter("getTitle2", "content.program");
    },
    getIsLive: function() {
      var a = this.options["content.isLive"];
      return !a && a !== !1 && (a = this._safeGetterAdapter("getIsLive") || !1), a;
    },
    getResource: function() {
      return this._safeGetterAdapter("getResource", "content.resource");
    },
    getParsedResource: function() {
      var a = null;
      return this.resourceTransform.isBlocking() || (a = this.resourceTransform.getResource()), a = a || this._safeGetterAdapter("getURLToParse"), a === this.getResource() ? null : a;
    },
    getTransactionCode: function() {
      return this.options["content.transactionCode"];
    },
    getMetadata: function() {
      return this.options["content.metadata"];
    },
    getPlayerVersion: function() {
      return this._safeGetterAdapter("getPlayerVersion") || "";
    },
    getPlayerName: function() {
      return this._safeGetterAdapter("getPlayerName") || "";
    },
    getCdn: function() {
      var a = null;
      return this.resourceTransform.isBlocking() || (a = this.resourceTransform.getCdnName()), a || this.options["content.cdn"];
    },
    getPluginVersion: function() {
      var a = this.getAdapterVersion();
      return a || (a = n + "-adapterless-js"), a;
    },
    getLibVersion: function() {
      return n;
    },
    getAdapterVersion: function() {
      return this._safeGetterAdapter("getVersion");
    },
    getCdnTraffic: function() {
      return this._safeGetterAdapter("getCdnTraffic") || this.hybridNetwork.getCdnTraffic();
    },
    getMultiCdnInfo: function() {
      return this.hybridNetwork.getMultiCdnInfo();
    },
    getBalancerResponseId: function() {
      return this.hybridNetwork.getBalancerResponseId();
    },
    getP2PTraffic: function() {
      return this._safeGetterAdapter("getP2PTraffic") || this.hybridNetwork.getP2PTraffic();
    },
    getUploadTraffic: function() {
      return this._safeGetterAdapter("getUploadTraffic") || this.hybridNetwork.getUploadTraffic();
    },
    getIsP2PEnabled: function() {
      return this._safeGetterAdapter("getIsP2PEnabled") || this.hybridNetwork.getIsP2PEnabled();
    },
    getStreamingProtocol: function() {
      var a = this.options["content.streamingProtocol"];
      if (a) {
        for (var o in r)
          if (r[o] === a)
            return a;
      }
      return null;
    },
    getTransportFormat: function() {
      var a = this.options["content.transportFormat"];
      if (!a && this.options["parse.manifest"] && !this.resourceTransform.isBlocking() && (a = this.resourceTransform.getTransportFormat()), a) {
        for (var o in t)
          if (t[o] === a)
            return a;
      }
      return null;
    },
    getHouseholdId: function() {
      return this._safeGetterAdapter("getHouseholdId");
    },
    getLatency: function() {
      return this.getIsLive() ? this._safeGetterAdapter("getLatency") : null;
    },
    getPacketLoss: function() {
      return this._safeGetterAdapter("getPacketLoss");
    },
    getPacketSent: function() {
      return this._safeGetterAdapter("getPacketSent");
    },
    getVideoMetrics: function() {
      return i.getMetricsFrom(this._adapter ? this._adapter.getMetrics() : null, this.options["content.metrics"]);
    },
    getPlayerStartupTime: function() {
      return this.browserLoadTimes.getPlayerStartupTime();
    },
    getJoinDuration: function() {
      return this._adapter ? this._adapter.chronos.join.getDeltaTime(!1) : -1;
    },
    getBufferDuration: function() {
      return this._adapter ? this._adapter.chronos.buffer.getDeltaTime(!1) : -1;
    },
    getSeekDuration: function() {
      return this._adapter ? this._adapter.chronos.seek.getDeltaTime(!1) : -1;
    },
    getPauseDuration: function() {
      return this._adapter ? this._adapter.chronos.pause.getDeltaTime(!1) : 0;
    },
    getPackage: function() {
      return this.options["content.package"];
    },
    getSaga: function() {
      return this.options["content.saga"];
    },
    getTvShow: function() {
      return this.options["content.tvShow"];
    },
    getSeason: function() {
      return this.options["content.season"];
    },
    getEpisodeTitle: function() {
      return this.options["content.episodeTitle"];
    },
    getChannel: function() {
      return this.options["content.channel"];
    },
    getID: function() {
      return this.options["content.id"];
    },
    getImdbId: function() {
      return this.options["content.imdbId"];
    },
    getGracenoteID: function() {
      return this.options["content.gracenoteId"];
    },
    getType: function() {
      return this.options["content.type"];
    },
    getGenre: function() {
      return this.options["content.genre"];
    },
    getVideoLanguage: function() {
      return this.options["content.language"];
    },
    getSubtitles: function() {
      return this.options["content.subtitles"];
    },
    getContractedResolution: function() {
      return this.options["content.contractedResolution"];
    },
    getCost: function() {
      return this.options["content.cost"];
    },
    getPrice: function() {
      return this.options["content.price"];
    },
    getPlaybackType: function() {
      var a = this.options["content.playbackType"];
      if (!a) {
        var o = this.options["content.isLive"];
        typeof o != "boolean" && (o = this._safeGetterAdapter("getIsLive")), typeof o == "boolean" && (a = o ? "Live" : "VoD");
      }
      return a;
    },
    getDRM: function() {
      return this.options["content.drm"];
    },
    getVideoCodec: function() {
      return this._safeGetterAdapter("getVideoCodec", "content.encoding.videoCodec");
    },
    getAudioCodec: function() {
      return this._safeGetterAdapter("getAudioCodec", "content.encoding.audioCodec");
    },
    getCodecSettings: function() {
      return this.options["content.encoding.codecSettings"];
    },
    getCodecProfile: function() {
      return this.options["content.encoding.codecProfile"];
    },
    getContainerFormat: function() {
      return this.options["content.encoding.containerFormat"];
    },
    getLinkedViewId: function() {
      return this.options.linkedViewId;
    },
    _safeGetterAdapter: function(a, o) {
      var u = null;
      if (o && this.options[o])
        u = this.options[o];
      else
        try {
          this._adapter && typeof this._adapter[a] == "function" && (u = this._adapter[a]());
        } catch (l) {
          e.warn("An error occured while calling " + a, l);
        }
      return u;
    }
  };
  return Ol = s, Ol;
}
var Nl, Rf;
function PA() {
  if (Rf)
    return Nl;
  Rf = 1;
  var e = At, i = Xi, n = oh, t = mi, r = {
    getAdsAdapter: function() {
      return this._adsAdapter;
    },
    setAdsAdapter: function(s) {
      if (s.plugin)
        e.warn("Adapters can only be added to a single plugin");
      else {
        this.removeAdsAdapter(), s.plugin = this, this._adsAdapter = s, s.setIsAds(!0), this.adsAdapterListeners = {}, this.adsAdapterListeners[n.Event.START] = this._adStartListener.bind(this), this.adsAdapterListeners[n.Event.JOIN] = this._adJoinListener.bind(this), this.adsAdapterListeners[n.Event.PAUSE] = this._adPauseListener.bind(this), this.adsAdapterListeners[n.Event.RESUME] = this._adResumeListener.bind(this), this.adsAdapterListeners[n.Event.BUFFER_BEGIN] = this._adBufferBeginListener.bind(this), this.adsAdapterListeners[n.Event.BUFFER_END] = this._adBufferEndListener.bind(this), this.adsAdapterListeners[n.Event.STOP] = this._adStopListener.bind(this), this.adsAdapterListeners[n.Event.ERROR] = this._adErrorListener.bind(this), this.adsAdapterListeners[n.Event.CLICK] = this._adClickListener.bind(this), this.adsAdapterListeners[n.Event.MANIFEST] = this._adManifestListener.bind(this), this.adsAdapterListeners[n.Event.PODSTART] = this._adBreakStartListener.bind(this), this.adsAdapterListeners[n.Event.PODSTOP] = this._adBreakStopListener.bind(this), this.adsAdapterListeners[n.Event.QUARTILE] = this._adQuartileListener.bind(this);
        for (var a in this.adsAdapterListeners)
          this._adsAdapter.on(a, this.adsAdapterListeners[a]);
      }
    },
    removeAdsAdapter: function() {
      if (this._adsAdapter) {
        if (this._adsAdapter.dispose(), this._adsAdapter.plugin = null, this.adsAdapterListeners) {
          for (var s in this.adsAdapterListeners)
            this._adsAdapter.off(s, this.adsAdapterListeners[s]);
          delete this.adsAdapterListeners;
        }
        this.resizeScrollDetector.stopDetection(), this._adsAdapter = null;
      }
    },
    _adStartListener: function(s) {
      this._adapter ? (this._adapter.fireBufferEnd(null, "adStartListener"), this._adapter.fireSeekEnd(null, "adStartListener"), !this.isInitiated && !this._adapter.flags.isStarted && this._adapter.fireStart(), this._adapter.flags.isPaused && this._adapter.chronos.pause.reset()) : this.fireInit(), this._adsAdapter && (this._adsAdapter.chronos.viewedMax = []);
      var a = s.data.params || {};
      a.adNumber = this.requestBuilder.getNewAdNumber();
      var o = (this.getAdResource() || this.getAdTitle()) && typeof this.getAdDuration() == "number";
      o ? (this.adStartSent = !0, this._adsAdapter.fireManifest(), this._adsAdapter.fireBreakStart(), a.adNumberInBreak = this.requestBuilder.getNewAdNumberInBreak(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_START, i.Service.AD_START, a)) : (this.adInitSent = !0, a.adNumberInBreak = this.requestBuilder.getNewAdNumberInBreak(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_INIT, i.Service.AD_INIT, a));
    },
    _adJoinListener: function(s) {
      var a = {};
      t.assign(a, s.data.params || {}), this.adInitSent && !this.adStartSent && (this._adsAdapter.fireManifest(), this._adsAdapter.fireBreakStart(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_START, i.Service.AD_START, a)), this._adsAdapter.startChronoView(), this.adConnected && (this._adsAdapter.chronos.join.startTime = this.adConnectedTime, this._adsAdapter.chronos.total.startTime = this.adConnectedTime, this.adConnectedTime = 0, this.adConnected = !1), a = s.data.params || {}, this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_JOIN, i.Service.AD_JOIN, a), this.adInitSent = !1, this.adStartSent = !1;
    },
    _adPauseListener: function(s) {
      var a = s.data.params || {};
      this._adsAdapter.stopChronoView(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_PAUSE, i.Service.AD_PAUSE, a);
    },
    _adResumeListener: function(s) {
      var a = s.data.params || {};
      this._adsAdapter.startChronoView(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_RESUME, i.Service.AD_RESUME, a);
    },
    _adBufferBeginListener: function(s) {
      e.notice("Ad Buffer Begin"), this._adsAdapter.stopChronoView(), this._adsAdapter && this._adsAdapter.flags.isPaused && this._adsAdapter.chronos.pause.reset();
    },
    _adBufferEndListener: function(s) {
      var a = s.data.params || {};
      this._adsAdapter.startChronoView(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_BUFFER, i.Service.AD_BUFFER, a);
    },
    _adStopListener: function(s) {
      this._adsAdapter.stopChronoView(), this._adsAdapter.flags.reset(), this._totalPrerollsTime = (this._totalPrerollsTime || 0) + this._adsAdapter.chronos.total.getDeltaTime();
      var a = s.data.params || {};
      if (a.position = this.requestBuilder.lastSent.position, this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_STOP, i.Service.AD_STOP, a), this.requestBuilder.lastSent.position === i.AdPosition.Postroll) {
        var o = this.options["ad.expectedPattern"];
        this.playedPostrolls++, (this.requestBuilder.lastSent.givenAds && this.requestBuilder.lastSent.givenAds <= this.playedPostrolls || !this.requestBuilder.lastSent.givenAds && o && o.post && o.post[0] && o.post[0] <= this.playedPostrolls) && this.fireStop();
      }
      this.adConnected = !0, this.adConnectedTime = (/* @__PURE__ */ new Date()).getTime();
    },
    _adErrorListener: function(s) {
      var a = s.data.params || {};
      if (this._adapter && !this._adapter.flags.isStarted && !this.isInitiated)
        return this._savedAdError = s, null;
      if (this._blockAdError(s.data.params))
        return null;
      this._adsAdapter && (this._adsAdapter.fireManifest(), this._adsAdapter.fireBreakStart()), (!this._adsAdapter || !this._adsAdapter.flags.isStarted) && (a.adNumber = this.requestBuilder.getNewAdNumber(), a.adNumberInBreak = this.requestBuilder.getNewAdNumberInBreak()), this.isBreakStarted || (a.breakNumber = this.requestBuilder.getNewBreakNumber()), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_ERROR, i.Service.AD_ERROR, a);
    },
    _adSavedError: function() {
      this._savedAdError && (this._adErrorListener(this._savedAdError), this._savedAdError = null);
    },
    _adSavedManifest: function() {
      this._savedAdManifest && (this._adManifestListener(this._savedAdManifest), this._savedAdManifest = null);
    },
    _blockAdError: function(s) {
      var a = Date.now(), o = this._lastAdErrorParams && this._lastAdErrorParams.errorCode === s.errorCode && this._lastAdErrorParams.msg === s.msg && this._lastAdErrorParams.adCreativeId === this.getAdCreativeId();
      return o && this._lastAdErrorTime + 5e3 > a ? (this._lastAdErrorTime = a, !0) : (this._lastAdErrorTime = a, this._lastAdErrorParams = s, !1);
    },
    _adClickListener: function(s) {
      var a = s.data.params || {};
      this._adsAdapter.stopChronoView(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_CLICK, i.Service.AD_CLICK, a);
    },
    _adManifestListener: function(s) {
      if (!this.isAdsManifestSent) {
        if (this._adapter && !this._adapter.flags.isStarted && !this.isInitiated)
          return this._savedAdManifest = s, null;
        var a = s.data.params || {};
        this.isAdsManifestSent = !0, this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_MANIFEST, i.Service.AD_MANIFEST, a);
      }
    },
    _adBreakStartListener: function(s) {
      if (!this.isBreakStarted) {
        this.isBreakStarted = !0, this._adapter && this._adapter.firePause();
        var a = s.data.params || {};
        a.breakNumber = this.requestBuilder.getNewBreakNumber(), this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_POD_START, i.Service.AD_POD_START, a), this.adConnected = !1;
      }
    },
    _adBreakStopListener: function(s) {
      if (this.isBreakStarted) {
        this.isBreakStarted = !1;
        var a = s.data.params || {};
        a.position = this.requestBuilder.lastSent.position, this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_POD_STOP, i.Service.AD_POD_STOP, a), this.adConnected = !1, this._adapter && this._adapter.fireResume();
      }
    },
    _adQuartileListener: function(s) {
      var a = s.data.params || {};
      a.quartile && this._sendAdEventIfAllowed(i.WillSendEvent.WILL_SEND_AD_QUARTILE, i.Service.AD_QUARTILE, a);
    },
    _sendAdEventIfAllowed: function(s, a, o) {
      this.options["ad.ignore"] || this._send(s, a, o), e.notice(a);
    }
  };
  return Nl = r, Nl;
}
var Rl, Mf;
function LA() {
  if (Mf)
    return Rl;
  Mf = 1;
  var e = At, i = mi, n = Xi, t = {
    getAdPlayerVersion: function() {
      return this._safeGetterAdsAdapter("getPlayerVersion") || "";
    },
    getAdPosition: function() {
      var r = n.AdPosition.Preroll;
      if (this._adsAdapter)
        try {
          var s = this._adsAdapter.getPosition();
          (n.AdPosition.Preroll === s || n.AdPosition.Midroll === s || n.AdPosition.Postroll === s) && (r = s);
        } catch (a) {
          e.warn("An error occured while calling getAdPosition", a);
        }
      return !r && this._adapter && (r = this._adapter.flags.isJoined ? n.AdPosition.Midroll : n.AdPosition.Preroll), r;
    },
    getAdNumber: function() {
      return this.requestBuilder.lastSent.adNumber || 0;
    },
    getAdNumberInBreak: function() {
      return this.requestBuilder.lastSent.adNumberInBreak || 0;
    },
    getBreakNumber: function() {
      return this.requestBuilder.lastSent.breakNumber || 0;
    },
    getAdPlayhead: function() {
      var r = this._safeGetterAdsAdapter("getPlayhead");
      return i.parseNumber(r, 0);
    },
    getAdDuration: function() {
      var r = this._safeGetterAdsAdapter("getDuration", "ad.duration");
      return i.parseNumber(r, 0);
    },
    getAdBitrate: function() {
      var r = this._safeGetterAdsAdapter("getBitrate");
      return (!r || r === -1) && (r = this.getWebkitAdBitrate()), i.parseNumber(r, -1);
    },
    getWebkitAdBitrate: function() {
      if (this._adsAdapter && this._adsAdapter.tag && this._adsAdapter.tag.webkitVideoDecodedByteCount) {
        var r = this._adsAdapter.tag.webkitVideoDecodedByteCount;
        if (this._lastWebkitAdBitrate) {
          var s = this._adsAdapter.tag.webkitVideoDecodedByteCount - this._lastWebkitAdBitrate;
          r = Math.round(s / this.viewTransform.response.pingTime * 8);
        }
        return this._lastWebkitAdBitrate = this._adsAdapter.tag.webkitVideoDecodedByteCount, r !== 0 ? r : -1;
      }
    },
    getAdTitle: function() {
      return this._safeGetterAdsAdapter("getTitle", "ad.title");
    },
    getAdResource: function() {
      return this._safeGetterAdsAdapter("getResource", "ad.resource");
    },
    getAdCampaign: function() {
      return this._safeGetterAdsAdapter("getCampaign", "ad.campaign");
    },
    getAdCreativeId: function() {
      return this._safeGetterAdsAdapter("getCreativeId", "ad.creativeId");
    },
    getAdProvider: function() {
      return this._safeGetterAdsAdapter("getProvider", "ad.provider");
    },
    getAdAdapterVersion: function() {
      return this._safeGetterAdsAdapter("getVersion");
    },
    getAdMetadata: function() {
      return this.options["ad.metadata"];
    },
    getAdInsertionType: function() {
      return this._safeGetterAdsAdapter("getAdInsertionType");
    },
    getGivenBreaks: function() {
      return this._safeGetterAdsAdapter("getGivenBreaks", "ad.givenBreaks");
    },
    getExpectedBreaks: function() {
      var r = null, s = this.options["ad.expectedBreaks"], a = this.options["ad.expectedPattern"];
      if (s)
        r = s;
      else if (a)
        r = 0, r = a.pre ? a.pre.length : 0, r += a.mid ? a.mid.length : 0, r += a.post ? a.post.length : 0;
      else if (this._adsAdapter)
        try {
          r = this._adsAdapter.getExpectedBreaks();
        } catch (o) {
          e.warn("An error occured while calling expectedBreaks", o);
        }
      return r;
    },
    getExpectedPattern: function() {
      return this._safeGetterAdsAdapter("getExpectedPattern", "ad.expectedPattern");
    },
    getBreaksTime: function() {
      return this._safeGetterAdsAdapter("getBreaksTime", "ad.breaksTime");
    },
    getGivenAds: function() {
      return this._safeGetterAdsAdapter("getGivenAds", "ad.givenAds");
    },
    getExpectedAds: function() {
      var r = null;
      try {
        if (this._adsAdapter) {
          var s = this.options["ad.expectedPattern"];
          if (s && this.getAdPosition()) {
            var a = [];
            if (s.pre && (a = a.concat(s.pre)), s.mid && (a = a.concat(s.mid)), s.post && (a = a.concat(s.post)), a.length > 0) {
              var o = this.requestBuilder.lastSent.breakNumber;
              o > a.length && (o = a.length), r = a[o - 1];
            }
          } else
            r = this._adsAdapter.getExpectedAds();
        }
      } catch (u) {
        e.warn("An error occured while calling expectedAds", u);
      }
      return r;
    },
    getAdsExpected: function() {
      var r = null;
      try {
        r = this.getExpectedPattern() || this.getGivenAds() || !1;
      } catch (s) {
        e.warn("An error occured while calling givenAds or expectedPattern", s);
      }
      return r;
    },
    getAdJoinDuration: function() {
      return this._adsAdapter ? this._adsAdapter.chronos.join.getDeltaTime(!1) : -1;
    },
    getAdBufferDuration: function() {
      return this._adsAdapter ? this._adsAdapter.chronos.buffer.getDeltaTime(!1) : -1;
    },
    getAdPauseDuration: function() {
      return this._adsAdapter ? this._adsAdapter.chronos.pause.getDeltaTime(!1) : 0;
    },
    getAdTotalDuration: function() {
      return this._adsAdapter ? this._adsAdapter.chronos.total.getDeltaTime(!1) : -1;
    },
    getAdViewedDuration: function() {
      return this._getTimeMaxOrAcum(!0);
    },
    getAdViewability: function() {
      return this._getTimeMaxOrAcum();
    },
    _getTimeMaxOrAcum: function(r) {
      var s = 0;
      return this._adsAdapter && this._adsAdapter.chronos.viewedMax.forEach(function(a) {
        r ? s += a.getDeltaTime(!1) : s = Math.max(a.getDeltaTime(!1), s);
      }), s;
    },
    getAudioEnabled: function() {
      return this._safeGetterAdsAdapter("getAudioEnabled");
    },
    getIsSkippable: function() {
      return this._safeGetterAdsAdapter("getIsSkippable");
    },
    getIsFullscreen: function() {
      return this._safeGetterAdsAdapter("getIsFullscreen");
    },
    _safeGetterAdsAdapter: function(r, s) {
      var a = null;
      if (s && this.options[s])
        a = this.options[s];
      else
        try {
          this._adsAdapter && typeof this._adsAdapter[r] == "function" && (a = this._adsAdapter[r]());
        } catch (o) {
          e.warn("An error occured while calling " + r, o);
        }
      return a;
    }
  };
  return Rl = t, Rl;
}
var Ml, Bf;
function OA() {
  if (Bf)
    return Ml;
  Bf = 1;
  var e = At, i = Xi, n = {
    _startPings: function() {
      this._ping.isRunning || this._ping.start();
    },
    _stopPings: function() {
      this._ping.stop();
    },
    _sendPing: function(t) {
      var r = {
        diffTime: t,
        entities: this.requestBuilder.getChangedEntities()
      };
      this._adapter && (this._adapter.flags.isPaused ? r = this.requestBuilder.fetchParams(r, ["pauseDuration"]) : r = this.requestBuilder.fetchParams(r, ["bitrate", "throughput", "fps"]), this._adapter.flags.isJoined && (r = this.requestBuilder.fetchParams(r, ["playhead"])), this._adapter.flags.isBuffering && (r = this.requestBuilder.fetchParams(r, ["bufferDuration"])), this._adapter.flags.isSeeking && (r = this.requestBuilder.fetchParams(r, ["seekDuration"]))), this._adsAdapter && !this.options["ad.ignore"] && (this._adsAdapter.flags.isStarted && (r = this.requestBuilder.fetchParams(r, ["adPlayhead", "adViewedDuration", "adViewability"]), this._adsAdapter.flags.isPaused ? r = this.requestBuilder.fetchParams(r, ["adPauseDuration"]) : r = this.requestBuilder.fetchParams(r, ["adBitrate"])), this._adsAdapter.flags.isBuffering && (r = this.requestBuilder.fetchParams(r, ["adBufferDuration"]))), this._send(i.WillSendEvent.WILL_SEND_PING, i.Service.PING, r), this.startDelayed && this._retryStart(), e.verbose(i.Service.PING);
    }
  };
  return Ml = n, Ml;
}
var Bl, Uf;
function NA() {
  if (Uf)
    return Bl;
  Uf = 1;
  var e = At, i = mi, n = Xi, t = Vn, r = {
    fireInit: function(s, a) {
      this.isInitiated || (!this.getAdapter() || this.getAdapter() && !this.getAdapter().flags.isStarted) && (this.viewTransform.nextView(), this._initComm(), this._startPings(), this.initChrono.start(), this.isInitiated = !0, s = s || {}, a && (s.triggeredEvents = [a]), this._send(n.WillSendEvent.WILL_SEND_INIT, n.Service.INIT, s), this._adSavedError(), this._adSavedManifest(), e.notice(n.Service.INIT + " " + (s.title || s.mediaResource)));
    },
    fireError: function(s, a, o, u) {
      this.fireInit();
      var l = i.buildErrorParams(s, a, o, u);
      l.code && delete l.code, this._send(n.WillSendEvent.WILL_SEND_ERROR, n.Service.ERROR, l), this._adSavedError(), this._adSavedManifest(), e.notice(
        n.Service.ERROR + " " + l.errorLevel + " " + l.errorCode
      ), l.errorLevel === "fatal" && this.fireStop();
    },
    fireFatalError: function(s, a, o, u) {
      this.fireError(s, a, o, u), this.fireStop();
    },
    fireStop: function(s) {
      if (this.isInitiated || this.isStarted) {
        this._adapter && (this._adapter.flags.isStopped = !0, this._adapter.monitor && this._adapter.monitor.stop()), this._adsAdapter && this.isBreakStarted && (this._adsAdapter.fireStop(), this._adsAdapter.fireBreakStop()), s = s || {}, this._send(n.WillSendEvent.WILL_SEND_STOP, n.Service.STOP, s);
        var a = this._adapter ? this._adapter.chronos : null;
        a && (a.total.stop(), a.join.reset(), a.pause.reset(), a.buffer.reset(), a.seek.reset()), e.notice(n.Service.STOP + " at " + s.playhead + "s"), this._reset();
      }
    },
    fireOfflineEvents: function(s) {
      this.options && !this.options.offline ? !this.isInitiated && (!this._adapter || !this._adapter.flags.isStarted) && (!this._adsAdapter || !this._adsAdapter.flags.isStarted) ? (this._offlineParams = s, this.viewTransform.response.code && this.viewTransform.response.host ? this._generateAndSendOffline() : (this.offlineReference = this._generateAndSendOffline.bind(this), this.viewTransform.on(t.Event.DONE, this.offlineReference))) : e.error("Adapters have to be stopped") : e.error("To send offline events, offline option must be disabled");
    },
    _generateAndSendOffline: function() {
      if (this.options.disableStorage)
        return null;
      var s = this._offlineParams;
      for (this._initComm(); ; ) {
        var a = this.requestBuilder.buildBody(n.Service.OFFLINE_EVENTS).viewJson;
        if (a[0] === null)
          break;
        var o = this.viewTransform.nextView(), u = a[0].replace(/CODE_PLACEHOLDER/g, o.toString()).replace(/,"sessionId":"SESSION_PLACEHOLDER"/g, "").replace(/,"sessionRoot":"ROOT_PLACEHOLDER"/g, "");
        this._send(
          n.WillSendEvent.WILL_SEND_OFFLINE_EVENTS,
          n.Service.OFFLINE_EVENTS,
          s,
          u,
          "POST",
          function(l, d) {
            this.offlineStorage.removeView(d.offlineId);
          }.bind(this),
          { offlineId: a[1] }
        );
      }
      this.offlineStorage.sent(), this._offlineParams = null;
    }
  };
  return Bl = r, Bl;
}
var Ul, Ff;
function RA() {
  if (Ff)
    return Ul;
  Ff = 1;
  var e = Xi, i = At, n = cn, t = mi, r = rh, s = {
    _initInfinity: function() {
      this.infinity.on(r.Event.NAV, this._navListener.bind(this)), this.infinity.on(r.Event.SESSION_START, this._sessionStartListener.bind(this)), this.infinity.on(r.Event.SESSION_STOP, this._sessionStopListener.bind(this)), this.infinity.on(r.Event.EVENT, this._eventListener.bind(this));
    },
    _sendInfinity: function(a, o, u) {
      u = this.requestBuilder.buildParams(u, o);
      var l = {
        params: u,
        plugin: this,
        adapter: this.getAdapter(),
        adsAdapter: this.getAdsAdapter()
      };
      if (this.emit(a, l), this.infinity._comm && u !== null && this.options.enabled) {
        this.lastServeiceSent = o;
        var d = new n(null, o, u);
        this.isMethodPostEnabled() && d.setPostRequest(!0), this.infinity._comm.sendRequest(d);
      }
    },
    _navListener: function(a) {
      var o = a.data.params || {};
      this._sendInfinity(e.WillSendEvent.WILL_SEND_NAV, e.Service.NAV, o), this._beat.isRunning || this._beat.start(), i.notice(e.Service.NAV + " " + o.route);
    },
    _sessionStartListener: function(a) {
      var o = a.data.params || {};
      this._sendInfinity(
        e.WillSendEvent.WILL_SEND_SESSION_START,
        e.Service.SESSION_START,
        o
      ), this._beat.isRunning || this._beat.start(), i.notice(e.Service.SESSION_START + " " + o.route);
    },
    _sessionStopListener: function(a) {
      var o = a.data.params || {};
      this._sendInfinity(
        e.WillSendEvent.WILL_SEND_SESSION_STOP,
        e.Service.SESSION_STOP,
        o
      ), this._beat.isRunning && this._beat.stop(), i.notice(e.Service.SESSION_STOP + " " + o.route);
    },
    _eventListener: function(a) {
      var o = a.data.params || {};
      this._sendInfinity(e.WillSendEvent.WILL_SEND_EVENT, e.Service.EVENT, o), i.notice(e.Service.EVENT + " " + o.name);
    },
    _sendBeat: function(a) {
      var o = {
        diffTime: a
      };
      this._sendInfinity(e.WillSendEvent.WILL_SEND_BEAT, e.Service.BEAT, o), this.infinity && this.infinity._setLastActive(), i.verbose(e.Service.BEAT);
    },
    getSessionMetrics: function() {
      return t.getMetricsFrom(this.options["session.metrics"]);
    }
  };
  return Ul = s, Ul;
}
var Fl, jf;
function MA() {
  if (jf)
    return Fl;
  jf = 1;
  var e = mi, i = {
    getContext: function() {
      return "Default";
    },
    getScrollDepth: function() {
      var n = this.storage.getSession("pageScrollDepth");
      return this.storage.removeSession("pageScrollDepth"), n;
    },
    getSession: function() {
      var n = this.storage.getStorages("session");
      if (n === "undefined" && (n = void 0), !n) {
        var t = this.getStoredData();
        if (t)
          try {
            n = JSON.parse(t).q.c;
          } catch {
          }
      }
      return n;
    },
    getStorageHost: function() {
      var n = null, t = this.getStoredData();
      if (t)
        try {
          n = JSON.parse(t).q.h;
        } catch {
        }
      return n && e.addProtocol(n, this.options["app.https"]);
    },
    getStoredData: function() {
      return this.storage.getStorages("data");
    },
    getDataTime: function() {
      return this.storage.getStorages("dataTime");
    },
    getLastActive: function() {
      return this.storage.getStorages("lastactive");
    },
    setStoredData: function(n) {
      this.storage.setStorages("data", n);
    },
    setSession: function(n) {
      this.storage.setStorages("session", n);
    },
    setDataTime: function(n) {
      this.storage.setStorages("dataTime", n);
    },
    setLastActive: function(n) {
      this.storage.setStorages("lastactive", n);
    },
    getPageName: function() {
      if (typeof document < "u" && document.title)
        return document.title;
    },
    getPageLoadTime: function() {
      return this.browserLoadTimes.getPageLoadTime();
    },
    getIsSessionExpired: function() {
      var n = (/* @__PURE__ */ new Date()).getTime();
      return !this.getSession() || this.infinity.getFirstActive() < n - this.sessionExpire;
    },
    getIsDataExpired: function() {
      var n = (/* @__PURE__ */ new Date()).getTime();
      return !this.storage.isEnabled() || !this.getStoredData() || this.infinity.getFirstActive() < n - this.sessionExpire;
    }
  };
  return Fl = i, Fl;
}
var BA = Pn, jl = eh, UA = ks, qf = Xi, Ln = mi, FA = cn, jA = ih, qA = IC, Vf = Ty, Hf = Iy, VA = Dy, HA = Py, Wf = nh, WA = NC, GA = Ly, KA = rh, zA = yy, XA = KC, QA = Ny, JA = Ry, YA = ZC, $A = My, dn = BA.extend(
  {
    constructor: function(e, i, n) {
      typeof i == "string" && !n && (n = i, i = null), this.storage = new Wf(), this.uuidGenerator = new $A(this), this.infinity = new KA(this), this.isInitiated = !1, this.isAdsManifestSent = !1, this.playedPostrolls = 0, this.isBreakStarted = !1, this.initChrono = new UA(), this.options = new HA(e), this.storage = new Wf(null, this.options.disableCookies, this.options.forceCookies, this.options.disableStorage), this.options.disableStorage || (this.offlineStorage = new WA()), this._adapter = null, this._adsAdapter = null, this._ping = new jl(this._sendPing.bind(this), 5e3), this._beat = new jl(this._sendBeat.bind(this), 3e4), this._refreshData = new jl(this._checkOldData.bind(this), 36e5), this._refreshData.start(), this.sessionExpire = Number(this.storage.getLocal("sessionExpire")) * 1e3 || 18e4, this.requestBuilder = new GA(this), this.resourceTransform = new Hf(this), this.lastEventTime = null, this.restartViewTransform(n), this._initInfinity(), this.hybridNetwork = new zA(), this.browserLoadTimes = new XA(this), this.deviceDetector = new JA(), this.backgroundDetector = new QA(this), this.resizeScrollDetector = new YA(this), this.options["background.enabled"] && this.backgroundDetector.startDetection(), i && this.setAdapter(i);
    },
    _checkOldData: function() {
      this._adapter && this._adapter.flags.isStarted || this.infinity.infinityStarted || this.restartViewTransform();
    },
    restartViewTransform: function(e) {
      if (this.viewTransform = new Vf(this), this.viewTransform.on(Vf.Event.DONE, this._receiveData.bind(this)), e) {
        this.viewTransform.setData(e);
        return;
      }
      this.getIsDataExpired() || !this.getStorageHost() || this.storage.getLocal("accCode") !== this.options.accountCode && this.storage.getSession("accCode") !== this.options.accountCode ? (this.storage.removeStorages("data"), this.storage.removeStorages("session"), this.storage.removeLocal("infinityStarted"), this.viewTransform.init()) : this.viewTransform.setData(this.getStoredData());
    },
    _receiveData: function(e) {
      this._ping.interval = e.target.response.pingTime * 1e3, this._beat.interval = e.target.response.beatTime * 1e3, this.sessionExpire = e.target.response.sessionExpire * 1e3, this.storage.setStorages("data", e.target.response.msg), this.storage.setStorages("dataTime", (/* @__PURE__ */ new Date()).getTime()), this.storage.setStorages("accCode", this.options.accountCode), this.getIsSessionExpired() ? (this.viewTransform.setSession(this.viewTransform.response.code), this.storage.setStorages("session", this.viewTransform.response.code), this.storage.setStorages("host", this.viewTransform.response.host)) : (this.viewTransform.setSession(this.getSession()), this.viewTransform.setHost(this.getStorageHost()));
    },
    _reset: function() {
      this._stopPings(), this.resourceTransform = new Hf(this), this._adapter && this._adapter.flags.reset(), this.isInitiated = !1, this.isStarted = !1, this.startDelayed = !1, this.isAdsManifestSent = !1, this.initChrono.reset(), this._totalPrerollsTime = 0, this.requestBuilder.lastSent.breakNumber = 0, this.requestBuilder.lastSent.adNumber = 0, this._savedAdManifest = null, this._savedAdError = null, this.playedPostrolls = 0, this.isBreakStarted = !1;
    },
    _send: function(e, i, n, t, r, s, a) {
      var o = (/* @__PURE__ */ new Date()).getTime();
      this.options.preventZombieViews && this.lastEventTime && o > this.lastEventTime + 600 * 1e3 && this.viewTransform.nextView(), this.lastEventTime = i === qf.Service.STOP ? null : o, n = this.requestBuilder.buildParams(n, i), this.getIsLive() && (n.mediaDuration = this.options["content.duration"], n.playhead = void 0);
      var u = {
        params: n,
        plugin: this,
        adapter: this.getAdapter(),
        adsAdapter: this.getAdsAdapter()
      };
      if (this.emit(e, u), this._comm && (n !== null || typeof r < "u") && this.options.enabled) {
        this.lastServeiceSent = i;
        var l = {};
        typeof r < "u" && r !== "GET" && (l.method = r);
        var d = new FA(null, i, n, l);
        t && d.setBody(t), this.isMethodPostEnabled() && d.setPostRequest(!0), this._comm.sendRequest(d, s, a);
      }
    },
    _initComm: function() {
      var e = this._getResourceForTransform();
      this.resourceTransform.init(e), this._comm = new jA(), this._comm.addTransform(new qA()), this._comm.addTransform(this.viewTransform), this.options && this.options.offline ? this._comm.addTransform(new VA(this)) : this._comm.addTransform(this.resourceTransform);
    },
    _getResourceForTransform: function() {
      var e = this.getResource();
      return this._adapter && this._adapter.getURLToParse() && (e = this._adapter.getURLToParse()), e;
    },
    getComm: function() {
      return this._comm;
    },
    setOptions: function(e) {
      e && (this.options.setOptions(e), typeof e["background.enabled"] == "boolean" && (e["background.enabled"] ? this.backgroundDetector.startDetection() : this.backgroundDetector.stopDetection()));
    },
    getFastDataConfig: function() {
      return this.viewTransform.response.msg;
    },
    disable: function() {
      this.setOptions({ enabled: !1 });
    },
    enable: function() {
      this.setOptions({ enabled: !0 });
    }
  },
  {
    Event: qf.WillSendEvent
  }
);
Ln.assign(dn.prototype, IA());
Ln.assign(dn.prototype, DA());
Ln.assign(dn.prototype, xA());
Ln.assign(dn.prototype, PA());
Ln.assign(dn.prototype, LA());
Ln.assign(dn.prototype, OA());
Ln.assign(dn.prototype, NA());
Ln.assign(dn.prototype, RA());
Ln.assign(dn.prototype, MA());
var ZA = dn, eI = Ye, Ye = {};
Ye.noConflict = function() {
  return Ye = eI, this;
};
Ye.VERSION = gu;
Ye.polyfills = $1;
Ye.polyfills();
Ye.Object = xt;
Ye.Emitter = Pn;
Ye.Log = At;
Ye.Log.loadLevelFromUrl();
Ye.Util = mi;
Ye.HybridNetwork = yy;
Ye.Chrono = ks;
Ye.Timer = eh;
Ye.Constants = Xi;
Ye.Request = cn;
Ye.Communication = ih;
Ye.Transform = Vn;
Ye.ViewTransform = Ty;
Ye.ResourceTransform = Iy;
Ye.CdnParser = wy;
Ye.HlsParser = Sy;
Ye.DashParser = ky;
Ye.OfflineParser = Dy;
Ye.LocationheaderParser = Cy;
Ye.Options = Py;
Ye.Plugin = ZA;
Ye.Storage = nh;
Ye.RequestBuilder = Ly;
Ye.PlayheadMonitor = By;
Ye.Adapter = oh;
Ye.adapters = {};
Ye.Infinity = rh;
Ye.BackgroundDetector = Ny;
Ye.DeviceDetector = Ry;
Ye.UUIDGenerator = My;
Ye.registerAdapter = function(e, i) {
  this.adapters[e] = i;
}.bind(Ye);
Ye.unregisterAdapter = function(e) {
  this.adapters[e] = null;
}.bind(Ye);
var Di = Ye;
const tI = "videojs", iI = "adapter", nI = "js", rI = "Jesus Lopez", sI = "6.8.12", aI = "2022-10-25", oI = "https://bitbucket.org/npaw/videojs-adapter-js.git", uI = "^6.8.33", lI = {
  buffer: "native",
  seek: "native",
  error: !0,
  stop: !0,
  pause: !0,
  resume: !0,
  getters: [
    "getPlayhead",
    "getPlayrate",
    "getDuration",
    "getBitrate",
    "getRendition",
    "getTitle",
    "getIsLive",
    "getResource",
    "getPlayerVersion"
  ]
}, cI = [
  {
    buffer: "monitor",
    seek: "monitor",
    error: !0,
    stop: !0,
    pause: !0,
    resume: !0,
    getters: [
      "getPlayhead",
      "getDuration",
      "getTitle",
      "getResource",
      "getPosition",
      "getGivenBreaks",
      "getBreaksTime",
      "getGivenAds",
      "getIsVisible",
      "getAudioEnabled",
      "getIsSkippable",
      "getIsFullscreen",
      "getCreativeId"
    ],
    filename: "bcove-freewheel.js"
  },
  {
    buffer: "monitor",
    seek: "monitor",
    error: !0,
    stop: !0,
    pause: !0,
    resume: !0,
    getters: [
      "getPlayhead",
      "getDuration",
      "getBitrate",
      "getTitle",
      "getResource",
      "getPlayerVersion",
      "getPosition",
      "getGivenBreaks",
      "getBreaksTime",
      "getGivenAds",
      "getIsVisible",
      "getAudioEnabled",
      "getIsSkippable",
      "getIsFullscreen",
      "getCreativeId"
    ],
    filename: "bcove-ima.js"
  },
  {
    buffer: "monitor",
    seek: "monitor",
    error: !1,
    stop: !1,
    pause: !1,
    resume: !1,
    getters: [],
    filename: "freewheel.js"
  },
  {
    buffer: "monitor",
    seek: "monitor",
    error: !0,
    stop: !0,
    pause: !1,
    resume: !1,
    getters: [],
    filename: "generic.js"
  },
  {
    buffer: "monitor",
    seek: "monitor",
    error: !0,
    stop: !0,
    pause: !0,
    resume: !0,
    getters: [
      "getPlayhead",
      "getDuration",
      "getTitle",
      "getIsLive",
      "getResource",
      "getPlayerVersion",
      "getPosition",
      "getGivenBreaks",
      "getBreaksTime",
      "getGivenAds",
      "getIsVisible",
      "getAudioEnabled",
      "getIsSkippable",
      "getIsFullscreen"
    ],
    filename: "ima.js"
  },
  {
    buffer: "monitor",
    seek: "monitor",
    error: !0,
    stop: !0,
    pause: !0,
    resume: !0,
    getters: [
      "getPlayhead",
      "getDuration",
      "getResource",
      "getPosition"
    ],
    filename: "onceux.js"
  }
], bu = {
  name: tI,
  type: iI,
  tech: nI,
  author: rI,
  version: sI,
  built: aI,
  repo: oI,
  libVersion: uI,
  features: lI,
  ads: cI
};
var ql, Gf;
function dI() {
  if (Gf)
    return ql;
  Gf = 1;
  var e = Di, i = bu, n = e.Adapter.extend({
    isGeneric: !0,
    getVersion: function() {
      return i.version + "-videojs-ads";
    },
    registerListeners: function() {
      if (this.references = {
        adstart: this.adStartListener.bind(this),
        adend: this.adEndListener.bind(this),
        adskip: this.adSkipListener.bind(this),
        adserror: this.errorListener.bind(this),
        "ads-click": this.clickListener.bind(this)
      }, this.player)
        for (var t in this.references)
          this.player.on(t, this.references[t]);
    },
    unregisterListeners: function() {
      if (this.player && this.references) {
        for (var t in this.references)
          this.player.off(t, this.references[t]);
        delete this.references;
      }
    },
    adStartListener: function(t) {
      this.fireStart(), this.fireJoin();
    },
    adEndListener: function(t) {
      this.fireStop();
    },
    adSkipListener: function(t) {
      this.fireSkip();
    },
    errorListener: function(t) {
      this.fireError();
    },
    clickListener: function(t) {
      this.fireClick();
    }
  });
  return ql = n, ql;
}
var Vl, Kf;
function hI() {
  if (Kf)
    return Vl;
  Kf = 1;
  var e = Di, i = e.Adapter.extend(
    {
      getVersion: function() {
        var n = null;
        return typeof google < "u" && google.ima && (n = "bcove-ima " + google.ima.VERSION), n;
      },
      getPlayhead: function() {
        var n = this.plugin.getAdapter().player;
        return this.player.ima3 && this.player.ima3 && this.player.ima3.adPlayer && (n = this.player.ima3.adPlayer), n.currentTime();
      },
      getDuration: function() {
        var n = null;
        if (this.player.ads && this.player.ads.ad && this.player.ads.ad.duration)
          n = this.player.ads.ad.duration;
        else {
          var t = this.plugin.player;
          this.player.ima3 && (t = this.player.ima3.adPlayer), n = t && t.duration ? t.duration() : null;
        }
        return n;
      },
      getPosition: function() {
        var n = e.Constants.AdPosition.Midroll;
        if (this.player.ads && this.player.ads.ad)
          switch (this.player.ads.ad.type) {
            case "PREROLL":
              n = e.Constants.AdPosition.Preroll;
              break;
            case "MIDROLL":
              n = e.Constants.AdPosition.Midroll;
              break;
            case "POSTROLL":
              n = e.Constants.AdPosition.Postroll;
              break;
          }
        else
          this.plugin._adapter.getPlayhead() >= this.plugin._adapter.getDuration() && (n = e.Constants.AdPosition.Postroll);
        return this.plugin._adapter.flags.isJoined || (n = e.Constants.AdPosition.Preroll), n;
      },
      getResource: function() {
        var n = "unknown";
        return this.player.ima3 && (n = this.player.ima3.currentAd.getMediaUrl()), n;
      },
      getTitle: function() {
        var n = null;
        return this.player.ima3 && this.player.ima3.currentAd && (n = this.player.ima3.currentAd.getTitle()), n;
      },
      getPlayerVersion: function() {
        var n = null;
        return this.player.ima3 && (n = this.player.ima3.VERSION), n;
      },
      getGivenBreaks: function() {
        var n = null;
        return this.player.ima3 && (n = this.player.ima3.adsManager.getCuePoints().length), n;
      },
      getBreaksTime: function() {
        var n = null;
        if (this.player.ima3) {
          var t = this.player.ima3.adsManager.getCuePoints();
          for (var r in t)
            (!t[r] && t[r] !== 0 || t[r] === -1) && (t[r] = this.plugin._adapter.getDuration());
          n = t;
        }
        return n;
      },
      getGivenAds: function() {
        var n = null;
        return this.player.ima3 && this.player.ima3.currentAd && this.player.ima3.currentAd.getAdPodInfo() && (n = this.player.ima3.currentAd.getAdPodInfo().getTotalAds()), n;
      },
      getAudioEnabled: function() {
        var n = null;
        return this.player.muted() ? n = !1 : n = !!this.player.volume(), n;
      },
      getIsSkippable: function() {
        var n = !1;
        return this.player.ima3 && (n = this.player.ima3.currentAd && this.player.ima3.currentAd.isSkippable()), n;
      },
      getIsFullscreen: function() {
        var n = null;
        if (this.plugin.deviceDetector.isIphone())
          n = !this.plugin.deviceDetector.isInBackground;
        else {
          var t = null;
          this.player.ima3 && (t = this.player.ima3.el), n = t ? window.innerHeight <= t.clientHeight + 30 && window.innerWidth <= t.clientWidth + 30 : !1;
        }
        return n;
      },
      getIsVisible: function() {
        var n = null;
        return this.plugin.deviceDetector.isIphone() ? n = !this.plugin.deviceDetector.isInBackground : this.player.ima3 && (n = e.Util.calculateAdViewability(this.player.ima3.el)), n;
      },
      getBitrate: function() {
        var n = -1;
        return this.player.ima3 && this.player.ima3.currentAd && this.player.ima3.currentAd.getVastMediaBitrate() && (n = this.player.ima3.currentAd.getVastMediaBitrate()), n;
      },
      getCreativeId: function() {
        var n = null;
        return this.player.ima3 && this.player.ima3.currentAd ? n = this.player.ima3.currentAd.getCreativeAdId() || this.player.ima3.currentAd.getCreativeId() : this.titles && (n = this.titles[(this.plugin.requestBuilder.lastSent.adNumber || 1) - 1]._creativeId), n;
      },
      registerListeners: function() {
        if (this.monitorPlayhead(!0, !1), this.references = {
          "ima3-started": this.startJoinListener.bind(this),
          "ima3-paused": this.pausedListener.bind(this),
          "ima3-resumed": this.resumedListener.bind(this),
          "ima3-complete": this.adEndedListener.bind(this),
          "ima3-skipped": this.skippedListener.bind(this),
          "ima3-ad-error": this.errorListener.bind(this),
          "ads-pod-ended": this.podEndListener.bind(this),
          "ads-click": this.clickListener.bind(this),
          "ads-first-quartile": this.firstQuartileListener.bind(this),
          "ads-midpoint": this.secondQuartileListener.bind(this),
          "ads-third-quartile": this.thirdQuartileListener.bind(this)
        }, this.player)
          for (var n in this.references)
            this.player.on(n, this.references[n]);
      },
      startJoinListener: function(n) {
        this.plugin._adapter && this.plugin._adapter.firePause(), this.fireStart(), this.fireJoin();
      },
      pausedListener: function(n) {
        this.firePause();
      },
      resumedListener: function(n) {
        this.fireResume();
      },
      skippedListener: function(n) {
        this.fireSkip(), this.plugin._adapter && this.plugin._adapter.fireResume();
      },
      adEndedListener: function(n) {
        var t = this.plugin.requestBuilder.lastSent.adPosition === e.Constants.AdPosition.Preroll ? 0 : this.plugin._adapter.lastPlayhead;
        this.fireStop({ playhead: t, adPlayhead: this.getDuration() });
      },
      errorListener: function(n) {
        if (this.player.ima3)
          if (n.getError && n.getError()) {
            var t = n.getError();
            this.fireError(t.getCode(), t.getMessage());
          } else
            this.fireError();
      },
      clickListener: function(n) {
        if (this.player.ima3) {
          var t = null;
          this.player.ima3.currentAd && this.player.ima3.currentAd.g && (t = this.player.ima3.currentAd.g.clickThroughUrl), this.fireClick(t);
        }
      },
      firstQuartileListener: function(n) {
        this.fireQuartile(1);
      },
      secondQuartileListener: function(n) {
        this.fireQuartile(2);
      },
      thirdQuartileListener: function(n) {
        this.fireQuartile(3);
      },
      podEndListener: function(n) {
        this.fireBreakStop();
      },
      unregisterListeners: function() {
        if (this.monitor && this.monitor.stop(), this.player && this.references) {
          for (var n in this.references)
            this.player.off(n, this.references[n]);
          delete this.references;
        }
      },
      adPlayerErrorListener: function(n) {
        var t = n.data.AdError, r = [
          1012,
          1005,
          301,
          402,
          302
        ], s = [
          1007,
          1009,
          303
        ], a = [
          403,
          100,
          503,
          101,
          102
        ];
        r.indexOf(t.getErrorCode()) >= 0 ? this.fireManifest(e.Constants.ManifestError.NO_RESPONSE, t.getMessage()) : s.indexOf(t.getErrorCode()) >= 0 ? this.fireManifest(e.Constants.ManifestError.EMPTY, t.getMessage()) : a.indexOf(t.getErrorCode()) >= 0 ? this.fireManifest(e.Constants.ManifestError.WRONG, t.getMessage()) : this.fireError(t.getErrorCode(), t.getMessage());
      }
    },
    {
      isUsed: function(n) {
        return typeof google < "u" && n.player.ima3 && n.player.ads;
      }
    }
  );
  return Vl = i, Vl;
}
var Hl, zf;
function pI() {
  if (zf)
    return Hl;
  zf = 1;
  var e = Di, i = e.Adapter.extend(
    {
      getVersion: function() {
        var n = "unknown";
        return this.player.FreeWheelPlugin.getVersion ? n = "bcove-fw " + this.player.FreeWheelPlugin.getVersion() : this.player.FreeWheelPlugin.VERSION && (n = "bcove-ssai " + this.player.FreeWheelPlugin.VERSION), n;
      },
      getDuration: function() {
        var n = null;
        if (this.player.ads && this.player.ads.ad && this.player.ads.ad.duration)
          n = this.player.ads.ad.duration;
        else {
          var t = this.plugin.player;
          if (this.player.FreeWheelPlugin) {
            var r = this.player.FreeWheelPlugin.tech;
            this.player.FreeWheelPlugin[r].adPlayer && (t = this.player.FreeWheelPlugin[r].adPlayer);
          }
          t && t.duration && (n = t.duration());
        }
        return n;
      },
      getPosition: function() {
        var n = e.Constants.AdPosition.Midroll;
        if (this.player.ads && this.player.ads.ad)
          switch (this.player.ads.ad.type) {
            case "PREROLL":
              n = e.Constants.AdPosition.Preroll;
              break;
            case "MIDROLL":
              n = e.Constants.AdPosition.Midroll;
              break;
            case "POSTROLL":
              n = e.Constants.AdPosition.Postroll;
              break;
          }
        else
          this.plugin._adapter.flags.isJoined ? this.plugin._adapter.getPlayhead() >= this.plugin._adapter.getDuration() && (n = e.Constants.AdPosition.Postroll) : n = e.Constants.AdPosition.Preroll;
        return n;
      },
      getResource: function() {
        var n = null;
        if (this.slot) {
          var t = this.slot.getAdInstances();
          if (t) {
            var r = (this.plugin.requestBuilder.lastSent.adNumber || 1) - 1;
            if (t[r] && t[r].getActiveCreativeRendition) {
              var s = t[r].getActiveCreativeRendition();
              if (s && s.getPrimaryCreativeRenditionAsset) {
                var a = s.getPrimaryCreativeRenditionAsset();
                a && a.getUrl && a.getUrl() && (n = a.getUrl());
              }
              s && s.getWrapperUrl && !n && (n = s.getWrapperUrl());
            }
          }
        }
        return n || "unknown";
      },
      getTitle: function() {
        var n = null;
        return this.player.FreeWheelPlugin.adsManager && this.player.FreeWheelPlugin.adsManager.getCurrentAd() && this.player.FreeWheelPlugin.adsManager.getCurrentAd().getTitle() ? n = this.player.FreeWheelPlugin.adsManager.getCurrentAd().getTitle() : this.titles && (n = this.titles[(this.plugin.requestBuilder.lastSent.adNumber || 1) - 1]._adId), n;
      },
      getPlayhead: function() {
        var n = this.plugin.getAdapter().player;
        return this.player.FreeWheelPlugin.adPlayer && (n = this.player.FreeWheelPlugin.adPlayer), n.currentTime();
      },
      getGivenBreaks: function() {
        var n = this.player.FreeWheelPlugin.tech, t = this.player.FreeWheelPlugin[n]._adContext._adResponse.getTemporalSlots(), r = 0;
        for (var s in t) {
          var a = t[s];
          if (a.getAdCount() > 0) {
            var o = a.getAdInstances();
            for (var u in o)
              if (o[u]._creativeRenditions[0]._baseUnit === "video") {
                r++;
                break;
              }
          }
        }
        return r;
      },
      getBreaksTime: function() {
        var n = null, t = this.player.FreeWheelPlugin[this.player.FreeWheelPlugin.tech]._adContext._adResponse.getTemporalSlots(), r = [];
        for (var s in t) {
          var a = t[s];
          if (a.getAdCount() > 0) {
            var o = a.getAdInstances();
            for (var u in o)
              if (o[u]._creativeRenditions[0]._baseUnit === "video") {
                this.plugin.getDuration() && a.getTimePosition() > this.plugin.getDuration() ? r.push(this.plugin.getDuration()) : r.push(a.getTimePosition());
                break;
              }
          }
        }
        return n = r.sort(), n;
      },
      getGivenAds: function() {
        var n = this.player.FreeWheelPlugin.tech;
        return this.player.FreeWheelPlugin[n]._currentSlot.getAdCount();
      },
      getAudioEnabled: function() {
        var n = null;
        return this.player.muted() ? n = !1 : n = !!this.player.volume(), n;
      },
      getIsSkippable: function() {
        return !1;
      },
      getIsFullscreen: function() {
        var n = null;
        if (this.plugin.deviceDetector.isIphone())
          n = !this.plugin.deviceDetector.isInBackground;
        else {
          var t = null, r = this.player.FreeWheelPlugin.tech;
          t = this.player.FreeWheelPlugin[r]._video, n = t ? window.innerHeight <= t.clientHeight + 30 && window.innerWidth <= t.clientWidth + 30 : !1;
        }
        return n;
      },
      getIsVisible: function() {
        var n = null;
        if (this.plugin.deviceDetector.isIphone())
          n = !this.plugin.deviceDetector.isInBackground;
        else {
          if (!this.contentPlayer) {
            var t = this.player.FreeWheelPlugin.tech;
            for (var r in this.player.FreeWheelPlugin[t]) {
              var s = this.player.FreeWheelPlugin[t][r];
              if (s.videoHeight && s.clientHeight) {
                this.contentPlayer = s;
                break;
              }
            }
          }
          n = e.Util.calculateAdViewability(this.contentPlayer);
        }
        return n;
      },
      getCreativeId: function() {
        var n = null;
        return this.titles && (n = this.titles[(this.plugin.requestBuilder.lastSent.adNumber || 1) - 1]._creativeId), n;
      },
      registerListeners: function() {
        if (this.monitorPlayhead(!0, !1), this.references = {
          "ads-ad-started": this.startJoinListener.bind(this),
          "ads-pause": this.pausedListener.bind(this),
          "ads-play": this.resumedListener.bind(this),
          "ads-ad-ended": this.adEndedListener.bind(this),
          "ads-pod-ended": this.podEndListener.bind(this),
          "ads-first-quartile": this.firstQuartileListener.bind(this),
          "ads-midpoint": this.secondQuartileListener.bind(this),
          "ads-third-quartile": this.thirdQuartileListener.bind(this)
        }, typeof tv < "u") {
          var n = this.player.FreeWheelPlugin[this.player.FreeWheelPlugin.tech]._adContext;
          this.events = tv.freewheel.SDK, this.fwreferences = {}, this.fwreferences[this.events.EVENT_AD] = this.logListener.bind(this), this.fwreferences[this.events.EVENT_SLOT_STARTED] = this.slotListener.bind(this), this.fwreferences[this.events.EVENT_ERROR] = this.errorFwListener.bind(this), this.manifestNoResponse = [
            this.events.ERROR_SECURITY,
            this.events.ERROR_TIMEOUT
          ];
          for (var t in this.manifestNoResponse)
            this.fwreferences[t] = this.noResponseManifestListener.bind(this);
          this.manifestEmpty = [
            this.events.ERROR_NO_AD_AVAILABLE,
            this.events.ERROR_VAST_NO_AD
          ];
          for (var r in this.manifestEmpty)
            this.fwreferences[r] = this.manifestEmptyListener.bind(this);
          this.manifestWrong = [
            this.events.ERROR_VAST_VERSION_NOT_SUPPORTED,
            this.events.ERROR_VAST_WRAPPER_LIMIT_REACH,
            this.events.ERROR_VAST_XML_PARSING,
            this.events.ERROR_PARSE
          ];
          for (var s in this.manifestWrong)
            this.fwreferences[s] = this.manifestWrongListener.bind(this);
          if (this.player)
            for (var t in this.fwreferences)
              n.addEventListener(t, this.fwreferences[t]);
        }
        if (this.player)
          for (var t in this.references)
            this.player.on(t, this.references[t]);
      },
      logListener: function(n) {
        if (n.errorCode || n.errorInfo || n.errorModule) {
          this.errorFwListener(n);
          return;
        }
        switch (n.subType) {
          case this.events.EVENT_AD_SKIPPED:
            this.skippedListener(n);
            break;
          case this.events.EVENT_SLOT_STARTED:
            this.slotListener(n);
            break;
          case this.events.EVENT_AD_CLICK:
            this.clickFwListener(n);
            break;
        }
      },
      skippedListener: function(n) {
        this.fireSkip(), this.plugin._adapter && this.plugin._adapter.fireResume();
      },
      noResponseManifestListener: function(n) {
        this.fireManifest(e.Constants.ManifestError.NO_RESPONSE, "No response");
      },
      manifestEmptyListener: function(n) {
        this.fireManifest(e.Constants.ManifestError.EMPTY, "Empty manifest");
      },
      manifestWrongListener: function(n) {
        this.fireManifest(e.Constants.ManifestError.WRONG, "Wrong manifest format");
      },
      slotListener: function(n) {
        this.slot = n.slot, n && n.slot && n.slot.getAdInstances && (this.titles = n.slot.getAdInstances());
      },
      startJoinListener: function(n) {
        this.plugin._adapter && this.plugin._adapter.firePause(), this.fireStart(), this.fireJoin();
      },
      pausedListener: function(n) {
        this.firePause();
      },
      resumedListener: function(n) {
        this.fireResume();
      },
      adEndedListener: function(n) {
        var t = this.plugin.requestBuilder.lastSent.adPosition === e.Constants.AdPosition.Preroll ? 0 : this.plugin._adapter.lastPlayhead;
        this.fireStop({ playhead: t, adPlayhead: this.getDuration() });
      },
      errorFwListener: function(n) {
        this.fireError(n.errorCode || n.subType, n.errorInfo), this.fireStop();
      },
      clickFwListener: function(n) {
        var t = n.adInstance.getEventCallbackUrls(this.events.EVENT_AD_CLICK, this.events.EVENT_TYPE_CLICK)[0];
        this.fireClick(t);
      },
      firstQuartileListener: function(n) {
        this.fireQuartile(1);
      },
      secondQuartileListener: function(n) {
        this.fireQuartile(2);
      },
      thirdQuartileListener: function(n) {
        this.fireQuartile(3);
      },
      podEndListener: function(n) {
        this.fireBreakStop();
      },
      unregisterListeners: function() {
        if (this.monitor && this.monitor.stop(), this.player && this.references) {
          for (var n in this.references)
            this.player.off(n, this.references[n]);
          delete this.references;
        }
      }
    },
    {
      isUsed: function(n) {
        return n.player.ads && n.player.FreeWheelPlugin;
      }
    }
  );
  return Hl = i, Hl;
}
const fI = "freewheel", mI = "adapter", gI = "js", vI = "Jesus Lopez", yI = "6.8.2", _I = "2022-10-03", bI = "https://bitbucket.org/npaw/freewheel-adapter-js", TI = "^6.8.28", EI = {
  buffer: "monitor",
  seek: "monitor",
  error: !0,
  stop: !0,
  pause: !0,
  resume: !0,
  getters: [
    "getPlayhead",
    "getDuration",
    "getTitle",
    "getResource",
    "getPlayerVersion",
    "getPosition",
    "getGivenBreaks",
    "getBreaksTime",
    "getGivenAds",
    "getIsVisible",
    "getAudioEnabled",
    "getCreativeId"
  ]
}, SI = [], wI = {
  name: fI,
  type: mI,
  tech: gI,
  author: vI,
  version: yI,
  built: _I,
  repo: bI,
  libVersion: TI,
  features: EI,
  ads: SI
};
var Wl, Xf;
function kI() {
  if (Xf)
    return Wl;
  Xf = 1;
  var e = Di, i = wI;
  return e.adapters.Freewheel = e.Adapter.extend({
    getVersion: function() {
      return i.version + "-" + i.name + "-" + i.tech;
    },
    getPlayhead: function() {
      return this._getAdInstanceMethodCall("getPlayheadTime");
    },
    getDuration: function() {
      return this._getAdInstanceMethodCall("getDuration");
    },
    getTitle: function() {
      try {
        if (this.titles)
          return this.titles[this._getAdNumber()]._adId;
      } catch {
      }
      return "unknown";
    },
    getResource: function() {
      var n = null, t = this._getAdInstanceMethodCall("getActiveCreativeRendition");
      return t && (typeof t.getPrimaryCreativeRenditionAsset == "function" ? (asset = t.getPrimaryCreativeRenditionAsset(), asset && typeof asset.getUrl == "function" && (n = asset.getUrl())) : typeof t.getWrapperUrl == "function" && (n = t.getWrapperUrl())), n;
    },
    getPlayerVersion: function() {
      var n = null;
      return typeof tv < "u" && tv.freewheel && tv.freewheel.SDK && (n = tv.freewheel.SDK.version), n;
    },
    getPlayerName: function() {
      return "Freewheel";
    },
    getPosition: function() {
      return this.position;
    },
    getIsVisible: function() {
      if (!this.contentPlayer)
        for (var n in this.player) {
          var t = this.player[n];
          if (t && t.videoHeight && t.clientHeight) {
            this.contentPlayer = t;
            break;
          }
        }
      return e.Util.calculateAdViewability(this.contentPlayer);
    },
    getAudioEnabled: function() {
      for (var n in this.player) {
        var t = this.player[n];
        if (t && t.adManager && t.adManager._context && t.adManager._context.getAdVolume)
          return !!t.adManager._context.getAdVolume();
      }
    },
    getGivenAds: function() {
      return this.slot.getAdCount();
    },
    getBreaksTime: function() {
      var n = this.getSlots();
      if (!n)
        return null;
      var t = [];
      for (var r in n) {
        var s = n[r];
        if (s.getAdCount() > 0) {
          var a = s.getAdInstances();
          for (var o in a)
            if (a[o]._creativeRenditions[0]._baseUnit === "video") {
              var u = this.plugin.getDuration(), l = s.getTimePosition();
              t.push(u && l > u ? u : l);
              break;
            }
        }
      }
      return t;
    },
    getGivenBreaks: function() {
      var n = this.getSlots();
      if (!n)
        return null;
      var t = 0;
      for (var r in n) {
        var s = n[r];
        if (s.getAdCount() > 0) {
          var a = s.getAdInstances();
          for (var o in a)
            if (a[o]._creativeRenditions[0]._baseUnit === "video") {
              t++;
              break;
            }
        }
      }
      return t;
    },
    getCreativeId: function() {
      var n = null;
      if (this.slot) {
        var t = this.slot.getAdInstances(), r = this._getAdNumber();
        t && t[r] && (n = t[r]._creativeId);
      }
      return n;
    },
    getSlots: function() {
      if (this.player.currentAdContext)
        return this.player.currentAdContext._adResponse.getTemporalSlots();
      for (var n in this.player) {
        var t = this.player[n];
        if (t && t._adResponse && t._adResponse.getTemporalSlots)
          return t;
      }
      return null;
    },
    _getAdNumber: function() {
      return (this.plugin.requestBuilder.lastSent.adNumber || 1) - 1;
    },
    _getAdInstanceMethodCall: function(n) {
      if (ret = null, this.slot) {
        var t = this.slot.getAdInstances(), r = this._getAdNumber();
        t && t[r] && typeof t[r][n] == "function" && (ret = t[r][n]());
      }
      return ret;
    },
    registerListeners: function() {
      this.canRemoveListeners = !0, this.events = tv.freewheel.SDK, this.manifestNoResponse = [
        this.events.ERROR_SECURITY,
        this.events.ERROR_TIMEOUT
      ], this.manifestEmpty = [
        this.events.ERROR_NO_AD_AVAILABLE,
        this.events.ERROR_VAST_NO_AD
      ], this.manifestWrong = [
        this.events.ERROR_VAST_VERSION_NOT_SUPPORTED,
        this.events.ERROR_VAST_WRAPPER_LIMIT_REACH,
        this.events.ERROR_VAST_XML_PARSING,
        this.events.ERROR_PARSE
      ], this.ignoredErrors = [
        this.events.ERROR_ADINSTANCE_UNAVAILABLE
      ], this.references = {}, this.references[this.events.EVENT_AD] = this.logListener.bind(this), this.references[this.events.EVENT_ERROR] = this.errorListener.bind(this), this.references[this.events.EVENT_SLOT_STARTED] = this.slotListener.bind(this), this.references[this.events.EVENT_SLOT_ENDED] = this.closeListener.bind(this);
      for (var n in this.manifestNoResponse)
        this.references[n] = this.noResponseManifestListener.bind(this);
      for (var t in this.manifestEmpty)
        this.references[t] = this.manifestEmptyListener.bind(this);
      for (var r in this.manifestWrong)
        this.references[r] = this.manifestWrongListener.bind(this);
      for (var s in this.references)
        this.player.currentAdContext.addEventListener(s, this.references[s]);
    },
    unregisterListeners: function() {
      if (this.player && this.references) {
        for (var n in this.references)
          this.player.currentAdContext.removeEventListener(n, this.references[n]);
        this.references = {};
      }
    },
    noResponseManifestListener: function(n) {
      this.fireManifest(e.Constants.ManifestError.NO_RESPONSE, "No response");
    },
    manifestEmptyListener: function(n) {
      this.fireManifest(e.Constants.ManifestError.EMPTY, "Empty manifest");
    },
    manifestWrongListener: function(n) {
      this.fireManifest(e.Constants.ManifestError.WRONG, "Wrong manifest format");
    },
    logListener: function(n) {
      if (e.Log.debug(n.subType), n.errorCode || n.errorInfo || n.errorModule) {
        this.errorListener(n);
        return;
      }
      switch (n.subType) {
        case this.events.EVENT_AD_PAUSE:
          this.pauseListener(n);
          break;
        case this.events.EVENT_AD_RESUME:
          this.resumeListener(n);
          break;
        case this.events.EVENT_AD_IMPRESSION_END:
          this.endedListener(n);
          break;
        case this.events.EVENT_AD_INITIATED:
          this.playListener(n);
          break;
        case this.events.EVENT_AD_IMPRESSION:
          this.playingListener(n);
          break;
        case this.events.EVENT_AD_SKIPPED:
          this.skipListener(n);
          break;
        case this.events.EVENT_SLOT_STARTED:
          this.slotListener(n);
          break;
        case this.events.EVENT_AD_CLOSE:
        case this.events.EVENT_SLOT_ENDED:
          this.closeListener(n);
          break;
        case this.events.EVENT_AD_CLICK:
          this.clickListener(n);
          break;
        case this.events.EVENT_AD_FIRST_QUARTILE:
          this.fireQuartile(1);
          break;
        case this.events.EVENT_AD_MIDPOINT:
          this.fireQuartile(2);
          break;
        case this.events.EVENT_AD_THIRD_QUARTILE:
          this.fireQuartile(3);
          break;
        case this.events.ERROR_SECURITY:
        case this.events.ERROR_TIMEOUT:
          this.noResponseManifestListener(n);
          break;
        case this.events.ERROR_NO_AD_AVAILABLE:
        case this.events.ERROR_VAST_NO_AD:
          this.manifestEmptyListener(n);
          break;
        case this.events.ERROR_VAST_VERSION_NOT_SUPPORTED:
        case this.events.ERROR_VAST_WRAPPER_LIMIT_REACH:
        case this.events.ERROR_VAST_XML_PARSING:
        case this.events.ERROR_PARSE:
          this.manifestWrongListener(n);
          break;
      }
    },
    slotListener: function(n) {
      this.slot = n.slot;
      var t = this.plugin.getAdapter();
      switch (this.disable = !1, slot.getTimePositionClass()) {
        case "POSTROLL":
          this.position = e.Constants.AdPosition.Postroll;
          break;
        case "MIDROLL":
          this.position = e.Constants.AdPosition.Midroll;
          break;
        case "PREROLL":
          t && t.flags.isJoined ? this.position = e.Constants.AdPosition.Midroll : this.position = e.Constants.AdPosition.Preroll;
          break;
        default:
          this.disable = !0;
      }
      this.disable || (this.titles = slot.getAdInstances(), this.unregister(), this.plugin.fireInit(), this.fireInit());
    },
    playListener: function(n) {
      this.disable || this.fireStart();
    },
    playingListener: function(n) {
      this.disable || (this.fireStart(), this.fireJoin(), this.fireResume());
    },
    pauseListener: function(n) {
      this.firePause();
    },
    resumeListener: function(n) {
      this.playListener(), this.fireResume();
    },
    endedListener: function(n) {
      this.fireStop();
    },
    skipListener: function(n) {
      this.fireSkip();
    },
    clickListener: function(n) {
      var t = n.adInstance.getEventCallbackUrls(tv.freewheel.SDK.EVENT_AD_CLICK, tv.freewheel.SDK.EVENT_TYPE_CLICK)[0], r = (/* @__PURE__ */ new Date()).getTime();
      this.lastUrl === t && r < (this.lastTime || 0) + 2e3 || (this.lastUrl = t, this.lastTime = r, this.fireClick(t));
    },
    closeListener: function(n) {
      this.register(), this.position === e.Constants.AdPosition.Postroll && !this.disable && this.plugin.fireStop();
    },
    errorListener: function(n) {
      this.fireError(n.errorCode || n.subType, n.errorInfo), this.fireStop(), this.register();
    },
    register: function(n) {
      var t = this.plugin.getAdapter();
      t && !this.canRemoveListeners && (t.registerListeners(), t.fireResume(), this.canRemoveListeners = !0);
    },
    unregister: function(n) {
      adapter && this.canRemoveListeners && (this.canRemoveListeners = !1, adapter.unregisterListeners(), adapter.firePause());
    },
    changeVideo: function(n) {
      (this.flags.isStarted || this.flags.isInited) && (this.fireStop(), this.plugin.fireStop(), this.register());
    }
  }), Wl = e.adapters.Freewheel, Wl;
}
var Gl, Qf;
function CI() {
  if (Qf)
    return Gl;
  Qf = 1;
  var e = kI(), i = e.extend({
    register: function() {
    },
    unregister: function() {
    }
  }, {
    isUsed: function(n) {
      return n.player && n.player.freewheelAds;
    }
  });
  return Gl = i, Gl;
}
var Kl, Jf;
function AI() {
  if (Jf)
    return Kl;
  Jf = 1;
  var e = Di, i = bu, n = e.Adapter.extend(
    {
      getVersion: function() {
        return i.version + "-videojs-ima-ads";
      },
      getDuration: function() {
        return this.ima.getAdsManager() && this.ima.getAdsManager().getCurrentAd() !== null && (this.duration = this.ima.getAdsManager().getCurrentAd().getDuration()), this.duration;
      },
      getResource: function() {
        var t = null, r = this.ima.getAdsManager();
        return r && (t = r.getCurrentAd().getMediaUrl()), t;
      },
      getTitle: function() {
        var t = null, r = this.ima.getAdsManager();
        return r && (t = r.getCurrentAd().getTitle()), t;
      },
      getPlayhead: function() {
        var t = null, r = this.ima.getAdsManager();
        return r && (t = this.getDuration() - r.getRemainingTime()), t;
      },
      getPlayerVersion: function() {
        return "IMA" + google.ima.VERSION + "; contrib-ads " + this.player.ads.VERSION;
      },
      getPosition: function() {
        var t = e.Constants.AdPosition.Preroll;
        return this.plugin._adapter.flags.isJoined && (!this.plugin.getIsLive() && this.plugin._adapter.getDuration() - 1 < this.plugin._adapter.getPlayhead() ? t = e.Constants.AdPosition.Postroll : this.plugin._adapter.getPlayhead() > 1 && (t = e.Constants.AdPosition.Midroll)), t;
      },
      getGivenBreaks: function() {
        var t = null;
        return this.cuepoints && (t = this.cuepoints.length), t;
      },
      getBreaksTime: function() {
        return this.cuepoints;
      },
      getGivenAds: function() {
        return this.totalAds;
      },
      getAudioEnabled: function() {
        return !this.ima.adMuted;
      },
      getIsSkippable: function() {
        return this.isSkippable;
      },
      getIsFullscreen: function() {
        var t = !1, r = this.ima.adDisplayContainer;
        for (var s in r)
          r[s] && r[s].width && r[s].height && window.innerHeight && window.innerWidth && r[s].width && r[s].height && (t = window.innerHeight <= r[s].height + 30 && window.innerWidth <= r[s].width + 30);
        return t;
      },
      getIsVisible: function() {
        return e.Util.calculateAdViewability(this.ima.adContainerDiv);
      },
      registerListeners: function() {
        this.monitorPlayhead(!0, !1);
        var t = google.ima.AdEvent.Type;
        if (this.references = {}, this.references[t.AD_METADATA] = this.metadataListener.bind(this), this.references[t.LOADED] = this.loadedListener.bind(this), this.references[t.CONTENT_PAUSE_REQUESTED] = this.contentPauseRequestedListener.bind(this), this.references[t.STARTED] = this.startedListener.bind(this), this.references[t.PAUSED] = this.pausedListener.bind(this), this.references[t.RESUMED] = this.resumedListener.bind(this), this.references[t.COMPLETE] = this.completeListener.bind(this), this.references[t.SKIPPED] = this.skippedListener.bind(this), this.references[t.CLICK] = this.clickListener.bind(this), this.references[google.ima.AdErrorEvent.Type.AD_ERROR] = this.errorListener.bind(this), this.references[t.ALL_ADS_COMPLETED] = this.adsEndedListener.bind(this), this.references[t.FIRST_QUARTILE] = this.firstQuartileListener.bind(this), this.references[t.MIDPOINT] = this.secondQuartileListener.bind(this), this.references[t.THIRD_QUARTILE] = this.thirdQuartileListener.bind(this), this.playerReferences = {
          adend: this.adEndedListener.bind(this),
          adstart: this.startedListener.bind(this),
          adskip: this.skippedListener.bind(this),
          adserror: this.errorListener.bind(this),
          "ads-click": this.clickListener.bind(this)
        }, this.player) {
          this.registerImaEvents();
          for (var r in this.playerReferences)
            this.player.on(r, this.playerReferences[r]);
        }
      },
      registerImaEvents: function() {
        if (this.player.ima.addEventListener ? this.ima = this.player.ima : this.player.ima.sdkImpl && this.player.ima.sdkImpl.addEventListener && (this.ima = this.player.ima.sdkImpl), this.ima)
          for (var t in this.references)
            this.ima.addEventListener(t, this.references[t]);
      },
      metadataListener: function(t) {
        this.cuepoints = t.getAdCuePoints().getCuePoints().slice(), this.plugin._adapter && this.cuepoints.forEach(function(r, s) {
          (this.cuepoints[s] === -1 || this.cuepoints[s] == null || this.cuepoints[s] === void 0) && (this.cuepoints[s] = this.plugin._adapter.getDuration());
        }.bind(this));
      },
      loadedListener: function(t) {
        this.isSkippable = t.getAdData().skippable, this.totalAds = t.getAdData().adPodInfo.totalAds, this.fireInit();
      },
      contentPauseRequestedListener: function(t) {
        this.fireInit();
      },
      startedListener: function(t) {
        this.fireStart(), this.fireJoin(), this.plugin.getAdapter().firePause();
      },
      pausedListener: function(t) {
        this.firePause();
      },
      resumedListener: function(t) {
        this.fireResume();
      },
      completeListener: function(t) {
        this.fireStop();
      },
      skippedListener: function(t) {
        this.fireSkip();
      },
      adEndedListener: function(t) {
        this.fireStop();
      },
      errorListener: function(t) {
        var r = null, s = null;
        typeof t.getError == "function" ? (r = t.getError(), s = r.getCode()) : t.data && t.data.AdError && (r = t.data.AdError, s = r.getErrorCode());
        var a = r ? r.getMessage() : null;
        this.fireError(s, a);
      },
      clickListener: function(t) {
        var r = null;
        try {
          if (t && typeof t.getAd == "function") {
            var s = t.getAd();
            for (prop in s)
              typeof s[prop] == "object" && s[prop].clickThroughUrl && (r = s[prop].clickThroughUrl.substring(s[prop].clickThroughUrl.indexOf("adurl=")).replace("adurl=", ""));
          }
        } catch {
          e.Log.notice("Couldnt get adclick url");
        }
        this.fireClick(r);
      },
      adsEndedListener: function(t) {
        this.plugin.getAdapter().adsEnded = !0, this.fireStop(), this.plugin.getAdapter().fireResume(), this.plugin.requestBuilder.lastSent.adPosition === e.Constants.AdPosition.Postroll && this.plugin.fireStop();
      },
      firstQuartileListener: function(t) {
        this.fireQuartile(1);
      },
      secondQuartileListener: function(t) {
        this.fireQuartile(2);
      },
      thirdQuartileListener: function(t) {
        this.fireQuartile(3);
      },
      unregisterListeners: function() {
        if (this.monitor && this.monitor.stop(), this.player && this.ima && this.references && this.playerReferences) {
          for (var t in this.references)
            ;
          for (var t in this.playerReferences)
            this.player.off(t, this.playerReferences[t]);
        }
        delete this.references, delete this.playerReferences;
      },
      adPlayerErrorListener: function(t) {
        var r = t.data.AdError, s = [
          1012,
          1005,
          301,
          402,
          302
        ], a = [
          1007,
          1009,
          303
        ], o = [
          403,
          100,
          503,
          101,
          102
        ], u = r.getErrorCode(), l = r.getMessage();
        s.indexOf(u) >= 0 ? this.fireManifest(e.Constants.ManifestError.NO_RESPONSE, l) : a.indexOf(u) >= 0 ? this.fireManifest(e.Constants.ManifestError.EMPTY, l) : o.indexOf(u) >= 0 ? this.fireManifest(e.Constants.ManifestError.WRONG, l) : this.fireError(u, l);
      }
    },
    {
      isUsed: function(t) {
        return typeof google < "u" && google.ima && t.player.ima;
      }
    }
  );
  return Kl = n, Kl;
}
var zl, Yf;
function II() {
  if (Yf)
    return zl;
  Yf = 1;
  var e = Di, i = bu, n = e.Adapter.extend(
    {
      getVersion: function() {
        return i.version + "-videojs-onceux-ads";
      },
      getResource: function() {
        return this.player.ads.contentSrc;
      },
      getPlayhead: function() {
        return this.player.onceux.currentTime();
      },
      getDuration: function() {
        return this.player.onceux.duration();
      },
      getPosition: function() {
        var t = e.Constants.AdPosition.Preroll;
        return this.plugin.getAdapter().flags.isJoined && (this.plugin.getAdapter().getPlayhead() <= this.plugin.getAdapter().getDuration() ? t = e.Constants.AdPosition.Midroll : t = e.Constants.AdPosition.Postroll), t;
      },
      registerListeners: function() {
        if (e.Util.logAllEvents(this.player, [
          null,
          "onceux-ads-complete",
          "onceux-adroll-start",
          "onceux-adroll-complete",
          "onceux-linearad-start",
          "onceux-linearad-impression",
          "onceux-linearad-complete",
          "onceux-linearad-skipped",
          "onceux-linearad-pause",
          "onceux-linearad-resume",
          "onceux-companionad-creativeView",
          "adserror",
          "ads-click"
        ]), this.monitorPlayhead(!0, !1), this.references = {
          "onceux-linearad-start": this.startedListener.bind(this),
          "onceux-linearad-pause": this.pausedListener.bind(this),
          "onceux-linearad-resume": this.resumedListener.bind(this),
          "onceux-linearad-complete": this.completeListener.bind(this),
          "onceux-linearad-skipped": this.skippedListener.bind(this),
          adserror: this.errorListener.bind(this),
          "ads-click": this.clickListener.bind(this)
        }, this.player)
          for (var t in this.references)
            this.player.on(t, this.references[t]);
      },
      unregisterListeners: function() {
        if (this.monitor && this.monitor.stop(), this.player && this.references) {
          for (var t in this.references)
            this.player.off(t, this.references[t]);
          delete this.references;
        }
      },
      startedListener: function(t) {
        this.fireStart(), this.fireJoin();
      },
      pausedListener: function(t) {
        this.firePause();
      },
      resumedListener: function(t) {
        this.fireResume();
      },
      completeListener: function(t) {
        this.fireStop({ adPlayhead: this.getDuration() });
      },
      skippedListener: function(t) {
        this.fireSkip();
      },
      errorListener: function(t) {
        this.fireError();
      },
      clickListener: function(t) {
        this.fireClick();
      }
    },
    {
      isUsed: function(t) {
        return t.player.onceux;
      }
    }
  );
  return zl = n, zl;
}
var Xl, $f;
function DI() {
  if ($f)
    return Xl;
  $f = 1;
  var e = Di;
  return Xl = {
    getHls: function(i) {
      return i.getTech().vhs || i.getTech().hls || i.getTech().hls_;
    },
    isUsed: function(i) {
      return !!this.getHls(i);
    },
    getBitrate: function(i) {
      var n = null, t = this.getHls(i).playlists.media();
      if (i.player.qualityLevels) {
        var r = i.player.qualityLevels(), s = r[r.selectedIndex];
        s && (n = s.bitrate);
      } else
        t && t.attributes && t.attributes.BANDWIDTH ? n = t.attributes.BANDWIDTH : i.player.tech_ && i.player.tech_.vhs && i.player.tech_.vhs.stats ? n = i.player.tech_.vhs.stats.bandwidth : i.player.tech_ && i.player.tech_.hls && i.player.tech_.hls.bandwidth ? n = i.player.tech_.hls.bandwidth : i.player.hls && i.player.hls.bandwidth && (n = i.player.hls.bandwidth);
      return n;
    },
    getRendition: function(i) {
      var n = null, t = this.getHls(i).playlists.media();
      if (i.player.qualityLevels) {
        var r = i.player.qualityLevels(), s = r[r.selectedIndex];
        s && (n = e.Util.buildRenditionString(s.width, s.height, s.bitrate));
      } else if (t && t.attributes) {
        var a = t.attributes;
        a.RESOLUTION ? n = e.Util.buildRenditionString(
          a.RESOLUTION.width,
          a.RESOLUTION.height,
          a.BANDWIDTH
        ) : a.BANDWIDTH ? n = e.Util.buildRenditionString(a.BANDWIDTH) : a.NAME && (n = a.NAME);
      }
      return n;
    },
    getTotalBytes: function(i) {
      var n = this.getHls(i), t = n.bytesReceived;
      return !t && n.stats && (t = n.stats.mediaBytesTransferred - i.acumBytes), t;
    }
  }, Xl;
}
var Ql, Zf;
function xI() {
  if (Zf)
    return Ql;
  Zf = 1;
  var e = Di;
  return Ql = {
    getHls: function(i) {
      return this.getTech();
    },
    isUsed: function(i) {
      return !!this.getTech(i);
    },
    getResource: function(i) {
      var n = null;
      return this.getTech(i) && this.getTech(i).url ? n = this.getTech(i).url : this.getHls(i) && this.getHls(i).source_ && (n = this.getHls(i).source_.src), n;
    },
    getBitrate: function(i) {
      var n = null, t = this.getTech(i).currentLevel;
      if (typeof t < "u" && t !== -1 && this.getTech(i).levels) {
        var r = this.getTech(i).levels[t];
        r && r.bitrate && (n = r.bitrate);
      }
      return n;
    },
    getRendition: function(i) {
      var n = null, t = this.getTech(i).currentLevel;
      if (typeof t < "u" && t !== -1 && this.getTech(i).levels) {
        var r = this.getTech(i).levels[t];
        r && (n = e.Util.buildRenditionString(r.width, r.height, r.bitrate));
      }
      return n;
    },
    getTech: function(i) {
      var n = i.getTech();
      return n.vhs || n.hls || n.hls_;
    }
  }, Ql;
}
var Jl, em;
function PI() {
  if (em)
    return Jl;
  em = 1;
  var e = Di;
  return Jl = {
    _getShaka: function(i) {
      var n = i.getTech();
      return n.shakaPlayer || n._shakaplayerInstance;
    },
    isUsed: function(i) {
      return !!this._getShaka(i);
    },
    getResource: function(i) {
      var n = "", t = this._getShaka(i);
      return typeof t.getManifestUri == "function" ? n = t.getManifestUri() : typeof t.getCurrentSrc == "function" && (n = t.getCurrentSrc()), n;
    },
    getBitrate: function(i) {
      var n = -1, t = this._getShaka(i);
      if (typeof t.getStats == "function")
        n = t.getStats().streamBandwidth;
      else if (typeof t.getVideoTracks == "function" && typeof t.getVideoTrackCurrentIndex == "function") {
        var r = t.getVideoTrackCurrentIndex(), s = t.getVideoTracks();
        for (var a in s) {
          var o = s[a];
          o.index == r && (n = o.bitrate);
        }
      }
      return n;
    },
    getRendition: function(i) {
      var n = this._getShaka(i), t = n.getStats(), r = e.Util.buildRenditionString(t.width, t.height, t.streamBandwidth), s = n.getVariantTracks();
      for (var a in s) {
        var o = s[a];
        if (o.active && o.type === "video") {
          r = e.Util.buildRenditionString(o.width, o.height, o.bandwidth);
          break;
        }
      }
      return r;
    }
  }, Jl;
}
var Yl, tm;
function LI() {
  if (tm)
    return Yl;
  tm = 1;
  var e = Di;
  return Yl = {
    isUsed: function(i) {
      return i.player.dash && i.player.dash.shakaPlayer;
    },
    getResource: function(i) {
      var n = "", t = i.player.dash.shakaPlayer;
      return typeof t.getManifestUri == "function" ? n = t.getManifestUri() : typeof t.getAssetUri == "function" && (n = t.getAssetUri()), n;
    },
    getBitrate: function(i) {
      return i.player.dash.shakaPlayer.getStats().streamBandwidth;
    },
    getRendition: function(i) {
      var n = i.player.dash.shakaPlayer, t = n.getStats(), r = e.Util.buildRenditionString(t.width, t.height, t.streamBandwidth), s = n.getVariantTracks();
      for (var a in s) {
        var o = s[a];
        o.active && o.type === "video" && (r = e.Util.buildRenditionString(o.width, o.height, o.bandwidth));
      }
      return r;
    }
  }, Yl;
}
var $l, im;
function OI() {
  if (im)
    return $l;
  im = 1;
  var e = Di;
  return $l = {
    isUsed: function(i) {
      return i.player.dash && i.player.dash.mediaPlayer && !i.player.dash.shakaPlayer;
    },
    getResource: function(i) {
      return this._getDashPlayer(i).getSource();
    },
    getBitrate: function(i) {
      var n = null, t = this._getDashPlayer(i);
      if (t) {
        var r = t.getQualityFor("video");
        r && (n = t.getBitrateInfoListFor("video")[r].bitrate);
      }
      return n;
    },
    getRendition: function(i) {
      var n = null, t = this._getDashPlayer(i);
      if (t) {
        var r = t.getQualityFor("video");
        if (r) {
          var s = t.getBitrateInfoListFor("video")[r];
          s && (n = e.Util.buildRenditionString(s.width, s.height, s.bitrate));
        }
      }
      return n;
    },
    _getDashPlayer: function(i) {
      return i.player.dash.mediaPlayer;
    }
  }, $l;
}
var Yr = Di, Zl = bu, ct = Yr.Adapter.extend(
  {
    getVersion: function() {
      return Zl.version + "-" + Zl.name + "-" + Zl.tech;
    },
    getTitle: function() {
      var e = null;
      return this.player.mediainfo && (e = this.player.mediainfo.name), e;
    },
    getPlayhead: function() {
      var e = this.player.currentTime();
      return this.plugin._adsAdapter && this.plugin._adsAdapter.flags.isStarted && (e = this.lastPlayhead || e), e;
    },
    getIsLive: function() {
      var e = null;
      return this.player.mediainfo && (e = !0, typeof this.player.mediainfo.duration == "number" && (e = this.player.mediainfo.duration < 1)), e;
    },
    getDuration: function() {
      var e = this.player.duration();
      return this.player.mediainfo && typeof this.player.mediainfo.duration < "u" && (e = this.player.mediainfo.duration), e;
    },
    getResource: function() {
      var e = null, i = this.getUsedTech();
      return i && i.getResource && (e = i.getResource(this)), e || (e = this.player.currentSrc()), e;
    },
    getBitrate: function() {
      var e = null, i = this.getUsedTech();
      return i && i.getBitrate && (e = i.getBitrate(this)), e;
    },
    getRendition: function() {
      var e = null, i = this.getUsedTech();
      return i && i.getRendition && (e = i.getRendition(this)), e;
    },
    getTotalBytes: function() {
      var e = null, i = this.getUsedTech();
      return i && i.getTotalBytes && (e = i.getTotalBytes(this)), e;
    },
    getPlayerName: function() {
      var e = "videojs";
      return ct.ContribHlsTech.isUsed(this) ? e += "-hls" : ct.HlsJsTech.isUsed(this) ? e += "-hlsjs" : ct.ShakaTech.isUsed(this) ? e += "-shaka" : ct.DashShakaTech.isUsed(this) ? e += "-dash-shaka" : ct.DashTech.isUsed(this) && (e += "-dash"), ct.ImaAdsAdapter.isUsed(this) ? e += "-ima" : ct.OnceUXAdsAdapter.isUsed(this) ? this.pluginName += "-oux" : this.player.FreeWheelPlugin && (e += "-fw"), this.player.mediainfo && (e += "-bcove"), e;
    },
    getPlayerVersion: function() {
      var e = null;
      return typeof videojs < "u" && (e = videojs.VERSION), e;
    },
    getPlayrate: function() {
      return this.player.playbackRate();
    },
    getTech: function() {
      return this.player.tech({ IWillNotUseThisInPlugins: !0 });
    },
    getUsedTech: function() {
      var e = null;
      return ct.ContribHlsTech.isUsed(this) ? e = ct.ContribHlsTech : ct.HlsJsTech.isUsed(this) ? e = ct.HlsJsTech : ct.ShakaTech.isUsed(this) ? e = ct.ShakaTech : ct.DashShakaTech.isUsed(this) ? e = ct.DashShakaTech : ct.DashTech.isUsed(this) && (e = ct.DashTech), e;
    },
    registerListeners: function() {
      if (this.monitorPlayhead(!0, !1, 1200), this.acumBytes = 0, this.ignoreList = [], this.fatalList = [], this.nonFatalList = [], this.references = {
        loadstart: this.loadstartListener.bind(this),
        adsready: this.loadAdsAdapter.bind(this),
        play: this.playListener.bind(this),
        timeupdate: this.timeupdateListener.bind(this),
        pause: this.pauseListener.bind(this),
        playing: this.playingListener.bind(this),
        ended: this.conditionalStop.bind(this),
        dispose: this.disposeListener.bind(this),
        seeking: this.seekingListener.bind(this),
        seeked: this.seekedListener.bind(this),
        error: this.errorListener.bind(this),
        adserror: this.aderrorListener.bind(this),
        adsEnded: this.adsEndedListener.bind(this),
        texttrackchange: this.textListener.bind(this),
        waiting: this.bufferingListener.bind(this)
      }, this.player)
        for (var e in this.references)
          this.player.on(e, this.references[e]);
      setTimeout(this.loadAdsAdapter.bind(this), 50);
    },
    unregisterListeners: function() {
      if (this.monitor && this.monitor.stop(), this.player && this.references) {
        for (var e in this.references)
          this.player.off(e, this.references[e]);
        delete this.references;
      }
    },
    textListener: function(e) {
      if (this.player.textTracks)
        for (var i = this.player.textTracks(), n = i.length, t = 0; t < n; ++t)
          i[t] && i[t].mode === "showing" && (this.plugin.options["content.subtitles"] = i[t].label || i[t].language);
    },
    aderrorListener: function(e) {
      this.loadAdsAdapter(), this.plugin.getAdsAdapter() && this.plugin.getAdsAdapter().adPlayerErrorListener && this.plugin.getAdsAdapter().adPlayerErrorListener(e);
    },
    loadstartListener: function(e) {
      this.loadAdsAdapter(), Yr.Log.notice("Player detected " + this.getPlayerName());
    },
    playListener: function(e) {
      this.flags.isStarted ? this.lastSrc && this.lastSrc !== this.getResource() && (this.fireStop({}, "playListenerNewResource"), this.acumBytesFunc(), this.lastPlayhead = void 0, this._startEvent("playListenerNewResource"), this.lastSrc = this.getResource()) : (this.lastSrc = this.getResource(), this._startEvent("playListenerNotStarted"));
    },
    _startEvent: function(e) {
      this.loadAdsAdapter(), this.player.options_ && this.plugin && !this.plugin.options["content.id"] && (this.plugin.options["content.id"] = this.player.options_["data-video-id"]), this.fireStart({}, e), this.flags.isJoined || (this.joinPolling || (this.joinPolling = new Yr.Timer(this._jointimePolling.bind(this), 500)), this.joinPolling.start());
    },
    _jointimePolling: function(e) {
      this.plugin ? (!this.plugin.getAdsAdapter() || !this.plugin.getAdsAdapter().flags.isStarted) && (this.lastPlayhead !== 0 && typeof this.lastPlayhead == "number" && this.lastPlayhead !== this.getPlayhead() && (this.fireJoin({}, "jointimePolling"), this.joinPolling && this.joinPolling.stop()), this.lastPlayhead = this.getPlayhead()) : this.joinPolling && this.joinPolling.stop();
    },
    timeupdateListener: function(e) {
      this.getPlayhead() > 0.1 && (this.fireJoin({}, "timeupdateListener"), this.joinPolling && this.joinPolling.stop(), !this.flags.isPaused && this.lastSeekPlayhead && this.lastSeekPlayhead !== this.getPlayhead() && (this.fireSeekEnd({}, "timeupdateListener"), this.lastSeekPlayhead = !1)), this.flags.isJoined || (this.lastPlayhead === void 0 && (this.lastPlayhead = this.getPlayhead()), this.lastPlayhead !== this.getPlayhead() && (this.player.options_ && this.plugin && !this.plugin.options["content.id"] && (this.plugin.options["content.id"] = this.player.options_["data-video-id"]), this.fireStart({}, "timeupdateListener"), this.fireJoin({}, "timeupdateListener"), this.joinPolling && this.joinPolling.stop(), this.lastPlayhead = void 0)), this.plugin._adsAdapter && !this.plugin._adsAdapter.flags.isStarted && (this.lastPlayhead = this.getPlayhead());
    },
    pauseListener: function(e) {
      this.firePause({}, "pauseListener");
    },
    playingListener: function(e) {
      this._startEvent("playingListener"), this.fireResume({}, "playingListener"), this.getPlayhead() < 1 && this.fireSeekEnd({}, "playingListener");
    },
    disposeListener: function(e) {
      this.plugin && (this.plugin.fireStop({}, "disposeListener"), this.plugin.removeAdsAdapter(), this.plugin.removeAdapter());
    },
    conditionalStop: function(e) {
      this.plugin && (this.adsEnded = !1, this.fireStop({}, "conditionalStop"), this.plugin && !this.plugin.options["content.id"] && (this.plugin.options["content.id"] = null), this.acumBytesFunc(), this.lastPlayhead = void 0);
    },
    adsEndedListener: function(e) {
      this.adsEnded = !0, this.plugin.requestBuilder.lastSent.adPosition === Yr.Constants.AdPosition.Postroll && (this.plugin.fireStop({}, "adsEndedListener"), this.acumBytesFunc(), this.lastPlayhead = void 0);
    },
    seekingListener: function(e) {
      this.fireSeekBegin({}, !1, "seekingListener");
    },
    seekedListener: function(e) {
      this.lastSeekPlayhead = this.getPlayhead();
    },
    bufferingListener: function(e) {
      this.fireBufferBegin({}, !1, "bufferingListener");
    },
    errorListener: function(e) {
      var i = !1, n = !1, t = null, r = null;
      this.player.error && this.player.error() && (t = Number(this.player.error().code), r = this.player.error().message, (t === 2 || t === 4 || t < 0) && (n = !0)), t !== null && (this.ignoreList.includes(t) && (i = !0), !n && this.fatalList.includes(t) ? n = !0 : n && this.nonFatalList.includes(t) && (n = !1)), i || (n ? (this.fireFatalError(t, r, void 0, void 0, "errorListener"), this.acumBytesFunc(), this.lastPlayhead = void 0, this.crashed = !0) : this.fireError(t, r, void 0, void 0, "errorListener"));
    },
    loadAdsAdapter: function() {
      if (this.plugin)
        if (this.plugin.getAdsAdapter() === null || this.plugin.getAdsAdapter().isGeneric) {
          var e = null;
          ct.ImaAdsAdapter.isUsed(this) ? e = new ct.ImaAdsAdapter(this.player) : ct.OnceUXAdsAdapter.isUsed(this) ? e = new ct.OnceUXAdsAdapter(this.player) : ct.BcoveImaAdsAdapter.isUsed(this) ? e = new ct.BcoveImaAdsAdapter(this.player) : ct.BcoveFreewheelAdsAdapter.isUsed(this) ? e = new ct.BcoveFreewheelAdsAdapter(this.player) : ct.FreewheelAdsAdapter.isUsed(this) ? e = new ct.FreewheelAdsAdapter(this.player.freewheelAds.controller) : this.plugin.getAdsAdapter() === null && (e = new ct.GenericAdsAdapter(this.player)), e && this.plugin.setAdsAdapter(e);
        } else
          this.plugin.getAdsAdapter().registerImaEvents && this.plugin.getAdsAdapter().registerImaEvents();
    },
    acumBytesFunc: function() {
      this.acumBytes += this.getTotalBytes() || 0;
    },
    errorModifyer: function(e, i, n) {
      this.fatalList = e || [], this.nonFatalList = i || [], this.ignoreList = n || [];
    }
  },
  {
    GenericAdsAdapter: dI(),
    BcoveImaAdsAdapter: hI(),
    BcoveFreewheelAdsAdapter: pI(),
    FreewheelAdsAdapter: CI(),
    ImaAdsAdapter: AI(),
    OnceUXAdsAdapter: II(),
    ContribHlsTech: DI(),
    HlsJsTech: xI(),
    ShakaTech: PI(),
    DashShakaTech: LI(),
    DashTech: OI()
  }
);
Yr.adapters.Videojs = ct;
var NI = Yr.adapters.Videojs;
function Uy(e) {
  var i;
  const n = e.tracking.metadata;
  return {
    "content.isLive": e.tracking.isLive === !0,
    "content.id": n.contentId,
    "content.title": n.title,
    "content.program": (i = n.showTitle) != null ? i : n.title,
    "content.tvShow": n.showId,
    "content.season": n.seasonId ? `${n.seasonId} - ${n.seasonTitle}` : void 0,
    "content.episodeTitle": n.episodeTitle,
    obfuscateIp: !0,
    "user.name": e.tracking.userId,
    "app.name": "web",
    "app.releaseVersion": "",
    "parse.manifest": !0,
    "extraparam.1": e.tracking.sessionId,
    "extraparam.2": e.tracking.ageGroup
  };
}
function RI(e, i) {
  if (!i.accountCode) {
    console.warn(
      "NPAW was not enabled because options.npaw.accountCode is invalid."
    );
    return;
  }
  const n = new Di.Plugin({ accountCode: i.accountCode }), t = Uy(i);
  n.setOptions(t), n.setAdapter(new NI(e)), e._npaw = n;
}
function MI(e, i) {
  const n = e._npaw;
  !n || Object.assign(n.options, Uy(i));
}
function BI(e) {
  return new Promise((i, n) => {
    let t = !1, r = document.getElementsByTagName("script")[0], s = document.createElement("script");
    s.type = "text/javascript", s.src = e, s.async = !0, s.onload = s.onreadystatechange = function() {
      !t && (!this.readyState || this.readyState === "complete") && (t = !0, i(this));
    }, s.onerror = s.onabort = n, r && r.parentNode && r.parentNode.insertBefore(s, r);
  });
}
const UI = "//www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1";
class zo {
  static load() {
    return new Promise((i, n) => {
      window.__onGCastApiAvailable = (t) => zo.onGCastApiAvailable(t, i), zo.loadCastSDK().catch((t) => {
        console.warn("Cast sender lib loading failed", t), n(t);
      });
    });
  }
  static loadCastSDK() {
    return window.cast && window.cast.framework ? Promise.resolve() : BI(UI);
  }
  static onGCastApiAvailable(i, n) {
    i ? n() : console.warn("Google cast API isn't available yet");
  }
}
var FI = {};
/**
 * @license
 * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
 */
var nm;
function jI() {
  return nm || (nm = 1, function() {
    window.WebComponents = window.WebComponents || {
      flags: {}
    };
    var e = "webcomponents-lite.js", i = document.querySelector('script[src*="' + e + '"]'), n = {};
    if (!n.noOpts) {
      if (location.search.slice(1).split("&").forEach(function(a) {
        var o = a.split("="), u;
        o[0] && (u = o[0].match(/wc-(.+)/)) && (n[u[1]] = o[1] || !0);
      }), i)
        for (var t = 0, r; r = i.attributes[t]; t++)
          r.name !== "src" && (n[r.name] = r.value || !0);
      if (n.log && n.log.split) {
        var s = n.log.split(",");
        n.log = {}, s.forEach(function(a) {
          n.log[a] = !0;
        });
      } else
        n.log = {};
    }
    n.register && (window.CustomElements = window.CustomElements || {
      flags: {}
    }, window.CustomElements.flags.register = n.register), WebComponents.flags = n;
  }(), function(e) {
    var i = !1;
    if (!e.forceJURL)
      try {
        var n = new URL("b", "http://a");
        n.pathname = "c%20d", i = n.href === "http://a/c%20d";
      } catch {
      }
    if (i)
      return;
    var t = /* @__PURE__ */ Object.create(null);
    t.ftp = 21, t.file = 0, t.gopher = 70, t.http = 80, t.https = 443, t.ws = 80, t.wss = 443;
    var r = /* @__PURE__ */ Object.create(null);
    r["%2e"] = ".", r[".%2e"] = "..", r["%2e."] = "..", r["%2e%2e"] = "..";
    function s(I) {
      return t[I] !== void 0;
    }
    function a() {
      y.call(this), this._isInvalid = !0;
    }
    function o(I) {
      return I == "" && a.call(this), I.toLowerCase();
    }
    function u(I) {
      var B = I.charCodeAt(0);
      return B > 32 && B < 127 && [34, 35, 60, 62, 63, 96].indexOf(B) == -1 ? I : encodeURIComponent(I);
    }
    function l(I) {
      var B = I.charCodeAt(0);
      return B > 32 && B < 127 && [34, 35, 60, 62, 96].indexOf(B) == -1 ? I : encodeURIComponent(I);
    }
    var d = void 0, p = /[a-zA-Z]/, h = /[a-zA-Z0-9\+\-\.]/;
    function m(I, B, M) {
      var A = B || "scheme start", x = 0, P = "", j = !1, H = !1;
      e:
        for (; (I[x - 1] != d || x == 0) && !this._isInvalid; ) {
          var D = I[x];
          switch (A) {
            case "scheme start":
              if (D && p.test(D))
                P += D.toLowerCase(), A = "scheme";
              else {
                if (B)
                  break e;
                P = "", A = "no scheme";
                continue;
              }
              break;
            case "scheme":
              if (D && h.test(D))
                P += D.toLowerCase();
              else if (D == ":") {
                if (this._scheme = P, P = "", B)
                  break e;
                s(this._scheme) && (this._isRelative = !0), this._scheme == "file" ? A = "relative" : this._isRelative && M && M._scheme == this._scheme ? A = "relative or authority" : this._isRelative ? A = "authority first slash" : A = "scheme data";
              } else if (B) {
                if (d == D)
                  break e;
                break e;
              } else {
                P = "", x = 0, A = "no scheme";
                continue;
              }
              break;
            case "scheme data":
              D == "?" ? (this._query = "?", A = "query") : D == "#" ? (this._fragment = "#", A = "fragment") : d != D && D != "	" && D != `
` && D != "\r" && (this._schemeData += u(D));
              break;
            case "no scheme":
              if (!M || !s(M._scheme))
                a.call(this);
              else {
                A = "relative";
                continue;
              }
              break;
            case "relative or authority":
              if (D == "/" && I[x + 1] == "/")
                A = "authority ignore slashes";
              else {
                A = "relative";
                continue;
              }
              break;
            case "relative":
              if (this._isRelative = !0, this._scheme != "file" && (this._scheme = M._scheme), d == D) {
                this._host = M._host, this._port = M._port, this._path = M._path.slice(), this._query = M._query, this._username = M._username, this._password = M._password;
                break e;
              } else if (D == "/" || D == "\\")
                A = "relative slash";
              else if (D == "?")
                this._host = M._host, this._port = M._port, this._path = M._path.slice(), this._query = "?", this._username = M._username, this._password = M._password, A = "query";
              else if (D == "#")
                this._host = M._host, this._port = M._port, this._path = M._path.slice(), this._query = M._query, this._fragment = "#", this._username = M._username, this._password = M._password, A = "fragment";
              else {
                var O = I[x + 1], W = I[x + 2];
                (this._scheme != "file" || !p.test(D) || O != ":" && O != "|" || d != W && W != "/" && W != "\\" && W != "?" && W != "#") && (this._host = M._host, this._port = M._port, this._username = M._username, this._password = M._password, this._path = M._path.slice(), this._path.pop()), A = "relative path";
                continue;
              }
              break;
            case "relative slash":
              if (D == "/" || D == "\\")
                this._scheme == "file" ? A = "file host" : A = "authority ignore slashes";
              else {
                this._scheme != "file" && (this._host = M._host, this._port = M._port, this._username = M._username, this._password = M._password), A = "relative path";
                continue;
              }
              break;
            case "authority first slash":
              if (D == "/")
                A = "authority second slash";
              else {
                A = "authority ignore slashes";
                continue;
              }
              break;
            case "authority second slash":
              if (A = "authority ignore slashes", D != "/")
                continue;
              break;
            case "authority ignore slashes":
              if (D != "/" && D != "\\") {
                A = "authority";
                continue;
              }
              break;
            case "authority":
              if (D == "@") {
                j && (P += "%40"), j = !0;
                for (var X = 0; X < P.length; X++) {
                  var ie = P[X];
                  if (!(ie == "	" || ie == `
` || ie == "\r")) {
                    if (ie == ":" && this._password === null) {
                      this._password = "";
                      continue;
                    }
                    var K = u(ie);
                    this._password !== null ? this._password += K : this._username += K;
                  }
                }
                P = "";
              } else if (d == D || D == "/" || D == "\\" || D == "?" || D == "#") {
                x -= P.length, P = "", A = "host";
                continue;
              } else
                P += D;
              break;
            case "file host":
              if (d == D || D == "/" || D == "\\" || D == "?" || D == "#") {
                P.length == 2 && p.test(P[0]) && (P[1] == ":" || P[1] == "|") ? A = "relative path" : (P.length == 0 || (this._host = o.call(this, P), P = ""), A = "relative path start");
                continue;
              } else
                D == "	" || D == `
` || D == "\r" || (P += D);
              break;
            case "host":
            case "hostname":
              if (D == ":" && !H) {
                if (this._host = o.call(this, P), P = "", A = "port", B == "hostname")
                  break e;
              } else if (d == D || D == "/" || D == "\\" || D == "?" || D == "#") {
                if (this._host = o.call(this, P), P = "", A = "relative path start", B)
                  break e;
                continue;
              } else
                D != "	" && D != `
` && D != "\r" && (D == "[" ? H = !0 : D == "]" && (H = !1), P += D);
              break;
            case "port":
              if (/[0-9]/.test(D))
                P += D;
              else if (d == D || D == "/" || D == "\\" || D == "?" || D == "#" || B) {
                if (P != "") {
                  var Z = parseInt(P, 10);
                  Z != t[this._scheme] && (this._port = Z + ""), P = "";
                }
                if (B)
                  break e;
                A = "relative path start";
                continue;
              } else
                D == "	" || D == `
` || D == "\r" || a.call(this);
              break;
            case "relative path start":
              if (A = "relative path", D != "/" && D != "\\")
                continue;
              break;
            case "relative path":
              if (d == D || D == "/" || D == "\\" || !B && (D == "?" || D == "#")) {
                var te;
                (te = r[P.toLowerCase()]) && (P = te), P == ".." ? (this._path.pop(), D != "/" && D != "\\" && this._path.push("")) : P == "." && D != "/" && D != "\\" ? this._path.push("") : P != "." && (this._scheme == "file" && this._path.length == 0 && P.length == 2 && p.test(P[0]) && P[1] == "|" && (P = P[0] + ":"), this._path.push(P)), P = "", D == "?" ? (this._query = "?", A = "query") : D == "#" && (this._fragment = "#", A = "fragment");
              } else
                D != "	" && D != `
` && D != "\r" && (P += u(D));
              break;
            case "query":
              !B && D == "#" ? (this._fragment = "#", A = "fragment") : d != D && D != "	" && D != `
` && D != "\r" && (this._query += l(D));
              break;
            case "fragment":
              d != D && D != "	" && D != `
` && D != "\r" && (this._fragment += D);
              break;
          }
          x++;
        }
    }
    function y() {
      this._scheme = "", this._schemeData = "", this._username = "", this._password = null, this._host = "", this._port = "", this._path = [], this._query = "", this._fragment = "", this._isInvalid = !1, this._isRelative = !1;
    }
    function T(I, B) {
      B !== void 0 && !(B instanceof T) && (B = new T(String(B))), this._url = I, y.call(this);
      var M = I.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, "");
      m.call(this, M, null, B);
    }
    T.prototype = {
      toString: function() {
        return this.href;
      },
      get href() {
        if (this._isInvalid)
          return this._url;
        var I = "";
        return (this._username != "" || this._password != null) && (I = this._username + (this._password != null ? ":" + this._password : "") + "@"), this.protocol + (this._isRelative ? "//" + I + this.host : "") + this.pathname + this._query + this._fragment;
      },
      set href(I) {
        y.call(this), m.call(this, I);
      },
      get protocol() {
        return this._scheme + ":";
      },
      set protocol(I) {
        this._isInvalid || m.call(this, I + ":", "scheme start");
      },
      get host() {
        return this._isInvalid ? "" : this._port ? this._host + ":" + this._port : this._host;
      },
      set host(I) {
        this._isInvalid || !this._isRelative || m.call(this, I, "host");
      },
      get hostname() {
        return this._host;
      },
      set hostname(I) {
        this._isInvalid || !this._isRelative || m.call(this, I, "hostname");
      },
      get port() {
        return this._port;
      },
      set port(I) {
        this._isInvalid || !this._isRelative || m.call(this, I, "port");
      },
      get pathname() {
        return this._isInvalid ? "" : this._isRelative ? "/" + this._path.join("/") : this._schemeData;
      },
      set pathname(I) {
        this._isInvalid || !this._isRelative || (this._path = [], m.call(this, I, "relative path start"));
      },
      get search() {
        return this._isInvalid || !this._query || this._query == "?" ? "" : this._query;
      },
      set search(I) {
        this._isInvalid || !this._isRelative || (this._query = "?", I[0] == "?" && (I = I.slice(1)), m.call(this, I, "query"));
      },
      get hash() {
        return this._isInvalid || !this._fragment || this._fragment == "#" ? "" : this._fragment;
      },
      set hash(I) {
        this._isInvalid || (this._fragment = "#", I[0] == "#" && (I = I.slice(1)), m.call(this, I, "fragment"));
      },
      get origin() {
        var I;
        if (this._isInvalid || !this._scheme)
          return "";
        switch (this._scheme) {
          case "data":
          case "file":
          case "javascript":
          case "mailto":
            return "null";
        }
        return I = this.host, I ? this._scheme + "://" + I : "";
      }
    };
    var b = e.URL;
    b && (T.createObjectURL = function(I) {
      return b.createObjectURL.apply(b, arguments);
    }, T.revokeObjectURL = function(I) {
      b.revokeObjectURL(I);
    }), e.URL = T;
  }(self), typeof WeakMap > "u" && function() {
    var e = Object.defineProperty, i = Date.now() % 1e9, n = function() {
      this.name = "__st" + (Math.random() * 1e9 >>> 0) + (i++ + "__");
    };
    n.prototype = {
      set: function(t, r) {
        var s = t[this.name];
        return s && s[0] === t ? s[1] = r : e(t, this.name, {
          value: [t, r],
          writable: !0
        }), this;
      },
      get: function(t) {
        var r;
        return (r = t[this.name]) && r[0] === t ? r[1] : void 0;
      },
      delete: function(t) {
        var r = t[this.name];
        return !r || r[0] !== t ? !1 : (r[0] = r[1] = void 0, !0);
      },
      has: function(t) {
        var r = t[this.name];
        return r ? r[0] === t : !1;
      }
    }, window.WeakMap = n;
  }(), function(e) {
    if (e.JsMutationObserver)
      return;
    var i = /* @__PURE__ */ new WeakMap(), n;
    if (/Trident|Edge/.test(navigator.userAgent))
      n = setTimeout;
    else if (window.setImmediate)
      n = window.setImmediate;
    else {
      var t = [], r = String(Math.random());
      window.addEventListener("message", function(H) {
        if (H.data === r) {
          var D = t;
          t = [], D.forEach(function(O) {
            O();
          });
        }
      }), n = function(H) {
        t.push(H), window.postMessage(r, "*");
      };
    }
    var s = !1, a = [];
    function o(H) {
      a.push(H), s || (s = !0, n(l));
    }
    function u(H) {
      return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(H) || H;
    }
    function l() {
      s = !1;
      var H = a;
      a = [], H.sort(function(O, W) {
        return O.uid_ - W.uid_;
      });
      var D = !1;
      H.forEach(function(O) {
        var W = O.takeRecords();
        d(O), W.length && (O.callback_(W, O), D = !0);
      }), D && l();
    }
    function d(H) {
      H.nodes_.forEach(function(D) {
        var O = i.get(D);
        !O || O.forEach(function(W) {
          W.observer === H && W.removeTransientObservers();
        });
      });
    }
    function p(H, D) {
      for (var O = H; O; O = O.parentNode) {
        var W = i.get(O);
        if (W)
          for (var X = 0; X < W.length; X++) {
            var ie = W[X], K = ie.options;
            if (!(O !== H && !K.subtree)) {
              var Z = D(K);
              Z && ie.enqueue(Z);
            }
          }
      }
    }
    var h = 0;
    function m(H) {
      this.callback_ = H, this.nodes_ = [], this.records_ = [], this.uid_ = ++h;
    }
    m.prototype = {
      observe: function(H, D) {
        if (H = u(H), !D.childList && !D.attributes && !D.characterData || D.attributeOldValue && !D.attributes || D.attributeFilter && D.attributeFilter.length && !D.attributes || D.characterDataOldValue && !D.characterData)
          throw new SyntaxError();
        var O = i.get(H);
        O || i.set(H, O = []);
        for (var W, X = 0; X < O.length; X++)
          if (O[X].observer === this) {
            W = O[X], W.removeListeners(), W.options = D;
            break;
          }
        W || (W = new j(this, H, D), O.push(W), this.nodes_.push(H)), W.addListeners();
      },
      disconnect: function() {
        this.nodes_.forEach(function(H) {
          for (var D = i.get(H), O = 0; O < D.length; O++) {
            var W = D[O];
            if (W.observer === this) {
              W.removeListeners(), D.splice(O, 1);
              break;
            }
          }
        }, this), this.records_ = [];
      },
      takeRecords: function() {
        var H = this.records_;
        return this.records_ = [], H;
      }
    };
    function y(H, D) {
      this.type = H, this.target = D, this.addedNodes = [], this.removedNodes = [], this.previousSibling = null, this.nextSibling = null, this.attributeName = null, this.attributeNamespace = null, this.oldValue = null;
    }
    function T(H) {
      var D = new y(H.type, H.target);
      return D.addedNodes = H.addedNodes.slice(), D.removedNodes = H.removedNodes.slice(), D.previousSibling = H.previousSibling, D.nextSibling = H.nextSibling, D.attributeName = H.attributeName, D.attributeNamespace = H.attributeNamespace, D.oldValue = H.oldValue, D;
    }
    var b, I;
    function B(H, D) {
      return b = new y(H, D);
    }
    function M(H) {
      return I || (I = T(b), I.oldValue = H, I);
    }
    function A() {
      b = I = void 0;
    }
    function x(H) {
      return H === I || H === b;
    }
    function P(H, D) {
      return H === D ? H : I && x(H) ? I : null;
    }
    function j(H, D, O) {
      this.observer = H, this.target = D, this.options = O, this.transientObservedNodes = [];
    }
    j.prototype = {
      enqueue: function(H) {
        var D = this.observer.records_, O = D.length;
        if (D.length > 0) {
          var W = D[O - 1], X = P(W, H);
          if (X) {
            D[O - 1] = X;
            return;
          }
        } else
          o(this.observer);
        D[O] = H;
      },
      addListeners: function() {
        this.addListeners_(this.target);
      },
      addListeners_: function(H) {
        var D = this.options;
        D.attributes && H.addEventListener("DOMAttrModified", this, !0), D.characterData && H.addEventListener("DOMCharacterDataModified", this, !0), D.childList && H.addEventListener("DOMNodeInserted", this, !0), (D.childList || D.subtree) && H.addEventListener("DOMNodeRemoved", this, !0);
      },
      removeListeners: function() {
        this.removeListeners_(this.target);
      },
      removeListeners_: function(H) {
        var D = this.options;
        D.attributes && H.removeEventListener("DOMAttrModified", this, !0), D.characterData && H.removeEventListener("DOMCharacterDataModified", this, !0), D.childList && H.removeEventListener("DOMNodeInserted", this, !0), (D.childList || D.subtree) && H.removeEventListener("DOMNodeRemoved", this, !0);
      },
      addTransientObserver: function(H) {
        if (H !== this.target) {
          this.addListeners_(H), this.transientObservedNodes.push(H);
          var D = i.get(H);
          D || i.set(H, D = []), D.push(this);
        }
      },
      removeTransientObservers: function() {
        var H = this.transientObservedNodes;
        this.transientObservedNodes = [], H.forEach(function(D) {
          this.removeListeners_(D);
          for (var O = i.get(D), W = 0; W < O.length; W++)
            if (O[W] === this) {
              O.splice(W, 1);
              break;
            }
        }, this);
      },
      handleEvent: function(H) {
        switch (H.stopImmediatePropagation(), H.type) {
          case "DOMAttrModified":
            var D = H.attrName, O = H.relatedNode.namespaceURI, W = H.target, be = new B("attributes", W);
            be.attributeName = D, be.attributeNamespace = O;
            var X = H.attrChange === MutationEvent.ADDITION ? null : H.prevValue;
            p(W, function(he) {
              if (he.attributes && !(he.attributeFilter && he.attributeFilter.length && he.attributeFilter.indexOf(D) === -1 && he.attributeFilter.indexOf(O) === -1))
                return he.attributeOldValue ? M(X) : be;
            });
            break;
          case "DOMCharacterDataModified":
            var W = H.target, be = B("characterData", W), X = H.prevValue;
            p(W, function(he) {
              if (he.characterData)
                return he.characterDataOldValue ? M(X) : be;
            });
            break;
          case "DOMNodeRemoved":
            this.addTransientObserver(H.target);
          case "DOMNodeInserted":
            var ie = H.target, K, Z;
            H.type === "DOMNodeInserted" ? (K = [ie], Z = []) : (K = [], Z = [ie]);
            var te = ie.previousSibling, ue = ie.nextSibling, be = B("childList", H.target.parentNode);
            be.addedNodes = K, be.removedNodes = Z, be.previousSibling = te, be.nextSibling = ue, p(H.relatedNode, function(he) {
              if (he.childList)
                return be;
            });
        }
        A();
      }
    }, e.JsMutationObserver = m, e.MutationObserver || (e.MutationObserver = m, m._isPolyfilled = !0);
  }(self), function() {
    var e = typeof HTMLTemplateElement > "u";
    /Trident/.test(navigator.userAgent) && function() {
      var h = document.importNode;
      document.importNode = function() {
        var m = h.apply(document, arguments);
        if (m.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
          var y = document.createDocumentFragment();
          return y.appendChild(m), y;
        } else
          return m;
      };
    }();
    var i = function() {
      if (!e) {
        var h = document.createElement("template"), m = document.createElement("template");
        m.content.appendChild(document.createElement("div")), h.content.appendChild(m);
        var y = h.cloneNode(!0);
        return y.content.childNodes.length === 0 || y.content.firstChild.content.childNodes.length === 0;
      }
    }(), n = "template", t = function() {
    };
    if (e) {
      let h = function(y) {
        switch (y) {
          case "&":
            return "&amp;";
          case "<":
            return "&lt;";
          case ">":
            return "&gt;";
          case " ":
            return "&nbsp;";
        }
      }, m = function(y) {
        return y.replace(l, h);
      };
      var r = document.implementation.createHTMLDocument("template"), s = !0, a = document.createElement("style");
      a.textContent = n + "{display:none;}";
      var o = document.head;
      o.insertBefore(a, o.firstElementChild), t.prototype = Object.create(HTMLElement.prototype), t.decorate = function(y) {
        if (!y.content) {
          y.content = r.createDocumentFragment();
          for (var T; T = y.firstChild; )
            y.content.appendChild(T);
          if (y.cloneNode = function(b) {
            return t.cloneNode(this, b);
          }, s)
            try {
              Object.defineProperty(y, "innerHTML", {
                get: function() {
                  for (var b = "", I = this.content.firstChild; I; I = I.nextSibling)
                    b += I.outerHTML || m(I.data);
                  return b;
                },
                set: function(b) {
                  for (r.body.innerHTML = b, t.bootstrap(r); this.content.firstChild; )
                    this.content.removeChild(this.content.firstChild);
                  for (; r.body.firstChild; )
                    this.content.appendChild(r.body.firstChild);
                },
                configurable: !0
              });
            } catch {
              s = !1;
            }
          t.bootstrap(y.content);
        }
      }, t.bootstrap = function(y) {
        for (var T = y.querySelectorAll(n), b = 0, I = T.length, B; b < I && (B = T[b]); b++)
          t.decorate(B);
      }, document.addEventListener("DOMContentLoaded", function() {
        t.bootstrap(document);
      });
      var u = document.createElement;
      document.createElement = function() {
        var y = u.apply(document, arguments);
        return y.localName === "template" && t.decorate(y), y;
      };
      var l = /[&\u00A0<>]/g;
    }
    if (e || i) {
      var d = Node.prototype.cloneNode;
      t.cloneNode = function(h, m) {
        var y = d.call(h, !1);
        return this.decorate && this.decorate(y), m && (y.content.appendChild(d.call(h.content, !0)), this.fixClonedDom(y.content, h.content)), y;
      }, t.fixClonedDom = function(h, m) {
        if (m.querySelectorAll)
          for (var y = m.querySelectorAll(n), T = h.querySelectorAll(n), b = 0, I = T.length, B, M; b < I; b++)
            M = y[b], B = T[b], this.decorate && this.decorate(M), B.parentNode.replaceChild(M.cloneNode(!0), B);
      };
      var p = document.importNode;
      Node.prototype.cloneNode = function(h) {
        var m = d.call(this, h);
        return h && t.fixClonedDom(m, this), m;
      }, document.importNode = function(h, m) {
        if (h.localName === n)
          return t.cloneNode(h, m);
        var y = p.call(document, h, m);
        return m && t.fixClonedDom(y, h), y;
      }, i && (HTMLTemplateElement.prototype.cloneNode = function(h) {
        return t.cloneNode(this, h);
      });
    }
    e && (window.HTMLTemplateElement = t);
  }(), function(e) {
    if (!(window.performance && window.performance.now)) {
      var i = Date.now();
      window.performance = {
        now: function() {
          return Date.now() - i;
        }
      };
    }
    window.requestAnimationFrame || (window.requestAnimationFrame = function() {
      var a = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
      return a ? function(o) {
        return a(function() {
          o(performance.now());
        });
      } : function(o) {
        return window.setTimeout(o, 1e3 / 60);
      };
    }()), window.cancelAnimationFrame || (window.cancelAnimationFrame = function() {
      return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(a) {
        clearTimeout(a);
      };
    }());
    var n = function() {
      var a = document.createEvent("Event");
      return a.initEvent("foo", !0, !0), a.preventDefault(), a.defaultPrevented;
    }();
    if (!n) {
      var t = Event.prototype.preventDefault;
      Event.prototype.preventDefault = function() {
        !this.cancelable || (t.call(this), Object.defineProperty(this, "defaultPrevented", {
          get: function() {
            return !0;
          },
          configurable: !0
        }));
      };
    }
    var r = /Trident/.test(navigator.userAgent);
    if ((!window.CustomEvent || r && typeof window.CustomEvent != "function") && (window.CustomEvent = function(a, o) {
      o = o || {};
      var u = document.createEvent("CustomEvent");
      return u.initCustomEvent(a, !!o.bubbles, !!o.cancelable, o.detail), u;
    }, window.CustomEvent.prototype = window.Event.prototype), !window.Event || r && typeof window.Event != "function") {
      var s = window.Event;
      window.Event = function(a, o) {
        o = o || {};
        var u = document.createEvent("Event");
        return u.initEvent(a, !!o.bubbles, !!o.cancelable), u;
      }, window.Event.prototype = s.prototype;
    }
  }(), window.HTMLImports = window.HTMLImports || {
    flags: {}
  }, function(e) {
    var i = "import", n = i in document.createElement("link"), t = !!window.ShadowDOMPolyfill, r = function(b) {
      return t ? window.ShadowDOMPolyfill.wrapIfNeeded(b) : b;
    }, s = r(document), a = {
      get: function() {
        var b = window.HTMLImports.currentScript || document.currentScript || (document.readyState !== "complete" ? document.scripts[document.scripts.length - 1] : null);
        return r(b);
      },
      configurable: !0
    };
    Object.defineProperty(document, "_currentScript", a), Object.defineProperty(s, "_currentScript", a);
    var o = /Trident/.test(navigator.userAgent);
    function u(b, I) {
      I = I || s, h(function() {
        y(b, I);
      }, I);
    }
    var l = o ? "complete" : "interactive", d = "readystatechange";
    function p(b) {
      return b.readyState === "complete" || b.readyState === l;
    }
    function h(b, I) {
      if (p(I))
        b && b();
      else {
        var B = function() {
          (I.readyState === "complete" || I.readyState === l) && (I.removeEventListener(d, B), h(b, I));
        };
        I.addEventListener(d, B);
      }
    }
    function m(b) {
      b.target.__loaded = !0;
    }
    function y(b, I) {
      var B = I.querySelectorAll("link[rel=import]"), M = 0, A = B.length, x = [], P = [];
      function j() {
        M == A && b && b({
          allImports: B,
          loadedImports: x,
          errorImports: P
        });
      }
      function H(X) {
        m(X), x.push(this), M++, j();
      }
      function D(X) {
        P.push(this), M++, j();
      }
      if (A)
        for (var O = 0, W; O < A && (W = B[O]); O++)
          T(W) ? (x.push(this), M++, j()) : (W.addEventListener("load", H), W.addEventListener("error", D));
      else
        j();
    }
    function T(b) {
      return n ? b.__loaded || b.import && b.import.readyState !== "loading" : b.__importParsed;
    }
    if (n) {
      let b = function(M) {
        for (var A = 0, x = M.length, P; A < x && (P = M[A]); A++)
          I(P) && B(P);
      }, I = function(M) {
        return M.localName === "link" && M.rel === "import";
      }, B = function(M) {
        var A = M.import;
        A ? m({
          target: M
        }) : (M.addEventListener("load", m), M.addEventListener("error", m));
      };
      new MutationObserver(function(M) {
        for (var A = 0, x = M.length, P; A < x && (P = M[A]); A++)
          P.addedNodes && b(P.addedNodes);
      }).observe(document.head, {
        childList: !0
      }), function() {
        if (document.readyState === "loading")
          for (var M = document.querySelectorAll("link[rel=import]"), A = 0, x = M.length, P; A < x && (P = M[A]); A++)
            B(P);
      }();
    }
    u(function(b) {
      window.HTMLImports.ready = !0, window.HTMLImports.readyTime = (/* @__PURE__ */ new Date()).getTime();
      var I = s.createEvent("CustomEvent");
      I.initCustomEvent("HTMLImportsLoaded", !0, !0, b), s.dispatchEvent(I);
    }), e.IMPORT_LINK_TYPE = i, e.useNative = n, e.rootDocument = s, e.whenReady = u, e.isIE = o;
  }(window.HTMLImports), function(e) {
    var i = [], n = function(r) {
      i.push(r);
    }, t = function() {
      i.forEach(function(r) {
        r(e);
      });
    };
    e.addModule = n, e.initializeModules = t;
  }(window.HTMLImports), window.HTMLImports.addModule(function(e) {
    var i = /(url\()([^)]*)(\))/g, n = /(@import[\s]+(?!url\())([^;]*)(;)/g, t = {
      resolveUrlsInStyle: function(r, s) {
        var a = r.ownerDocument, o = a.createElement("a");
        return r.textContent = this.resolveUrlsInCssText(r.textContent, s, o), r;
      },
      resolveUrlsInCssText: function(r, s, a) {
        var o = this.replaceUrls(r, a, s, i);
        return o = this.replaceUrls(o, a, s, n), o;
      },
      replaceUrls: function(r, s, a, o) {
        return r.replace(o, function(u, l, d, p) {
          var h = d.replace(/["']/g, "");
          return a && (h = new URL(h, a).href), s.href = h, h = s.href, l + "'" + h + "'" + p;
        });
      }
    };
    e.path = t;
  }), window.HTMLImports.addModule(function(e) {
    var i = {
      async: !0,
      ok: function(n) {
        return n.status >= 200 && n.status < 300 || n.status === 304 || n.status === 0;
      },
      load: function(n, t, r) {
        var s = new XMLHttpRequest();
        return (e.flags.debug || e.flags.bust) && (n += "?" + Math.random()), s.open("GET", n, i.async), s.addEventListener("readystatechange", function(a) {
          if (s.readyState === 4) {
            var o = null;
            try {
              var u = s.getResponseHeader("Location");
              u && (o = u.substr(0, 1) === "/" ? location.origin + u : u);
            } catch (l) {
              console.error(l.message);
            }
            t.call(r, !i.ok(s) && s, s.response || s.responseText, o);
          }
        }), s.send(), s;
      },
      loadDocument: function(n, t, r) {
        this.load(n, t, r).responseType = "document";
      }
    };
    e.xhr = i;
  }), window.HTMLImports.addModule(function(e) {
    var i = e.xhr, n = e.flags, t = function(r, s) {
      this.cache = {}, this.onload = r, this.oncomplete = s, this.inflight = 0, this.pending = {};
    };
    t.prototype = {
      addNodes: function(r) {
        this.inflight += r.length;
        for (var s = 0, a = r.length, o; s < a && (o = r[s]); s++)
          this.require(o);
        this.checkDone();
      },
      addNode: function(r) {
        this.inflight++, this.require(r), this.checkDone();
      },
      require: function(r) {
        var s = r.src || r.href;
        r.__nodeUrl = s, this.dedupe(s, r) || this.fetch(s, r);
      },
      dedupe: function(r, s) {
        return this.pending[r] ? (this.pending[r].push(s), !0) : this.cache[r] ? (this.onload(r, s, this.cache[r]), this.tail(), !0) : (this.pending[r] = [s], !1);
      },
      fetch: function(r, s) {
        if (n.load && console.log("fetch", r, s), !r)
          setTimeout(function() {
            this.receive(r, s, {
              error: "href must be specified"
            }, null);
          }.bind(this), 0);
        else if (r.match(/^data:/)) {
          var a = r.split(","), o = a[0], u = a[1];
          o.indexOf(";base64") > -1 ? u = atob(u) : u = decodeURIComponent(u), setTimeout(function() {
            this.receive(r, s, null, u);
          }.bind(this), 0);
        } else {
          var l = function(d, p, h) {
            this.receive(r, s, d, p, h);
          }.bind(this);
          i.load(r, l);
        }
      },
      receive: function(r, s, a, o, u) {
        this.cache[r] = o;
        for (var l = this.pending[r], d = 0, p = l.length, h; d < p && (h = l[d]); d++)
          this.onload(r, h, o, a, u), this.tail();
        this.pending[r] = null;
      },
      tail: function() {
        --this.inflight, this.checkDone();
      },
      checkDone: function() {
        this.inflight || this.oncomplete();
      }
    }, e.Loader = t;
  }), window.HTMLImports.addModule(function(e) {
    var i = function(n) {
      this.addCallback = n, this.mo = new MutationObserver(this.handler.bind(this));
    };
    i.prototype = {
      handler: function(n) {
        for (var t = 0, r = n.length, s; t < r && (s = n[t]); t++)
          s.type === "childList" && s.addedNodes.length && this.addedNodes(s.addedNodes);
      },
      addedNodes: function(n) {
        this.addCallback && this.addCallback(n);
        for (var t = 0, r = n.length, s, a; t < r && (s = n[t]); t++)
          s.children && s.children.length && this.addedNodes(s.children);
      },
      observe: function(n) {
        this.mo.observe(n, {
          childList: !0,
          subtree: !0
        });
      }
    }, e.Observer = i;
  }), window.HTMLImports.addModule(function(e) {
    var i = e.path, n = e.rootDocument, t = e.flags, r = e.isIE, s = e.IMPORT_LINK_TYPE, a = "link[rel=" + s + "]", o = {
      documentSelectors: a,
      importsSelectors: [a, "link[rel=stylesheet]:not([type])", "style:not([type])", "script:not([type])", 'script[type="application/javascript"]', 'script[type="text/javascript"]'].join(","),
      map: {
        link: "parseLink",
        script: "parseScript",
        style: "parseStyle"
      },
      dynamicElements: [],
      parseNext: function() {
        var m = this.nextToParse();
        m && this.parse(m);
      },
      parse: function(m) {
        if (this.isParsed(m)) {
          t.parse && console.log("[%s] is already parsed", m.localName);
          return;
        }
        var y = this[this.map[m.localName]];
        y && (this.markParsing(m), y.call(this, m));
      },
      parseDynamic: function(m, y) {
        this.dynamicElements.push(m), y || this.parseNext();
      },
      markParsing: function(m) {
        t.parse && console.log("parsing", m), this.parsingElement = m;
      },
      markParsingComplete: function(m) {
        m.__importParsed = !0, this.markDynamicParsingComplete(m), m.__importElement && (m.__importElement.__importParsed = !0, this.markDynamicParsingComplete(m.__importElement)), this.parsingElement = null, t.parse && console.log("completed", m);
      },
      markDynamicParsingComplete: function(m) {
        var y = this.dynamicElements.indexOf(m);
        y >= 0 && this.dynamicElements.splice(y, 1);
      },
      parseImport: function(m) {
        if (m.import = m.__doc, window.HTMLImports.__importsParsingHook && window.HTMLImports.__importsParsingHook(m), m.import && (m.import.__importParsed = !0), this.markParsingComplete(m), m.__resource && !m.__error ? m.dispatchEvent(new CustomEvent("load", {
          bubbles: !1
        })) : m.dispatchEvent(new CustomEvent("error", {
          bubbles: !1
        })), m.__pending)
          for (var y; m.__pending.length; )
            y = m.__pending.shift(), y && y({
              target: m
            });
        this.parseNext();
      },
      parseLink: function(m) {
        u(m) ? this.parseImport(m) : (m.href = m.href, this.parseGeneric(m));
      },
      parseStyle: function(m) {
        var y = m;
        m = h(m), y.__appliedElement = m, m.__importElement = y, this.parseGeneric(m);
      },
      parseGeneric: function(m) {
        this.trackElement(m), this.addElementToDocument(m);
      },
      rootImportForElement: function(m) {
        for (var y = m; y.ownerDocument.__importLink; )
          y = y.ownerDocument.__importLink;
        return y;
      },
      addElementToDocument: function(m) {
        var y = this.rootImportForElement(m.__importElement || m);
        y.parentNode.insertBefore(m, y);
      },
      trackElement: function(m, y) {
        var T = this, b = function(P) {
          m.removeEventListener("load", b), m.removeEventListener("error", b), y && y(P), T.markParsingComplete(m), T.parseNext();
        };
        if (m.addEventListener("load", b), m.addEventListener("error", b), r && m.localName === "style") {
          var I = !1;
          if (m.textContent.indexOf("@import") == -1)
            I = !0;
          else if (m.sheet) {
            I = !0;
            for (var B = m.sheet.cssRules, M = B ? B.length : 0, A = 0, x; A < M && (x = B[A]); A++)
              x.type === CSSRule.IMPORT_RULE && (I = I && !!x.styleSheet);
          }
          I && setTimeout(function() {
            m.dispatchEvent(new CustomEvent("load", {
              bubbles: !1
            }));
          });
        }
      },
      parseScript: function(m) {
        var y = document.createElement("script");
        y.__importElement = m, y.src = m.src ? m.src : l(m), e.currentScript = m, this.trackElement(y, function(T) {
          y.parentNode && y.parentNode.removeChild(y), e.currentScript = null;
        }), this.addElementToDocument(y);
      },
      nextToParse: function() {
        return this._mayParse = [], !this.parsingElement && (this.nextToParseInDoc(n) || this.nextToParseDynamic());
      },
      nextToParseInDoc: function(m, y) {
        if (m && this._mayParse.indexOf(m) < 0) {
          this._mayParse.push(m);
          for (var T = m.querySelectorAll(this.parseSelectorsForNode(m)), b = 0, I = T.length, B; b < I && (B = T[b]); b++)
            if (!this.isParsed(B))
              return this.hasResource(B) ? u(B) ? this.nextToParseInDoc(B.__doc, B) : B : void 0;
        }
        return y;
      },
      nextToParseDynamic: function() {
        return this.dynamicElements[0];
      },
      parseSelectorsForNode: function(m) {
        var y = m.ownerDocument || m;
        return y === n ? this.documentSelectors : this.importsSelectors;
      },
      isParsed: function(m) {
        return m.__importParsed;
      },
      needsDynamicParsing: function(m) {
        return this.dynamicElements.indexOf(m) >= 0;
      },
      hasResource: function(m) {
        return !(u(m) && m.__doc === void 0);
      }
    };
    function u(m) {
      return m.localName === "link" && m.rel === s;
    }
    function l(m) {
      var y = d(m);
      return "data:text/javascript;charset=utf-8," + encodeURIComponent(y);
    }
    function d(m) {
      return m.textContent + p(m);
    }
    function p(m) {
      var y = m.ownerDocument;
      y.__importedScripts = y.__importedScripts || 0;
      var T = m.ownerDocument.baseURI, b = y.__importedScripts ? "-" + y.__importedScripts : "";
      return y.__importedScripts++, `
//# sourceURL=` + T + b + `.js
`;
    }
    function h(m) {
      var y = m.ownerDocument.createElement("style");
      return y.textContent = m.textContent, i.resolveUrlsInStyle(y), y;
    }
    e.parser = o, e.IMPORT_SELECTOR = a;
  }), window.HTMLImports.addModule(function(e) {
    var i = e.flags, n = e.IMPORT_LINK_TYPE, t = e.IMPORT_SELECTOR, r = e.rootDocument, s = e.Loader, a = e.Observer, o = e.parser, u = {
      documents: {},
      documentPreloadSelectors: t,
      importsPreloadSelectors: [t].join(","),
      loadNode: function(T) {
        l.addNode(T);
      },
      loadSubtree: function(T) {
        var b = this.marshalNodes(T);
        l.addNodes(b);
      },
      marshalNodes: function(T) {
        return T.querySelectorAll(this.loadSelectorsForNode(T));
      },
      loadSelectorsForNode: function(T) {
        var b = T.ownerDocument || T;
        return b === r ? this.documentPreloadSelectors : this.importsPreloadSelectors;
      },
      loaded: function(T, b, I, B, M) {
        if (i.load && console.log("loaded", T, b), b.__resource = I, b.__error = B, d(b)) {
          var A = this.documents[T];
          A === void 0 && (A = B ? null : m(I, M || T), A && (A.__importLink = b, this.bootDocument(A)), this.documents[T] = A), b.__doc = A;
        }
        o.parseNext();
      },
      bootDocument: function(T) {
        this.loadSubtree(T), this.observer.observe(T), o.parseNext();
      },
      loadedAll: function() {
        o.parseNext();
      }
    }, l = new s(u.loaded.bind(u), u.loadedAll.bind(u));
    u.observer = new a();
    function d(T) {
      return p(T, n);
    }
    function p(T, b) {
      return T.localName === "link" && T.getAttribute("rel") === b;
    }
    function h(T) {
      return !!Object.getOwnPropertyDescriptor(T, "baseURI");
    }
    function m(T, b) {
      var I = document.implementation.createHTMLDocument(n);
      I._URL = b;
      var B = I.createElement("base");
      B.setAttribute("href", b), !I.baseURI && !h(I) && Object.defineProperty(I, "baseURI", {
        value: b
      });
      var M = I.createElement("meta");
      return M.setAttribute("charset", "utf-8"), I.head.appendChild(M), I.head.appendChild(B), I.body.innerHTML = T, window.HTMLTemplateElement && HTMLTemplateElement.bootstrap && HTMLTemplateElement.bootstrap(I), I;
    }
    if (!document.baseURI) {
      var y = {
        get: function() {
          var T = document.querySelector("base");
          return T ? T.href : window.location.href;
        },
        configurable: !0
      };
      Object.defineProperty(document, "baseURI", y), Object.defineProperty(r, "baseURI", y);
    }
    e.importer = u, e.importLoader = l;
  }), window.HTMLImports.addModule(function(e) {
    var i = e.parser, n = e.importer, t = {
      added: function(s) {
        for (var a, o, u, l = 0, d = s.length, p; l < d && (p = s[l]); l++)
          a || (a = p.ownerDocument, o = i.isParsed(a)), u = this.shouldLoadNode(p), u && n.loadNode(p), this.shouldParseNode(p) && o && i.parseDynamic(p, u);
      },
      shouldLoadNode: function(s) {
        return s.nodeType === 1 && r.call(s, n.loadSelectorsForNode(s));
      },
      shouldParseNode: function(s) {
        return s.nodeType === 1 && r.call(s, i.parseSelectorsForNode(s));
      }
    };
    n.observer.addCallback = t.added.bind(t);
    var r = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;
  }), function(e) {
    var i = e.initializeModules;
    if (e.isIE, e.useNative)
      return;
    i();
    var n = e.rootDocument;
    function t() {
      window.HTMLImports.importer.bootDocument(n);
    }
    document.readyState === "complete" || document.readyState === "interactive" && !window.attachEvent ? t() : document.addEventListener("DOMContentLoaded", t);
  }(window.HTMLImports), window.CustomElements = window.CustomElements || {
    flags: {}
  }, function(e) {
    var i = e.flags, n = [], t = function(s) {
      n.push(s);
    }, r = function() {
      n.forEach(function(s) {
        s(e);
      });
    };
    e.addModule = t, e.initializeModules = r, e.hasNative = !!document.registerElement, e.isIE = /Trident/.test(navigator.userAgent), e.useNative = !i.register && e.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative);
  }(window.CustomElements), window.CustomElements.addModule(function(e) {
    var i = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
    function n(o, u) {
      t(o, function(l) {
        if (u(l))
          return !0;
        r(l, u);
      }), r(o, u);
    }
    function t(o, u, l) {
      var d = o.firstElementChild;
      if (!d)
        for (d = o.firstChild; d && d.nodeType !== Node.ELEMENT_NODE; )
          d = d.nextSibling;
      for (; d; )
        u(d, l) !== !0 && t(d, u, l), d = d.nextElementSibling;
      return null;
    }
    function r(o, u) {
      for (var l = o.shadowRoot; l; )
        n(l, u), l = l.olderShadowRoot;
    }
    function s(o, u) {
      a(o, u, []);
    }
    function a(o, u, l) {
      if (o = window.wrap(o), !(l.indexOf(o) >= 0)) {
        l.push(o);
        for (var d = o.querySelectorAll("link[rel=" + i + "]"), p = 0, h = d.length, m; p < h && (m = d[p]); p++)
          m.import && a(m.import, u, l);
        u(o);
      }
    }
    e.forDocumentTree = s, e.forSubtree = n;
  }), window.CustomElements.addModule(function(e) {
    var i = e.flags, n = e.forSubtree, t = e.forDocumentTree;
    function r(O, W) {
      return s(O, W) || a(O, W);
    }
    function s(O, W) {
      if (e.upgrade(O, W))
        return !0;
      W && h(O);
    }
    function a(O, W) {
      n(O, function(X) {
        if (s(X, W))
          return !0;
      });
    }
    var o = window.MutationObserver._isPolyfilled && i["throttle-attached"];
    e.hasPolyfillMutations = o, e.hasThrottledAttached = o;
    var u = !1, l = [];
    function d(O) {
      l.push(O), u || (u = !0, setTimeout(p));
    }
    function p() {
      u = !1;
      for (var O = l, W = 0, X = O.length, ie; W < X && (ie = O[W]); W++)
        ie();
      l = [];
    }
    function h(O) {
      o ? d(function() {
        m(O);
      }) : m(O);
    }
    function m(O) {
      O.__upgraded__ && !O.__attached && (O.__attached = !0, O.attachedCallback && O.attachedCallback());
    }
    function y(O) {
      T(O), n(O, function(W) {
        T(W);
      });
    }
    function T(O) {
      o ? d(function() {
        b(O);
      }) : b(O);
    }
    function b(O) {
      O.__upgraded__ && O.__attached && (O.__attached = !1, O.detachedCallback && O.detachedCallback());
    }
    function I(O) {
      for (var W = O, X = window.wrap(document); W; ) {
        if (W == X)
          return !0;
        W = W.parentNode || W.nodeType === Node.DOCUMENT_FRAGMENT_NODE && W.host;
      }
    }
    function B(O) {
      if (O.shadowRoot && !O.shadowRoot.__watched) {
        i.dom && console.log("watching shadow-root for: ", O.localName);
        for (var W = O.shadowRoot; W; )
          P(W), W = W.olderShadowRoot;
      }
    }
    function M(O, W) {
      if (i.dom) {
        var X = W[0];
        if (X && X.type === "childList" && X.addedNodes && X.addedNodes) {
          for (var ie = X.addedNodes[0]; ie && ie !== document && !ie.host; )
            ie = ie.parentNode;
          var K = ie && (ie.URL || ie._URL || ie.host && ie.host.localName) || "";
          K = K.split("/?").shift().split("/").pop();
        }
        console.group("mutations (%d) [%s]", W.length, K || "");
      }
      var Z = I(O);
      W.forEach(function(te) {
        te.type === "childList" && (x(te.addedNodes, function(ue) {
          !ue.localName || r(ue, Z);
        }), x(te.removedNodes, function(ue) {
          !ue.localName || y(ue);
        }));
      }), i.dom && console.groupEnd();
    }
    function A(O) {
      for (O = window.wrap(O), O || (O = window.wrap(document)); O.parentNode; )
        O = O.parentNode;
      var W = O.__observer;
      W && (M(O, W.takeRecords()), p());
    }
    var x = Array.prototype.forEach.call.bind(Array.prototype.forEach);
    function P(O) {
      if (!O.__observer) {
        var W = new MutationObserver(M.bind(this, O));
        W.observe(O, {
          childList: !0,
          subtree: !0
        }), O.__observer = W;
      }
    }
    function j(O) {
      O = window.wrap(O), i.dom && console.group("upgradeDocument: ", O.baseURI.split("/").pop());
      var W = O === window.wrap(document);
      r(O, W), P(O), i.dom && console.groupEnd();
    }
    function H(O) {
      t(O, j);
    }
    var D = Element.prototype.createShadowRoot;
    D && (Element.prototype.createShadowRoot = function() {
      var O = D.call(this);
      return window.CustomElements.watchShadow(this), O;
    }), e.watchShadow = B, e.upgradeDocumentTree = H, e.upgradeDocument = j, e.upgradeSubtree = a, e.upgradeAll = r, e.attached = h, e.takeRecords = A;
  }), window.CustomElements.addModule(function(e) {
    var i = e.flags;
    function n(o, u) {
      if (o.localName === "template" && window.HTMLTemplateElement && HTMLTemplateElement.decorate && HTMLTemplateElement.decorate(o), !o.__upgraded__ && o.nodeType === Node.ELEMENT_NODE) {
        var l = o.getAttribute("is"), d = e.getRegisteredDefinition(o.localName) || e.getRegisteredDefinition(l);
        if (d && (l && d.tag == o.localName || !l && !d.extends))
          return t(o, d, u);
      }
    }
    function t(o, u, l) {
      return i.upgrade && console.group("upgrade:", o.localName), u.is && o.setAttribute("is", u.is), r(o, u), o.__upgraded__ = !0, a(o), l && e.attached(o), e.upgradeSubtree(o, l), i.upgrade && console.groupEnd(), o;
    }
    function r(o, u) {
      Object.__proto__ || s(o, u.prototype, u.native), o.__proto__ = u.prototype;
    }
    function s(o, u, l) {
      for (var d = {}, p = u; p !== l && p !== HTMLElement.prototype; ) {
        for (var h = Object.getOwnPropertyNames(p), m = 0, y; y = h[m]; m++)
          d[y] || (Object.defineProperty(o, y, Object.getOwnPropertyDescriptor(p, y)), d[y] = 1);
        p = Object.getPrototypeOf(p);
      }
    }
    function a(o) {
      o.createdCallback && o.createdCallback();
    }
    e.upgrade = n, e.upgradeWithDefinition = t, e.implementPrototype = r;
  }), window.CustomElements.addModule(function(e) {
    e.isIE;
    var i = e.upgradeDocumentTree, n = e.upgradeAll, t = e.upgradeWithDefinition, r = e.implementPrototype, s = e.useNative;
    function a(O, W) {
      var X = W || {};
      if (!O)
        throw new Error("document.registerElement: first argument `name` must not be empty");
      if (O.indexOf("-") < 0)
        throw new Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(O) + "'.");
      if (l(O))
        throw new Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(O) + "'. The type name is invalid.");
      if (b(O))
        throw new Error("DuplicateDefinitionError: a type with name '" + String(O) + "' is already registered");
      return X.prototype || (X.prototype = Object.create(HTMLElement.prototype)), X.__name = O.toLowerCase(), X.extends && (X.extends = X.extends.toLowerCase()), X.lifecycle = X.lifecycle || {}, X.ancestry = p(X.extends), h(X), m(X), o(X.prototype), I(X.__name, X), X.ctor = B(X), X.ctor.prototype = X.prototype, X.prototype.constructor = X.ctor, e.ready && i(document), X.ctor;
    }
    function o(O) {
      if (!O.setAttribute._polyfilled) {
        var W = O.setAttribute;
        O.setAttribute = function(ie, K) {
          u.call(this, ie, K, W);
        };
        var X = O.removeAttribute;
        O.removeAttribute = function(ie) {
          u.call(this, ie, null, X);
        }, O.setAttribute._polyfilled = !0;
      }
    }
    function u(O, W, X) {
      O = O.toLowerCase();
      var ie = this.getAttribute(O);
      X.apply(this, arguments);
      var K = this.getAttribute(O);
      this.attributeChangedCallback && K !== ie && this.attributeChangedCallback(O, ie, K);
    }
    function l(O) {
      for (var W = 0; W < d.length; W++)
        if (O === d[W])
          return !0;
    }
    var d = ["annotation-xml", "color-profile", "font-face", "font-face-src", "font-face-uri", "font-face-format", "font-face-name", "missing-glyph"];
    function p(O) {
      var W = b(O);
      return W ? p(W.extends).concat([W]) : [];
    }
    function h(O) {
      for (var W = O.extends, X = 0, ie; ie = O.ancestry[X]; X++)
        W = ie.is && ie.tag;
      O.tag = W || O.__name, W && (O.is = O.__name);
    }
    function m(O) {
      if (!Object.__proto__) {
        var W = HTMLElement.prototype;
        if (O.is) {
          var X = document.createElement(O.tag);
          W = Object.getPrototypeOf(X);
        }
        for (var ie = O.prototype, K, Z = !1; ie; )
          ie == W && (Z = !0), K = Object.getPrototypeOf(ie), K && (ie.__proto__ = K), ie = K;
        Z || console.warn(O.tag + " prototype not found in prototype chain for " + O.is), O.native = W;
      }
    }
    function y(O) {
      return t(P(O.tag), O);
    }
    var T = {};
    function b(O) {
      if (O)
        return T[O.toLowerCase()];
    }
    function I(O, W) {
      T[O] = W;
    }
    function B(O) {
      return function() {
        return y(O);
      };
    }
    var M = "http://www.w3.org/1999/xhtml";
    function A(O, W, X) {
      return O === M ? x(W, X) : j(O, W);
    }
    function x(O, W) {
      O && (O = O.toLowerCase()), W && (W = W.toLowerCase());
      var X = b(W || O);
      if (X) {
        if (O == X.tag && W == X.is)
          return new X.ctor();
        if (!W && !X.is)
          return new X.ctor();
      }
      var ie;
      return W ? (ie = x(O), ie.setAttribute("is", W), ie) : (ie = P(O), O.indexOf("-") >= 0 && r(ie, HTMLElement), ie);
    }
    var P = document.createElement.bind(document), j = document.createElementNS.bind(document), H;
    !Object.__proto__ && !s ? H = function(O, W) {
      if (O instanceof W)
        return !0;
      for (var X = O; X; ) {
        if (X === W.prototype)
          return !0;
        X = X.__proto__;
      }
      return !1;
    } : H = function(O, W) {
      return O instanceof W;
    };
    function D(O, W) {
      var X = O[W];
      O[W] = function() {
        var ie = X.apply(this, arguments);
        return n(ie), ie;
      };
    }
    D(Node.prototype, "cloneNode"), D(document, "importNode"), document.registerElement = a, document.createElement = x, document.createElementNS = A, e.registry = T, e.instanceof = H, e.reservedTagList = d, e.getRegisteredDefinition = b, document.register = document.registerElement;
  }), function(e) {
    var i = e.useNative, n = e.initializeModules;
    if (e.isIE, i) {
      var t = function() {
      };
      e.watchShadow = t, e.upgrade = t, e.upgradeAll = t, e.upgradeDocumentTree = t, e.upgradeSubtree = t, e.takeRecords = t, e.instanceof = function(u, l) {
        return u instanceof l;
      };
    } else
      n();
    var r = e.upgradeDocumentTree, s = e.upgradeDocument;
    window.wrap || (window.ShadowDOMPolyfill ? (window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded, window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded) : window.wrap = window.unwrap = function(u) {
      return u;
    }), window.HTMLImports && (window.HTMLImports.__importsParsingHook = function(u) {
      u.import && s(wrap(u.import));
    });
    function a() {
      r(window.wrap(document)), window.CustomElements.ready = !0;
      var u = window.requestAnimationFrame || function(l) {
        setTimeout(l, 16);
      };
      u(function() {
        setTimeout(function() {
          window.CustomElements.readyTime = Date.now(), window.HTMLImports && (window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime), document.dispatchEvent(new CustomEvent("WebComponentsReady", {
            bubbles: !0
          }));
        });
      });
    }
    if (document.readyState === "complete" || e.flags.eager)
      a();
    else if (document.readyState === "interactive" && !window.attachEvent && (!window.HTMLImports || window.HTMLImports.ready))
      a();
    else {
      var o = window.HTMLImports && !window.HTMLImports.ready ? "HTMLImportsLoaded" : "DOMContentLoaded";
      window.addEventListener(o, a);
    }
  }(window.CustomElements), function(e) {
    var i = document.createElement("style");
    i.textContent = `body {transition: opacity ease-in 0.2s; } 
body[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } 
`;
    var n = document.querySelector("head");
    n.insertBefore(i, n.firstChild);
  }()), FI;
}
function ec(e) {
  return typeof window.navigator.userAgent == "string" && window.navigator.userAgent.indexOf(e) >= 0;
}
var qI = function() {
  var e = !document.registerElement, i = ec("CriOS"), n;
  n = ec("Android") && ec("Chrome/") && window.navigator.presentation, (n || i) && e && jI();
}, VI = function(e) {
  const i = e.getComponent("Button");
  class n extends i {
    constructor(r, s) {
      super(r, s), r.on("chromecastConnected", this._onChromecastConnected.bind(this)), r.on("chromecastDisconnected", this._onChromecastDisconnected.bind(this)), r.on("chromecastDevicesAvailable", this._onChromecastDevicesAvailable.bind(this)), r.on("chromecastDevicesUnavailable", this._onChromecastDevicesUnavailable.bind(this)), r.chromecastSessionManager && r.chromecastSessionManager.hasAvailableDevices() ? this._onChromecastDevicesAvailable() : this._onChromecastDevicesUnavailable(), s.addCastLabelToButton ? (this.el().classList.add("vjs-chromecast-button-lg"), this._labelEl = document.createElement("span"), this._labelEl.classList.add("vjs-chromecast-button-label"), this._updateCastLabelText(), this.el().appendChild(this._labelEl)) : this.controlText("Open Chromecast menu");
    }
    buildCSSClass() {
      return "vjs-chromecast-button " + (this._isChromecastConnected ? "vjs-chromecast-casting-state " : "") + (this.options_.addCastLabelToButton ? "vjs-chromecast-button-lg " : "") + i.prototype.buildCSSClass();
    }
    handleClick() {
      this.player().trigger("chromecastRequested");
    }
    _onChromecastConnected() {
      this._isChromecastConnected = !0, this._reloadCSSClasses(), this._updateCastLabelText();
    }
    _onChromecastDisconnected() {
      this._isChromecastConnected = !1, this._reloadCSSClasses(), this._updateCastLabelText();
    }
    _onChromecastDevicesAvailable() {
      this.show();
    }
    _onChromecastDevicesUnavailable() {
      this.hide();
    }
    _reloadCSSClasses() {
      !this.el_ || (this.el_.className = this.buildCSSClass());
    }
    _updateCastLabelText() {
      !this._labelEl || (this._labelEl.textContent = this._isChromecastConnected ? this.localize("Disconnect Cast") : this.localize("Cast"));
    }
  }
  e.registerComponent("chromecastButton", n);
};
const yo = class {
  constructor(e) {
    this.player = e, this._sessionListener = this._onSessionStateChange.bind(this), this._castListener = this._onCastStateChange.bind(this), this._addCastContextEventListeners(), this.player.on("dispose", this._removeCastContextEventListeners.bind(this)), this._notifyPlayerOfDevicesAvailabilityChange(this.getCastContext().getCastState()), this.remotePlayer = new cast.framework.RemotePlayer(), this.remotePlayerController = new cast.framework.RemotePlayerController(this.remotePlayer);
  }
  _addCastContextEventListeners() {
    var e = cast.framework.CastContextEventType.SESSION_STATE_CHANGED, i = cast.framework.CastContextEventType.CAST_STATE_CHANGED;
    this.getCastContext().addEventListener(e, this._sessionListener), this.getCastContext().addEventListener(i, this._castListener);
  }
  _removeCastContextEventListeners() {
    var e = cast.framework.CastContextEventType.SESSION_STATE_CHANGED, i = cast.framework.CastContextEventType.CAST_STATE_CHANGED;
    this.getCastContext().removeEventListener(e, this._sessionListener), this.getCastContext().removeEventListener(i, this._castListener);
  }
  _onSessionStateChange(e) {
    e.sessionState === cast.framework.SessionState.SESSION_ENDED && (this.player.trigger("chromecastDisconnected"), this._reloadTech());
  }
  _onCastStateChange(e) {
    this._notifyPlayerOfDevicesAvailabilityChange(e.castState);
  }
  _notifyPlayerOfDevicesAvailabilityChange(e) {
    this.hasAvailableDevices(e) ? this.player.trigger("chromecastDevicesAvailable") : this.player.trigger("chromecastDevicesUnavailable");
  }
  hasAvailableDevices(e) {
    return e = e || this.getCastContext().getCastState(), e === cast.framework.CastState.NOT_CONNECTED || e === cast.framework.CastState.CONNECTING || e === cast.framework.CastState.CONNECTED;
  }
  openCastMenu() {
    var e;
    !this.player.currentSource() || (e = function() {
      yo.hasConnected = !0, this.player.trigger("chromecastConnected"), this._reloadTech();
    }.bind(this), this.getCastContext().requestSession().then(e, function() {
    }));
  }
  _reloadTech() {
    var e = this.player, i = e.currentTime(), n = e.paused(), t = e.currentSources();
    e.src(t), e.ready(function() {
      n ? e.pause() : e.play(), e.currentTime(i || 0);
    });
  }
  getCastContext() {
    return cast.framework.CastContext.getInstance();
  }
  getRemotePlayer() {
    return this.remotePlayer;
  }
  getRemotePlayerController() {
    return this.remotePlayerController;
  }
  static isChromecastAPIAvailable() {
    return window.chrome && window.chrome.cast && window.cast;
  }
  static isChromecastConnected() {
    return yo.isChromecastAPIAvailable() && cast.framework.CastContext.getInstance().getCastState() === cast.framework.CastState.CONNECTED && yo.hasConnected;
  }
};
let Fy = yo;
ra(Fy, "hasConnected", !1);
var jy = Fy;
class HI {
  constructor() {
    this._el = this._createDOMElement();
  }
  _createDOMElement() {
    var i = this._createElement("div", "vjs-tech vjs-tech-chromecast"), n = this._createElement("div", "vjs-tech-chromecast-poster"), t = this._createElement("img", "vjs-tech-chromecast-poster-img"), r = this._createElement("div", "vjs-tech-chromecast-title"), s = this._createElement("div", "vjs-tech-chromecast-subtitle"), a = this._createElement("div", "vjs-tech-chromecast-title-container");
    return n.appendChild(t), a.appendChild(r), a.appendChild(s), i.appendChild(a), i.appendChild(n), i;
  }
  _createElement(i, n) {
    var t = document.createElement(i);
    return t.className = n, t;
  }
  getDOMElement() {
    return this._el;
  }
  _findPosterEl() {
    return this._el.querySelector(".vjs-tech-chromecast-poster");
  }
  _findPosterImageEl() {
    return this._el.querySelector(".vjs-tech-chromecast-poster-img");
  }
  _findTitleEl() {
    return this._el.querySelector(".vjs-tech-chromecast-title");
  }
  _findSubtitleEl() {
    return this._el.querySelector(".vjs-tech-chromecast-subtitle");
  }
  updatePoster(i) {
    var n = this._findPosterImageEl();
    this._poster = i || null, i ? (n.setAttribute("src", i), n.classList.remove("vjs-tech-chromecast-poster-img-empty")) : (n.removeAttribute("src"), n.classList.add("vjs-tech-chromecast-poster-img-empty"));
  }
  getPoster() {
    return this._poster;
  }
  updateTitle(i) {
    var n = this._findTitleEl();
    this._title = i, i ? (n.innerHTML = i, n.classList.remove("vjs-tech-chromecast-title-empty")) : n.classList.add("vjs-tech-chromecast-title-empty");
  }
  updateSubtitle(i) {
    var n = this._findSubtitleEl();
    this._subtitle = i, i ? (n.innerHTML = i, n.classList.remove("vjs-tech-chromecast-subtitle-empty")) : n.classList.add("vjs-tech-chromecast-subtitle-empty");
  }
}
var WI = HI, rm = jy, GI = WI, KI = function(e) {
  var i = e.getComponent("Tech"), n = 10 * 1e3;
  class t extends i {
    constructor(s) {
      super(s), this.featuresVolumeControl = !0, this.featuresPlaybackRate = !1, this.movingMediaElementInDOM = !1, this.featuresFullscreenResize = !0, this.featuresTimeupdateEvents = !0, this.featuresProgressEvents = !1, this.featuresNativeTextTracks = !1, this.featuresNativeAudioTracks = !1, this.featuresNativeVideoTracks = !1, this.videojs = e, this._eventListeners = [], this.videojsPlayer = this.videojs(s.playerId), this._chromecastSessionManager = this.videojsPlayer.chromecastSessionManager, this._ui.updatePoster(this.videojsPlayer.poster()), this._remotePlayer = this._chromecastSessionManager.getRemotePlayer(), this._remotePlayerController = this._chromecastSessionManager.getRemotePlayerController(), this._listenToPlayerControllerEvents(), this.on("dispose", this._removeAllEventListeners.bind(this)), this._hasPlayedAnyItem = !1, this._requestTitle = s.requestTitleFn || function() {
      }, this._requestSubtitle = s.requestSubtitleFn || function() {
      }, this._requestCustomData = s.requestCustomDataFn || function() {
      }, this._initialStartTime = s.startTime || 0, this._playSource(s.source, this._initialStartTime), this.ready(function() {
        this.setMuted(s.muted);
      }.bind(this));
    }
    createEl() {
      return this._ui = this._ui || new GI(), this._ui.getDOMElement();
    }
    play() {
      !this.paused() || (this.ended() && !this._isMediaLoading ? this._playSource({ src: this.videojsPlayer.src() }, 0) : this._remotePlayerController.playOrPause());
    }
    pause() {
      !this.paused() && this._remotePlayer.canPause && this._remotePlayerController.playOrPause();
    }
    paused() {
      return this._remotePlayer.isPaused || this.ended() || this._remotePlayer.playerState === null;
    }
    setSource(s) {
      this._currentSource && this._currentSource.src === s.src && this._currentSource.type === s.type || (this._currentSource = s, this._playSource(s, 0));
    }
    _playSource(s, a) {
      var o = this._getCastSession(), u = new chrome.cast.media.MediaInfo(s.src, s.type), l = this._requestTitle(s), d = this._requestSubtitle(s), p = this.poster(), h = this._requestCustomData(s), m;
      this.trigger("waiting"), this._clearSessionTimeout(), u.metadata = new chrome.cast.media.GenericMediaMetadata(), u.metadata.metadataType = chrome.cast.media.MetadataType.GENERIC, u.metadata.title = l, u.metadata.subtitle = d, u.streamType = this.videojsPlayer.liveTracker && this.videojsPlayer.liveTracker.isLive() ? chrome.cast.media.StreamType.LIVE : chrome.cast.media.StreamType.BUFFERED, p && (u.metadata.images = [{ url: p }]), h && (u.customData = h), this._ui.updateTitle(l), this._ui.updateSubtitle(d), m = new chrome.cast.media.LoadRequest(u), m.autoplay = !0, m.currentTime = a, this._isMediaLoading = !0, this._hasPlayedCurrentItem = !1, o.loadMedia(m).then(function() {
        this._hasPlayedAnyItem || this.triggerReady(), this.trigger("loadstart"), this.trigger("loadeddata"), this.trigger("play"), this.trigger("playing"), this._hasPlayedAnyItem = !0, this._isMediaLoading = !1, this._getMediaSession().addUpdateListener(this._onMediaSessionStatusChanged.bind(this));
      }.bind(this), this._triggerErrorEvent.bind(this));
    }
    setCurrentTime(s) {
      var a = this.duration();
      s > a || !this._remotePlayer.canSeek || (this._remotePlayer.currentTime = Math.min(a - 1, s), this._remotePlayerController.seek(), this._triggerTimeUpdateEvent());
    }
    currentTime() {
      return this._hasPlayedAnyItem ? this._remotePlayer.currentTime : this._initialStartTime;
    }
    duration() {
      return this._hasPlayedAnyItem ? this._remotePlayer.duration : this.videojsPlayer.duration();
    }
    ended() {
      var s = this._getMediaSession();
      return !s && this._hasMediaSessionEnded ? !0 : s ? s.idleReason === chrome.cast.media.IdleReason.FINISHED : !1;
    }
    volume() {
      return this._remotePlayer.volumeLevel;
    }
    setVolume(s) {
      this._remotePlayer.volumeLevel = s, this._remotePlayerController.setVolumeLevel(), this._triggerVolumeChangeEvent();
    }
    muted() {
      return this._remotePlayer.isMuted;
    }
    setMuted(s) {
      (this._remotePlayer.isMuted && !s || !this._remotePlayer.isMuted && s) && this._remotePlayerController.muteOrUnmute();
    }
    poster() {
      return this._ui.getPoster();
    }
    setPoster(s) {
      this._ui.updatePoster(s);
    }
    buffered() {
    }
    seekable() {
      return this.videojs.createTimeRange(0, this.duration());
    }
    controls() {
      return !1;
    }
    playsinline() {
      return !0;
    }
    supportsFullScreen() {
      return !0;
    }
    setAutoplay() {
    }
    playbackRate() {
      var s = this._getMediaSession();
      return s ? s.playbackRate : 1;
    }
    setPlaybackRate() {
    }
    preload() {
    }
    load() {
    }
    readyState() {
      return this._remotePlayer.playerState === "IDLE" || this._remotePlayer.playerState === "BUFFERING" ? 0 : 4;
    }
    _listenToPlayerControllerEvents() {
      var s = cast.framework.RemotePlayerEventType;
      this._addEventListener(this._remotePlayerController, s.PLAYER_STATE_CHANGED, this._onPlayerStateChanged, this), this._addEventListener(this._remotePlayerController, s.VOLUME_LEVEL_CHANGED, this._triggerVolumeChangeEvent, this), this._addEventListener(this._remotePlayerController, s.IS_MUTED_CHANGED, this._triggerVolumeChangeEvent, this), this._addEventListener(this._remotePlayerController, s.CURRENT_TIME_CHANGED, this._triggerTimeUpdateEvent, this), this._addEventListener(this._remotePlayerController, s.DURATION_CHANGED, this._triggerDurationChangeEvent, this);
    }
    _addEventListener(s, a, o, u) {
      var l;
      l = {
        target: s,
        type: a,
        callback: o,
        context: u,
        listener: o.bind(u)
      }, s.addEventListener(a, l.listener), this._eventListeners.push(l);
    }
    _removeAllEventListeners() {
      for (; this._eventListeners.length > 0; )
        this._removeEventListener(this._eventListeners[0]);
      this._eventListeners = [];
    }
    _removeEventListener(s) {
      var a = -1, o = !1, u;
      for (s.target.removeEventListener(s.type, s.listener), u = 0; u < this._eventListeners.length; u++)
        if (o = this._eventListeners[u].target === s.target && this._eventListeners[u].type === s.type && this._eventListeners[u].callback === s.callback && this._eventListeners[u].context === s.context, o) {
          a = u;
          break;
        }
      a !== -1 && this._eventListeners.splice(a, 1);
    }
    _onPlayerStateChanged() {
      var s = chrome.cast.media.PlayerState, a = this._remotePlayer.playerState;
      a === s.PLAYING ? (this._hasPlayedCurrentItem = !0, this.trigger("play"), this.trigger("playing")) : a === s.PAUSED ? this.trigger("pause") : a === s.IDLE && this.ended() || a === null && this._hasPlayedCurrentItem ? (this._hasPlayedCurrentItem = !1, this._closeSessionOnTimeout(), this.trigger("ended"), this._triggerTimeUpdateEvent()) : a === s.BUFFERING && this.trigger("waiting");
    }
    _onMediaSessionStatusChanged(s) {
      this._hasMediaSessionEnded = !!s;
    }
    _closeSessionOnTimeout() {
      this._clearSessionTimeout(), this._sessionTimeoutID = setTimeout(function() {
        var s = this._getCastSession();
        s && s.endSession(!0), this._clearSessionTimeout();
      }.bind(this), n);
    }
    _clearSessionTimeout() {
      this._sessionTimeoutID && (clearTimeout(this._sessionTimeoutID), this._sessionTimeoutID = !1);
    }
    _getCastContext() {
      return this._chromecastSessionManager.getCastContext();
    }
    _getCastSession() {
      return this._getCastContext().getCurrentSession();
    }
    _getMediaSession() {
      var s = this._getCastSession();
      return s ? s.getMediaSession() : null;
    }
    _triggerVolumeChangeEvent() {
      this.trigger("volumechange");
    }
    _triggerTimeUpdateEvent() {
      this.trigger("timeupdate");
    }
    _triggerDurationChangeEvent() {
      this.trigger("durationchange");
    }
    _triggerErrorEvent() {
      this.trigger("error");
    }
  }
  t.canPlaySource = () => rm.isChromecastConnected(), t.isSupported = () => rm.isChromecastConnected(), e.registerTech("chromecast", t);
}, uh = jy, sm = 1e3, zI = 30 * 1e3;
function XI(e) {
  var i = cast.framework.CastContext.getInstance();
  i.setOptions({
    receiverApplicationId: e.receiverAppID || chrome.cast.media.DEFAULT_MEDIA_RECEIVER_APP_ID,
    autoJoinPolicy: chrome.cast.AutoJoinPolicy.ORIGIN_SCOPED
  });
}
function QI(e) {
  e.chromecastSessionManager.openCastMenu();
}
function JI(e, i) {
  var n;
  i.addButtonToControlBar && !e.controlBar.getChild("chromecastButton") && (n = e.controlBar.children().length, typeof i.buttonPositionIndex < "u" && (n = i.buttonPositionIndex >= 0 ? i.buttonPositionIndex : e.controlBar.children().length + i.buttonPositionIndex), e.controlBar.addChild("chromecastButton", i, n)), e.on("chromecastRequested", QI.bind(null, e));
}
function YI(e) {
  e.chromecastSessionManager || (e.chromecastSessionManager = new uh(e));
}
function qy(e, i) {
  XI(i), YI(e), JI(e, i);
}
function $I(e, i) {
  var n = zI / sm, t = 1, r;
  r = setInterval(function() {
    if (t > n) {
      clearInterval(r);
      return;
    }
    uh.isChromecastAPIAvailable() && (clearInterval(r), qy(e, i)), t = t + 1;
  }, sm);
}
var ZI = function(e) {
  e.registerPlugin("chromecast", function(i) {
    var n = Object.assign({ addButtonToControlBar: !0 }, i || {});
    this.ready(function() {
      !this.controlBar || (uh.isChromecastAPIAvailable() ? qy(this, n) : $I(this, n));
    }.bind(this));
  });
}, eD = qI, tD = VI, iD = KI, nD = ZI, rD = function(e, i) {
  var n = Object.assign({ preloadWebComponents: !1 }, i);
  n.preloadWebComponents && eD(), e = e || window.videojs, tD(e), iD(e), nD(e);
};
const sD = "1.1.4", aD = G.getComponent("MenuButton"), oD = G.getComponent("Menu"), uD = G.getComponent("Component"), lD = G.dom;
function cD(e) {
  return typeof e != "string" ? e : e.charAt(0).toUpperCase() + e.slice(1);
}
class dD extends aD {
  constructor(i) {
    super(i, {
      title: i.localize("Quality"),
      name: "QualityButton"
    });
  }
  createItems() {
    return [];
  }
  createMenu() {
    const i = new oD(this.player_, { menuButton: this });
    if (this.hideThreshold_ = 0, this.options_.title) {
      const n = lD.createEl("li", {
        className: "vjs-menu-title",
        innerHTML: cD(this.options_.title),
        tabIndex: -1
      }), t = new uD(this.player_, { el: n });
      this.hideThreshold_ += 1, i.addItem(t);
    }
    if (this.items = this.createItems(), this.items)
      for (let n = 0; n < this.items.length; n++)
        i.addItem(this.items[n]);
    return i;
  }
}
const hD = G.getComponent("MenuItem");
class pD extends hD {
  constructor(i, n, t, r) {
    super(i, {
      label: n.label,
      selectable: !0,
      selected: n.selected || !1
    }), this.item = n, this.qualityButton = t, this.plugin = r;
  }
  handleClick() {
    this.plugin.setQuality(this.item.value);
  }
}
const fD = {
  sortAscending: !1,
  autoPlacement: "top"
}, mD = G.registerPlugin || G.plugin;
class gD {
  constructor(i, n) {
    this.player = i, this.config = n, this.player.qualityLevels && this.getHls() && (this.createQualityButton(), this.bindPlayerEvents());
  }
  getHls() {
    return this.player.tech({ IWillNotUseThisInPlugins: !0 }).hls;
  }
  bindPlayerEvents() {
    this.player.qualityLevels().on("addqualitylevel", this.onAddQualityLevel.bind(this));
  }
  createQualityButton() {
    const i = this.player;
    this._qualityButton = new dD(i);
    const n = i.controlBar.children().length - 2, t = i.controlBar.addChild(
      this._qualityButton,
      { componentClass: "qualitySelector" },
      this.config.placementIndex || n
    );
    if (t.addClass("vjs-quality-selector"), this.config.displayCurrentQuality)
      this.setButtonInnerText("auto");
    else {
      const r = ` ${this.config.vjsIconClass || "vjs-icon-hd"}`;
      t.menuButton_.$(".vjs-icon-placeholder").className += r;
    }
    t.removeClass("vjs-hidden");
  }
  setButtonInnerText(i) {
    this._qualityButton.menuButton_.$(".vjs-icon-placeholder").innerHTML = i;
  }
  getQualityMenuItem(i) {
    const n = this.player;
    return new pD(n, i, this._qualityButton, this);
  }
  onAddQualityLevel() {
    const i = this.player, n = i.qualityLevels().levels_ || [], t = [], r = this.config.autoPlacement, s = this.getQualityMenuItem.call(this, {
      label: i.localize("Auto"),
      value: "auto",
      selected: !0
    });
    for (let a = 0; a < n.length; ++a) {
      const { width: o, height: u } = n[a], l = o > u ? u : o;
      if (l && !t.filter((d) => d.item && d.item.value === l).length) {
        const d = this.getQualityMenuItem.call(this, {
          label: l + "p",
          value: l
        });
        t.push(d);
      }
    }
    this.config.sortAscending ? t.sort((a, o) => typeof a != "object" || typeof o != "object" ? -1 : a.item.value - o.item.value) : t.sort((a, o) => typeof a != "object" || typeof o != "object" ? -1 : o.item.value - a.item.value), this._qualityButton && (this._qualityButton.createItems = function() {
      return r === "top" ? [s, ...t] : [...t, s];
    }, this._qualityButton.update());
  }
  setQuality(i) {
    const n = this.player.qualityLevels();
    this._currentQuality = i, this.config.displayCurrentQuality && this.setButtonInnerText(i === "auto" ? i : `${i}p`);
    for (let t = 0; t < n.length; ++t) {
      const { width: r, height: s } = n[t], a = r > s ? s : r;
      n[t].enabled = a === i || i === "auto";
    }
    for (let t = 0; t < this._qualityButton.items.length; ++t) {
      const r = this._qualityButton.items[t];
      r && r.selected(r.item && r.item.value === i);
    }
    this._qualityButton.unpressButton();
  }
  getCurrentQuality() {
    return this._currentQuality || "auto";
  }
}
const vD = (e, i) => {
  e.addClass("vjs-hls-quality-selector"), e.hlsQualitySelector = new gD(e, i);
}, lh = function(e) {
  this.ready(() => {
    vD(this, G.mergeOptions(fD, e));
  });
};
mD("hlsQualitySelector", lh);
lh.VERSION = sD;
function yD(e, i, n, t) {
  return function() {
    t = this, clearTimeout(n), n = setTimeout(function() {
      e.apply(t, arguments);
    }, i || 100);
  };
}
G.registerPlugin("smallScreen", function(e) {
  var i = (t) => {
    this.userActive(!this.userActive()), t.stopPropagation();
  };
  let n = !1;
  this.on(
    "playerresize",
    yD(() => {
      !n && G.browser.TOUCH_ENABLED && screen.width < 768 ? (n = !0, this.controlBar.el().addEventListener("click", i), this.addClass("vjs-smallscreen-ui")) : n && screen.width >= 768 && !this.isFullscreen() && (n = !1, this.controlBar.el().removeEventListener("click", i), this.removeClass("vjs-smallscreen-ui"));
    }, 100)
  );
});
const Tu = G.getComponent("SeekBar");
var _D = Tu.prototype.getPercent;
Tu.prototype.getPercent = function() {
  const e = this.player_.liveTracker;
  if (e && e.isLive())
    return _D.bind(this)();
  const i = this.player_.currentTime() / this.player_.duration();
  return i >= 1 ? 1 : i;
};
var bD = Tu.prototype.handleMouseMove;
Tu.prototype.handleMouseMove = function(e) {
  const i = this.player_.liveTracker;
  if (i && i.isLive())
    return bD.bind(this, e)();
  let n = this.calculateDistance(e) * this.player_.duration();
  n === this.player_.duration() && (n = n - 0.1), this.player_.currentTime(n), this.update();
};
const Vy = G.getComponent("Button");
class TD extends Vy {
  constructor(i, n = {}) {
    super(i, n), this.player_ = i, this.addClass("vjs-seek-forward-control");
  }
  handleClick(i) {
    this.player_.currentTime(this.player_.currentTime() + 15);
  }
}
class ED extends Vy {
  constructor(i, n = {}) {
    super(i, n), this.player_ = i, this.addClass("vjs-seek-backward-control");
  }
  handleClick(i) {
    this.player_.currentTime(this.player_.currentTime() - 15);
  }
}
const SD = G.getComponent("Button");
class wD extends SD {
  constructor(i, n = {}) {
    super(i, n), this.player_ = i, this.controlText("Hide controls"), this.addClass("vjs-dismiss-control");
  }
  handleClick(i) {
    this.player_.userActive(!1);
  }
}
var Fc = { exports: {} };
(function(e, i) {
  (function(n, t) {
    var r = "1.0.34", s = "", a = "?", o = "function", u = "undefined", l = "object", d = "string", p = "major", h = "model", m = "name", y = "type", T = "vendor", b = "version", I = "architecture", B = "console", M = "mobile", A = "tablet", x = "smarttv", P = "wearable", j = "embedded", H = 350, D = "Amazon", O = "Apple", W = "ASUS", X = "BlackBerry", ie = "Browser", K = "Chrome", Z = "Edge", te = "Firefox", ue = "Google", be = "Huawei", he = "LG", at = "Microsoft", pe = "Motorola", le = "Opera", fe = "Samsung", Pe = "Sharp", re = "Sony", J = "Xiaomi", _e = "Zebra", Ie = "Facebook", He = "Chromium OS", Qe = "Mac OS", Ue = function(De, Oe) {
      var Me = {};
      for (var Je in De)
        Oe[Je] && Oe[Je].length % 2 === 0 ? Me[Je] = Oe[Je].concat(De[Je]) : Me[Je] = De[Je];
      return Me;
    }, bt = function(De) {
      for (var Oe = {}, Me = 0; Me < De.length; Me++)
        Oe[De[Me].toUpperCase()] = De[Me];
      return Oe;
    }, it = function(De, Oe) {
      return typeof De === d ? ne(Oe).indexOf(ne(De)) !== -1 : !1;
    }, ne = function(De) {
      return De.toLowerCase();
    }, Fe = function(De) {
      return typeof De === d ? De.replace(/[^\d\.]/g, s).split(".")[0] : t;
    }, $e = function(De, Oe) {
      if (typeof De === d)
        return De = De.replace(/^\s\s*/, s), typeof Oe === u ? De : De.substring(0, H);
    }, nt = function(De, Oe) {
      for (var Me = 0, Je, ei, Gt, de, ti, Si; Me < Oe.length && !ti; ) {
        var On = Oe[Me], br = Oe[Me + 1];
        for (Je = ei = 0; Je < On.length && !ti && On[Je]; )
          if (ti = On[Je++].exec(De), ti)
            for (Gt = 0; Gt < br.length; Gt++)
              Si = ti[++ei], de = br[Gt], typeof de === l && de.length > 0 ? de.length === 2 ? typeof de[1] == o ? this[de[0]] = de[1].call(this, Si) : this[de[0]] = de[1] : de.length === 3 ? typeof de[1] === o && !(de[1].exec && de[1].test) ? this[de[0]] = Si ? de[1].call(this, Si, de[2]) : t : this[de[0]] = Si ? Si.replace(de[1], de[2]) : t : de.length === 4 && (this[de[0]] = Si ? de[3].call(this, Si.replace(de[1], de[2])) : t) : this[de] = Si || t;
        Me += 2;
      }
    }, Tt = function(De, Oe) {
      for (var Me in Oe)
        if (typeof Oe[Me] === l && Oe[Me].length > 0) {
          for (var Je = 0; Je < Oe[Me].length; Je++)
            if (it(Oe[Me][Je], De))
              return Me === a ? t : Me;
        } else if (it(Oe[Me], De))
          return Me === a ? t : Me;
      return De;
    }, Ke = {
      "1.0": "/8",
      "1.2": "/1",
      "1.3": "/3",
      "2.0": "/412",
      "2.0.2": "/416",
      "2.0.3": "/417",
      "2.0.4": "/419",
      "?": "/"
    }, Wt = {
      ME: "4.90",
      "NT 3.11": "NT3.51",
      "NT 4.0": "NT4.0",
      2e3: "NT 5.0",
      XP: ["NT 5.1", "NT 5.2"],
      Vista: "NT 6.0",
      7: "NT 6.1",
      8: "NT 6.2",
      "8.1": "NT 6.3",
      10: ["NT 6.4", "NT 10.0"],
      RT: "ARM"
    }, jt = {
      browser: [
        [
          /\b(?:crmo|crios)\/([\w\.]+)/i
        ],
        [b, [m, "Chrome"]],
        [
          /edg(?:e|ios|a)?\/([\w\.]+)/i
        ],
        [b, [m, "Edge"]],
        [
          /(opera mini)\/([-\w\.]+)/i,
          /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
          /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i
        ],
        [m, b],
        [
          /opios[\/ ]+([\w\.]+)/i
        ],
        [b, [m, le + " Mini"]],
        [
          /\bopr\/([\w\.]+)/i
        ],
        [b, [m, le]],
        [
          /(kindle)\/([\w\.]+)/i,
          /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i,
          /(avant |iemobile|slim)(?:browser)?[\/ ]?([\w\.]*)/i,
          /(ba?idubrowser)[\/ ]?([\w\.]+)/i,
          /(?:ms|\()(ie) ([\w\.]+)/i,
          /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i,
          /(weibo)__([\d\.]+)/i
        ],
        [m, b],
        [
          /(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i
        ],
        [b, [m, "UC" + ie]],
        [
          /microm.+\bqbcore\/([\w\.]+)/i,
          /\bqbcore\/([\w\.]+).+microm/i
        ],
        [b, [m, "WeChat(Win) Desktop"]],
        [
          /micromessenger\/([\w\.]+)/i
        ],
        [b, [m, "WeChat"]],
        [
          /konqueror\/([\w\.]+)/i
        ],
        [b, [m, "Konqueror"]],
        [
          /trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i
        ],
        [b, [m, "IE"]],
        [
          /yabrowser\/([\w\.]+)/i
        ],
        [b, [m, "Yandex"]],
        [
          /(avast|avg)\/([\w\.]+)/i
        ],
        [[m, /(.+)/, "$1 Secure " + ie], b],
        [
          /\bfocus\/([\w\.]+)/i
        ],
        [b, [m, te + " Focus"]],
        [
          /\bopt\/([\w\.]+)/i
        ],
        [b, [m, le + " Touch"]],
        [
          /coc_coc\w+\/([\w\.]+)/i
        ],
        [b, [m, "Coc Coc"]],
        [
          /dolfin\/([\w\.]+)/i
        ],
        [b, [m, "Dolphin"]],
        [
          /coast\/([\w\.]+)/i
        ],
        [b, [m, le + " Coast"]],
        [
          /miuibrowser\/([\w\.]+)/i
        ],
        [b, [m, "MIUI " + ie]],
        [
          /fxios\/([-\w\.]+)/i
        ],
        [b, [m, te]],
        [
          /\bqihu|(qi?ho?o?|360)browser/i
        ],
        [[m, "360 " + ie]],
        [
          /(oculus|samsung|sailfish|huawei)browser\/([\w\.]+)/i
        ],
        [[m, /(.+)/, "$1 " + ie], b],
        [
          /(comodo_dragon)\/([\w\.]+)/i
        ],
        [[m, /_/g, " "], b],
        [
          /(electron)\/([\w\.]+) safari/i,
          /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
          /m?(qqbrowser|baiduboxapp|2345Explorer)[\/ ]?([\w\.]+)/i
        ],
        [m, b],
        [
          /(metasr)[\/ ]?([\w\.]+)/i,
          /(lbbrowser)/i,
          /\[(linkedin)app\]/i
        ],
        [m],
        [
          /((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i
        ],
        [[m, Ie], b],
        [
          /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
          /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
          /safari (line)\/([\w\.]+)/i,
          /\b(line)\/([\w\.]+)\/iab/i,
          /(chromium|instagram)[\/ ]([-\w\.]+)/i
        ],
        [m, b],
        [
          /\bgsa\/([\w\.]+) .*safari\//i
        ],
        [b, [m, "GSA"]],
        [
          /headlesschrome(?:\/([\w\.]+)| )/i
        ],
        [b, [m, K + " Headless"]],
        [
          / wv\).+(chrome)\/([\w\.]+)/i
        ],
        [[m, K + " WebView"], b],
        [
          /droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i
        ],
        [b, [m, "Android " + ie]],
        [
          /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i
        ],
        [m, b],
        [
          /version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i
        ],
        [b, [m, "Mobile Safari"]],
        [
          /version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i
        ],
        [b, m],
        [
          /webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i
        ],
        [m, [b, Tt, Ke]],
        [
          /(webkit|khtml)\/([\w\.]+)/i
        ],
        [m, b],
        [
          /(navigator|netscape\d?)\/([-\w\.]+)/i
        ],
        [[m, "Netscape"], b],
        [
          /mobile vr; rv:([\w\.]+)\).+firefox/i
        ],
        [b, [m, te + " Reality"]],
        [
          /ekiohf.+(flow)\/([\w\.]+)/i,
          /(swiftfox)/i,
          /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i,
          /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
          /(firefox)\/([\w\.]+)/i,
          /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
          /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
          /(links) \(([\w\.]+)/i,
          /panasonic;(viera)/i
        ],
        [m, b],
        [
          /(cobalt)\/([\w\.]+)/i
        ],
        [m, [b, /master.|lts./, ""]]
      ],
      cpu: [
        [
          /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i
        ],
        [[I, "amd64"]],
        [
          /(ia32(?=;))/i
        ],
        [[I, ne]],
        [
          /((?:i[346]|x)86)[;\)]/i
        ],
        [[I, "ia32"]],
        [
          /\b(aarch64|arm(v?8e?l?|_?64))\b/i
        ],
        [[I, "arm64"]],
        [
          /\b(arm(?:v[67])?ht?n?[fl]p?)\b/i
        ],
        [[I, "armhf"]],
        [
          /windows (ce|mobile); ppc;/i
        ],
        [[I, "arm"]],
        [
          /((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i
        ],
        [[I, /ower/, s, ne]],
        [
          /(sun4\w)[;\)]/i
        ],
        [[I, "sparc"]],
        [
          /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i
        ],
        [[I, ne]]
      ],
      device: [
        [
          /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i
        ],
        [h, [T, fe], [y, A]],
        [
          /\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
          /samsung[- ]([-\w]+)/i,
          /sec-(sgh\w+)/i
        ],
        [h, [T, fe], [y, M]],
        [
          /\((ip(?:hone|od)[\w ]*);/i
        ],
        [h, [T, O], [y, M]],
        [
          /\((ipad);[-\w\),; ]+apple/i,
          /applecoremedia\/[\w\.]+ \((ipad)/i,
          /\b(ipad)\d\d?,\d\d?[;\]].+ios/i
        ],
        [h, [T, O], [y, A]],
        [
          /(macintosh);/i
        ],
        [h, [T, O]],
        [
          /\b(sh-?[altvz]?\d\d[a-ekm]?)/i
        ],
        [h, [T, Pe], [y, M]],
        [
          /\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i
        ],
        [h, [T, be], [y, A]],
        [
          /(?:huawei|honor)([-\w ]+)[;\)]/i,
          /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i
        ],
        [h, [T, be], [y, M]],
        [
          /\b(poco[\w ]+)(?: bui|\))/i,
          /\b; (\w+) build\/hm\1/i,
          /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
          /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
          /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i
        ],
        [[h, /_/g, " "], [T, J], [y, M]],
        [
          /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i
        ],
        [[h, /_/g, " "], [T, J], [y, A]],
        [
          /; (\w+) bui.+ oppo/i,
          /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i
        ],
        [h, [T, "OPPO"], [y, M]],
        [
          /vivo (\w+)(?: bui|\))/i,
          /\b(v[12]\d{3}\w?[at])(?: bui|;)/i
        ],
        [h, [T, "Vivo"], [y, M]],
        [
          /\b(rmx[12]\d{3})(?: bui|;|\))/i
        ],
        [h, [T, "Realme"], [y, M]],
        [
          /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
          /\bmot(?:orola)?[- ](\w*)/i,
          /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i
        ],
        [h, [T, pe], [y, M]],
        [
          /\b(mz60\d|xoom[2 ]{0,2}) build\//i
        ],
        [h, [T, pe], [y, A]],
        [
          /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i
        ],
        [h, [T, he], [y, A]],
        [
          /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
          /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
          /\blg-?([\d\w]+) bui/i
        ],
        [h, [T, he], [y, M]],
        [
          /(ideatab[-\w ]+)/i,
          /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i
        ],
        [h, [T, "Lenovo"], [y, A]],
        [
          /(?:maemo|nokia).*(n900|lumia \d+)/i,
          /nokia[-_ ]?([-\w\.]*)/i
        ],
        [[h, /_/g, " "], [T, "Nokia"], [y, M]],
        [
          /(pixel c)\b/i
        ],
        [h, [T, ue], [y, A]],
        [
          /droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i
        ],
        [h, [T, ue], [y, M]],
        [
          /droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i
        ],
        [h, [T, re], [y, M]],
        [
          /sony tablet [ps]/i,
          /\b(?:sony)?sgp\w+(?: bui|\))/i
        ],
        [[h, "Xperia Tablet"], [T, re], [y, A]],
        [
          / (kb2005|in20[12]5|be20[12][59])\b/i,
          /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i
        ],
        [h, [T, "OnePlus"], [y, M]],
        [
          /(alexa)webm/i,
          /(kf[a-z]{2}wi)( bui|\))/i,
          /(kf[a-z]+)( bui|\)).+silk\//i
        ],
        [h, [T, D], [y, A]],
        [
          /((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i
        ],
        [[h, /(.+)/g, "Fire Phone $1"], [T, D], [y, M]],
        [
          /(playbook);[-\w\),; ]+(rim)/i
        ],
        [h, T, [y, A]],
        [
          /\b((?:bb[a-f]|st[hv])100-\d)/i,
          /\(bb10; (\w+)/i
        ],
        [h, [T, X], [y, M]],
        [
          /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i
        ],
        [h, [T, W], [y, A]],
        [
          / (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i
        ],
        [h, [T, W], [y, M]],
        [
          /(nexus 9)/i
        ],
        [h, [T, "HTC"], [y, A]],
        [
          /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
          /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
          /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i
        ],
        [T, [h, /_/g, " "], [y, M]],
        [
          /droid.+; ([ab][1-7]-?[0178a]\d\d?)/i
        ],
        [h, [T, "Acer"], [y, A]],
        [
          /droid.+; (m[1-5] note) bui/i,
          /\bmz-([-\w]{2,})/i
        ],
        [h, [T, "Meizu"], [y, M]],
        [
          /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\w]*)/i,
          /(hp) ([\w ]+\w)/i,
          /(asus)-?(\w+)/i,
          /(microsoft); (lumia[\w ]+)/i,
          /(lenovo)[-_ ]?([-\w]+)/i,
          /(jolla)/i,
          /(oppo) ?([\w ]+) bui/i
        ],
        [T, h, [y, M]],
        [
          /(kobo)\s(ereader|touch)/i,
          /(archos) (gamepad2?)/i,
          /(hp).+(touchpad(?!.+tablet)|tablet)/i,
          /(kindle)\/([\w\.]+)/i,
          /(nook)[\w ]+build\/(\w+)/i,
          /(dell) (strea[kpr\d ]*[\dko])/i,
          /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
          /(trinity)[- ]*(t\d{3}) bui/i,
          /(gigaset)[- ]+(q\w{1,9}) bui/i,
          /(vodafone) ([\w ]+)(?:\)| bui)/i
        ],
        [T, h, [y, A]],
        [
          /(surface duo)/i
        ],
        [h, [T, at], [y, A]],
        [
          /droid [\d\.]+; (fp\du?)(?: b|\))/i
        ],
        [h, [T, "Fairphone"], [y, M]],
        [
          /(u304aa)/i
        ],
        [h, [T, "AT&T"], [y, M]],
        [
          /\bsie-(\w*)/i
        ],
        [h, [T, "Siemens"], [y, M]],
        [
          /\b(rct\w+) b/i
        ],
        [h, [T, "RCA"], [y, A]],
        [
          /\b(venue[\d ]{2,7}) b/i
        ],
        [h, [T, "Dell"], [y, A]],
        [
          /\b(q(?:mv|ta)\w+) b/i
        ],
        [h, [T, "Verizon"], [y, A]],
        [
          /\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i
        ],
        [h, [T, "Barnes & Noble"], [y, A]],
        [
          /\b(tm\d{3}\w+) b/i
        ],
        [h, [T, "NuVision"], [y, A]],
        [
          /\b(k88) b/i
        ],
        [h, [T, "ZTE"], [y, A]],
        [
          /\b(nx\d{3}j) b/i
        ],
        [h, [T, "ZTE"], [y, M]],
        [
          /\b(gen\d{3}) b.+49h/i
        ],
        [h, [T, "Swiss"], [y, M]],
        [
          /\b(zur\d{3}) b/i
        ],
        [h, [T, "Swiss"], [y, A]],
        [
          /\b((zeki)?tb.*\b) b/i
        ],
        [h, [T, "Zeki"], [y, A]],
        [
          /\b([yr]\d{2}) b/i,
          /\b(dragon[- ]+touch |dt)(\w{5}) b/i
        ],
        [[T, "Dragon Touch"], h, [y, A]],
        [
          /\b(ns-?\w{0,9}) b/i
        ],
        [h, [T, "Insignia"], [y, A]],
        [
          /\b((nxa|next)-?\w{0,9}) b/i
        ],
        [h, [T, "NextBook"], [y, A]],
        [
          /\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i
        ],
        [[T, "Voice"], h, [y, M]],
        [
          /\b(lvtel\-)?(v1[12]) b/i
        ],
        [[T, "LvTel"], h, [y, M]],
        [
          /\b(ph-1) /i
        ],
        [h, [T, "Essential"], [y, M]],
        [
          /\b(v(100md|700na|7011|917g).*\b) b/i
        ],
        [h, [T, "Envizen"], [y, A]],
        [
          /\b(trio[-\w\. ]+) b/i
        ],
        [h, [T, "MachSpeed"], [y, A]],
        [
          /\btu_(1491) b/i
        ],
        [h, [T, "Rotor"], [y, A]],
        [
          /(shield[\w ]+) b/i
        ],
        [h, [T, "Nvidia"], [y, A]],
        [
          /(sprint) (\w+)/i
        ],
        [T, h, [y, M]],
        [
          /(kin\.[onetw]{3})/i
        ],
        [[h, /\./g, " "], [T, at], [y, M]],
        [
          /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i
        ],
        [h, [T, _e], [y, A]],
        [
          /droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i
        ],
        [h, [T, _e], [y, M]],
        [
          /smart-tv.+(samsung)/i
        ],
        [T, [y, x]],
        [
          /hbbtv.+maple;(\d+)/i
        ],
        [[h, /^/, "SmartTV"], [T, fe], [y, x]],
        [
          /(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i
        ],
        [[T, he], [y, x]],
        [
          /(apple) ?tv/i
        ],
        [T, [h, O + " TV"], [y, x]],
        [
          /crkey/i
        ],
        [[h, K + "cast"], [T, ue], [y, x]],
        [
          /droid.+aft(\w)( bui|\))/i
        ],
        [h, [T, D], [y, x]],
        [
          /\(dtv[\);].+(aquos)/i,
          /(aquos-tv[\w ]+)\)/i
        ],
        [h, [T, Pe], [y, x]],
        [
          /(bravia[\w ]+)( bui|\))/i
        ],
        [h, [T, re], [y, x]],
        [
          /(mitv-\w{5}) bui/i
        ],
        [h, [T, J], [y, x]],
        [
          /Hbbtv.*(technisat) (.*);/i
        ],
        [T, h, [y, x]],
        [
          /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
          /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i
        ],
        [[T, $e], [h, $e], [y, x]],
        [
          /\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i
        ],
        [[y, x]],
        [
          /(ouya)/i,
          /(nintendo) ([wids3utch]+)/i
        ],
        [T, h, [y, B]],
        [
          /droid.+; (shield) bui/i
        ],
        [h, [T, "Nvidia"], [y, B]],
        [
          /(playstation [345portablevi]+)/i
        ],
        [h, [T, re], [y, B]],
        [
          /\b(xbox(?: one)?(?!; xbox))[\); ]/i
        ],
        [h, [T, at], [y, B]],
        [
          /((pebble))app/i
        ],
        [T, h, [y, P]],
        [
          /(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i
        ],
        [h, [T, O], [y, P]],
        [
          /droid.+; (glass) \d/i
        ],
        [h, [T, ue], [y, P]],
        [
          /droid.+; (wt63?0{2,3})\)/i
        ],
        [h, [T, _e], [y, P]],
        [
          /(quest( 2| pro)?)/i
        ],
        [h, [T, Ie], [y, P]],
        [
          /(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i
        ],
        [T, [y, j]],
        [
          /droid .+?; ([^;]+?)(?: bui|\) applew).+? mobile safari/i
        ],
        [h, [y, M]],
        [
          /droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i
        ],
        [h, [y, A]],
        [
          /\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i
        ],
        [[y, A]],
        [
          /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i
        ],
        [[y, M]],
        [
          /(android[-\w\. ]{0,9});.+buil/i
        ],
        [h, [T, "Generic"]]
      ],
      engine: [
        [
          /windows.+ edge\/([\w\.]+)/i
        ],
        [b, [m, Z + "HTML"]],
        [
          /webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i
        ],
        [b, [m, "Blink"]],
        [
          /(presto)\/([\w\.]+)/i,
          /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
          /ekioh(flow)\/([\w\.]+)/i,
          /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
          /(icab)[\/ ]([23]\.[\d\.]+)/i
        ],
        [m, b],
        [
          /rv\:([\w\.]{1,9})\b.+(gecko)/i
        ],
        [b, m]
      ],
      os: [
        [
          /microsoft (windows) (vista|xp)/i
        ],
        [m, b],
        [
          /(windows) nt 6\.2; (arm)/i,
          /(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i,
          /(windows)[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i
        ],
        [m, [b, Tt, Wt]],
        [
          /(win(?=3|9|n)|win 9x )([nt\d\.]+)/i
        ],
        [[m, "Windows"], [b, Tt, Wt]],
        [
          /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
          /cfnetwork\/.+darwin/i
        ],
        [[b, /_/g, "."], [m, "iOS"]],
        [
          /(mac os x) ?([\w\. ]*)/i,
          /(macintosh|mac_powerpc\b)(?!.+haiku)/i
        ],
        [[m, Qe], [b, /_/g, "."]],
        [
          /droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i
        ],
        [b, m],
        [
          /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,
          /(blackberry)\w*\/([\w\.]*)/i,
          /(tizen|kaios)[\/ ]([\w\.]+)/i,
          /\((series40);/i
        ],
        [m, b],
        [
          /\(bb(10);/i
        ],
        [b, [m, X]],
        [
          /(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i
        ],
        [b, [m, "Symbian"]],
        [
          /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i
        ],
        [b, [m, te + " OS"]],
        [
          /web0s;.+rt(tv)/i,
          /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i
        ],
        [b, [m, "webOS"]],
        [
          /watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i
        ],
        [b, [m, "watchOS"]],
        [
          /crkey\/([\d\.]+)/i
        ],
        [b, [m, K + "cast"]],
        [
          /(cros) [\w]+(?:\)| ([\w\.]+)\b)/i
        ],
        [[m, He], b],
        [
          /panasonic;(viera)/i,
          /(netrange)mmh/i,
          /(nettv)\/(\d+\.[\w\.]+)/i,
          /(nintendo|playstation) ([wids345portablevuch]+)/i,
          /(xbox); +xbox ([^\);]+)/i,
          /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
          /(mint)[\/\(\) ]?(\w*)/i,
          /(mageia|vectorlinux)[; ]/i,
          /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
          /(hurd|linux) ?([\w\.]*)/i,
          /(gnu) ?([\w\.]*)/i,
          /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
          /(haiku) (\w+)/i
        ],
        [m, b],
        [
          /(sunos) ?([\w\.\d]*)/i
        ],
        [[m, "Solaris"], b],
        [
          /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
          /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
          /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,
          /(unix) ?([\w\.]*)/i
        ],
        [m, b]
      ]
    }, gt = function(De, Oe) {
      if (typeof De === l && (Oe = De, De = t), !(this instanceof gt))
        return new gt(De, Oe).getResult();
      var Me = typeof n !== u && n.navigator ? n.navigator : t, Je = De || (Me && Me.userAgent ? Me.userAgent : s), ei = Me && Me.userAgentData ? Me.userAgentData : t, Gt = Oe ? Ue(jt, Oe) : jt;
      return this.getBrowser = function() {
        var de = {};
        return de[m] = t, de[b] = t, nt.call(de, Je, Gt.browser), de[p] = Fe(de[b]), Me && Me.brave && typeof Me.brave.isBrave == o && (de[m] = "Brave"), de;
      }, this.getCPU = function() {
        var de = {};
        return de[I] = t, nt.call(de, Je, Gt.cpu), de;
      }, this.getDevice = function() {
        var de = {};
        return de[T] = t, de[h] = t, de[y] = t, nt.call(de, Je, Gt.device), !de[y] && ei && ei.mobile && (de[y] = M), de[h] == "Macintosh" && Me && typeof Me.standalone !== u && Me.maxTouchPoints && Me.maxTouchPoints > 2 && (de[h] = "iPad", de[y] = A), de;
      }, this.getEngine = function() {
        var de = {};
        return de[m] = t, de[b] = t, nt.call(de, Je, Gt.engine), de;
      }, this.getOS = function() {
        var de = {};
        return de[m] = t, de[b] = t, nt.call(de, Je, Gt.os), !de[m] && ei && ei.platform != "Unknown" && (de[m] = ei.platform.replace(/chrome os/i, He).replace(/macos/i, Qe)), de;
      }, this.getResult = function() {
        return {
          ua: this.getUA(),
          browser: this.getBrowser(),
          engine: this.getEngine(),
          os: this.getOS(),
          device: this.getDevice(),
          cpu: this.getCPU()
        };
      }, this.getUA = function() {
        return Je;
      }, this.setUA = function(de) {
        return Je = typeof de === d && de.length > H ? $e(de, H) : de, this;
      }, this.setUA(Je), this;
    };
    gt.VERSION = r, gt.BROWSER = bt([m, b, p]), gt.CPU = bt([I]), gt.DEVICE = bt([h, T, y, B, M, x, A, P, j]), gt.ENGINE = gt.OS = bt([m, b]), e.exports && (i = e.exports = gt), i.UAParser = gt;
    var Et = typeof n !== u && (n.jQuery || n.Zepto);
    if (Et && !Et.ua) {
      var vt = new gt();
      Et.ua = vt.getResult(), Et.ua.get = function() {
        return vt.getUA();
      }, Et.ua.set = function(De) {
        vt.setUA(De);
        var Oe = vt.getResult();
        for (var Me in Oe)
          Et.ua[Me] = Oe[Me];
      };
    }
  })(typeof window == "object" ? window : is);
})(Fc, Fc.exports);
const kD = Fc.exports, am = new kD().getResult(), Hy = () => (am == null ? void 0 : am.device.type) === "smarttv";
G.getPlugin("hlsQualitySelector") || G.registerPlugin("hlsQualitySelector", lh);
let Xo = !1;
zo.load().then(() => {
  rD(G, void 0), Xo = !0;
});
async function Wy(e, i) {
  var n;
  Xo || await new Promise((u) => setTimeout(u, 100));
  const t = G.mergeOptions(CD(), i), r = "videojs-" + e;
  var s = G.getPlayer(r);
  s && s.dispose();
  const a = ID(r, t);
  (n = document.getElementById(e)) == null || n.insertAdjacentElement("afterbegin", a);
  const o = DD(a, t);
  return t.npaw.enabled === !0 && RI(o, t.npaw), o;
}
const CD = () => {
  const e = {
    eventTracking: !0,
    smallScreen: {}
  };
  return Xo && (e.chromecast = {
    buttonPositionIndex: 10,
    receiverAppID: "BC91FA3B"
  }), {
    src: {
      type: "application/x-mpegURL"
    },
    autoplay: !1,
    languagePreferenceDefaults: {},
    npaw: {
      tracking: {
        isLive: !1,
        metadata: {},
        userId: ""
      }
    },
    subtitles: [],
    videojs: {
      autoplay: !1,
      controls: !0,
      fluid: !0,
      crossOrigin: "anonymous",
      html5: {
        vhs: {
          experimentalBufferBasedABR: !1,
          useBandwidthFromLocalStorage: !0,
          overrideNative: !0,
          limitRenditionByPlayerDimensions: !0,
          useDevicePixelRatio: !0,
          allowSeeksWithinUnsafeLiveWindow: !0,
          cacheEncryptionKeys: !0
        },
        nativeAudioTracks: !1,
        nativeVideoTracks: !1
      },
      inactivityTimeout: Hy() ? 6e4 : 2e3,
      liveui: !0,
      liveTracker: {
        trackingThreshold: 15
      },
      plugins: e,
      responsive: !0,
      techOrder: Xo ? ["chromecast", "html5"] : ["html5"],
      userActions: {
        hotkeys: !0
      }
    }
  };
};
function AD(e, i) {
  MI(e, i);
}
function ID(e, i) {
  const n = document.createElement("video");
  return n.classList.add("video-js", "vjs-brunstadtv-skin"), i.autoplay && n.classList.add("vjs-show-startup-spinner"), n.id = e, n;
}
function om(e, i) {
  let n = null;
  for (const t of Object.values(e.audioTracks().tracks_))
    t.language === i && (n = t);
  i && n && (n.enabled = !0);
}
function um(e, i) {
  var n;
  const t = (n = Object.values(
    e.remoteTextTracks()
  )) == null ? void 0 : n.filter((s) => s.kind === "captions" || s.kind === "subtitles"), r = t.find((s) => {
    var a;
    return ((a = s.language) == null ? void 0 : a.substr(0, 3)) === i;
  });
  t.forEach(
    (s) => s.mode = r && r.id === s.id ? "showing" : "hidden"
  );
}
function DD(e, i) {
  const n = G(e, i.videojs);
  if (n.src(i.src), i.subtitles)
    for (var t = 0; t < i.subtitles.length; t++)
      n.addRemoteTextTrack(i.subtitles[t], !1);
  n.ready(function() {
    var s, a;
    n.controlBar.addChild(new TD(n), {}, 1), n.controlBar.addChild(new ED(n), {}, 0), Hy() && n.controlBar.addChild(
      new wD(n),
      {},
      99
    ), n.hlsQualitySelector();
    var o = (a = (s = n.tech({ IWillNotUseThisInPlugins: !0 }).vhs) == null ? void 0 : s.masterPlaylistController_) == null ? void 0 : a.mainSegmentLoader_;
    o && o.on("error", function() {
      let u = o.error();
      !u || u.status !== 401 && u.status !== 403 || (n.pause(), n.error(
        "Session possibly expired. Try reloading the page to continue watching."
      ), n.errorDisplay.show(), n.reset());
    });
  }), n.one("loadedmetadata", () => {
    om(
      n,
      i.languagePreferenceDefaults.audio
    ), um(
      n,
      i.languagePreferenceDefaults.subtitles
    );
  });
  const r = n;
  return r.setAudioTrackToLanguage = function(s) {
    om(this, s);
  }, r.setSubtitleTrackToLanguage = function(s) {
    um(this, s);
  }, r.setVideoQuality = (s) => {
    G.log("BTV: Queued setting quality to " + s + "p"), r.ready(() => {
      if (typeof r.hlsQualitySelector != "object" || !r.qualityLevels() || !r.qualityLevels().levels_ || r.qualityLevels().levels_.length < 1) {
        G.log("BTV: Can't change quality yet.");
        return;
      }
      return G.log("BTV: Setting quality to " + s + "p"), r.hlsQualitySelector.setQuality(s);
    });
  }, n;
}
const jc = class {
  constructor({ tokenFactory: e, endpoint: i }) {
    ra(this, "endpoint"), ra(this, "_tokens"), this._tokens = e, this.endpoint = i;
  }
  getToken() {
    var e, i;
    return (i = (e = this._tokens) == null ? void 0 : e.call(this)) != null ? i : null;
  }
  static get default() {
    if (!jc._default)
      throw new Error("Default instance not found");
    return jc._default;
  }
};
let Eu = jc;
ra(Eu, "_default", null);
const ch = {
  parse: JSON.parse,
  stringify: JSON.stringify
};
var xD = function(e) {
  var i = e.uri, n = e.name, t = e.type;
  this.uri = i, this.name = n, this.type = t;
}, PD = xD, Gy = function(e) {
  return typeof File < "u" && e instanceof File || typeof Blob < "u" && e instanceof Blob || e instanceof PD;
};
const LD = Gy;
var OD = Gy, ND = function e(i, n, t) {
  n === void 0 && (n = ""), t === void 0 && (t = OD);
  var r, s = /* @__PURE__ */ new Map();
  function a(d, p) {
    var h = s.get(p);
    h ? h.push.apply(h, d) : s.set(p, d);
  }
  if (t(i))
    r = null, a([n], i);
  else {
    var o = n ? n + "." : "";
    if (typeof FileList < "u" && i instanceof FileList)
      r = Array.prototype.map.call(i, function(d, p) {
        return a(["" + o + p], d), null;
      });
    else if (Array.isArray(i))
      r = i.map(function(d, p) {
        var h = e(d, "" + o + p, t);
        return h.files.forEach(a), h.clone;
      });
    else if (i && i.constructor === Object) {
      r = {};
      for (var u in i) {
        var l = e(i[u], "" + o + u, t);
        l.files.forEach(a), r[u] = l.clone;
      }
    } else
      r = i;
  }
  return {
    clone: r,
    files: s
  };
};
const RD = ND;
var MD = typeof self == "object" ? self.FormData : window.FormData;
const BD = (e) => LD(e) || e !== null && typeof e == "object" && typeof e.pipe == "function", UD = (e, i, n, t = ch) => {
  const { clone: r, files: s } = RD({ query: e, variables: i, operationName: n }, "", BD);
  if (s.size === 0) {
    if (!Array.isArray(e))
      return t.stringify(r);
    if (typeof i < "u" && !Array.isArray(i))
      throw new Error("Cannot create request body with given variable type, array expected");
    const d = e.reduce((p, h, m) => (p.push({ query: h, variables: i ? i[m] : void 0 }), p), []);
    return t.stringify(d);
  }
  const a = typeof FormData > "u" ? MD : FormData, o = new a();
  o.append("operations", t.stringify(r));
  const u = {};
  let l = 0;
  return s.forEach((d) => {
    u[++l] = d;
  }), o.append("map", t.stringify(u)), l = 0, s.forEach((d, p) => {
    o.append(`${++l}`, p);
  }), o;
}, FD = (e) => e.toUpperCase(), jD = (e) => {
  const i = {};
  return e.forEach((n, t) => {
    i[t] = n;
  }), i;
}, qD = (e, i, n) => e.document ? e : {
  document: e,
  variables: i,
  requestHeaders: n,
  signal: void 0
}, VD = (e, i, n) => e.query ? e : {
  query: e,
  variables: i,
  requestHeaders: n,
  signal: void 0
}, HD = (e, i) => e.documents ? e : {
  documents: e,
  requestHeaders: i,
  signal: void 0
};
function _o(e, i) {
  if (!e)
    throw new Error(i);
}
function WD(e) {
  return typeof e == "object" && e !== null;
}
function GD(e, i) {
  if (!e)
    throw new Error(
      i ?? "Unexpected invariant triggered."
    );
}
const KD = /\r\n|[\n\r]/g;
function qc(e, i) {
  let n = 0, t = 1;
  for (const r of e.body.matchAll(KD)) {
    if (typeof r.index == "number" || GD(!1), r.index >= i)
      break;
    n = r.index + r[0].length, t += 1;
  }
  return {
    line: t,
    column: i + 1 - n
  };
}
function zD(e) {
  return Ky(
    e.source,
    qc(e.source, e.start)
  );
}
function Ky(e, i) {
  const n = e.locationOffset.column - 1, t = "".padStart(n) + e.body, r = i.line - 1, s = e.locationOffset.line - 1, a = i.line + s, o = i.line === 1 ? n : 0, u = i.column + o, l = `${e.name}:${a}:${u}
`, d = t.split(/\r\n|[\n\r]/g), p = d[r];
  if (p.length > 120) {
    const h = Math.floor(u / 80), m = u % 80, y = [];
    for (let T = 0; T < p.length; T += 80)
      y.push(p.slice(T, T + 80));
    return l + lm([
      [`${a} |`, y[0]],
      ...y.slice(1, h + 1).map((T) => ["|", T]),
      ["|", "^".padStart(m)],
      ["|", y[h + 1]]
    ]);
  }
  return l + lm([
    [`${a - 1} |`, d[r - 1]],
    [`${a} |`, p],
    ["|", "^".padStart(u)],
    [`${a + 1} |`, d[r + 1]]
  ]);
}
function lm(e) {
  const i = e.filter(([t, r]) => r !== void 0), n = Math.max(...i.map(([t]) => t.length));
  return i.map(([t, r]) => t.padStart(n) + (r ? " " + r : "")).join(`
`);
}
function XD(e) {
  const i = e[0];
  return i == null || "kind" in i || "length" in i ? {
    nodes: i,
    source: e[1],
    positions: e[2],
    path: e[3],
    originalError: e[4],
    extensions: e[5]
  } : i;
}
class dh extends Error {
  constructor(i, ...n) {
    var t, r, s;
    const { nodes: a, source: o, positions: u, path: l, originalError: d, extensions: p } = XD(n);
    super(i), this.name = "GraphQLError", this.path = l ?? void 0, this.originalError = d ?? void 0, this.nodes = cm(
      Array.isArray(a) ? a : a ? [a] : void 0
    );
    const h = cm(
      (t = this.nodes) === null || t === void 0 ? void 0 : t.map((y) => y.loc).filter((y) => y != null)
    );
    this.source = o ?? (h == null || (r = h[0]) === null || r === void 0 ? void 0 : r.source), this.positions = u ?? (h == null ? void 0 : h.map((y) => y.start)), this.locations = u && o ? u.map((y) => qc(o, y)) : h == null ? void 0 : h.map((y) => qc(y.source, y.start));
    const m = WD(
      d == null ? void 0 : d.extensions
    ) ? d == null ? void 0 : d.extensions : void 0;
    this.extensions = (s = p ?? m) !== null && s !== void 0 ? s : /* @__PURE__ */ Object.create(null), Object.defineProperties(this, {
      message: {
        writable: !0,
        enumerable: !0
      },
      name: {
        enumerable: !1
      },
      nodes: {
        enumerable: !1
      },
      source: {
        enumerable: !1
      },
      positions: {
        enumerable: !1
      },
      originalError: {
        enumerable: !1
      }
    }), d != null && d.stack ? Object.defineProperty(this, "stack", {
      value: d.stack,
      writable: !0,
      configurable: !0
    }) : Error.captureStackTrace ? Error.captureStackTrace(this, dh) : Object.defineProperty(this, "stack", {
      value: Error().stack,
      writable: !0,
      configurable: !0
    });
  }
  get [Symbol.toStringTag]() {
    return "GraphQLError";
  }
  toString() {
    let i = this.message;
    if (this.nodes)
      for (const n of this.nodes)
        n.loc && (i += `

` + zD(n.loc));
    else if (this.source && this.locations)
      for (const n of this.locations)
        i += `

` + Ky(this.source, n);
    return i;
  }
  toJSON() {
    const i = {
      message: this.message
    };
    return this.locations != null && (i.locations = this.locations), this.path != null && (i.path = this.path), this.extensions != null && Object.keys(this.extensions).length > 0 && (i.extensions = this.extensions), i;
  }
}
function cm(e) {
  return e === void 0 || e.length === 0 ? void 0 : e;
}
function zt(e, i, n) {
  return new dh(`Syntax Error: ${n}`, {
    source: e,
    positions: [i]
  });
}
class QD {
  constructor(i, n, t) {
    this.start = i.start, this.end = n.end, this.startToken = i, this.endToken = n, this.source = t;
  }
  get [Symbol.toStringTag]() {
    return "Location";
  }
  toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  }
}
class zy {
  constructor(i, n, t, r, s, a) {
    this.kind = i, this.start = n, this.end = t, this.line = r, this.column = s, this.value = a, this.prev = null, this.next = null;
  }
  get [Symbol.toStringTag]() {
    return "Token";
  }
  toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  }
}
const Xy = {
  Name: [],
  Document: ["definitions"],
  OperationDefinition: [
    "name",
    "variableDefinitions",
    "directives",
    "selectionSet"
  ],
  VariableDefinition: ["variable", "type", "defaultValue", "directives"],
  Variable: ["name"],
  SelectionSet: ["selections"],
  Field: ["alias", "name", "arguments", "directives", "selectionSet"],
  Argument: ["name", "value"],
  FragmentSpread: ["name", "directives"],
  InlineFragment: ["typeCondition", "directives", "selectionSet"],
  FragmentDefinition: [
    "name",
    "variableDefinitions",
    "typeCondition",
    "directives",
    "selectionSet"
  ],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ["values"],
  ObjectValue: ["fields"],
  ObjectField: ["name", "value"],
  Directive: ["name", "arguments"],
  NamedType: ["name"],
  ListType: ["type"],
  NonNullType: ["type"],
  SchemaDefinition: ["description", "directives", "operationTypes"],
  OperationTypeDefinition: ["type"],
  ScalarTypeDefinition: ["description", "name", "directives"],
  ObjectTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  FieldDefinition: ["description", "name", "arguments", "type", "directives"],
  InputValueDefinition: [
    "description",
    "name",
    "type",
    "defaultValue",
    "directives"
  ],
  InterfaceTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  UnionTypeDefinition: ["description", "name", "directives", "types"],
  EnumTypeDefinition: ["description", "name", "directives", "values"],
  EnumValueDefinition: ["description", "name", "directives"],
  InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
  DirectiveDefinition: ["description", "name", "arguments", "locations"],
  SchemaExtension: ["directives", "operationTypes"],
  ScalarTypeExtension: ["name", "directives"],
  ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
  InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
  UnionTypeExtension: ["name", "directives", "types"],
  EnumTypeExtension: ["name", "directives", "values"],
  InputObjectTypeExtension: ["name", "directives", "fields"]
}, JD = new Set(Object.keys(Xy));
function dm(e) {
  const i = e == null ? void 0 : e.kind;
  return typeof i == "string" && JD.has(i);
}
var $r;
(function(e) {
  e.QUERY = "query", e.MUTATION = "mutation", e.SUBSCRIPTION = "subscription";
})($r || ($r = {}));
var Vc;
(function(e) {
  e.QUERY = "QUERY", e.MUTATION = "MUTATION", e.SUBSCRIPTION = "SUBSCRIPTION", e.FIELD = "FIELD", e.FRAGMENT_DEFINITION = "FRAGMENT_DEFINITION", e.FRAGMENT_SPREAD = "FRAGMENT_SPREAD", e.INLINE_FRAGMENT = "INLINE_FRAGMENT", e.VARIABLE_DEFINITION = "VARIABLE_DEFINITION", e.SCHEMA = "SCHEMA", e.SCALAR = "SCALAR", e.OBJECT = "OBJECT", e.FIELD_DEFINITION = "FIELD_DEFINITION", e.ARGUMENT_DEFINITION = "ARGUMENT_DEFINITION", e.INTERFACE = "INTERFACE", e.UNION = "UNION", e.ENUM = "ENUM", e.ENUM_VALUE = "ENUM_VALUE", e.INPUT_OBJECT = "INPUT_OBJECT", e.INPUT_FIELD_DEFINITION = "INPUT_FIELD_DEFINITION";
})(Vc || (Vc = {}));
var qe;
(function(e) {
  e.NAME = "Name", e.DOCUMENT = "Document", e.OPERATION_DEFINITION = "OperationDefinition", e.VARIABLE_DEFINITION = "VariableDefinition", e.SELECTION_SET = "SelectionSet", e.FIELD = "Field", e.ARGUMENT = "Argument", e.FRAGMENT_SPREAD = "FragmentSpread", e.INLINE_FRAGMENT = "InlineFragment", e.FRAGMENT_DEFINITION = "FragmentDefinition", e.VARIABLE = "Variable", e.INT = "IntValue", e.FLOAT = "FloatValue", e.STRING = "StringValue", e.BOOLEAN = "BooleanValue", e.NULL = "NullValue", e.ENUM = "EnumValue", e.LIST = "ListValue", e.OBJECT = "ObjectValue", e.OBJECT_FIELD = "ObjectField", e.DIRECTIVE = "Directive", e.NAMED_TYPE = "NamedType", e.LIST_TYPE = "ListType", e.NON_NULL_TYPE = "NonNullType", e.SCHEMA_DEFINITION = "SchemaDefinition", e.OPERATION_TYPE_DEFINITION = "OperationTypeDefinition", e.SCALAR_TYPE_DEFINITION = "ScalarTypeDefinition", e.OBJECT_TYPE_DEFINITION = "ObjectTypeDefinition", e.FIELD_DEFINITION = "FieldDefinition", e.INPUT_VALUE_DEFINITION = "InputValueDefinition", e.INTERFACE_TYPE_DEFINITION = "InterfaceTypeDefinition", e.UNION_TYPE_DEFINITION = "UnionTypeDefinition", e.ENUM_TYPE_DEFINITION = "EnumTypeDefinition", e.ENUM_VALUE_DEFINITION = "EnumValueDefinition", e.INPUT_OBJECT_TYPE_DEFINITION = "InputObjectTypeDefinition", e.DIRECTIVE_DEFINITION = "DirectiveDefinition", e.SCHEMA_EXTENSION = "SchemaExtension", e.SCALAR_TYPE_EXTENSION = "ScalarTypeExtension", e.OBJECT_TYPE_EXTENSION = "ObjectTypeExtension", e.INTERFACE_TYPE_EXTENSION = "InterfaceTypeExtension", e.UNION_TYPE_EXTENSION = "UnionTypeExtension", e.ENUM_TYPE_EXTENSION = "EnumTypeExtension", e.INPUT_OBJECT_TYPE_EXTENSION = "InputObjectTypeExtension";
})(qe || (qe = {}));
function Hc(e) {
  return e === 9 || e === 32;
}
function ma(e) {
  return e >= 48 && e <= 57;
}
function Qy(e) {
  return e >= 97 && e <= 122 || e >= 65 && e <= 90;
}
function Jy(e) {
  return Qy(e) || e === 95;
}
function YD(e) {
  return Qy(e) || ma(e) || e === 95;
}
function $D(e) {
  var i;
  let n = Number.MAX_SAFE_INTEGER, t = null, r = -1;
  for (let a = 0; a < e.length; ++a) {
    var s;
    const o = e[a], u = ZD(o);
    u !== o.length && (t = (s = t) !== null && s !== void 0 ? s : a, r = a, a !== 0 && u < n && (n = u));
  }
  return e.map((a, o) => o === 0 ? a : a.slice(n)).slice(
    (i = t) !== null && i !== void 0 ? i : 0,
    r + 1
  );
}
function ZD(e) {
  let i = 0;
  for (; i < e.length && Hc(e.charCodeAt(i)); )
    ++i;
  return i;
}
function ex(e, i) {
  const n = e.replace(/"""/g, '\\"""'), t = n.split(/\r\n|[\n\r]/g), r = t.length === 1, s = t.length > 1 && t.slice(1).every((m) => m.length === 0 || Hc(m.charCodeAt(0))), a = n.endsWith('\\"""'), o = e.endsWith('"') && !a, u = e.endsWith("\\"), l = o || u, d = !(i != null && i.minimize) && (!r || e.length > 70 || l || s || a);
  let p = "";
  const h = r && Hc(e.charCodeAt(0));
  return (d && !h || s) && (p += `
`), p += n, (d || l) && (p += `
`), '"""' + p + '"""';
}
var se;
(function(e) {
  e.SOF = "<SOF>", e.EOF = "<EOF>", e.BANG = "!", e.DOLLAR = "$", e.AMP = "&", e.PAREN_L = "(", e.PAREN_R = ")", e.SPREAD = "...", e.COLON = ":", e.EQUALS = "=", e.AT = "@", e.BRACKET_L = "[", e.BRACKET_R = "]", e.BRACE_L = "{", e.PIPE = "|", e.BRACE_R = "}", e.NAME = "Name", e.INT = "Int", e.FLOAT = "Float", e.STRING = "String", e.BLOCK_STRING = "BlockString", e.COMMENT = "Comment";
})(se || (se = {}));
class tx {
  constructor(i) {
    const n = new zy(se.SOF, 0, 0, 0, 0);
    this.source = i, this.lastToken = n, this.token = n, this.line = 1, this.lineStart = 0;
  }
  get [Symbol.toStringTag]() {
    return "Lexer";
  }
  advance() {
    return this.lastToken = this.token, this.token = this.lookahead();
  }
  lookahead() {
    let i = this.token;
    if (i.kind !== se.EOF)
      do
        if (i.next)
          i = i.next;
        else {
          const n = nx(this, i.end);
          i.next = n, n.prev = i, i = n;
        }
      while (i.kind === se.COMMENT);
    return i;
  }
}
function ix(e) {
  return e === se.BANG || e === se.DOLLAR || e === se.AMP || e === se.PAREN_L || e === se.PAREN_R || e === se.SPREAD || e === se.COLON || e === se.EQUALS || e === se.AT || e === se.BRACKET_L || e === se.BRACKET_R || e === se.BRACE_L || e === se.PIPE || e === se.BRACE_R;
}
function Cs(e) {
  return e >= 0 && e <= 55295 || e >= 57344 && e <= 1114111;
}
function Su(e, i) {
  return Yy(e.charCodeAt(i)) && $y(e.charCodeAt(i + 1));
}
function Yy(e) {
  return e >= 55296 && e <= 56319;
}
function $y(e) {
  return e >= 56320 && e <= 57343;
}
function vr(e, i) {
  const n = e.source.body.codePointAt(i);
  if (n === void 0)
    return se.EOF;
  if (n >= 32 && n <= 126) {
    const t = String.fromCodePoint(n);
    return t === '"' ? `'"'` : `"${t}"`;
  }
  return "U+" + n.toString(16).toUpperCase().padStart(4, "0");
}
function Ut(e, i, n, t, r) {
  const s = e.line, a = 1 + n - e.lineStart;
  return new zy(i, n, t, s, a, r);
}
function nx(e, i) {
  const n = e.source.body, t = n.length;
  let r = i;
  for (; r < t; ) {
    const s = n.charCodeAt(r);
    switch (s) {
      case 65279:
      case 9:
      case 32:
      case 44:
        ++r;
        continue;
      case 10:
        ++r, ++e.line, e.lineStart = r;
        continue;
      case 13:
        n.charCodeAt(r + 1) === 10 ? r += 2 : ++r, ++e.line, e.lineStart = r;
        continue;
      case 35:
        return rx(e, r);
      case 33:
        return Ut(e, se.BANG, r, r + 1);
      case 36:
        return Ut(e, se.DOLLAR, r, r + 1);
      case 38:
        return Ut(e, se.AMP, r, r + 1);
      case 40:
        return Ut(e, se.PAREN_L, r, r + 1);
      case 41:
        return Ut(e, se.PAREN_R, r, r + 1);
      case 46:
        if (n.charCodeAt(r + 1) === 46 && n.charCodeAt(r + 2) === 46)
          return Ut(e, se.SPREAD, r, r + 3);
        break;
      case 58:
        return Ut(e, se.COLON, r, r + 1);
      case 61:
        return Ut(e, se.EQUALS, r, r + 1);
      case 64:
        return Ut(e, se.AT, r, r + 1);
      case 91:
        return Ut(e, se.BRACKET_L, r, r + 1);
      case 93:
        return Ut(e, se.BRACKET_R, r, r + 1);
      case 123:
        return Ut(e, se.BRACE_L, r, r + 1);
      case 124:
        return Ut(e, se.PIPE, r, r + 1);
      case 125:
        return Ut(e, se.BRACE_R, r, r + 1);
      case 34:
        return n.charCodeAt(r + 1) === 34 && n.charCodeAt(r + 2) === 34 ? cx(e, r) : ax(e, r);
    }
    if (ma(s) || s === 45)
      return sx(e, r, s);
    if (Jy(s))
      return dx(e, r);
    throw zt(
      e.source,
      r,
      s === 39 ? `Unexpected single quote character ('), did you mean to use a double quote (")?` : Cs(s) || Su(n, r) ? `Unexpected character: ${vr(e, r)}.` : `Invalid character: ${vr(e, r)}.`
    );
  }
  return Ut(e, se.EOF, t, t);
}
function rx(e, i) {
  const n = e.source.body, t = n.length;
  let r = i + 1;
  for (; r < t; ) {
    const s = n.charCodeAt(r);
    if (s === 10 || s === 13)
      break;
    if (Cs(s))
      ++r;
    else if (Su(n, r))
      r += 2;
    else
      break;
  }
  return Ut(
    e,
    se.COMMENT,
    i,
    r,
    n.slice(i + 1, r)
  );
}
function sx(e, i, n) {
  const t = e.source.body;
  let r = i, s = n, a = !1;
  if (s === 45 && (s = t.charCodeAt(++r)), s === 48) {
    if (s = t.charCodeAt(++r), ma(s))
      throw zt(
        e.source,
        r,
        `Invalid number, unexpected digit after 0: ${vr(
          e,
          r
        )}.`
      );
  } else
    r = tc(e, r, s), s = t.charCodeAt(r);
  if (s === 46 && (a = !0, s = t.charCodeAt(++r), r = tc(e, r, s), s = t.charCodeAt(r)), (s === 69 || s === 101) && (a = !0, s = t.charCodeAt(++r), (s === 43 || s === 45) && (s = t.charCodeAt(++r)), r = tc(e, r, s), s = t.charCodeAt(r)), s === 46 || Jy(s))
    throw zt(
      e.source,
      r,
      `Invalid number, expected digit but got: ${vr(
        e,
        r
      )}.`
    );
  return Ut(
    e,
    a ? se.FLOAT : se.INT,
    i,
    r,
    t.slice(i, r)
  );
}
function tc(e, i, n) {
  if (!ma(n))
    throw zt(
      e.source,
      i,
      `Invalid number, expected digit but got: ${vr(
        e,
        i
      )}.`
    );
  const t = e.source.body;
  let r = i + 1;
  for (; ma(t.charCodeAt(r)); )
    ++r;
  return r;
}
function ax(e, i) {
  const n = e.source.body, t = n.length;
  let r = i + 1, s = r, a = "";
  for (; r < t; ) {
    const o = n.charCodeAt(r);
    if (o === 34)
      return a += n.slice(s, r), Ut(e, se.STRING, i, r + 1, a);
    if (o === 92) {
      a += n.slice(s, r);
      const u = n.charCodeAt(r + 1) === 117 ? n.charCodeAt(r + 2) === 123 ? ox(e, r) : ux(e, r) : lx(e, r);
      a += u.value, r += u.size, s = r;
      continue;
    }
    if (o === 10 || o === 13)
      break;
    if (Cs(o))
      ++r;
    else if (Su(n, r))
      r += 2;
    else
      throw zt(
        e.source,
        r,
        `Invalid character within String: ${vr(
          e,
          r
        )}.`
      );
  }
  throw zt(e.source, r, "Unterminated string.");
}
function ox(e, i) {
  const n = e.source.body;
  let t = 0, r = 3;
  for (; r < 12; ) {
    const s = n.charCodeAt(i + r++);
    if (s === 125) {
      if (r < 5 || !Cs(t))
        break;
      return {
        value: String.fromCodePoint(t),
        size: r
      };
    }
    if (t = t << 4 | Ys(s), t < 0)
      break;
  }
  throw zt(
    e.source,
    i,
    `Invalid Unicode escape sequence: "${n.slice(
      i,
      i + r
    )}".`
  );
}
function ux(e, i) {
  const n = e.source.body, t = hm(n, i + 2);
  if (Cs(t))
    return {
      value: String.fromCodePoint(t),
      size: 6
    };
  if (Yy(t) && n.charCodeAt(i + 6) === 92 && n.charCodeAt(i + 7) === 117) {
    const r = hm(n, i + 8);
    if ($y(r))
      return {
        value: String.fromCodePoint(t, r),
        size: 12
      };
  }
  throw zt(
    e.source,
    i,
    `Invalid Unicode escape sequence: "${n.slice(i, i + 6)}".`
  );
}
function hm(e, i) {
  return Ys(e.charCodeAt(i)) << 12 | Ys(e.charCodeAt(i + 1)) << 8 | Ys(e.charCodeAt(i + 2)) << 4 | Ys(e.charCodeAt(i + 3));
}
function Ys(e) {
  return e >= 48 && e <= 57 ? e - 48 : e >= 65 && e <= 70 ? e - 55 : e >= 97 && e <= 102 ? e - 87 : -1;
}
function lx(e, i) {
  const n = e.source.body;
  switch (n.charCodeAt(i + 1)) {
    case 34:
      return {
        value: '"',
        size: 2
      };
    case 92:
      return {
        value: "\\",
        size: 2
      };
    case 47:
      return {
        value: "/",
        size: 2
      };
    case 98:
      return {
        value: "\b",
        size: 2
      };
    case 102:
      return {
        value: "\f",
        size: 2
      };
    case 110:
      return {
        value: `
`,
        size: 2
      };
    case 114:
      return {
        value: "\r",
        size: 2
      };
    case 116:
      return {
        value: "	",
        size: 2
      };
  }
  throw zt(
    e.source,
    i,
    `Invalid character escape sequence: "${n.slice(
      i,
      i + 2
    )}".`
  );
}
function cx(e, i) {
  const n = e.source.body, t = n.length;
  let r = e.lineStart, s = i + 3, a = s, o = "";
  const u = [];
  for (; s < t; ) {
    const l = n.charCodeAt(s);
    if (l === 34 && n.charCodeAt(s + 1) === 34 && n.charCodeAt(s + 2) === 34) {
      o += n.slice(a, s), u.push(o);
      const d = Ut(
        e,
        se.BLOCK_STRING,
        i,
        s + 3,
        $D(u).join(`
`)
      );
      return e.line += u.length - 1, e.lineStart = r, d;
    }
    if (l === 92 && n.charCodeAt(s + 1) === 34 && n.charCodeAt(s + 2) === 34 && n.charCodeAt(s + 3) === 34) {
      o += n.slice(a, s), a = s + 1, s += 4;
      continue;
    }
    if (l === 10 || l === 13) {
      o += n.slice(a, s), u.push(o), l === 13 && n.charCodeAt(s + 1) === 10 ? s += 2 : ++s, o = "", a = s, r = s;
      continue;
    }
    if (Cs(l))
      ++s;
    else if (Su(n, s))
      s += 2;
    else
      throw zt(
        e.source,
        s,
        `Invalid character within String: ${vr(
          e,
          s
        )}.`
      );
  }
  throw zt(e.source, s, "Unterminated string.");
}
function dx(e, i) {
  const n = e.source.body, t = n.length;
  let r = i + 1;
  for (; r < t; ) {
    const s = n.charCodeAt(r);
    if (YD(s))
      ++r;
    else
      break;
  }
  return Ut(
    e,
    se.NAME,
    i,
    r,
    n.slice(i, r)
  );
}
const hx = 10, Zy = 2;
function hh(e) {
  return wu(e, []);
}
function wu(e, i) {
  switch (typeof e) {
    case "string":
      return JSON.stringify(e);
    case "function":
      return e.name ? `[function ${e.name}]` : "[function]";
    case "object":
      return px(e, i);
    default:
      return String(e);
  }
}
function px(e, i) {
  if (e === null)
    return "null";
  if (i.includes(e))
    return "[Circular]";
  const n = [...i, e];
  if (fx(e)) {
    const t = e.toJSON();
    if (t !== e)
      return typeof t == "string" ? t : wu(t, n);
  } else if (Array.isArray(e))
    return gx(e, n);
  return mx(e, n);
}
function fx(e) {
  return typeof e.toJSON == "function";
}
function mx(e, i) {
  const n = Object.entries(e);
  return n.length === 0 ? "{}" : i.length > Zy ? "[" + vx(e) + "]" : "{ " + n.map(
    ([t, r]) => t + ": " + wu(r, i)
  ).join(", ") + " }";
}
function gx(e, i) {
  if (e.length === 0)
    return "[]";
  if (i.length > Zy)
    return "[Array]";
  const n = Math.min(hx, e.length), t = e.length - n, r = [];
  for (let s = 0; s < n; ++s)
    r.push(wu(e[s], i));
  return t === 1 ? r.push("... 1 more item") : t > 1 && r.push(`... ${t} more items`), "[" + r.join(", ") + "]";
}
function vx(e) {
  const i = Object.prototype.toString.call(e).replace(/^\[object /, "").replace(/]$/, "");
  if (i === "Object" && typeof e.constructor == "function") {
    const n = e.constructor.name;
    if (typeof n == "string" && n !== "")
      return n;
  }
  return i;
}
const yx = {}.NODE_ENV === "production" ? function(e, i) {
  return e instanceof i;
} : function(e, i) {
  if (e instanceof i)
    return !0;
  if (typeof e == "object" && e !== null) {
    var n;
    const t = i.prototype[Symbol.toStringTag], r = Symbol.toStringTag in e ? e[Symbol.toStringTag] : (n = e.constructor) === null || n === void 0 ? void 0 : n.name;
    if (t === r) {
      const s = hh(e);
      throw new Error(`Cannot use ${t} "${s}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`);
    }
  }
  return !1;
};
class e_ {
  constructor(i, n = "GraphQL request", t = {
    line: 1,
    column: 1
  }) {
    typeof i == "string" || _o(!1, `Body must be a string. Received: ${hh(i)}.`), this.body = i, this.name = n, this.locationOffset = t, this.locationOffset.line > 0 || _o(
      !1,
      "line in locationOffset is 1-indexed and must be positive."
    ), this.locationOffset.column > 0 || _o(
      !1,
      "column in locationOffset is 1-indexed and must be positive."
    );
  }
  get [Symbol.toStringTag]() {
    return "Source";
  }
}
function _x(e) {
  return yx(e, e_);
}
function bx(e, i) {
  return new Tx(e, i).parseDocument();
}
class Tx {
  constructor(i, n = {}) {
    const t = _x(i) ? i : new e_(i);
    this._lexer = new tx(t), this._options = n, this._tokenCounter = 0;
  }
  parseName() {
    const i = this.expectToken(se.NAME);
    return this.node(i, {
      kind: qe.NAME,
      value: i.value
    });
  }
  parseDocument() {
    return this.node(this._lexer.token, {
      kind: qe.DOCUMENT,
      definitions: this.many(
        se.SOF,
        this.parseDefinition,
        se.EOF
      )
    });
  }
  parseDefinition() {
    if (this.peek(se.BRACE_L))
      return this.parseOperationDefinition();
    const i = this.peekDescription(), n = i ? this._lexer.lookahead() : this._lexer.token;
    if (n.kind === se.NAME) {
      switch (n.value) {
        case "schema":
          return this.parseSchemaDefinition();
        case "scalar":
          return this.parseScalarTypeDefinition();
        case "type":
          return this.parseObjectTypeDefinition();
        case "interface":
          return this.parseInterfaceTypeDefinition();
        case "union":
          return this.parseUnionTypeDefinition();
        case "enum":
          return this.parseEnumTypeDefinition();
        case "input":
          return this.parseInputObjectTypeDefinition();
        case "directive":
          return this.parseDirectiveDefinition();
      }
      if (i)
        throw zt(
          this._lexer.source,
          this._lexer.token.start,
          "Unexpected description, descriptions are supported only on type definitions."
        );
      switch (n.value) {
        case "query":
        case "mutation":
        case "subscription":
          return this.parseOperationDefinition();
        case "fragment":
          return this.parseFragmentDefinition();
        case "extend":
          return this.parseTypeSystemExtension();
      }
    }
    throw this.unexpected(n);
  }
  parseOperationDefinition() {
    const i = this._lexer.token;
    if (this.peek(se.BRACE_L))
      return this.node(i, {
        kind: qe.OPERATION_DEFINITION,
        operation: $r.QUERY,
        name: void 0,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet()
      });
    const n = this.parseOperationType();
    let t;
    return this.peek(se.NAME) && (t = this.parseName()), this.node(i, {
      kind: qe.OPERATION_DEFINITION,
      operation: n,
      name: t,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  parseOperationType() {
    const i = this.expectToken(se.NAME);
    switch (i.value) {
      case "query":
        return $r.QUERY;
      case "mutation":
        return $r.MUTATION;
      case "subscription":
        return $r.SUBSCRIPTION;
    }
    throw this.unexpected(i);
  }
  parseVariableDefinitions() {
    return this.optionalMany(
      se.PAREN_L,
      this.parseVariableDefinition,
      se.PAREN_R
    );
  }
  parseVariableDefinition() {
    return this.node(this._lexer.token, {
      kind: qe.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(se.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(se.EQUALS) ? this.parseConstValueLiteral() : void 0,
      directives: this.parseConstDirectives()
    });
  }
  parseVariable() {
    const i = this._lexer.token;
    return this.expectToken(se.DOLLAR), this.node(i, {
      kind: qe.VARIABLE,
      name: this.parseName()
    });
  }
  parseSelectionSet() {
    return this.node(this._lexer.token, {
      kind: qe.SELECTION_SET,
      selections: this.many(
        se.BRACE_L,
        this.parseSelection,
        se.BRACE_R
      )
    });
  }
  parseSelection() {
    return this.peek(se.SPREAD) ? this.parseFragment() : this.parseField();
  }
  parseField() {
    const i = this._lexer.token, n = this.parseName();
    let t, r;
    return this.expectOptionalToken(se.COLON) ? (t = n, r = this.parseName()) : r = n, this.node(i, {
      kind: qe.FIELD,
      alias: t,
      name: r,
      arguments: this.parseArguments(!1),
      directives: this.parseDirectives(!1),
      selectionSet: this.peek(se.BRACE_L) ? this.parseSelectionSet() : void 0
    });
  }
  parseArguments(i) {
    const n = i ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(se.PAREN_L, n, se.PAREN_R);
  }
  parseArgument(i = !1) {
    const n = this._lexer.token, t = this.parseName();
    return this.expectToken(se.COLON), this.node(n, {
      kind: qe.ARGUMENT,
      name: t,
      value: this.parseValueLiteral(i)
    });
  }
  parseConstArgument() {
    return this.parseArgument(!0);
  }
  parseFragment() {
    const i = this._lexer.token;
    this.expectToken(se.SPREAD);
    const n = this.expectOptionalKeyword("on");
    return !n && this.peek(se.NAME) ? this.node(i, {
      kind: qe.FRAGMENT_SPREAD,
      name: this.parseFragmentName(),
      directives: this.parseDirectives(!1)
    }) : this.node(i, {
      kind: qe.INLINE_FRAGMENT,
      typeCondition: n ? this.parseNamedType() : void 0,
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  parseFragmentDefinition() {
    const i = this._lexer.token;
    return this.expectKeyword("fragment"), this._options.allowLegacyFragmentVariables === !0 ? this.node(i, {
      kind: qe.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      variableDefinitions: this.parseVariableDefinitions(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    }) : this.node(i, {
      kind: qe.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  parseFragmentName() {
    if (this._lexer.token.value === "on")
      throw this.unexpected();
    return this.parseName();
  }
  parseValueLiteral(i) {
    const n = this._lexer.token;
    switch (n.kind) {
      case se.BRACKET_L:
        return this.parseList(i);
      case se.BRACE_L:
        return this.parseObject(i);
      case se.INT:
        return this.advanceLexer(), this.node(n, {
          kind: qe.INT,
          value: n.value
        });
      case se.FLOAT:
        return this.advanceLexer(), this.node(n, {
          kind: qe.FLOAT,
          value: n.value
        });
      case se.STRING:
      case se.BLOCK_STRING:
        return this.parseStringLiteral();
      case se.NAME:
        switch (this.advanceLexer(), n.value) {
          case "true":
            return this.node(n, {
              kind: qe.BOOLEAN,
              value: !0
            });
          case "false":
            return this.node(n, {
              kind: qe.BOOLEAN,
              value: !1
            });
          case "null":
            return this.node(n, {
              kind: qe.NULL
            });
          default:
            return this.node(n, {
              kind: qe.ENUM,
              value: n.value
            });
        }
      case se.DOLLAR:
        if (i)
          if (this.expectToken(se.DOLLAR), this._lexer.token.kind === se.NAME) {
            const t = this._lexer.token.value;
            throw zt(
              this._lexer.source,
              n.start,
              `Unexpected variable "$${t}" in constant value.`
            );
          } else
            throw this.unexpected(n);
        return this.parseVariable();
      default:
        throw this.unexpected();
    }
  }
  parseConstValueLiteral() {
    return this.parseValueLiteral(!0);
  }
  parseStringLiteral() {
    const i = this._lexer.token;
    return this.advanceLexer(), this.node(i, {
      kind: qe.STRING,
      value: i.value,
      block: i.kind === se.BLOCK_STRING
    });
  }
  parseList(i) {
    const n = () => this.parseValueLiteral(i);
    return this.node(this._lexer.token, {
      kind: qe.LIST,
      values: this.any(se.BRACKET_L, n, se.BRACKET_R)
    });
  }
  parseObject(i) {
    const n = () => this.parseObjectField(i);
    return this.node(this._lexer.token, {
      kind: qe.OBJECT,
      fields: this.any(se.BRACE_L, n, se.BRACE_R)
    });
  }
  parseObjectField(i) {
    const n = this._lexer.token, t = this.parseName();
    return this.expectToken(se.COLON), this.node(n, {
      kind: qe.OBJECT_FIELD,
      name: t,
      value: this.parseValueLiteral(i)
    });
  }
  parseDirectives(i) {
    const n = [];
    for (; this.peek(se.AT); )
      n.push(this.parseDirective(i));
    return n;
  }
  parseConstDirectives() {
    return this.parseDirectives(!0);
  }
  parseDirective(i) {
    const n = this._lexer.token;
    return this.expectToken(se.AT), this.node(n, {
      kind: qe.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(i)
    });
  }
  parseTypeReference() {
    const i = this._lexer.token;
    let n;
    if (this.expectOptionalToken(se.BRACKET_L)) {
      const t = this.parseTypeReference();
      this.expectToken(se.BRACKET_R), n = this.node(i, {
        kind: qe.LIST_TYPE,
        type: t
      });
    } else
      n = this.parseNamedType();
    return this.expectOptionalToken(se.BANG) ? this.node(i, {
      kind: qe.NON_NULL_TYPE,
      type: n
    }) : n;
  }
  parseNamedType() {
    return this.node(this._lexer.token, {
      kind: qe.NAMED_TYPE,
      name: this.parseName()
    });
  }
  peekDescription() {
    return this.peek(se.STRING) || this.peek(se.BLOCK_STRING);
  }
  parseDescription() {
    if (this.peekDescription())
      return this.parseStringLiteral();
  }
  parseSchemaDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("schema");
    const t = this.parseConstDirectives(), r = this.many(
      se.BRACE_L,
      this.parseOperationTypeDefinition,
      se.BRACE_R
    );
    return this.node(i, {
      kind: qe.SCHEMA_DEFINITION,
      description: n,
      directives: t,
      operationTypes: r
    });
  }
  parseOperationTypeDefinition() {
    const i = this._lexer.token, n = this.parseOperationType();
    this.expectToken(se.COLON);
    const t = this.parseNamedType();
    return this.node(i, {
      kind: qe.OPERATION_TYPE_DEFINITION,
      operation: n,
      type: t
    });
  }
  parseScalarTypeDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("scalar");
    const t = this.parseName(), r = this.parseConstDirectives();
    return this.node(i, {
      kind: qe.SCALAR_TYPE_DEFINITION,
      description: n,
      name: t,
      directives: r
    });
  }
  parseObjectTypeDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("type");
    const t = this.parseName(), r = this.parseImplementsInterfaces(), s = this.parseConstDirectives(), a = this.parseFieldsDefinition();
    return this.node(i, {
      kind: qe.OBJECT_TYPE_DEFINITION,
      description: n,
      name: t,
      interfaces: r,
      directives: s,
      fields: a
    });
  }
  parseImplementsInterfaces() {
    return this.expectOptionalKeyword("implements") ? this.delimitedMany(se.AMP, this.parseNamedType) : [];
  }
  parseFieldsDefinition() {
    return this.optionalMany(
      se.BRACE_L,
      this.parseFieldDefinition,
      se.BRACE_R
    );
  }
  parseFieldDefinition() {
    const i = this._lexer.token, n = this.parseDescription(), t = this.parseName(), r = this.parseArgumentDefs();
    this.expectToken(se.COLON);
    const s = this.parseTypeReference(), a = this.parseConstDirectives();
    return this.node(i, {
      kind: qe.FIELD_DEFINITION,
      description: n,
      name: t,
      arguments: r,
      type: s,
      directives: a
    });
  }
  parseArgumentDefs() {
    return this.optionalMany(
      se.PAREN_L,
      this.parseInputValueDef,
      se.PAREN_R
    );
  }
  parseInputValueDef() {
    const i = this._lexer.token, n = this.parseDescription(), t = this.parseName();
    this.expectToken(se.COLON);
    const r = this.parseTypeReference();
    let s;
    this.expectOptionalToken(se.EQUALS) && (s = this.parseConstValueLiteral());
    const a = this.parseConstDirectives();
    return this.node(i, {
      kind: qe.INPUT_VALUE_DEFINITION,
      description: n,
      name: t,
      type: r,
      defaultValue: s,
      directives: a
    });
  }
  parseInterfaceTypeDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("interface");
    const t = this.parseName(), r = this.parseImplementsInterfaces(), s = this.parseConstDirectives(), a = this.parseFieldsDefinition();
    return this.node(i, {
      kind: qe.INTERFACE_TYPE_DEFINITION,
      description: n,
      name: t,
      interfaces: r,
      directives: s,
      fields: a
    });
  }
  parseUnionTypeDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("union");
    const t = this.parseName(), r = this.parseConstDirectives(), s = this.parseUnionMemberTypes();
    return this.node(i, {
      kind: qe.UNION_TYPE_DEFINITION,
      description: n,
      name: t,
      directives: r,
      types: s
    });
  }
  parseUnionMemberTypes() {
    return this.expectOptionalToken(se.EQUALS) ? this.delimitedMany(se.PIPE, this.parseNamedType) : [];
  }
  parseEnumTypeDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("enum");
    const t = this.parseName(), r = this.parseConstDirectives(), s = this.parseEnumValuesDefinition();
    return this.node(i, {
      kind: qe.ENUM_TYPE_DEFINITION,
      description: n,
      name: t,
      directives: r,
      values: s
    });
  }
  parseEnumValuesDefinition() {
    return this.optionalMany(
      se.BRACE_L,
      this.parseEnumValueDefinition,
      se.BRACE_R
    );
  }
  parseEnumValueDefinition() {
    const i = this._lexer.token, n = this.parseDescription(), t = this.parseEnumValueName(), r = this.parseConstDirectives();
    return this.node(i, {
      kind: qe.ENUM_VALUE_DEFINITION,
      description: n,
      name: t,
      directives: r
    });
  }
  parseEnumValueName() {
    if (this._lexer.token.value === "true" || this._lexer.token.value === "false" || this._lexer.token.value === "null")
      throw zt(
        this._lexer.source,
        this._lexer.token.start,
        `${co(
          this._lexer.token
        )} is reserved and cannot be used for an enum value.`
      );
    return this.parseName();
  }
  parseInputObjectTypeDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("input");
    const t = this.parseName(), r = this.parseConstDirectives(), s = this.parseInputFieldsDefinition();
    return this.node(i, {
      kind: qe.INPUT_OBJECT_TYPE_DEFINITION,
      description: n,
      name: t,
      directives: r,
      fields: s
    });
  }
  parseInputFieldsDefinition() {
    return this.optionalMany(
      se.BRACE_L,
      this.parseInputValueDef,
      se.BRACE_R
    );
  }
  parseTypeSystemExtension() {
    const i = this._lexer.lookahead();
    if (i.kind === se.NAME)
      switch (i.value) {
        case "schema":
          return this.parseSchemaExtension();
        case "scalar":
          return this.parseScalarTypeExtension();
        case "type":
          return this.parseObjectTypeExtension();
        case "interface":
          return this.parseInterfaceTypeExtension();
        case "union":
          return this.parseUnionTypeExtension();
        case "enum":
          return this.parseEnumTypeExtension();
        case "input":
          return this.parseInputObjectTypeExtension();
      }
    throw this.unexpected(i);
  }
  parseSchemaExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("schema");
    const n = this.parseConstDirectives(), t = this.optionalMany(
      se.BRACE_L,
      this.parseOperationTypeDefinition,
      se.BRACE_R
    );
    if (n.length === 0 && t.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.SCHEMA_EXTENSION,
      directives: n,
      operationTypes: t
    });
  }
  parseScalarTypeExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("scalar");
    const n = this.parseName(), t = this.parseConstDirectives();
    if (t.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.SCALAR_TYPE_EXTENSION,
      name: n,
      directives: t
    });
  }
  parseObjectTypeExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("type");
    const n = this.parseName(), t = this.parseImplementsInterfaces(), r = this.parseConstDirectives(), s = this.parseFieldsDefinition();
    if (t.length === 0 && r.length === 0 && s.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.OBJECT_TYPE_EXTENSION,
      name: n,
      interfaces: t,
      directives: r,
      fields: s
    });
  }
  parseInterfaceTypeExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("interface");
    const n = this.parseName(), t = this.parseImplementsInterfaces(), r = this.parseConstDirectives(), s = this.parseFieldsDefinition();
    if (t.length === 0 && r.length === 0 && s.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.INTERFACE_TYPE_EXTENSION,
      name: n,
      interfaces: t,
      directives: r,
      fields: s
    });
  }
  parseUnionTypeExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("union");
    const n = this.parseName(), t = this.parseConstDirectives(), r = this.parseUnionMemberTypes();
    if (t.length === 0 && r.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.UNION_TYPE_EXTENSION,
      name: n,
      directives: t,
      types: r
    });
  }
  parseEnumTypeExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("enum");
    const n = this.parseName(), t = this.parseConstDirectives(), r = this.parseEnumValuesDefinition();
    if (t.length === 0 && r.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.ENUM_TYPE_EXTENSION,
      name: n,
      directives: t,
      values: r
    });
  }
  parseInputObjectTypeExtension() {
    const i = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("input");
    const n = this.parseName(), t = this.parseConstDirectives(), r = this.parseInputFieldsDefinition();
    if (t.length === 0 && r.length === 0)
      throw this.unexpected();
    return this.node(i, {
      kind: qe.INPUT_OBJECT_TYPE_EXTENSION,
      name: n,
      directives: t,
      fields: r
    });
  }
  parseDirectiveDefinition() {
    const i = this._lexer.token, n = this.parseDescription();
    this.expectKeyword("directive"), this.expectToken(se.AT);
    const t = this.parseName(), r = this.parseArgumentDefs(), s = this.expectOptionalKeyword("repeatable");
    this.expectKeyword("on");
    const a = this.parseDirectiveLocations();
    return this.node(i, {
      kind: qe.DIRECTIVE_DEFINITION,
      description: n,
      name: t,
      arguments: r,
      repeatable: s,
      locations: a
    });
  }
  parseDirectiveLocations() {
    return this.delimitedMany(se.PIPE, this.parseDirectiveLocation);
  }
  parseDirectiveLocation() {
    const i = this._lexer.token, n = this.parseName();
    if (Object.prototype.hasOwnProperty.call(Vc, n.value))
      return n;
    throw this.unexpected(i);
  }
  node(i, n) {
    return this._options.noLocation !== !0 && (n.loc = new QD(
      i,
      this._lexer.lastToken,
      this._lexer.source
    )), n;
  }
  peek(i) {
    return this._lexer.token.kind === i;
  }
  expectToken(i) {
    const n = this._lexer.token;
    if (n.kind === i)
      return this.advanceLexer(), n;
    throw zt(
      this._lexer.source,
      n.start,
      `Expected ${t_(i)}, found ${co(n)}.`
    );
  }
  expectOptionalToken(i) {
    return this._lexer.token.kind === i ? (this.advanceLexer(), !0) : !1;
  }
  expectKeyword(i) {
    const n = this._lexer.token;
    if (n.kind === se.NAME && n.value === i)
      this.advanceLexer();
    else
      throw zt(
        this._lexer.source,
        n.start,
        `Expected "${i}", found ${co(n)}.`
      );
  }
  expectOptionalKeyword(i) {
    const n = this._lexer.token;
    return n.kind === se.NAME && n.value === i ? (this.advanceLexer(), !0) : !1;
  }
  unexpected(i) {
    const n = i ?? this._lexer.token;
    return zt(
      this._lexer.source,
      n.start,
      `Unexpected ${co(n)}.`
    );
  }
  any(i, n, t) {
    this.expectToken(i);
    const r = [];
    for (; !this.expectOptionalToken(t); )
      r.push(n.call(this));
    return r;
  }
  optionalMany(i, n, t) {
    if (this.expectOptionalToken(i)) {
      const r = [];
      do
        r.push(n.call(this));
      while (!this.expectOptionalToken(t));
      return r;
    }
    return [];
  }
  many(i, n, t) {
    this.expectToken(i);
    const r = [];
    do
      r.push(n.call(this));
    while (!this.expectOptionalToken(t));
    return r;
  }
  delimitedMany(i, n) {
    this.expectOptionalToken(i);
    const t = [];
    do
      t.push(n.call(this));
    while (this.expectOptionalToken(i));
    return t;
  }
  advanceLexer() {
    const { maxTokens: i } = this._options, n = this._lexer.advance();
    if (i !== void 0 && n.kind !== se.EOF && (++this._tokenCounter, this._tokenCounter > i))
      throw zt(
        this._lexer.source,
        n.start,
        `Document contains more that ${i} tokens. Parsing aborted.`
      );
  }
}
function co(e) {
  const i = e.value;
  return t_(e.kind) + (i != null ? ` "${i}"` : "");
}
function t_(e) {
  return ix(e) ? `"${e}"` : e;
}
function Ex(e) {
  return `"${e.replace(Sx, wx)}"`;
}
const Sx = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;
function wx(e) {
  return kx[e.charCodeAt(0)];
}
const kx = [
  "\\u0000",
  "\\u0001",
  "\\u0002",
  "\\u0003",
  "\\u0004",
  "\\u0005",
  "\\u0006",
  "\\u0007",
  "\\b",
  "\\t",
  "\\n",
  "\\u000B",
  "\\f",
  "\\r",
  "\\u000E",
  "\\u000F",
  "\\u0010",
  "\\u0011",
  "\\u0012",
  "\\u0013",
  "\\u0014",
  "\\u0015",
  "\\u0016",
  "\\u0017",
  "\\u0018",
  "\\u0019",
  "\\u001A",
  "\\u001B",
  "\\u001C",
  "\\u001D",
  "\\u001E",
  "\\u001F",
  "",
  "",
  '\\"',
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\\\\",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "",
  "\\u007F",
  "\\u0080",
  "\\u0081",
  "\\u0082",
  "\\u0083",
  "\\u0084",
  "\\u0085",
  "\\u0086",
  "\\u0087",
  "\\u0088",
  "\\u0089",
  "\\u008A",
  "\\u008B",
  "\\u008C",
  "\\u008D",
  "\\u008E",
  "\\u008F",
  "\\u0090",
  "\\u0091",
  "\\u0092",
  "\\u0093",
  "\\u0094",
  "\\u0095",
  "\\u0096",
  "\\u0097",
  "\\u0098",
  "\\u0099",
  "\\u009A",
  "\\u009B",
  "\\u009C",
  "\\u009D",
  "\\u009E",
  "\\u009F"
], Cx = Object.freeze({});
function Ax(e, i, n = Xy) {
  const t = /* @__PURE__ */ new Map();
  for (const I of Object.values(qe))
    t.set(I, Ix(i, I));
  let r, s = Array.isArray(e), a = [e], o = -1, u = [], l = e, d, p;
  const h = [], m = [];
  do {
    o++;
    const I = o === a.length, B = I && u.length !== 0;
    if (I) {
      if (d = m.length === 0 ? void 0 : h[h.length - 1], l = p, p = m.pop(), B)
        if (s) {
          l = l.slice();
          let A = 0;
          for (const [x, P] of u) {
            const j = x - A;
            P === null ? (l.splice(j, 1), A++) : l[j] = P;
          }
        } else {
          l = Object.defineProperties(
            {},
            Object.getOwnPropertyDescriptors(l)
          );
          for (const [A, x] of u)
            l[A] = x;
        }
      o = r.index, a = r.keys, u = r.edits, s = r.inArray, r = r.prev;
    } else if (p) {
      if (d = s ? o : a[o], l = p[d], l == null)
        continue;
      h.push(d);
    }
    let M;
    if (!Array.isArray(l)) {
      var y, T;
      dm(l) || _o(!1, `Invalid AST Node: ${hh(l)}.`);
      const A = I ? (y = t.get(l.kind)) === null || y === void 0 ? void 0 : y.leave : (T = t.get(l.kind)) === null || T === void 0 ? void 0 : T.enter;
      if (M = A == null ? void 0 : A.call(i, l, d, p, h, m), M === Cx)
        break;
      if (M === !1) {
        if (!I) {
          h.pop();
          continue;
        }
      } else if (M !== void 0 && (u.push([d, M]), !I))
        if (dm(M))
          l = M;
        else {
          h.pop();
          continue;
        }
    }
    if (M === void 0 && B && u.push([d, l]), I)
      h.pop();
    else {
      var b;
      r = {
        inArray: s,
        index: o,
        keys: a,
        edits: u,
        prev: r
      }, s = Array.isArray(l), a = s ? l : (b = n[l.kind]) !== null && b !== void 0 ? b : [], o = -1, u = [], p && m.push(p), p = l;
    }
  } while (r !== void 0);
  return u.length !== 0 ? u[u.length - 1][1] : e;
}
function Ix(e, i) {
  const n = e[i];
  return typeof n == "object" ? n : typeof n == "function" ? {
    enter: n,
    leave: void 0
  } : {
    enter: e.enter,
    leave: e.leave
  };
}
function Dx(e) {
  return Ax(e, Px);
}
const xx = 80, Px = {
  Name: {
    leave: (e) => e.value
  },
  Variable: {
    leave: (e) => "$" + e.name
  },
  Document: {
    leave: (e) => xe(e.definitions, `

`)
  },
  OperationDefinition: {
    leave(e) {
      const i = tt("(", xe(e.variableDefinitions, ", "), ")"), n = xe(
        [
          e.operation,
          xe([e.name, i]),
          xe(e.directives, " ")
        ],
        " "
      );
      return (n === "query" ? "" : n + " ") + e.selectionSet;
    }
  },
  VariableDefinition: {
    leave: ({ variable: e, type: i, defaultValue: n, directives: t }) => e + ": " + i + tt(" = ", n) + tt(" ", xe(t, " "))
  },
  SelectionSet: {
    leave: ({ selections: e }) => Vi(e)
  },
  Field: {
    leave({ alias: e, name: i, arguments: n, directives: t, selectionSet: r }) {
      const s = tt("", e, ": ") + i;
      let a = s + tt("(", xe(n, ", "), ")");
      return a.length > xx && (a = s + tt(`(
`, bo(xe(n, `
`)), `
)`)), xe([a, xe(t, " "), r], " ");
    }
  },
  Argument: {
    leave: ({ name: e, value: i }) => e + ": " + i
  },
  FragmentSpread: {
    leave: ({ name: e, directives: i }) => "..." + e + tt(" ", xe(i, " "))
  },
  InlineFragment: {
    leave: ({ typeCondition: e, directives: i, selectionSet: n }) => xe(
      [
        "...",
        tt("on ", e),
        xe(i, " "),
        n
      ],
      " "
    )
  },
  FragmentDefinition: {
    leave: ({ name: e, typeCondition: i, variableDefinitions: n, directives: t, selectionSet: r }) => `fragment ${e}${tt("(", xe(n, ", "), ")")} on ${i} ${tt("", xe(t, " "), " ")}` + r
  },
  IntValue: {
    leave: ({ value: e }) => e
  },
  FloatValue: {
    leave: ({ value: e }) => e
  },
  StringValue: {
    leave: ({ value: e, block: i }) => i ? ex(e) : Ex(e)
  },
  BooleanValue: {
    leave: ({ value: e }) => e ? "true" : "false"
  },
  NullValue: {
    leave: () => "null"
  },
  EnumValue: {
    leave: ({ value: e }) => e
  },
  ListValue: {
    leave: ({ values: e }) => "[" + xe(e, ", ") + "]"
  },
  ObjectValue: {
    leave: ({ fields: e }) => "{" + xe(e, ", ") + "}"
  },
  ObjectField: {
    leave: ({ name: e, value: i }) => e + ": " + i
  },
  Directive: {
    leave: ({ name: e, arguments: i }) => "@" + e + tt("(", xe(i, ", "), ")")
  },
  NamedType: {
    leave: ({ name: e }) => e
  },
  ListType: {
    leave: ({ type: e }) => "[" + e + "]"
  },
  NonNullType: {
    leave: ({ type: e }) => e + "!"
  },
  SchemaDefinition: {
    leave: ({ description: e, directives: i, operationTypes: n }) => tt("", e, `
`) + xe(["schema", xe(i, " "), Vi(n)], " ")
  },
  OperationTypeDefinition: {
    leave: ({ operation: e, type: i }) => e + ": " + i
  },
  ScalarTypeDefinition: {
    leave: ({ description: e, name: i, directives: n }) => tt("", e, `
`) + xe(["scalar", i, xe(n, " ")], " ")
  },
  ObjectTypeDefinition: {
    leave: ({ description: e, name: i, interfaces: n, directives: t, fields: r }) => tt("", e, `
`) + xe(
      [
        "type",
        i,
        tt("implements ", xe(n, " & ")),
        xe(t, " "),
        Vi(r)
      ],
      " "
    )
  },
  FieldDefinition: {
    leave: ({ description: e, name: i, arguments: n, type: t, directives: r }) => tt("", e, `
`) + i + (pm(n) ? tt(`(
`, bo(xe(n, `
`)), `
)`) : tt("(", xe(n, ", "), ")")) + ": " + t + tt(" ", xe(r, " "))
  },
  InputValueDefinition: {
    leave: ({ description: e, name: i, type: n, defaultValue: t, directives: r }) => tt("", e, `
`) + xe(
      [i + ": " + n, tt("= ", t), xe(r, " ")],
      " "
    )
  },
  InterfaceTypeDefinition: {
    leave: ({ description: e, name: i, interfaces: n, directives: t, fields: r }) => tt("", e, `
`) + xe(
      [
        "interface",
        i,
        tt("implements ", xe(n, " & ")),
        xe(t, " "),
        Vi(r)
      ],
      " "
    )
  },
  UnionTypeDefinition: {
    leave: ({ description: e, name: i, directives: n, types: t }) => tt("", e, `
`) + xe(
      ["union", i, xe(n, " "), tt("= ", xe(t, " | "))],
      " "
    )
  },
  EnumTypeDefinition: {
    leave: ({ description: e, name: i, directives: n, values: t }) => tt("", e, `
`) + xe(["enum", i, xe(n, " "), Vi(t)], " ")
  },
  EnumValueDefinition: {
    leave: ({ description: e, name: i, directives: n }) => tt("", e, `
`) + xe([i, xe(n, " ")], " ")
  },
  InputObjectTypeDefinition: {
    leave: ({ description: e, name: i, directives: n, fields: t }) => tt("", e, `
`) + xe(["input", i, xe(n, " "), Vi(t)], " ")
  },
  DirectiveDefinition: {
    leave: ({ description: e, name: i, arguments: n, repeatable: t, locations: r }) => tt("", e, `
`) + "directive @" + i + (pm(n) ? tt(`(
`, bo(xe(n, `
`)), `
)`) : tt("(", xe(n, ", "), ")")) + (t ? " repeatable" : "") + " on " + xe(r, " | ")
  },
  SchemaExtension: {
    leave: ({ directives: e, operationTypes: i }) => xe(
      ["extend schema", xe(e, " "), Vi(i)],
      " "
    )
  },
  ScalarTypeExtension: {
    leave: ({ name: e, directives: i }) => xe(["extend scalar", e, xe(i, " ")], " ")
  },
  ObjectTypeExtension: {
    leave: ({ name: e, interfaces: i, directives: n, fields: t }) => xe(
      [
        "extend type",
        e,
        tt("implements ", xe(i, " & ")),
        xe(n, " "),
        Vi(t)
      ],
      " "
    )
  },
  InterfaceTypeExtension: {
    leave: ({ name: e, interfaces: i, directives: n, fields: t }) => xe(
      [
        "extend interface",
        e,
        tt("implements ", xe(i, " & ")),
        xe(n, " "),
        Vi(t)
      ],
      " "
    )
  },
  UnionTypeExtension: {
    leave: ({ name: e, directives: i, types: n }) => xe(
      [
        "extend union",
        e,
        xe(i, " "),
        tt("= ", xe(n, " | "))
      ],
      " "
    )
  },
  EnumTypeExtension: {
    leave: ({ name: e, directives: i, values: n }) => xe(["extend enum", e, xe(i, " "), Vi(n)], " ")
  },
  InputObjectTypeExtension: {
    leave: ({ name: e, directives: i, fields: n }) => xe(["extend input", e, xe(i, " "), Vi(n)], " ")
  }
};
function xe(e, i = "") {
  var n;
  return (n = e == null ? void 0 : e.filter((t) => t).join(i)) !== null && n !== void 0 ? n : "";
}
function Vi(e) {
  return tt(`{
`, bo(xe(e, `
`)), `
}`);
}
function tt(e, i, n = "") {
  return i != null && i !== "" ? e + i + n : "";
}
function bo(e) {
  return tt("  ", e.replace(/\n/g, `
  `));
}
function pm(e) {
  var i;
  return (i = e == null ? void 0 : e.some((n) => n.includes(`
`))) !== null && i !== void 0 ? i : !1;
}
const fm = (e) => {
  var i, n;
  let t;
  const r = e.definitions.filter((s) => s.kind === "OperationDefinition");
  return r.length === 1 && (t = (n = (i = r[0]) == null ? void 0 : i.name) == null ? void 0 : n.value), t;
}, ic = (e) => {
  if (typeof e == "string") {
    let n;
    try {
      const t = bx(e);
      n = fm(t);
    } catch {
    }
    return { query: e, operationName: n };
  }
  const i = fm(e);
  return { query: Dx(e), operationName: i };
};
class na extends Error {
  constructor(i, n) {
    const t = `${na.extractMessage(i)}: ${JSON.stringify({
      response: i,
      request: n
    })}`;
    super(t), Object.setPrototypeOf(this, na.prototype), this.response = i, this.request = n, typeof Error.captureStackTrace == "function" && Error.captureStackTrace(this, na);
  }
  static extractMessage(i) {
    var n, t, r;
    return (r = (t = (n = i.errors) == null ? void 0 : n[0]) == null ? void 0 : t.message) != null ? r : `GraphQL Error (Code: ${i.status})`;
  }
}
var ms = { exports: {} };
(function(e, i) {
  var n = typeof self < "u" ? self : is, t = function() {
    function s() {
      this.fetch = !1, this.DOMException = n.DOMException;
    }
    return s.prototype = n, new s();
  }();
  (function(s) {
    (function(a) {
      var o = {
        searchParams: "URLSearchParams" in s,
        iterable: "Symbol" in s && "iterator" in Symbol,
        blob: "FileReader" in s && "Blob" in s && function() {
          try {
            return new Blob(), !0;
          } catch {
            return !1;
          }
        }(),
        formData: "FormData" in s,
        arrayBuffer: "ArrayBuffer" in s
      };
      function u(K) {
        return K && DataView.prototype.isPrototypeOf(K);
      }
      if (o.arrayBuffer)
        var l = [
          "[object Int8Array]",
          "[object Uint8Array]",
          "[object Uint8ClampedArray]",
          "[object Int16Array]",
          "[object Uint16Array]",
          "[object Int32Array]",
          "[object Uint32Array]",
          "[object Float32Array]",
          "[object Float64Array]"
        ], d = ArrayBuffer.isView || function(K) {
          return K && l.indexOf(Object.prototype.toString.call(K)) > -1;
        };
      function p(K) {
        if (typeof K != "string" && (K = String(K)), /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(K))
          throw new TypeError("Invalid character in header field name");
        return K.toLowerCase();
      }
      function h(K) {
        return typeof K != "string" && (K = String(K)), K;
      }
      function m(K) {
        var Z = {
          next: function() {
            var te = K.shift();
            return { done: te === void 0, value: te };
          }
        };
        return o.iterable && (Z[Symbol.iterator] = function() {
          return Z;
        }), Z;
      }
      function y(K) {
        this.map = {}, K instanceof y ? K.forEach(function(Z, te) {
          this.append(te, Z);
        }, this) : Array.isArray(K) ? K.forEach(function(Z) {
          this.append(Z[0], Z[1]);
        }, this) : K && Object.getOwnPropertyNames(K).forEach(function(Z) {
          this.append(Z, K[Z]);
        }, this);
      }
      y.prototype.append = function(K, Z) {
        K = p(K), Z = h(Z);
        var te = this.map[K];
        this.map[K] = te ? te + ", " + Z : Z;
      }, y.prototype.delete = function(K) {
        delete this.map[p(K)];
      }, y.prototype.get = function(K) {
        return K = p(K), this.has(K) ? this.map[K] : null;
      }, y.prototype.has = function(K) {
        return this.map.hasOwnProperty(p(K));
      }, y.prototype.set = function(K, Z) {
        this.map[p(K)] = h(Z);
      }, y.prototype.forEach = function(K, Z) {
        for (var te in this.map)
          this.map.hasOwnProperty(te) && K.call(Z, this.map[te], te, this);
      }, y.prototype.keys = function() {
        var K = [];
        return this.forEach(function(Z, te) {
          K.push(te);
        }), m(K);
      }, y.prototype.values = function() {
        var K = [];
        return this.forEach(function(Z) {
          K.push(Z);
        }), m(K);
      }, y.prototype.entries = function() {
        var K = [];
        return this.forEach(function(Z, te) {
          K.push([te, Z]);
        }), m(K);
      }, o.iterable && (y.prototype[Symbol.iterator] = y.prototype.entries);
      function T(K) {
        if (K.bodyUsed)
          return Promise.reject(new TypeError("Already read"));
        K.bodyUsed = !0;
      }
      function b(K) {
        return new Promise(function(Z, te) {
          K.onload = function() {
            Z(K.result);
          }, K.onerror = function() {
            te(K.error);
          };
        });
      }
      function I(K) {
        var Z = new FileReader(), te = b(Z);
        return Z.readAsArrayBuffer(K), te;
      }
      function B(K) {
        var Z = new FileReader(), te = b(Z);
        return Z.readAsText(K), te;
      }
      function M(K) {
        for (var Z = new Uint8Array(K), te = new Array(Z.length), ue = 0; ue < Z.length; ue++)
          te[ue] = String.fromCharCode(Z[ue]);
        return te.join("");
      }
      function A(K) {
        if (K.slice)
          return K.slice(0);
        var Z = new Uint8Array(K.byteLength);
        return Z.set(new Uint8Array(K)), Z.buffer;
      }
      function x() {
        return this.bodyUsed = !1, this._initBody = function(K) {
          this._bodyInit = K, K ? typeof K == "string" ? this._bodyText = K : o.blob && Blob.prototype.isPrototypeOf(K) ? this._bodyBlob = K : o.formData && FormData.prototype.isPrototypeOf(K) ? this._bodyFormData = K : o.searchParams && URLSearchParams.prototype.isPrototypeOf(K) ? this._bodyText = K.toString() : o.arrayBuffer && o.blob && u(K) ? (this._bodyArrayBuffer = A(K.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : o.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(K) || d(K)) ? this._bodyArrayBuffer = A(K) : this._bodyText = K = Object.prototype.toString.call(K) : this._bodyText = "", this.headers.get("content-type") || (typeof K == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : o.searchParams && URLSearchParams.prototype.isPrototypeOf(K) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
        }, o.blob && (this.blob = function() {
          var K = T(this);
          if (K)
            return K;
          if (this._bodyBlob)
            return Promise.resolve(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(new Blob([this._bodyArrayBuffer]));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as blob");
          return Promise.resolve(new Blob([this._bodyText]));
        }, this.arrayBuffer = function() {
          return this._bodyArrayBuffer ? T(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(I);
        }), this.text = function() {
          var K = T(this);
          if (K)
            return K;
          if (this._bodyBlob)
            return B(this._bodyBlob);
          if (this._bodyArrayBuffer)
            return Promise.resolve(M(this._bodyArrayBuffer));
          if (this._bodyFormData)
            throw new Error("could not read FormData body as text");
          return Promise.resolve(this._bodyText);
        }, o.formData && (this.formData = function() {
          return this.text().then(D);
        }), this.json = function() {
          return this.text().then(JSON.parse);
        }, this;
      }
      var P = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
      function j(K) {
        var Z = K.toUpperCase();
        return P.indexOf(Z) > -1 ? Z : K;
      }
      function H(K, Z) {
        Z = Z || {};
        var te = Z.body;
        if (K instanceof H) {
          if (K.bodyUsed)
            throw new TypeError("Already read");
          this.url = K.url, this.credentials = K.credentials, Z.headers || (this.headers = new y(K.headers)), this.method = K.method, this.mode = K.mode, this.signal = K.signal, !te && K._bodyInit != null && (te = K._bodyInit, K.bodyUsed = !0);
        } else
          this.url = String(K);
        if (this.credentials = Z.credentials || this.credentials || "same-origin", (Z.headers || !this.headers) && (this.headers = new y(Z.headers)), this.method = j(Z.method || this.method || "GET"), this.mode = Z.mode || this.mode || null, this.signal = Z.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && te)
          throw new TypeError("Body not allowed for GET or HEAD requests");
        this._initBody(te);
      }
      H.prototype.clone = function() {
        return new H(this, { body: this._bodyInit });
      };
      function D(K) {
        var Z = new FormData();
        return K.trim().split("&").forEach(function(te) {
          if (te) {
            var ue = te.split("="), be = ue.shift().replace(/\+/g, " "), he = ue.join("=").replace(/\+/g, " ");
            Z.append(decodeURIComponent(be), decodeURIComponent(he));
          }
        }), Z;
      }
      function O(K) {
        var Z = new y(), te = K.replace(/\r?\n[\t ]+/g, " ");
        return te.split(/\r?\n/).forEach(function(ue) {
          var be = ue.split(":"), he = be.shift().trim();
          if (he) {
            var at = be.join(":").trim();
            Z.append(he, at);
          }
        }), Z;
      }
      x.call(H.prototype);
      function W(K, Z) {
        Z || (Z = {}), this.type = "default", this.status = Z.status === void 0 ? 200 : Z.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in Z ? Z.statusText : "OK", this.headers = new y(Z.headers), this.url = Z.url || "", this._initBody(K);
      }
      x.call(W.prototype), W.prototype.clone = function() {
        return new W(this._bodyInit, {
          status: this.status,
          statusText: this.statusText,
          headers: new y(this.headers),
          url: this.url
        });
      }, W.error = function() {
        var K = new W(null, { status: 0, statusText: "" });
        return K.type = "error", K;
      };
      var X = [301, 302, 303, 307, 308];
      W.redirect = function(K, Z) {
        if (X.indexOf(Z) === -1)
          throw new RangeError("Invalid status code");
        return new W(null, { status: Z, headers: { location: K } });
      }, a.DOMException = s.DOMException;
      try {
        new a.DOMException();
      } catch {
        a.DOMException = function(K, Z) {
          this.message = K, this.name = Z;
          var te = Error(K);
          this.stack = te.stack;
        }, a.DOMException.prototype = Object.create(Error.prototype), a.DOMException.prototype.constructor = a.DOMException;
      }
      function ie(K, Z) {
        return new Promise(function(te, ue) {
          var be = new H(K, Z);
          if (be.signal && be.signal.aborted)
            return ue(new a.DOMException("Aborted", "AbortError"));
          var he = new XMLHttpRequest();
          function at() {
            he.abort();
          }
          he.onload = function() {
            var pe = {
              status: he.status,
              statusText: he.statusText,
              headers: O(he.getAllResponseHeaders() || "")
            };
            pe.url = "responseURL" in he ? he.responseURL : pe.headers.get("X-Request-URL");
            var le = "response" in he ? he.response : he.responseText;
            te(new W(le, pe));
          }, he.onerror = function() {
            ue(new TypeError("Network request failed"));
          }, he.ontimeout = function() {
            ue(new TypeError("Network request failed"));
          }, he.onabort = function() {
            ue(new a.DOMException("Aborted", "AbortError"));
          }, he.open(be.method, be.url, !0), be.credentials === "include" ? he.withCredentials = !0 : be.credentials === "omit" && (he.withCredentials = !1), "responseType" in he && o.blob && (he.responseType = "blob"), be.headers.forEach(function(pe, le) {
            he.setRequestHeader(le, pe);
          }), be.signal && (be.signal.addEventListener("abort", at), he.onreadystatechange = function() {
            he.readyState === 4 && be.signal.removeEventListener("abort", at);
          }), he.send(typeof be._bodyInit > "u" ? null : be._bodyInit);
        });
      }
      return ie.polyfill = !0, s.fetch || (s.fetch = ie, s.Headers = y, s.Request = H, s.Response = W), a.Headers = y, a.Request = H, a.Response = W, a.fetch = ie, Object.defineProperty(a, "__esModule", { value: !0 }), a;
    })({});
  })(t), t.fetch.ponyfill = !0, delete t.fetch.polyfill;
  var r = t;
  i = r.fetch, i.default = r.fetch, i.fetch = r.fetch, i.Headers = r.Headers, i.Request = r.Request, i.Response = r.Response, e.exports = i;
})(ms, ms.exports);
const To = /* @__PURE__ */ E_(ms.exports), Lx = /* @__PURE__ */ T_({
  __proto__: null,
  default: To
}, [ms.exports]), Gr = (e) => {
  let i = {};
  return e && (typeof Headers < "u" && e instanceof Headers || Lx && ms.exports.Headers && e instanceof ms.exports.Headers ? i = jD(e) : Array.isArray(e) ? e.forEach(([n, t]) => {
    n && t !== void 0 && (i[n] = t);
  }) : i = e), i;
}, mm = (e) => e.replace(/([\s,]|#[^\n\r]+)+/g, " ").trim(), Ox = (e) => {
  if (!Array.isArray(e.query)) {
    const t = e, r = [`query=${encodeURIComponent(mm(t.query))}`];
    return e.variables && r.push(`variables=${encodeURIComponent(t.jsonSerializer.stringify(t.variables))}`), t.operationName && r.push(`operationName=${encodeURIComponent(t.operationName)}`), r.join("&");
  }
  if (typeof e.variables < "u" && !Array.isArray(e.variables))
    throw new Error("Cannot create query with given variable type, array expected");
  const i = e, n = e.query.reduce((t, r, s) => (t.push({
    query: mm(r),
    variables: i.variables ? i.jsonSerializer.stringify(i.variables[s]) : void 0
  }), t), []);
  return `query=${encodeURIComponent(i.jsonSerializer.stringify(n))}`;
}, Nx = (e) => async (i) => {
  var n;
  const { url: t, query: r, variables: s, operationName: a, fetch: o, fetchOptions: u, middleware: l } = i, d = { ...i.headers };
  let p = "", h;
  e === "POST" ? (h = UD(r, s, a, u.jsonSerializer), typeof h == "string" && (d["Content-Type"] = "application/json")) : p = Ox({
    query: r,
    variables: s,
    operationName: a,
    jsonSerializer: (n = u.jsonSerializer) != null ? n : ch
  });
  const m = {
    method: e,
    headers: d,
    body: h,
    ...u
  };
  let y = t, T = m;
  if (l) {
    const b = await Promise.resolve(l({ ...m, url: t, operationName: a, variables: s })), { url: I, ...B } = b;
    y = I, T = B;
  }
  return p && (y = `${y}?${p}`), await o(y, T);
};
class Rx {
  constructor(i, n = {}) {
    this.url = i, this.requestConfig = n, this.rawRequest = async (...t) => {
      const [r, s, a] = t, o = VD(r, s, a), { headers: u, fetch: l = To, method: d = "POST", requestMiddleware: p, responseMiddleware: h, ...m } = this.requestConfig, { url: y } = this;
      o.signal !== void 0 && (m.signal = o.signal);
      const { operationName: T } = ic(o.query);
      return nc({
        url: y,
        query: o.query,
        variables: o.variables,
        headers: {
          ...Gr(rc(u)),
          ...Gr(o.requestHeaders)
        },
        operationName: T,
        fetch: l,
        method: d,
        fetchOptions: m,
        middleware: p
      }).then((b) => (h && h(b), b)).catch((b) => {
        throw h && h(b), b;
      });
    };
  }
  async request(i, ...n) {
    const [t, r] = n, s = qD(i, t, r), { headers: a, fetch: o = To, method: u = "POST", requestMiddleware: l, responseMiddleware: d, ...p } = this.requestConfig, { url: h } = this;
    s.signal !== void 0 && (p.signal = s.signal);
    const { query: m, operationName: y } = ic(s.document);
    return nc({
      url: h,
      query: m,
      variables: s.variables,
      headers: {
        ...Gr(rc(a)),
        ...Gr(s.requestHeaders)
      },
      operationName: y,
      fetch: o,
      method: u,
      fetchOptions: p,
      middleware: l
    }).then((T) => (d && d(T), T.data)).catch((T) => {
      throw d && d(T), T;
    });
  }
  batchRequests(i, n) {
    var t;
    const r = HD(i, n), { headers: s, ...a } = this.requestConfig;
    r.signal !== void 0 && (a.signal = r.signal);
    const o = r.documents.map(({ document: l }) => ic(l).query), u = r.documents.map(({ variables: l }) => l);
    return nc({
      url: this.url,
      query: o,
      variables: u,
      headers: {
        ...Gr(rc(s)),
        ...Gr(r.requestHeaders)
      },
      operationName: void 0,
      fetch: (t = this.requestConfig.fetch) != null ? t : To,
      method: this.requestConfig.method || "POST",
      fetchOptions: a,
      middleware: this.requestConfig.requestMiddleware
    }).then((l) => (this.requestConfig.responseMiddleware && this.requestConfig.responseMiddleware(l), l.data)).catch((l) => {
      throw this.requestConfig.responseMiddleware && this.requestConfig.responseMiddleware(l), l;
    });
  }
  setHeaders(i) {
    return this.requestConfig.headers = i, this;
  }
  setHeader(i, n) {
    const { headers: t } = this.requestConfig;
    return t ? t[i] = n : this.requestConfig.headers = { [i]: n }, this;
  }
  setEndpoint(i) {
    return this.url = i, this;
  }
}
const nc = async (e) => {
  var i, n;
  const { query: t, variables: r, fetchOptions: s } = e, a = Nx(FD((i = e.method) != null ? i : "post")), o = Array.isArray(e.query), u = await a(e), l = await Mx(u, (n = s.jsonSerializer) != null ? n : ch), d = Array.isArray(l) ? !l.some(({ data: h }) => !h) : !!l.data, p = Array.isArray(l) || !l.errors || Array.isArray(l.errors) && !l.errors.length || s.errorPolicy === "all" || s.errorPolicy === "ignore";
  if (u.ok && p && d) {
    const { errors: h, ...m } = l, y = s.errorPolicy === "ignore" ? m : l;
    return {
      ...o ? { data: y } : y,
      headers: u.headers,
      status: u.status
    };
  } else {
    const h = typeof l == "string" ? {
      error: l
    } : l;
    throw new na(
      { ...h, status: u.status, headers: u.headers },
      { query: t, variables: r }
    );
  }
}, Mx = async (e, i) => {
  let n;
  return e.headers.forEach((t, r) => {
    r.toLowerCase() === "content-type" && (n = t);
  }), n && (n.toLowerCase().startsWith("application/json") || n.toLowerCase().startsWith("application/graphql+json") || n.toLowerCase().startsWith("application/graphql-response+json")) ? i.parse(await e.text()) : e.text();
}, rc = (e) => typeof e == "function" ? e() : e, Bx = (e, ...i) => e.reduce((n, t, r) => `${n}${t}${r in i ? i[r] : ""}`, ""), i_ = async (e, i) => {
  i != null || (i = Eu.default);
  const n = Bx`
    query getEpisode($ID: ID!) {
        episode(id: $ID) {
            image
            streams {
                audioLanguages
                subtitleLanguages
                url
                type
            }
        }
    }`, t = await i.getToken(), r = {};
  return t && (r.Authorization = "Bearer " + t), (await new Rx(i.endpoint, { headers: r }).request(n, {
    ID: e
  })).episode;
};
class Ux {
  constructor(i) {
    ra(this, "client"), this.client = new Eu(i);
  }
  async create(i, n) {
    const t = await i_(n.episodeId, this.client), r = t.streams;
    if (r.length) {
      let s = r.find((a) => a.type === "hls_cmaf");
      if (s || (s = r.find((a) => a.type === "hls_ts")), s || (s = r.find((a) => a.type === "dash")), s)
        return await Wy(i, G.mergeOptions(
          {
            src: {
              src: s.url
            },
            videojs: {
              poster: t.image
            }
          },
          n.overrides
        ));
    }
    return null;
  }
}
const n_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ApiClient: Eu,
  PlayerFactory: Ux,
  createPlayer: Wy,
  getEpisodeStreams: i_,
  setNPAWOptions: AD
}, Symbol.toStringTag, { value: "Module" }));
window.externalPackages = {
  bccmVideoPlayer: n_
};
window.bccmVideoPlayer = n_;
