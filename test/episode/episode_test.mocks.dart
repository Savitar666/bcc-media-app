// Mocks generated by Mockito 5.3.2 from annotations
// in brunstadtv_app/test/episode/episode_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bccm_player/playback_platform_pigeon.g.dart' as _i6;
import 'package:bccm_player/playback_service_interface.dart' as _i4;
import 'package:brunstadtv_app/models/analytics/achievement_clicked.dart'
    as _i14;
import 'package:brunstadtv_app/models/analytics/achievement_shared.dart'
    as _i15;
import 'package:brunstadtv_app/models/analytics/audio_only_clicked.dart'
    as _i17;
import 'package:brunstadtv_app/models/analytics/calendar_day_clicked.dart'
    as _i18;
import 'package:brunstadtv_app/models/analytics/content_shared.dart' as _i13;
import 'package:brunstadtv_app/models/analytics/deep_link_opened.dart' as _i11;
import 'package:brunstadtv_app/models/analytics/language_changed.dart' as _i12;
import 'package:brunstadtv_app/models/analytics/search_performed.dart' as _i10;
import 'package:brunstadtv_app/models/auth/auth0_id_token.dart' as _i16;
import 'package:brunstadtv_app/providers/analytics.dart' as _i7;
import 'package:flutter/material.dart' as _i9;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:package_info_plus/package_info_plus.dart' as _i8;
import 'package:rudder_sdk_flutter_platform_interface/platform.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRef_0<State extends Object?> extends _i1.SmartFake
    implements _i2.Ref<State> {
  _FakeRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRudderProperty_1 extends _i1.SmartFake
    implements _i3.RudderProperty {
  _FakeRudderProperty_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PlaybackPlatformInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlaybackPlatformInterface extends _i1.Mock
    implements _i4.PlaybackPlatformInterface {
  @override
  _i5.Future<String?> getPlatformVersion() => (super.noSuchMethod(
        Invocation.method(
          #getPlatformVersion,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);
  @override
  _i5.Future<String> newPlayer({String? url}) => (super.noSuchMethod(
        Invocation.method(
          #newPlayer,
          [],
          {#url: url},
        ),
        returnValue: _i5.Future<String>.value(''),
        returnValueForMissingStub: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  _i5.Future<bool> setPrimary(String? id) => (super.noSuchMethod(
        Invocation.method(
          #setPrimary,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<void> replaceCurrentMediaItem(
    String? playerId,
    _i6.MediaItem? mediaItem, {
    bool? playbackPositionFromPrimary,
    bool? autoplay = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceCurrentMediaItem,
          [
            playerId,
            mediaItem,
          ],
          {
            #playbackPositionFromPrimary: playbackPositionFromPrimary,
            #autoplay: autoplay,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> queueMediaItem(
    String? playerId,
    _i6.MediaItem? mediaItem,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queueMediaItem,
          [
            playerId,
            mediaItem,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<_i6.ChromecastState?> getChromecastState() => (super.noSuchMethod(
        Invocation.method(
          #getChromecastState,
          [],
        ),
        returnValue: _i5.Future<_i6.ChromecastState?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.ChromecastState?>.value(),
      ) as _i5.Future<_i6.ChromecastState?>);
  @override
  void openExpandedCastController() => super.noSuchMethod(
        Invocation.method(
          #openExpandedCastController,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCastDialog() => super.noSuchMethod(
        Invocation.method(
          #openCastDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> setPlaybackListener(_i6.PlaybackListenerPigeon? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #setPlaybackListener,
          [listener],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void play(String? playerId) => super.noSuchMethod(
        Invocation.method(
          #play,
          [playerId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pause(String? playerId) => super.noSuchMethod(
        Invocation.method(
          #pause,
          [playerId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void stop(
    String? playerId,
    bool? reset,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #stop,
          [
            playerId,
            reset,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setNpawConfig(_i6.NpawConfig? config) => super.noSuchMethod(
        Invocation.method(
          #setNpawConfig,
          [config],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setAppConfig(_i6.AppConfig? config) => super.noSuchMethod(
        Invocation.method(
          #setAppConfig,
          [config],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setPlayerViewVisibility(
    int? viewId,
    bool? visible,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setPlayerViewVisibility,
          [
            viewId,
            visible,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Analytics].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalytics extends _i1.Mock implements _i7.Analytics {
  @override
  set packageInfo(_i8.PackageInfo? _packageInfo) => super.noSuchMethod(
        Invocation.setter(
          #packageInfo,
          _packageInfo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Ref<Object?> get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeRef_0<Object?>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub: _FakeRef_0<Object?>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.Ref<Object?>);
  @override
  void checkSession() => super.noSuchMethod(
        Invocation.method(
          #checkSession,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void heyJustHereToTellYouIBelieveTheSessionIsStillAlive() =>
      super.noSuchMethod(
        Invocation.method(
          #heyJustHereToTellYouIBelieveTheSessionIsStillAlive,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.RudderProperty getCommonData() => (super.noSuchMethod(
        Invocation.method(
          #getCommonData,
          [],
        ),
        returnValue: _FakeRudderProperty_1(
          this,
          Invocation.method(
            #getCommonData,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeRudderProperty_1(
          this,
          Invocation.method(
            #getCommonData,
            [],
          ),
        ),
      ) as _i3.RudderProperty);
  @override
  void sectionItemClicked(_i9.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #sectionItemClicked,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void searchPerformed(_i10.SearchPerformedEvent? event) => super.noSuchMethod(
        Invocation.method(
          #searchPerformed,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void searchResultClicked(_i9.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #searchResultClicked,
          [context],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void deepLinkOpened(_i11.DeepLinkOpenedEvent? event) => super.noSuchMethod(
        Invocation.method(
          #deepLinkOpened,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void languageChanged(_i12.LanguageChangedEvent? event) => super.noSuchMethod(
        Invocation.method(
          #languageChanged,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void contentShared(_i13.ContentSharedEvent? event) => super.noSuchMethod(
        Invocation.method(
          #contentShared,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void achievementClicked(_i14.AchievementClickedEvent? event) =>
      super.noSuchMethod(
        Invocation.method(
          #achievementClicked,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void achievementShared(_i15.AchievementSharedEvent? event) =>
      super.noSuchMethod(
        Invocation.method(
          #achievementShared,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void identify(
    _i16.Auth0IdToken? profile,
    String? analyticsId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #identify,
          [
            profile,
            analyticsId,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void screen(
    dynamic screenName, {
    Map<String, Object?>? properties,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #screen,
          [screenName],
          {#properties: properties},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void audioOnlyClicked(_i17.AudioOnlyClickedEvent? event) =>
      super.noSuchMethod(
        Invocation.method(
          #audioOnlyClicked,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void calendarDayClicked(_i18.CalendarDayClickedEvent? event) =>
      super.noSuchMethod(
        Invocation.method(
          #calendarDayClicked,
          [event],
        ),
        returnValueForMissingStub: null,
      );
}
