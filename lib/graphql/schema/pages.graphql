
type Page{
    id: ID!
    code: String!
    title: String!
    description: String
    image(style: ImageStyle): String @goField(forceResolver: true)
    images: [Image!]!
    sections(
        first: Int
        offset: Int
    ): SectionPagination! @goField(forceResolver: true)
}

interface Section{
    id: ID!
    title: String
}

type SectionPagination implements Pagination {
    total: Int!
    first: Int!
    offset: Int!
    items: [Section!]!
}

# LINK SECTION
interface LinkSection implements Section {
    id: ID!
    title: String
    items(first: Int, offset: Int): LinkItemPagination! @goField(forceResolver: true)
}

type IconSection implements Section & LinkSection {
    id: ID!
    title: String
    items(first: Int, offset: Int): LinkItemPagination! @goField(forceResolver: true)
}

interface LinkItem {
    id: ID!
    title: String!
    icon: String
}

type PageLinkItem implements LinkItem {
    id: ID!
    title: String!
    icon: String
    page: Page! @goField(forceResolver: true)
}

type URLLinkItem implements LinkItem {
    id: ID!
    title: String!
    icon: String
    url: String!
}

type LinkItemPagination implements Pagination {
    total: Int!
    first: Int!
    offset: Int!
    items: [LinkItem!]!
}

type LabelSection implements Section & LinkSection {
    id: ID!
    title: String
    items(first: Int, offset: Int): LinkItemPagination! @goField(forceResolver: true)
}

# ITEM SECTION
enum SectionSize {
    small
    medium
}

enum GridSectionSize {
    half
}

interface ItemSection implements Section {
    id: ID!
    title: String
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type PosterSection implements Section & ItemSection {
    id: ID!
    title: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type FeaturedSection implements Section & ItemSection {
    id: ID!
    title: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type DefaultSection implements Section & ItemSection {
    id: ID!
    title: String
    size: SectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type GridSection implements Section & ItemSection {
    id: ID!
    title: String
    size: GridSectionSize!
    items(first: Int, offset: Int): SectionItemPagination! @goField(forceResolver: true)
}

type Collection {
    id: ID!
    items(
        first: Int,
        offset: Int,
    ): CollectionItemPagination @goField(forceResolver: true)
}

union SectionItemType = Show | Season | Episode | Page

type SectionItem {
    id: ID!
    sort: Int!
    title: String!
    description: String!
    image: String
    item: SectionItemType
}

type SectionItemPagination implements Pagination {
    first: Int!
    offset: Int!
    total: Int!
    items: [SectionItem!]!
}
